<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AcDbMgd</name>
    </assembly>
    <members>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE">
            <summary>
When implemented and registered as a protocol extension to an Autodesk.AutoCAD.DatabaseServices.Entity-derived class, this protocol extension interface specifies the communication with the grip editing complex for information on what alternatives can be provided to stretching grip points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE.GetGripModes(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripData,Autodesk.AutoCAD.DatabaseServices.GripModeCollection,System.UInt32&)">
            <summary>Queries an object, on a given grip point, for the available modes it provides. It also returns the current mode identifier.</summary>
            <param name="entity"> The Entity whose modes are requested. The object needs to be open at least for read.</param>
            <param name="gripData"> The grip whose modes are requested.</param>
            <param name="modes"> The returned collection of available modes.</param>
            <param name="curMode"> The returned identifier of current mode.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE.CurrentModeId(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripData)">
            <summary>Gets the current mode identifier.</summary>
            <param name="entity"> The Entity whose current mode id is requested.</param>
            <param name="gripData"> The grip whose mode id is requested.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE.CurrentMode(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripData)">
            <summary>Gets the current mode.</summary>
            <param name="entity"> The Entity whose current mode is requested.</param>
            <param name="gripData"> The grip whose mode is requested.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE.SetCurrentMode(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripData,System.UInt32)">
            <summary>Sets the current mode.</summary>
            <param name="entity"> The Entity whose current mode is to be set current.</param>
            <param name="gripData"> The grip whose current mode is to be set current.</param>
            <param name="curMode"> The numerical identifier for the new current mode.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE.GetGripType(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripData)">
            <summary>Gets the grip type of a given grip.</summary>
            <param name="entity"> The Entity whose grip type is requested.</param>
            <param name="gripData"> The grip whose grip type is requested.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE.Reset(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Resets the current mode to default (up to each concrete class to establish what the default is).</summary>
            <param name="entity"> The Entity whose current mode is reset to default.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase">
            <summary>
AssocDimDependencyBodyBase ties together the following objects that define a dimensional constraint:</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.UpdateDependentOnObjectOverride">
            <summary>This method needs to be overriden and implemented by derived classes. It updates the controlled entity position, size and orientation. The base class implementation just handles reference dimensions that are not dimensional constraints. This method updates the corresponding AssocVariable with the current measured value of the dimension and updates the entity text with the current measurement.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.Constraint">
            <summary>Returns the corresponding dimensional constraint node.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetSubentityGeoms(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns all constrained subentities of Entities constrained by this dimensional constraint.</summary>
            <param name="distanceDirection"> Direction of the distance constraint.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetVariableNameAndExpression(System.String&,System.String&,System.String)">
            <summary>Returns name, expression and current value of the AssocVariable that corresponds to this dimensional constraint.</summary>
            <param name="name"> Variable name.</param>
            <param name="expression"> Variable expression.</param>
            <param name="value"> Variable value.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetEntityNameAndExpression(System.String&,System.String&)">
            <summary>Returns name and expression from the text that the managed entity is displaying.</summary>
            <param name="name"> Name from the managed entity display text.</param>
            <param name="expression"> Expression from the managed entity display text.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetVariableNameAndExpression(System.String,System.String)">
            <summary>Sets new name and expression of the AssocVariable that corresponds to this dimensional constraint. Either name or expression may be empty strings which indicates no change.</summary>
            <param name="name"> New name of the AssocVariable.</param>
            <param name="expression"> New expression of the AssocVariable.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetEntityNameAndExpression(System.String,System.String,System.String)">
            <summary>Sets name and expression that the managed entity should display. Either name or expression may be empty strings which indicates not to change them.</summary>
            <param name="name"> New name the managed entity should display.</param>
            <param name="expression"> New expression the managed entity should display.</param>
            <param name="value"> New value the managed entity should display.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetNameAndExpression(System.String,System.String)">
            <summary>Sets name and expression on both the AssocVariable that corresponds to this dimensional constraint and on the managed entity that serves as the graphical representation of this dimensional constraint. Either name or expression may be empty strings which indicates no change.</summary>
            <param name="name"> New name to be set.</param>
            <param name="expression"> New expression to be set.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ValidateEntityText(System.String)">
            <summary>Checks if the given entityTextToValidate can be used as the text the managed entity displays. Either the name or the expression part of the entityTextToValidate text may be empty which means that the current name/expression should be used.</summary>
            <param name="entityTextToValidate"> The entity text to check.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ComposeEntityText(System.Int32)">
            <summary>Composes the text that the managed entity should display. The text is composed from the corresponding AssocVariable name, expression and/or value. The text formatting follows requiredNameFormat.</summary>
            <param name="requiredNameFormat"> The constraint name format display, deafault value if -1. If requiredNameFormat == -1, CONSTRAINTNAMEFORMAT sysvar is used for choosing the text format.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetVariableValueToMeasuredValue">
            <summary>Measures the current dimensional constraint based on the current positions and sizes of the constrained geometries and sets the corresponding AssocVariable to this measured value. If the dimensional constraint is satisfied, the AssocVariable value will already be equal to the measured value and no setting is needed, and nothing happens. Notice that if AssocVariable contained an expression, it will be erased and the variable will just contain a numerical value, not an expression.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DeactivateConstraint">
            <summary>Deactivates the constraint.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ReactivateConstraint">
            <summary>Reactivates the constraint. Reactivating a constraint means creating a d_node or r_node for this ExplicitConstraint and adding it to the DCM dimension system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetFromEntity(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Gets the AssocDimDependencyBodyBase from the dependent-on Entity, such as from the AcDbDimension it controls. If the entity does not have an AssocDimDependencyBodyBase attached, ObjectId.Null is returned.</summary>
            <param name="entityId"> The entity id of the dependent-on Entity, such as of an Dimension.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.EntityAttachmentPointMoved(Autodesk.AutoCAD.DatabaseServices.SubentityGeometry[],System.Double)">
            <summary>Updates the constraint geometry when dimension grip points are moved. Any move made through triangular grip should move the constraint geometry by the same amount and update the constraint variable value. Clients of this function need to pass new positions of the dimension attachment in SubentGeometry array, and new dimension measurement. This API performs the following operations:.</summary>
            <param name="newAttachedGeometries"> The new attached geometries to be updated.</param>
            <param name="measurement"> New measurement, default value is 0.0.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.EvaluateOverride">
            <summary>This function sets the name and expression in the controlled entity text to be the same as the name and expression of the corresponding AssocVariable.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ModifiedOverride(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>If the controlled entity text changed, this function sets the name and expression of the AssocVariable to be the same as the name and expression in the entity text.</summary>
            <param name="dbObj"> The controlled entity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ErasedOverride(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>
When the dependent-on object (such as an Dimension) is erased, the corresponding AssocVariable is also erased.</summary>
            <param name="isErasing"> Boolean isErasing.</param>
            <param name="pDbObj"> The controlled entity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SubErase(System.Boolean)">
            <summary>
Overridden method from the DBObject base class. It erases the controlled entity, such as the Dimension.</summary>
            <param name="erasing"> Boolean erasing.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DwgInFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DwgOutFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DxfOutFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.FormatToCurrentPrecision(System.String,System.Boolean)">
            <summary>
Formats the given expression to current precision.</summary>
            <param name="expression"> The expression to be formatted.</param>
            <param name="isAngular"> Indicates it is an angular constraint.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetEraseDimensionIfDependencyIsErased(System.Boolean)">
            <summary>
Under normal circumstances the controlled Dimension object is erased if the AssocDimDependencyBodyBase is erased. This static method allows this behaviorto be suppressed, i.e., not erasing the Dimension if the AssocDimDependencyBodyBase is erased. This can be useful for the creation of reference constraints since the same dimension should be retained and used for a reference constraint later on.</summary>
            <param name="yesNo"> Indicates to suppress the erase behavior or not.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetEraseDimensionIfDependencyIsErased">
            <summary>Under normal circumstances an associated Dimension object is erased if the AssocDimDependencyBodyBase is erased. This static method returns true iff this behavior is suppressed , i.e. not erasing the Dimension if the AssocDimDependencyBodyBase is erased.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.EntityTextOverride">
            <summary>Derived classes needs to override this pure virtual property. This is how they provide the text of the entity they manage.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.EntityMeasurementOverride">
            <summary>Derived classes needs to override this pure virtual read only property to provide the current measurement of the entity they manage.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.IsEntityAttachmentChangedOverride">
            <summary>Derived classes need to override this pure virtual read only property to inform whether the attachment of the entity they manage changed, such as whether the entity has been repositioned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.Variable">
            <summary>Gets the object id of the corresponding AssocVariable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ConstrainedGeoms">
            <summary>Gets all ConstrainedGeometries constrained by this dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SubentityConstrainedGeoms">
            <summary>Gets all constrained subentities of Entities constrained by this dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.IsConstraintActive">
            <summary>Indicates whether the constraint is active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetMeasuredValue">
            <summary>Gets the current dimensional constraint based on the current positions and sizes of the constrained geometries. If the dimensional constraint is satisfied, the AssocVariable value will already be equal to the measured value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.IsReferenceOnly">
            <summary>Sets whether the constraint is reference only. A reference "constraint" keeps updating its AssocVariable and the dimension text with the measured value of the dimension, but it does not function as a dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetCurrentlyUsedEntityNameFormat">
            <summary>Gets the format that is used to display the entity name and expression by looking at the currently displayed entity text. See CONSTRAINTNAMEFORMAT sysvar for the possible format values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.IsRelevantChangeOverride">
            <summary>Overridden property from AssocDependencyBody base class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocValueProviderPE">
            <summary>
AcRx protocol extension pure virtual base class that defines protocol to get and set arbitrary simple scalar values of DBObjects. The values are identified by string names (needed if there is more than one of them for the same object) and their meaning is up to the implementor of the concrete protocol extension derived classes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocValueProviderPE.#ctor">
            <summary>Default Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocValueProviderPE.CanGetValue(Autodesk.AutoCAD.DatabaseServices.DBObject,System.String)">
            <summary>Checks whether it is possible to get the value identified by valueName. The default implementation always returns true for any valueName.</summary>
            <param name="valueName"> The name of the queried value.</param>
            <param name="object"> The object must be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocValueProviderPE.CanSetValue(Autodesk.AutoCAD.DatabaseServices.DBObject,System.String)">
            <summary>Checks whether it is possible to set the value identified by valueName. The default implementation always returns false for any valueName.</summary>
            <param name="valueName"> The name of the queried value.</param>
            <param name="object"> The object must be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocValueProviderPE.GetValue(Autodesk.AutoCAD.DatabaseServices.DBObject,System.String)">
            <summary>Gets the value identified by valueName. This method must always be overridden by concrete derived classes.</summary>
            <param name="valueName"> The name of the queried value.</param>
            <param name="object"> The object must be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocValueProviderPE.SetValue(Autodesk.AutoCAD.DatabaseServices.DBObject,System.String,Autodesk.AutoCAD.DatabaseServices.ResultBuffer)">
            <summary>Sets the value identified by valueName.</summary>
            <param name="valueName"> The name of the value to be set.</param>
            <param name="newValue"> The new value.</param>
            <param name="object"> The object must be open for write.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody">
            <summary>
Abstract base class for deriving custom dependency body classes that implement functionality of custom dependencies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.SetStatus(Autodesk.AutoCAD.DatabaseServices.AssocStatus,System.Boolean)">
            <summary>
Just a shortcut, calls the method on the parent AssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.currentEvaluationCallback">
            <summary>Just a shortcut, calls the method on the parent AcDbAssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.DwgInFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.DwgOutFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.DxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.DxfOutFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.EvaluateOverride">
            <summary>Called from the corresponding method of the parent AssocDependency class that owns this dependency body object. It has to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.UpdateDependentOnObjectOverride">
            <summary>Called from the corresponding method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.IsDependentOnTheSameThingAsOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.IsEqualToOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.ErasedOverride(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>
Called from the corresponding persistent reactor callback method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.ModifiedOverride(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Called from the modified() persistent reactor callback method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.ClonedOverride(Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Called from the copied() persistent reactor callback method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.ParentDependency">
            <summary>Returns ObjectId of the parent AssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.Status">
            <summary>Just a shortcut, calls the method on the parent AssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.OwningAction">
            <summary>Just a shortcut, calls the method on the parent AssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.DependentOnObject">
            <summary>Just a shortcut, calls the method on the parent AssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.IsAttachedToObject">
            <summary>Just a shortcut, calls the method on the parent AssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.IsActionEvaluationInProgress">
            <summary>Just a shortcut, calls the method on the parent AssocDependency that owns this dependency body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.HasCachedValueOverride">
            <summary>Called from the corresponding method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody.IsRelevantChangeOverride">
            <summary>Called from the corresponding method of the parent AssocDependency class that owns this dependency body object. It does not need to be overridden.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocActionBody">
            <summary>
Abstract base class for deriving custom action body classes that implement functionality of custom actions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetParentAction(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This wraps the ObjectARX AcDbAssocActionBody::parentAction() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.SetStatus(Autodesk.AutoCAD.DatabaseServices.AssocStatus,System.Boolean,System.Boolean)">
            <summary>
Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetDependencies(System.Boolean,System.Boolean)">
            <summary>
Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.AddDependency(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.RemoveDependency(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.RemoveAllDependencies(System.Boolean)">
            <summary>
Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.EvaluateDependencies">
            <summary>Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.IsActionEvaluationInProgress">
            <summary>Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.currentEvaluationCallback">
            <summary>Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.HasAnyErasedOrBrokenDependencies">
            <summary>This wraps the ObjectARX AcDbAssocActionBody::hasAnyErasedOrBrokenDependencies() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.CreateActionAndActionBodyAndPostToDatabase(Autodesk.AutoCAD.Runtime.RXClass,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This wraps the ObjectARX AcDbAssocActionBody::createActionAndActionBodyAndPostToDatabase() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.DwgInFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.DwgOutFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.DxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.DxfOutFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.EvaluateOverride">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. This method has to be overridden and this is how the behavior of custom actions is implemented.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetDependenciesOverride(System.Boolean,System.Boolean)">
            <summary>
Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetDependentObjectsOverride(System.Boolean,System.Boolean)">
            <summary>
Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.RemoveAllDependenciesOverride(System.Boolean)">
            <summary>
Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.IsOwnedDependencyOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.IsExternalDependencyOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.HasDependencyCachedValueOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.IsRelevantDependencyChangeOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.AreDependenciesOnTheSameThingOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.AreDependenciesEqualOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.EvaluateDependencyOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.DependentObjectClonedOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.AddMoreObjectsToDeepCloneOverride(Autodesk.AutoCAD.DatabaseServices.IdMapping,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.PostProcessAfterDeepCloneOverride(Autodesk.AutoCAD.DatabaseServices.IdMapping)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.PostProcessAfterDeepCloneCancelOverride(Autodesk.AutoCAD.DatabaseServices.IdMapping)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.OwnedDependencyStatusChangedOverride(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.AssocStatus)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.IsEqualToOverride(Autodesk.AutoCAD.DatabaseServices.AssocAction)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.EvaluationPriorityOverride(Autodesk.AutoCAD.DatabaseServices.AssocEvaluationPriority&)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetDependentActionsToEvaluateOverride(Autodesk.AutoCAD.DatabaseServices.ActionsToEvaluateCallback)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.TransformActionByOverride(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.DragStatusOverride(Autodesk.AutoCAD.DatabaseServices.DragStatus)">
            <summary>Called from the corresponding method of the parent AssocAction class that owns this action body object. It does not need to be overridden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.RemoveAllParams(System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocParamBasedActionBody::removeAllParams() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.AddParam(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32&)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::addParam () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.RemoveParam(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocParamBasedActionBody::removeParam () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ParamsAtName(System.String)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::paramsAtName () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ParamAtName(System.String,System.Int32)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::paramAtName () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ParamAtName(System.String)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::paramAtName () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ParamAtIndex(System.Int32)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::paramAtIndex() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.OwnedValueParamNames">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::ownedValueParamNames() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetValueParam(System.String,System.Int32)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::getValueParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetValueParam(System.String)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::getValueParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetValueParamArray(System.String)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::getValueParamArray() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.SetValueParam(System.String,Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ValueParam,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocParamBasedActionBody::setValueParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.SetValueParam(System.String,Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ValueParam,System.Boolean,System.Int32)">
            <summary>
This wraps the ObjectARX AcDbAssocParamBasedActionBody::setValueParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.SetValueParamArray(System.String,Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ValueParam[],System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocParamBasedActionBody::setValueParamArray() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.GetValueParamUnitType(System.String)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::valueParamUnitType() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.RemoveValueParam(System.String)">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::removeValueParam() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ParentAction">
            <summary>Returns ObjectId of the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.Status">
            <summary>Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.OwningNetwork">
            <summary>Just a shortcut, calls the method on the parent AssocAction that owns this action body object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.ParamCount">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::paramCount () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocActionBody.OwnedParams">
            <summary>This wraps the ObjectARX AcDbAssocParamBasedActionBody::ownedParams () method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocDependencyPE">
            <summary>
Wrapper AcRx protocol extension base class that allows objects and entities to control whether they allow AssocDependencies to be attached to them. When there is no protocol extension for the object's class, it means that the object allows both read and write-type dependencies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyPE.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependencyPE.AllowsDependencies(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>
This predicate allows objects and entities to control whether they allow AssocDependencies to be attached to them. Returns true if the object allows AssocDependencies to be attached to it.</summary>
            <param name="isWriteDependency"> The dependency will also modify the object.</param>
            <param name="object"> The queried object, must be open for read.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE">
            <summary>
This wraps the ObjectARX AcDbAssocPersSubentIdPE class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.#ctor">
            <summary>Default Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.CreateNewPersSubent(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Mapping: SubentityId --> AssocPersSubentityId.</summary>
            <param name="entity"> The entity must be open for write, but usually no changes to the entity will be made.</param>
            <param name="compId"> Contains full context path to entity. Can be empty for simple reference.</param>
            <param name="subentId"> Transient SubentityId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetTransientSubentityIds(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId)">
            <summary>Mapping: AssocPersSubentityId --> SubentityId(s).</summary>
            <param name="entity"> The entity needs to be open for read.</param>
            <param name="perSubentId"> The persistent subentity id on the entity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetAllSubentities(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityType)">
            <summary>Gets all subentities of the given type. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for read.</param>
            <param name="subentType"> The required type of the subentities.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetEdgeVertexSubentities(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.SubentityId&,Autodesk.AutoCAD.DatabaseServices.SubentityId&,Autodesk.AutoCAD.DatabaseServices.SubentityId[]&)">
            <summary>Gets the vertex SubentityIds corresponding to the given edge SubentityId. This protocol is needed to query the relations between the edge and vertex subentities. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for read.</param>
            <param name="edgeSubentId"> Edge SubentityId whose vertex SubentityIds are to be obtained.</param>
            <param name="startVertexSubentId"> Returned SubentityId of the start vertex of the edge (or NullSubentityId if there is not any).</param>
            <param name="endVertexSubentId"> Returned SubentityId of the end vertex of the edge (or NullSubentityId if there is not any).</param>
            <param name="otherVertexSubentIds"> Returned other SubentityIds associated with the edge, such as the circle or arc center, spline control and fit points, etc.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetSplineEdgeVertexSubentities(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.SubentityId&,Autodesk.AutoCAD.DatabaseServices.SubentityId&,Autodesk.AutoCAD.DatabaseServices.SubentityId[]&,Autodesk.AutoCAD.DatabaseServices.SubentityId[]&)">
            <summary>Gets the vertex SubentityIds corresponding to the given edge SubentityId whose geometry is defined by a spline. This protocol is needed to query the relations between the edge and vertex subentities. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for read.</param>
            <param name="edgeSubentId"> Edge SubentId whose vertex SubentityIds are to be obtained.</param>
            <param name="startVertexSubentId"> Returned SubentityId of the start vertex of the edge (or NullSubentityId if there is not any).</param>
            <param name="endVertexSubentId"> Returned SubentityId of the end vertex of the edge (or NullSubentityId if there is not any).</param>
            <param name="controlPointSubentIds"> Returned SubentityIds identifying the spline control points. The order is the same as the order of the spline control points.</param>
            <param name="fitPointSubentIds"> Returned SubentityIds identifying the spline fit points (if any). The order is the same as the order of the spline fit points.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetVertexSubentityGeometry(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Gets the coordinates of a vertex subentity. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for read.</param>
            <param name="vertexSubentId"> Vertex SubentityId whose position is to be obtained.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetEdgeSubentityGeometry(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Gets the curve of an edge subentity. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for read.</param>
            <param name="edgeSubentId"> Edge SubentityId whose curve is to be obtained.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetFaceSubentityGeometry(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Gets the surface of a face subentity. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for read.</param>
            <param name="faceSubentId"> Face SubentityId whose surface is to be changed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.SetVertexSubentityGeometry(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Change the geometry of a vertex subentity. The subentity can also be transformed, but for doing so there already is Entity protocol so no protocol extension is needed. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for write.</param>
            <param name="vertexSubentId"> Vertex SubentityId whose position is to be changed.</param>
            <param name="newVertexPosition"> New coordinates of the vertex subentity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.SetEdgeSubentityGeometry(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>Change the curve of an edge subentity. The subentity can also be transformed, but for doing so there already is Entity protocol so no protocol extension is needed. The default implementation just returns NotImplementedYet.</summary>
            <param name="entity"> The entity must be open for write.</param>
            <param name="edgeSubentId"> Edge SubentityId whose curve is to be changed.</param>
            <param name="newEdgeCurve"> New curve of the edge subentity (copied, not reused).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetSubentGeometryXform(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Call this method to obtain block transformation matrix for a given sub-entity within the block reference.</summary>
            <param name="entity"> The entity must be open for read.</param>
            <param name="fullSubentPath"> Full path of the sub-entity whose collective transformation matrix is to be determined.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.MirrorPersSubent(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId)">
            <summary>Mirrors the given AssocPersSubentityId, i.e., it changes it so that it identifies the same subentity in the mirrored entity as it identified before the entity is mirrored. It is called from the default implementation of the AssocPersSubentityId.Mirror() method.</summary>
            <param name="mirroredEntity"> The entity that has been mirrored. It needs to be open for read.</param>
            <param name="persSubentIdToMirror"> The AssocPersSubentityId to be changed to reflect the fact that the entity has been mirrored.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetRigidSetState(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Returns ScalableRigidSet or NonScalableRigidSet if the entity is a rigid set, i.e. it can be rotated and translated as a whole, but its subentities cannot be individually changed. The default implementation returns NotRigidSet.</summary>
            <param name="entity"> The entity must be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.GetRigidSetTransform(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Get the transformation of the rigid set entity. The default implementation returns NotApplicable.</summary>
            <param name="entity"> The entity must be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE.SetRigidSetTransform(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Set the transformation of the rigid set entity. The default implementation returns NotApplicable.</summary>
            <param name="entity"> The entity must be open for write.</param>
            <param name="trans"> New transformation matrix of the rigid set entity.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId">
            <summary>
Abstract base class used to persistently identify an SubentityId of an Entity. Unlike SubentityId that is transient and may change when the entity is modified, reevaluated, or similar, the AssocPersSubentityId identifies the subentity in such a way that it is always possible to obtain the corresponding subentities (if they still exist), even after the entity has been edited or reevaluated any number of times.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.GetTransientSubentIds(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Mapping: AssocPersSubentityId --> SubentityId(s).</summary>
            <param name="entity"> The entity needs to be open for read.</param>
            <param name="subents"> The returned SubentityIds.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.SubentType(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Returns the type of the subentity.</summary>
            <param name="entity"> The entity needs to be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.TransientSubentCount(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Returns the number of transient SubentityIds corresponding to this AssocPersSubentityId. The default implementation just calls GetTransientSubentIds() and returns their count which usually is 1.</summary>
            <param name="entity"> The entity needs to be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId)">
            <summary>Returns true if this and the other AssocPersSubentityId reference are exactly the same subentity of the same entity. The base class implementation just checks whether the classes of this and of the other AssocPersSubentityId are identical.</summary>
            <param name="other"> The other AssocPersSubentityId.</param>
            <param name="ntity"> The entity owning the subentities of this and the other AssocPersSubentityId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.Mirror(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Notifies this AssocPersSubentityId that the entity has been mirrored and that the AssocPersSubentityId may possibly need to update itself to identify the same subentity in the mirrored entity as it identified before the entity has been mirrored.</summary>
            <param name="mirroredEntity"> The entity that has been mirrored. It needs to be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.CreateObjectAndDwgInFields(Autodesk.AutoCAD.DatabaseServices.Database,Autodesk.AutoCAD.DatabaseServices.DwgFiler,Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId&)">
            <summary>A static method that reads the class identification of the actual AssocPersSubentityId-derived class, creates an object of this derived class and calls DwgInFields() on it.</summary>
            <param name="database"> AcDbDatabase that is going to own the AcDbAssocPersSubentId.</param>
            <param name="filer"> The filer to read the data from. The first data is the class identification.</param>
            <param name="createdPersSubentId"> This is an in/out argument used to return the created and filled-in object of an AssocPersSubentityId-derived class. If the createdPersSubentId is passed in as not NULL, the code tries to reuse the existing object, if it is of the expected derived class. If it is passed in as NULL or is not of the expected derived type, it creates a new object (deleting the existing one, if any).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.CreateObjectAndDxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler,Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId&)">
            <summary>A static method that reads the class identification of the actual AssocPersSubentityId-derived class, creates an object of this derived class and calls DxfInFields() on it.</summary>
            <param name="filer"> The filer to read the data from. The first data is the class identification.</param>
            <param name="createdPersSubentId"> This is an in/out argument used to return the created and filled-in object of an AssocPersSubentityId-derived class. If the createdPersSubentId is passed in as not NULL, the code tries to reuse the existing object, if it is of the expected derived class. If it is passed in as NULL or is not of the expected derived type, it creates a new object (deleting the existing one, if any).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.DwgOutFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol. The AssocPersSubentityId base class implementation writes-out the actual class identification so that it is possible to create an object of the same class when the data is read back in (this happens in CreateObjectAndDwgInFields()).</summary>
            <param name="filer"> The filer to write the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.DwgInFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol. The AssocPersSubentityId base class implementation does nothing and doesn't therefore need to be called from the derived classes.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.DxfOutFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol. The AssocPersSubentityId base class implementation writes-out the actual class identification so that it is possible to create an object of the same class when the data is read back in (this happens in CreateObjectAndDxfInFields()).</summary>
            <param name="filer"> The filer to write the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.DxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol. The AssocPersSubentityId base class implementation does nothing and doesn't therefore need to be called from the derived classes.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.Audit(Autodesk.AutoCAD.DatabaseServices.AuditInfo)">
            <summary>The standard protocol.</summary>
            <param name="auditInfo"> See the AuditInfo documentation.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId.IsNull">
            <summary>Indicates whether this AssocPersSubentityId is null, i.e., not referencing any subentity of any entity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.GdiDrawObject">
            <summary>
This .Net class wraps the ObjectARX class AcGiGdiDrawObject.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GdiDrawObject.Draw(System.IntPtr,System.Drawing.Rectangle)">
            <summary>The method draws the GDI owner draw object into the specified bounding rectangle using the specified device context.</summary>
            <param name="hDC"> Input handle to the specified device context.</param>
            <param name="bounds"> Input bounding rectangle (in logical units) in which the GDI owner draw object will be displayed.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GdiDrawObject.Width">
            <summary>Accesses the original width of the GDI owner draw object in pixel units.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GdiDrawObject.Height">
            <summary>Accesses the original height of the GDI owner draw object in pixel units.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule">
            <summary>
This .NET class wraps ObjectARX class AcDbDimensionStyleOverrule. it overrules a subset of dimension style related operations that Dimension (AcDbDimension) class specifies. It is intended as a base class for clients who want to alter some or all behavior of a given AcDbDimension-derived class. At the base level, each default implementation simply calls the corresponding method in the target class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.DimensionStyle(Autodesk.AutoCAD.DatabaseServices.Dimension)">
            <summary>This .NET method wraps the ObjectARX AcDbDimensionStyleOverrule::dimensionStyle Method.</summary>
            <param name="dimension"> Dimension that this overrule is applied against.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetDimensionStyle(Autodesk.AutoCAD.DatabaseServices.Dimension,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This .NET method wraps the ObjectARX AcDbDimensionStyleOverrule::setDimensionStyle Method.</summary>
            <param name="dimension"> Dimension that this overrule is applied against.</param>
            <param name="id"> Input the object ID of the desired DimStyleTableRecord to be used by the dimension.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetDimstyleData(Autodesk.AutoCAD.DatabaseServices.Dimension,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This .NET method wraps the ObjectARX method AcDbDimensionStyleOverrule::setDimstyleData Method.</summary>
            <param name="dimension"> Dimension that this overrule is applied against.</param>
            <param name="dimstyleId"> Object ID of DimStyleTableRecord from which to copy dimension variable information.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetDimstyleData(Autodesk.AutoCAD.DatabaseServices.Dimension,Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord)">
            <summary>This .NET method wraps the ObjectARX AcDbDimensionStyleOverrule::setDimstyleData Method.</summary>
            <param name="dimension"> Dimension that this overrule is applied against.</param>
            <param name="style"> DimStyleTableRecord from which to copy the dimension variable information.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.GetDimstyleData(Autodesk.AutoCAD.DatabaseServices.Dimension,Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord)">
            <summary>This .NET method wraps the ObjectARX AcDbDimensionStyleOverrule::getDimstyleData Method.</summary>
            <param name="dimension"> Dimension that this overrule is applied against.</param>
            <param name="style"> Existing DimStyleTableRecord to which the dimension variable data will be copied.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Name of dictionary entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Array of ids defining the lookup table</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbObjectOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.Close(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>This .NET method wraps the ObjectARX method AcDbObjectOverrule::close().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.Cancel(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>This .NET method wraps the ObjectARX method AcDbObjectOverrule::cancel().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.Erase(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method AcDbObjectOverrule::erase().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.DeepClone(Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.IdMapping,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method AcDbObjectOverrule::deepClone().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.WblockClone(Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.Runtime.RXObject,Autodesk.AutoCAD.DatabaseServices.IdMapping,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method AcDbObjectOverrule::wblockClone().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeometryOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbGeometryOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometryOverrule.GetGeomExtents(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This .NET method wraps the ObjectARX method AcDbGeometryOverrule::getGeomExtents().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometryOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometryOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of an extension dictionary lookup to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometryOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometryOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometryOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.VisibilityOverrule">
            <summary>
Wraps the ObjectARX AcDbVisibilityOverrule class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VisibilityOverrule.Visibility(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Wraps the ObjectARX AcDbVisibilityOverrule::visibility() method.</summary>
            <param name="entity"> An Autodesk.AutoCAD.DatabaseServices.Entity that this overrule is applied against.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HighlightStateOverrule">
            <summary>
This wraps the ObjectARX AcDbHighlightStateOverrule class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightStateOverrule.PushHighlight(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.GraphicsInterface.HighlightStyle)">
            <summary>This wraps the ObjectARX AcDbHighlightStateOverrule::pushHighlight() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightStateOverrule.PopHighlight(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This wraps the ObjectARX AcDbHighlightStateOverrule::popHighlight( AcDbEntity* pSubject, const AcDbFullSubentPath& subId) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightStateOverrule.HighlightState(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>this wraps the ObjectARX AcDbHighlightStateOverrule::highlightState() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbHighlightOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule.Highlight(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method AcDbHighlightOverrule::highlight().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule.Unhighlight(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method AcDbHighlightOverrule::unhighlight().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HighlightOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbSubentityOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.AddSubentPaths(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::addSubentPaths().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.DeleteSubentPaths(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::deleteSubentPaths().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.TransformSubentPathsBy(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::transformSubentPathsBy().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.GetGripPointsAtSubentPath(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.DatabaseServices.GripDataCollection,System.Double,System.Int32,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::getGripPointsAtSubentPath().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.MoveGripPointsAtSubentPaths(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],Autodesk.AutoCAD.DatabaseServices.GripDataCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::moveGripPointsAtSubentPaths().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.GetSubentPathsAtGsMarker(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityType,System.IntPtr,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::getSubentPathsAtGsMarker().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.GetGsMarkersAtSubentPath(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::getGsMarkersAtSubentPath().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.SubentPtr(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::subentPtr().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.OnSubentGripStatusChanged(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripStatus,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::subentGripStatus().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.GetCompoundObjectTransform(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::getCompoundObjectTransform().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.GetSubentPathGeomExtents(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::getSubentPathGeomExtents().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.GetSubentClassId(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubentityOverrule::getSubentClassId().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GripOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbGripOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.GetGripPoints(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripDataCollection,System.Double,System.Int32,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags)">
            <summary>This .NET method wraps the ObjectARX method:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.GetGripPoints(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This .NET method wraps the ObjectARX method:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.MoveGripPointsAt(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripDataCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags)">
            <summary>This .NET method wraps the ObjectARX method:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.MoveGripPointsAt(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This .NET method wraps the ObjectARX method:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.GetStretchPoints(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This .NET method wraps the ObjectARX method AcDbGripOverrule::getStretchPoints().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.MoveStretchPointsAt(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This .NET method wraps the ObjectARX method AcDbGripOverrule::moveStretchPointsAt().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.OnGripStatusChanged(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.GripStatus)">
            <summary>This .NET method wraps the ObjectARX method AcDbGripOverrule::gripStatus().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TransformOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbTransformOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.TransformBy(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This .NET method wraps the ObjectARX method AcDbTransformOverrule::transformBy().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.GetTransformedCopy(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This .NET method wraps the ObjectARX method AcDbTransformOverrule::getTransformedCopy().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.Explode(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.DBObjectCollection)">
            <summary>This .NET method wraps the ObjectARX method AcDbTransformOverrule::explode().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.CloneMeForDragging(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This .NET method wraps the ObjectARX method AcDbTransformOverrule::cloneMeForDragging().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.HideMeForDragging(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This .NET method wraps the ObjectARX method AcDbTransformOverrule::hideMeForDragging().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransformOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbOsnapOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule.GetObjectSnapPoints(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes,System.IntPtr,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This .NET method wraps the ObjectARX method:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule.GetObjectSnapPoints(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes,System.IntPtr,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This .NET method wraps the ObjectARX method:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OsnapOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcDbPropertiesOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule.List(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This .NET method wraps the ObjectARX method AcDbPropertiesOverrule::list().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule.GetClassID(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>This .NET method wraps the ObjectARX method AcDbPropertiesOverrule::getClassID().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule">
            <summary>
This .NET class wraps the ObjectARX class AcGiDrawableOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule.SetAttributes(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.DrawableTraits)">
            <summary>This .NET method wraps the ObjectARX method AcGiDrawableOverrule::setAttributes().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
            <param name="ids"> Input an array of ObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataAdapterProvider">
            <summary>
This .NET class wraps the AcDbDataAdapterProvider ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataAdapterProvider.GetDataAdapter(System.String)">
            <summary>Returns the data adapter based on its ID.</summary>
            <param name="adapterId"> Input ID to check for</param>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Glyph">
            <summary>
This .NET class wraps the AcGiGlyph ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Glyph.SetLocation(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method is invoked from a host application immediately prior to invoking ViewportDraw() or WorldDraw() on the glyph. The glyph should be drawn with viewport-specific graphics, typically using the device coordinate members (denoted with dc in their names) of ViewportGeometry, however the location of the position to draw them at is computed as a WCS point, since GetOsnapPoints(), GetOsnapCurves() and GetOsnapInfo() all return their points and lines in WCS coordinates.</summary>
            <param name="point"> Input display coordinate system (DCS) point.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Glyph.IsPersistent">
            <summary>This method is not used for an Glyph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Glyph.Id">
            <summary>This method is not used for a Glyph.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ContextualColors">
            <summary>
This .NET class wraps the AcGiContextualColors ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ContextualColors.GridMajorLineTintXYZ">
            <summary>Accesses the tint color for major grid lines in the current display context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ContextualColors.GridMinorLineTintXYZ">
            <summary>Accesses the tint color for minor grid lines in the current display context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ContextualColors.GridAxisLineTintXYZ">
            <summary>Accesses the tint color for grid axis lines in the current display context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ContextualColors.WebMeshColor">
            <summary>Accesses the color of the web mesh in the current display context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ContextualColors.WebMeshMissingColor">
            <summary>Accesses the color of the missing web meshes in the current display context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ContextualColors.LightShapeColor">
            <summary>Accesses the color of light shapes in the current display context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ContextualColors.LightDistanceColor">
            <summary>Accesses the color of light distance in the current display context.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Viewport">
            <summary>
This .NET class wraps the AcGiViewport ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Viewport.DoPerspective(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Transforms value from eye coordinates to display coordinates.</summary>
            <param name="value"> Input point to be transformed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Viewport.DoInversePerspective(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Transforms value from display coordinates to eye coordinates and returns the object.</summary>
            <param name="value"> Input point to be transformed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Viewport.GetNumPixelsInUnitSquare(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>In perspective mode, the WCS unit square gets smaller and encompasses fewer pixels as it recedes away from the camera, whereas in non-perspective mode, the unit square stays the same size no matter how far away from the camera. So, if perspective mode is on in the viewport, then givenWorldPoint is used as the center of the unit square so that the distance from the camera to the point will be reflected in the pixel values. If perspective mode is not on, then givenWorldPoint is not used, since location has no effect on pixel count.</summary>
            <param name="givenWorldPoint"> Input WCS point for the center point of the display coordinate unit square</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Viewport.LayerVisible(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if the layer is not frozen in this viewport and not globally frozen. Indicating that geometry on this layer should be regenerated.</summary>
            <param name="idLayer"> Input layer to be investigated</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.ModelToEyeTransform">
            <summary>Transforms matrix to the current Model Coordinate to eye coordinate.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.EyeToModelTransform">
            <summary>Returns the transformation matrix to the current eye coordinate to Model Coordinate transformation matrix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.WorldToEyeTransform">
            <summary>Transforms matrix to the current World Coordinate to eye coordinate transformation matrix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.EyeToWorldTransform">
            <summary>Returns the transformation matrix to the current eye coordinate to Model Coordinate transformation matrix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.IsPerspective">
            <summary>Returns true if perspective mode is in effect. Otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.CameraLocation">
            <summary>Returns camera location to the viewport camera's world coordinate location. This is where the viewport's "eye" would be in world space.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.CameraTarget">
            <summary>Returns the camera target location point to the viewport camera's world coordinate target. This is a point where the viewport's "eye" is aimed in world space.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.CameraUpVector">
            <summary>Returns the camera "up" direction vector to the viewport camera's world coordinate "up" vector. This is the world space vector reference that the viewport's "eye" aligns itself with.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.ViewportId">
            <summary>Returns the viewport ID. This is an AcGi-specific ID that has no relation to the AutoCAD CVPORT system variable. This ID is used by the ViewportDraw.isValidId() function to determine if a viewport is still valid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.AcadWindowId">
            <summary>Returns the Viewport index number of the viewport being drawn to. This is the same index that the AutoCAD CVPORT system variable works with. So, if the viewport being drawn to is the current viewport in AutoCAD, then the value reported by the CVPORT system variable will match the value returned by this function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.DeviceContextViewportCorners">
            <summary>It positions the geometry (such as icons) that remain in a fixed position or fixed size in the viewport's display.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.FrontAndBackClipping">
            <summary>Fills in the parameters with information about the existence and location of front and back display clipping planes. Clipping planes are always perpendicular to the camera target vector. When active, the geometry in front of the front clipping plane or in back of the back clipping plane is not displayed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.LinetypeScaleMultiplier">
            <summary>This is a value supplied by the viewport itself. It is an additional multiplier that is used affecting all linetypes displayed in this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.LinetypeGenerationCriteria">
            <summary>During linetype elaboration of ever smaller objects, a point is reached where the dashes are so small as to be indistinguishable from a continuous line. The viewport defines a value which is used to determine whether or not further linetyping should be carried out for a given object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Viewport.ViewDirection">
            <summary>Returns the current view direction of the viewport. This value can be calculated from the target and camera points in WCS:.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ViewportGeometry">
            <summary>
This .NET class wraps the AcGiViewportGeometry ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ViewportGeometry.PolylineEye(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This polyline is similar to the standard Geometry.Polyline, but it is described using eye coordinates. This polyline cannot be linetyped.</summary>
            <param name="points"> Input list of points in the polyline, in eye coordinates</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ViewportGeometry.PolygonEye(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This polygon is similar to the standard Geometry.Polygon, but it is described using eye coordinates. This polyline cannot be linetyped. but it is described using eye coordinates. This polygon cannot be linetyped.</summary>
            <param name="points"> Input list of points in the polygon, in eye coordinates</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ViewportGeometry.DeviceContextPolyline(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This polyline is similar to the standard Geometry.Polyline, but it is described using display coordinates. This polyline cannot be linetyped.</summary>
            <param name="points"> Input list of points in the polyline, in display coordinates</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ViewportGeometry.DeviceContextPolygon(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This polygon is similar to the standard Geometry.Polygon, but it is described using display coordinates. This polygon cannot be linetyped.</summary>
            <param name="points"> Input list of points in the polygon, in display coordinates</param>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.WorldGeometry">
            <summary>
This .NET class wraps the AcGiWorldGeometry ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WorldGeometry.SetExtents(Autodesk.AutoCAD.DatabaseServices.Extents3d)">
            <summary>Sets the extents of the current entity to extents. extents points to an array of two points that represent the World Coordinate bounding box of the current object.</summary>
            <param name="extents"> Input an array of two points.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WorldGeometry.StartAttributesSegment">
            <summary>If this drawable is a block and has Attributes, it must call this method exactly once before sending the attributes to Draw(). Once this function is called, the object may draw only attributes and no more primitives. The attributes must be the last objects rendered.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ViewportDraw">
            <summary>
This .NET class wraps the AcGiViewportDraw ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ViewportDraw.IsValidId(System.IntPtr)">
            <summary>Returns true if the viewport specified by id still exists. Otherwise, it returns false.</summary>
            <param name="id"> Input viewport ID value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportDraw.Viewport">
            <summary>Accesses the Viewport object in use by the ViewportDraw object. The Viewport object contains viewport-specific information applicable to the current viewport being drawn to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportDraw.Geometry">
            <summary>Accesses the user geometry (polylines, arcs, meshes, etc.).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportDraw.SequenceNumber">
            <summary>Accesses the number of viewports deleted so far during the AutoCAD edit session for the current drawing. If this number has incremented since last checked, then some viewport has been removed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportDraw.ViewportObjectId">
            <summary>Accesses the objectId of the Viewport being drawn to.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DrawableTraits">
            <summary>
This .NET class wraps the AcGiDrawableTraits ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableTraits.SetupForEntity(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This call initializes the entire SubEntityTraits and DrawableTraits from the entity. This is more efficient than setting each property individually. The default implementation of Entity.SetAttributes() uses this method.</summary>
            <param name="entity"> Input entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DrawableTraits.AddLight(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Drawables that emit light can add one (or more) "lights" to the model. A unique object id must be used for each light, though an object may pass in it's own object Id.</summary>
            <param name="lightId"> Input the added light.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.DrawableTraits.LinePattern">
            <summary>This is LinePattern, a member of class DrawableTraits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.DrawableTraits.SelectionFlags">
            <summary>This is SelectionFlags, a member of class DrawableTraits.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits">
            <summary>
This .NET class wraps the AcGiSubEntityTraits ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.SetSelectionMarker(System.IntPtr)">
            <summary>Sets the SubEntityTraits object to use markerId as the graphics marker for all graphics primitives drawn until the next call to this function, or the end of the WorldDraw() or ViewportDraw() execution.</summary>
            <param name="markerId"> Input non-zero integer to use as graphics system marker</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.FillType">
            <summary>Returns the FillType currently set in the SubEntityTraits object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.LineWeight">
            <summary>Returns the lineweight as defined by the enum LineWeight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.LineTypeScale">
            <summary>The scaling factor of linetype can be varied by this trait. A value of 1.0 is the standard scaling, 2.0 will cause the linetype dashes to be twice as long and a value of 0.5 will reduce them to half their normal length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Thickness">
            <summary>Thickness is an extrusion in WCS units along the positive Z axis. The extrusion vector is calculated as (Z*dthickness) * modelTransform. It only affects selected primitives: as pline, polyline, arc, circle and shx text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.PlotStyleDescriptor">
            <summary>Returns PlotStyleDescriptor property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Material">
            <summary>Returns the database ID of the current material assignment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Mapper">
            <summary>Returns a pointer to the active mapper definition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Sectionable">
            <summary>Returns true if the graphics primitives drawn with this object will participate in sectioning. Returns false if the graphics primitives will not be affected by sectioning operations.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.VisualStyle">
            <summary>Returns the object ID of the visual style in the subentity traits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.DrawFlags">
            <summary>Returns the current draw flags value. The default is kNoDrawFlags.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.ShadowFlags">
            <summary>Returns the current shadow flags value, as specified by the last valid call to SetShadowFlags().The default is ShadowsCastAndReceive.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.SelectionOnlyGeometry">
            <summary>Returns if the following geometry is only intended for selection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Color">
            <summary>Returns the AutoCAD color index value currently set within the SubEntityTraits object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.TrueColor">
            <summary>Returns color through EntityColor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Transparency">
            <summary>This .NET property wraps the ObjectARX methods AcGiSubEntityTraits.setTransparency and AcGiSubEntityTraits.transparency.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Layer">
            <summary>Returns the objectId of the layerTableRecord that is currently set in the SubEntityTraits object to be used to draw graphics primitives on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.LineType">
            <summary>Returns the objectId of the linetypeTableRecord that is currently set in the SubEntityTraits object to be used to when drawing graphics primitives.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits.Fill">
            <summary>This is Fill, a member of class SubEntityTraits.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DwgFiler">
            <summary>
This abstract class provides the interface for derived classes that are used for I/O operations that work with the DWG information format.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ResetFilerStatus">
            <summary>This interface when implemented resets the filer status.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadHardOwnershipId">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteHardOwnershipId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadSoftOwnershipId">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteSoftOwnershipId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadHardPointerId">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteHardPointerId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadSoftPointerId">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteSoftPointerId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadString">
            <summary>This interface, when implemented, checks filer status. If the status is OK, it reads the data into the System.String reference, and returns it.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteString(System.String)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadHandle">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteHandle(Autodesk.AutoCAD.DatabaseServices.Handle)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="handle"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadInt64">
            <summary>This .NET method wraps the ObjectARX method AcDbDwgFiler::readInt64.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteInt64(System.Int64)">
            <summary>This .Net method wraps the ObjectARX method AcDbDwgFiler::writeInt64.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadInt32">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteInt32(System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadInt16">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteInt16(System.Int16)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadUInt64">
            <summary>This .Net method wraps the ObjectARX method AcDbDwgFiler::readUInt64.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteUInt64(System.UInt64)">
            <summary>This .Net method wraps the ObjectARX method AcDbDwgFiler::writeUInt64.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadUInt32">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteUInt32(System.UInt32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadUInt16">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteUInt16(System.UInt16)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadByte">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteByte(System.Byte)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadBoolean">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteBoolean(System.Boolean)">
            <summary>
The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadDouble">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteDouble(System.Double)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadPoint2d">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WritePoint2d(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadPoint3d">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WritePoint3d(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadVector2d">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteVector2d(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadVector3d">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteVector3d(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadScale3d">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteScale3d(Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadBytes(System.Byte[])">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> A pre-allocated memory area to read bytes into</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteBytes(System.Byte[])">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadBinaryChunk">
            <summary>A BChunk is stored as a length (a short) followed by its data.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteBinaryChunk(System.Byte[])">
            <summary>A BChunk is stored as a length (a short) followed by a pointer to its data.</summary>
            <param name="chunk"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ReadAddress">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.WriteAddress(System.IntPtr)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="value"> Location to write to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwgFiler.Seek(System.Int64,System.Int32)">
            <summary>This .Net method wraps the ObjectARX method AcDbDwgFiler::seek.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DwgFiler.FilerStatus">
            <summary>Accesses the current status of the filer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DwgFiler.FilerType">
            <summary>Accesses the actual type of the filer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DwgFiler.DwgVersion">
            <summary>Accesses the drawing file version, such as Release 13 or Release 14.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DwgFiler.ExtendedMinorVersion">
            <summary>Gets the drawing file minor version.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DwgFiler.Position">
            <summary>This function is not implemented.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits">
            <summary>
This .NET class wraps the AcGiViewportTraits ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.Background">
            <summary>Returns the object ID of the Background object. If no background has been set, AcDbObjectId.Null is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.DefaultLightingOn">
            <summary>Returns the state of default lighting for this viewport. This toggle is an override to user lights. When ON, the default lights are used instead of user lights. When there are no user lights, default lights are used, and the value of this toggle is ignored.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.DefaultLightingType">
            <summary>Returns the type of default lighting used by this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.AmbientLightColor">
            <summary>Returns the ambient light color used by this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.Brightness">
            <summary>Returns the current brightness value for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.Contrast">
            <summary>Returns the current contrast value for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.RenderEnvironment">
            <summary>Returns the object ID of the RenderEnvironment object associated with this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.RenderSettings">
            <summary>Returns the object ID of the RenderSettings object applied to this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ViewportTraits.ToneOperatorParameters">
            <summary>Provides access to tone operator parameters for this viepwort.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits">
            <summary>
This .NET class wraps the AcGiWebLightTraits ObjectARX class. This class is an extended point light interface allowing for photometric web traits.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits.WebFile">
            <summary>.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits.WebRotation">
            <summary>Returns the rotation offset (specified in XYZ Euler angles) used to orient the goniometric data relative to the light orientation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits.WebFlux">
            <summary>Returns the flux value set for the web light (in lumens).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits.WebFileType">
            <summary>Returns the type of web file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits.WebSymmetry">
            <summary>Returns the type of symmetry in the web file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WebLightTraits.WebHorzAng90to270">
            <summary>Returns whether the horizontal angle 90 to 270 flag is set.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits">
            <summary>
This .NET class wraps the AcGiSpotLightTraits ObjectARX class. This class represents a spotlight source. Spotlights emit lights in a specific direction, and have an associated "light cone."</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.SetHotspotAndFalloff(System.Double,System.Double)">
            <summary>Sets the hotspot and falloff angles for this light, in radians.</summary>
            <param name="hotspot"> Input hotspot cone angle, in radians. Defines the brightest part of the spot light beam. Must be smaller than or equal to the falloff angle.</param>
            <param name="falloff"> Input falloff angle, in radians. Defines the full cone of light. This is also known as the field angle. Must be larger than or equal to the hotspot.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.Position">
            <summary>Returns the position of this light in the coordinate space of the current context..</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.TargetLocation">
            <summary>Returns the location (position) towards which the spot light is "pointing," in the coordinate space of the current context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.Hotspot">
            <summary>Returns the hotspot angle of this spotlight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.Falloff">
            <summary>Returns the falloff angle of this spotlight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.Attenuation">
            <summary>Returns the attenuation parameters for this light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.PhysicalIntensity">
            <summary>Returns the physical intensity of the light in candela.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits.LampColor">
            <summary>Returns the RGB value for the light's lamp color.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits">
            <summary>
This .NET class wraps the AcGiPointLightTraits ObjectARX class. This class represents a point light source, whose light is emitted in all directions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits.Position">
            <summary>Returns the position of the light source, in the coordinate space of the current context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits.Attenuation">
            <summary>Returns the attenuation parameters for this light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits.PhysicalIntensity">
            <summary>Returns the physical intensity of the light in candela.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits.LampColor">
            <summary>Returns the RGB value for the light's lamp color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits.TargetLocation">
            <summary>The location (position) towards which the light is "pointing," in the coordinate space of the current context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PointLightTraits.HasTarget">
            <summary>Returns True if the light displays a target grip, else False.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits">
            <summary>
This .NET class wraps the AcGiDistantLightTraits ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits.#ctor">
            <summary>Default constructor. Initializes members to reasonable default values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits.LightDirection">
            <summary>Returns the direction of the light as a vector. The positive direction of this vector is from light to object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits.IsSunlight">
            <summary>Returns true if this light represents sunlight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits.PhysicalIntensity">
            <summary>Accesses the physical intensity of the light in candela.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits.LampColor">
            <summary>Accesses the RGB value for the light's lamp color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits.SkyParameters">
            <summary>Provides access to sky.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits">
            <summary>
This .NET class wraps the AcGiStandardLightTraits ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits.Intensity">
            <summary>Accesses the physical intensity of the light in candela.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits.LightColor">
            <summary>Accesses the color of emitted light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits.Shadow">
            <summary>Assesses the shadow parameters for this light.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.LightTraits">
            <summary>
This .NET class wraps the AcGiLightTraits ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.LightTraits.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.LightTraits.On">
            <summary>Returns true if the light is on.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.SolidBackgroundTraits">
            <summary>
This .NET class wraps the AcGiSolidBackgroundTraits ObjectARX class. Represents a solid background to the underlying display system. An instance of class is populated by SolidBackground through its SetAttributes method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SolidBackgroundTraits.ColorSolid">
            <summary>Accesses the solid color of the background.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.IBLBackgroundTraits">
            <summary>
This class enables IBL background definitions to be elaborated to AcGi implementations.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.IBLBackgroundTraits.Enable">
            <summary>Gets whether IBL is currently active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.IBLBackgroundTraits.IBLImageName">
            <summary>Gets the image used for IBL.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.IBLBackgroundTraits.Rotation">
            <summary>Gets the rotation value for the IBL image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.IBLBackgroundTraits.DisplayImage">
            <summary>Gets whether to display the IBL image as the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.IBLBackgroundTraits.SecondaryBackground">
            <summary>Gets the background to display when DisplayImage is set to false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits">
            <summary>
This .NET class wraps the AcGiRenderEnvironmentTraits ObjectARX class. It represents render environment (fog and environment map) to the underlying display system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.Enable">
            <summary>Returns true if the fog is enabled, false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.IsBackground">
            <summary>Returns true if the fog is set as background, false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.FogColor">
            <summary>Returns the color of the fog.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.NearDistance">
            <summary>Returns the near distance of the fog.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.FarDistance">
            <summary>Returns the far distance of the fog.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.NearPercentage">
            <summary>Returns the near percentage of the fog.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.FarPercentage">
            <summary>Returns the far percentage of the fog.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits.EnvironmentMap">
            <summary>Returns the environment texture map.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits">
            <summary>
Abstract interface class that controls all the rendering settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits.QuitCondition">
            <summary>Gets the quit condition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits.RenderTime">
            <summary>Gets the desired render time.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits.RenderLevel">
            <summary>Gets the desired render level.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits.LightingMode">
            <summary>Gets the lighting mode being set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits.FilterType">
            <summary>Gets the current filter type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits.FilterWidth">
            <summary>Gets the current filter width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits.FilterHeight">
            <summary>Gets the current filter height.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits">
            <summary>
This .NET class wraps the AcGiRenderSettingsTraits ObjectARX class. It represents render settings to the underlying display system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits.MaterialEnabled">
            <summary>Returns a Boolean indicating whether per-object materials are used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits.TextureSampling">
            <summary>Returns a value indicating whether sampling (filtering) for image textures is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits.BackFacesEnabled">
            <summary>Returns a Boolean indicating whether back-facing faces are rendered.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits.ShadowsEnabled">
            <summary>Returns Boolean indicating whether shadows are cast.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits.DiagnosticBackgroundEnabled">
            <summary>Returns a Boolean indicating whether the diagnostic (checkered) background will be rendered.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits.ModelScaleFactor">
            <summary>Returns the model scale factor relative to meters. For example, if the model is drawn in mm, the scale factor is 0.001.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits">
            <summary>
This .NET class wraps the AcGiMaterialTraits ObjectARX class. This class allows material definitions to be expanded to implementations.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Ambient">
            <summary>Returns the ambient component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Reflection">
            <summary>Returns the reflection component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Bump">
            <summary>Returns the bump component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Translucence">
            <summary>Returns the translucence value of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.SelfIllumination">
            <summary>Returns the sel-illumination value of this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Reflectivity">
            <summary>Returns the reflectivity of this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.IlluminationModel">
            <summary>Returns the illumination model set on this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.ChannelFlags">
            <summary>Returns the material channels in use by this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Mode">
            <summary>Returns the mode of this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Diffuse">
            <summary>Returns the diffuse component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Specular">
            <summary>Returns the specular component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Refraction">
            <summary>Returns the refraction component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Opacity">
            <summary>Returns the opacity component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.ColorBleedScale">
            <summary>Obtains the Advanced Material parameter Color Bleed Scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.IndirectBumpScale">
            <summary>Obtains the Advanced Material parameter Indirect Bump Scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.ReflectanceScale">
            <summary>Obtains the Advanced Material parameter Reflectance Scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.TransmittanceScale">
            <summary>Obtains the Advanced Material parameter Transmittance Scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.TwoSided">
            <summary>Obtains whether the material traits represent a two sided material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.LuminanceMode">
            <summary>Obtains the Luminance Mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.Luminance">
            <summary>Obtains the luminance value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.NormalMap">
            <summary>Stores to a pointer the material map for the normal map channel of the material, the method used to compute the normal map, and the channel strength.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.GlobalIllumination">
            <summary>Returns the global illumination mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialTraits.FinalGather">
            <summary>Returns the final gathering mode.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.SkyBackgroundTraits">
            <summary>
This .NET class wraps the AcGiSkyBackgroundTraits ObjectARX class. This class enables sky background definitions to be elaborated to graphics interface implementations.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyBackgroundTraits.SkyParameters">
            <summary>Accesses the sky parameters for this background.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits">
            <summary>
This .NET class wraps the AcGiImageBackgroundTraits ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.ImageFilename">
            <summary>Returns the full path to the image file name associated with this background. Returns null if no image file has been set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.FitToScreen">
            <summary>Returns the FitToScreen property--a value indicating if the image background needs to be fit to the screen or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.MaintainAspectRatio">
            <summary>Returns true if the image files aspect ratio will be maintained when the background is drawn.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.UseTiling">
            <summary>Returns the value of the image tiling property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.XOffset">
            <summary>Returns the X axis offset value. The value can range from -1 to 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.YOffset">
            <summary>Returns the Y axis offset value. The value can range from -1 to 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.XScale">
            <summary>Returns the scale of the X axis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits.YScale">
            <summary>Returns the scale of the Y axis.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits">
            <summary>
This .NET class wraps the AcGiGroundPlaneBackgroundTraits ObjectARX class. It represents a ground plane background to the underlying display system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits.ColorSkyZenith">
            <summary>Returns the sky color at the zenith.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits.ColorSkyHorizon">
            <summary>Returns the color of the sky at the horizon.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits.ColorUndergroundHorizon">
            <summary>Returns the color of the underground horizon.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits.ColorUndergroundAzimuth">
            <summary>Returns the color of the underground azimuth.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits.ColorGroundPlaneNear">
            <summary>Returns the color of the far ground plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits.ColorGroundPlaneFar">
            <summary>Returns the color of the near ground plane.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits">
            <summary>
This .NET class wraps the AcGiGradientBackgroundTraits ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits.ColorTop">
            <summary>Returns the color of the top portion of the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits.ColorMiddle">
            <summary>Returns the color of the middle portion of the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits.ColorBottom">
            <summary>Returns the color of the bottom portion of the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits.Horizon">
            <summary>Returns the horizon value indicating the percentage of unrotated height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits.Height">
            <summary>Gets a value representing a percentage of the second color in a three-color gradient. The start point of the second color is determined by the Horizon setting. If the value is 0, the result is a two-color gradient that uses the Top and Bottom colors.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits.Rotation">
            <summary>Returns the angle by which the gradient background will be rotated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices">
            <summary>
This .NET class wraps the AcDbHostApplicationServices ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.LoadApplication(System.String,Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons,System.Boolean,System.Boolean)">
            <summary>
The default implementation of this method simply calls DynamicLinker.LoadApp(). The arguments are equivalent and are passed unchanged..</summary>
            <param name="appName"> Input null-terminated string which is the application name (as set in the system registry) of the ObjectARX module to load</param>
            <param name="why"> Input LoadReasons values to use during this load</param>
            <param name="printIt"> Input Boolean indicating whether or not to print load status message</param>
            <param name="asCmd"> Input Boolean indicating whether to load the application as if by user command</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.IsUrl(System.String)">
            <summary>This method determines whether the string filePath refers to a valid URL; returns true if it is and false otherwise.</summary>
            <param name="filePath"> Input string to be evaluated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.GetUrl(System.String)">
            <summary>This method is the inverse of the isURL method. It provides a mapping from a local file to the corresponding URL that the file was downloaded from.</summary>
            <param name="localFile"> Input local file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.GetRemoteFile(System.Uri,System.Boolean)">
            <summary>
This method returns the resource (file) identified by the URL url. The Boolean argument ignoreCache determines whether the file should be downloaded even if it has already been transferred earlier in the session..</summary>
            <param name="url"> Input URL</param>
            <param name="ignoreCache"> Input Boolean indicating whether to download the file even if it has be cached earlier in the session</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.PutRemoteFile(System.Uri,System.String)">
            <summary>This method uploads a local resource (file) identified by the pathname localFile to the remote location specified by the URL url.</summary>
            <param name="url"> Input URL to which to upload file</param>
            <param name="localFile"> Input local file to upload</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.IsCloudFile(System.String)">
            <summary>Determine whether a given string is a valid Cloud file.</summary>
            <param name="filePath"> Input cloud file.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.GetEnvironmentVariable(System.String)">
            <summary>This is GetEnvironmentVariable, a member of class HostApplicationServices.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.UserBreak">
            <summary>The UserBreak() method is called by the database code to see if the user has entered a CTRL+C break.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.FatalError(System.String)">
            <summary>The database calls FatalError() when it encounters a fatal error. There is a default implementation that will put the string into the acdb.err error file, and call exit(0) to terminate your application.</summary>
            <param name="message"> The error message.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.Current">
            <summary>Accesses the current HostApplicationServices object being used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.Program">
            <summary>Accesses the "About" information for the program.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.Product">
            <summary>Accesses the "About" information for the product.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.CompanyName">
            <summary>Accesses the "About" information for the company.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.MachineRegistryProductRootKey">
            <summary>Use this function to obtain registry root for storing/retrieving product specific data. This location is generally read-only for limited users.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.UserRegistryProductRootKey">
            <summary>Use this function to obtain registry root for storing/retrieving product specific user data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.releaseMarketVersion">
            <summary>This value is primarily used in User Interface. It is the year displayed after the product name, as in "AutoCAD 2013.".</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.WorkingDatabase">
            <summary>Accesses the primary database open in whichever document (window) has focus. In other host applications, the meaning of working database will be application-defined.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.RoamableRootFolder">
            <summary>Accesses the local roamable files directory.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.LocalRootFolder">
            <summary>Accesses the local directory.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.AllUsersRootFolder">
            <summary>Returns the full path to the AutoCAD all users folder where the files shared by all users were installed. The default implementation is to return the directory where the EXE is located. This method can be overridden by DBX applications for their own install structure.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.AlternateFontName">
            <summary>Accesses the name of the 'alternate' font, that is, the default font to use in the event that any font cannot be found.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.FontMapFileName">
            <summary>Accesses the name of the fontmap file. The fontmap file is a file containing a list of font names and substitute fonts to use in place of the named fonts.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.ModelerFlavor">
            <summary>Accesses the level of geometric modeler support available from the RealDWG host application.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HostApplicationServices.ColorBookLocation">
            <summary>This is ColorBookLocation, a member of class HostApplicationServices.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.IMenuItem">
            <summary>
This is class Autodesk.AutoCAD.Runtime.IMenuItem.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.IMenuItem.Click">
            <summary>This is Click, a member of class IMenuItem.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.IMenuItem.OnClicked(System.EventArgs)">
            <summary>This is OnClicked, a member of class IMenuItem.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.IMenuItem.Text">
            <summary>This is Text, a member of class IMenuItem.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.IMenuItem.Enabled">
            <summary>This is Enabled, a member of class IMenuItem.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.IMenuItem.Visible">
            <summary>This is Visible, a member of class IMenuItem.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.IMenuItem.Checked">
            <summary>This is Checked, a member of class IMenuItem.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.IMenuItem.Icon">
            <summary>This is Icon, a member of class IMenuItem.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.IMenuItem.Items">
            <summary>This is Items, a member of class IMenuItem.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Vector3d">
            <summary>
This .NET class wraps the AcGeVector3d ObjectARX class. Vector3d represents a vector in 3D space. It can be viewed as a structure consisting of 3 doubles.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.#ctor(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructs a 3D vector by the formula.</summary>
            <param name="plane"> Input plane</param>
            <param name="vector2d"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.#ctor(System.Double[])">
            <summary>Creates a vector using the first three elements of the array.</summary>
            <param name="xyz"> Input coordinate array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.#ctor(System.Double,System.Double,System.Double)">
            <summary>Constructs a 3D vector with coordinates x, y, and z correspondingly.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.Convert2d(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>Returns 2D vector with the coordinates corresponding to the decomposition of this vector in the basis uAxis, vAxis in the planar entity plane, where uAxis and vAxis can be found by function call plane.GetCoordinateSystem(p, uAxis, vAxis).</summary>
            <param name="plane"> Input input plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.AngleOnPlane(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>Returns the angle between the orthogonal projection of this vector into the plane through the origin with the same normal as planar entity plane and the zeroth basis vector v0 of the planar entity plane provided by the function plane.GetCoordinateSystem (p, v0, v1).</summary>
            <param name="plane"> Input input plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.TransformBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Transform this pre-multiplying it the matrix leftSide.</summary>
            <param name="leftSide"> Input 3D matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.RotateBy(System.Double,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns 3D point which is the result of rotation of this vector around the line with axis passing through the origin. Rotation angle is given by the argument angle, where positive direction of rotation is defined by the right-hand rule.</summary>
            <param name="angle"> Input angle of rotation</param>
            <param name="axis"> Input axis of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.Mirror(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the 3D vector which is the result of mirroring of this vector with respect to the plane with the normal normalToPlane passing through the origin.</summary>
            <param name="normalToPlane"> Input plane normal</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.MultiplyBy(System.Double)">
            <summary>Multiplies this vector with value.</summary>
            <param name="value"> Input value to multiply against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.Add(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Adds this vector with v.</summary>
            <param name="v"> Input vector to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.Subtract(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Subtracts object v from this vector.</summary>
            <param name="v"> Input value to subtract by</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.DivideBy(System.Double)">
            <summary>Divides value by this vector.</summary>
            <param name="value"> Input a figure to divide by</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.Negate">
            <summary>Negates this vector, namely sets it to be equal to the vector (-x, -y).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.GetPerpendicularVector">
            <summary>Returns a vector orthogonal to this vector, namely the vector ( -y, x).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.GetAngleTo(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the angle between this vector and the vector vector in the range [0, 2 x Pi].</summary>
            <param name="vector"> Input any 3D vector</param>
            <param name="referenceVector"> Input reference vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.GetAngleTo(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the angle between this vector and the vector vector in the range [0, Pi].</summary>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.GetNormal">
            <summary>This method calls Vector3d.GetNormal(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.GetNormal(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the unit vector codirectional to this vector. The vector is not normalized if its length is less than tolerance.equalVector(), in which case the returned vector is the same as this vector.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsUnitLength">
            <summary>This method calls Vector3d.IsUnitLength(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsUnitLength(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if this vector is equal to its normalization. Returns false otherwise.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsZeroLength">
            <summary>This method calls Vector3d.IsZeroLength(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsZeroLength(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if this vector is equal to zero vector. Returns false otherwise.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsParallelTo(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls Vector3d.IsParallelTo(Vector3d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input Autodesk.AutoCAD.Geometry.Vector3d object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsParallelTo(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this vector is parallel to the vector vector. Namely, it checks if after normalization (and negation in case of negative dot product with the vector vector) this vector is within the distance tolerance.equalVector() from the normalization of the vector vector.</summary>
            <param name="vector"> Input any 3D vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsCodirectionalTo(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls Vector3d.IsCodirectionalTo(Vector3d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsCodirectionalTo(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This function checks if this vector is codirectional to the vector. Namely, it checks if after normalization this vector is within the distance tolerance.equalVector() from the normalization of the vector.</summary>
            <param name="vector"> Input any 3D vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls Vector3d.IsPerpendicularTo(Vector3d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this vector is perpendicular to the vector vector. Namely, it checks if after normalization the dot product of this vector with the normalization of the vector vector is less than tolerance.equalVector() in absolute value.</summary>
            <param name="vector"> Input any 3D vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.DotProduct(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the dot product of this vector and the vector v.</summary>
            <param name="v"> Input vector to perform dot product with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.CrossProduct(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the cross product of this vector and vector vector.</summary>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.ProjectTo(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the 3D vector that is the result of the parallel projection of this vector into the plane with normal planeNormal passing through the origin. The direction of projection is defined by vector projectDirection.</summary>
            <param name="planeNormal"> Input plane normal</param>
            <param name="projectDirection"> Input direction of projection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.OrthoProjectTo(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns a 3D vector which is the result of the orthogonal projection of this point into the plane with normal planeNormal passing through the origin.</summary>
            <param name="planeNormal"> Input plane normal</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls Vector3d.IsEqualTo(Vector3d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this vector is within the distance tolerance.equalVector() from the vector vector.</summary>
            <param name="vector"> Input any 3D vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.Equals(System.Object)">
            <summary>Returns true if this object is equal to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.op_Inequality(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.op_Equality(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.op_Multiply(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the vector equal to the product of matrix a and vector b. The order of multiplication is matrix * vector, where vectors are considered as columns.</summary>
            <param name="a"> Input matrix</param>
            <param name="b"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.op_Multiply(System.Double,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the vector equal to a multiplied by scale factor factor.</summary>
            <param name="factor"> Input scale factor</param>
            <param name="a"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.op_Multiply(Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Returns the vector equal to vector a multiplied by scale factor factor.</summary>
            <param name="a"> Input scale factor</param>
            <param name="factor"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="format"> Input format</param>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector3d.ToArray">
            <summary>Returns an array of type Double containing the X, Y and Z coordinate values for this vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.X">
            <summary>Returns the X property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.Y">
            <summary>Returns the Y property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.Z">
            <summary>Returns the Z property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.XAxis">
            <summary>Returns the XAxis property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.YAxis">
            <summary>Returns the YAxis property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.ZAxis">
            <summary>Returns the ZAxis property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.Length">
            <summary>Returns the Euclidian length of this vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.LengthSqrd">
            <summary>Returns the square of the Euclidian length of this vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector3d.LargestElement">
            <summary>Accesses.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition">
            <summary>
This is class Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>This is HatchPatternDefinition, a member of class HatchPatternDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.Angle">
            <summary>This is Angle, a member of class HatchPatternDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.BaseX">
            <summary>This is BaseX, a member of class HatchPatternDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.BaseY">
            <summary>This is BaseY, a member of class HatchPatternDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.OffsetX">
            <summary>This is OffsetX, a member of class HatchPatternDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.OffsetY">
            <summary>This is OffsetY, a member of class HatchPatternDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition.DashList">
            <summary>This is DashList, a member of class HatchPatternDefinition.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Colors.Color">
            <summary>
This .NET class wraps the AcCmColor ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.#ctor">
            <summary>Default constructor. Initializes the color index to 0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.FromColor(System.Windows.Media.Color)">
            <summary>This is FromColor, a member of class Color.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.FromColor(System.Drawing.Color)">
            <summary>Returns a new color object using value.</summary>
            <param name="value"> Input object to obtain color from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.FromRgb(System.Byte,System.Byte,System.Byte)">
            <summary>Creates a new Color object using the input Red, Green, and Blue channel values.</summary>
            <param name="red"> Input color value 0 to 255</param>
            <param name="green"> Input color value 0 to 255</param>
            <param name="blue"> Input color value 0 to 255</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.FromDictionaryName(System.String)">
            <summary>Returns a new color object using a dictionary name.</summary>
            <param name="name"> Input System.String dictionary key</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.FromNames(System.String,System.String)">
            <summary>This function sets the color name and book name.</summary>
            <param name="colorName"> Input color name</param>
            <param name="bookName"> Input optional book name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.Equals(System.Object)">
            <summary>Returns the truthiness of the object comparison.</summary>
            <param name="obj"> Input object to find the equivalency</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.CompareTo(System.Object)">
            <summary>Returns a value comparison integer.</summary>
            <param name="obj"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.Clone">
            <summary>Clones the object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.DwgIn(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>This function does some internal bookkeeping, calls the object's DwgInFields() function, and then reads in any xdata attached to the object. If the object's DwgInFields() function does not supermessage its parent class, an assert is triggered.</summary>
            <param name="inputFiler"> DWG filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.DwgOut(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>This function does some internal bookkeeping, calls the object's function, and then writes out any xdata attached to the object. If the object's DwgOutFields() function does not supermessage its parent class, an assert is triggered.</summary>
            <param name="outputFiler"> DWG filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.DxfIn(Autodesk.AutoCAD.DatabaseServices.DxfFiler,System.Int32)">
            <summary>This function reads the DXF file specified into the database object and returns the ACI color value.</summary>
            <param name="inputFiler"> Input full path of the DXF file to be read into database</param>
            <param name="groupCodeOffset"> Input group code offset</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.DxfOut(Autodesk.AutoCAD.DatabaseServices.DxfFiler,System.Int32)">
            <summary>This function creates an DXF file and writes the ACI color value.</summary>
            <param name="outputFiler"> Input full path of the DXF file to write</param>
            <param name="groupCodeOffset"> Input group code offset</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Color.Audit(Autodesk.AutoCAD.DatabaseServices.AuditInfo)">
            <summary>This function is called by AutoCAD when the AUDIT command is executed. The AuditInfo object pointed to by auditInfo contains member functions that are used to determine what to do and also to report the results of the audit operation on the object.</summary>
            <param name="auditInfo"> Input an AuditInfo object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.ColorValue">
            <summary>Accesses the color value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.ColorMethod">
            <summary>Accesses the color method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.Description">
            <summary>Accesses the description.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.Explanation">
            <summary>Accesses the explanation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.IsByColor">
            <summary>Assesses if the color is by another color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.IsByLayer">
            <summary>Wrap the ObjectARX function AcCmColor.isByLayer(). Assesses if the color method is EntityColor.ByLayer, or if the color method is EntityColor.ByACI and the ACI is EntityColor.ACIbyLayer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.IsByBlock">
            <summary>Assesses if the color is by a block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.IsByAci">
            <summary>Assesses if the color is defined by ACI.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.IsByPen">
            <summary>Assesses if the color is by a pen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.IsForeground">
            <summary>Assesses if the color is from the foreground.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.IsNone">
            <summary>Assesses if there is no color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.Red">
            <summary>Accesses the red component of the color value in the range 0 to 255.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.Green">
            <summary>Accesses the green component of the color value in the range 0 to 255.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.Blue">
            <summary>Accesses the blue component of the color value in the range 0 to 255.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.ColorIndex">
            <summary>Accesses the color index.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.PenIndex">
            <summary>Assesses the pen index.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.ColorName">
            <summary>Accesses the color name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.BookName">
            <summary>Accesses the book name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.ColorNameForDisplay">
            <summary>Accesses the color name for the display.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.HasColorName">
            <summary>Assesses if a color name exists.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.HasBookName">
            <summary>Assesses if a book name exists.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.EntityColor">
            <summary>Accesses the entity color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.DictionaryKeyLength">
            <summary>Accesses the dictionary key length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Color.DictionaryKey">
            <summary>Accesses the dictionary key.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.PointCloudExtractResult">
            <summary>
Provides the point cloud line extraction result.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.ExtractOption">
            <summary>
Specifies the extraction types.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback">
            <summary>
Specifies the call for the point cloud line extraction process.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback.UpdateProgress(System.Int32)">
            <summary>Updates the progress, from 0 ~ 99.</summary>
            <param name="progress"> The progress, from 0~99.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback.UpdateCaption(System.String)">
            <summary>Updates the caption displayed in the progress dialog, if any.</summary>
            <param name="caption"> The caption</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback.Cancelled">
            <summary>Specifies whether or not the callback is cancelled.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback.Cancel">
            <summary>Cancels the progress.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback.UpdateRemainTime(System.Double)">
            <summary>Updates the remaining time of the progress, in seconds.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback.End">
            <summary>Specifies the end of the process.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AutoConstrainEvaluationCallback">
            <summary>
Client needs to implement this callback to provide constraint priorities and priority override for autconstraint evaluation.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AutoConstrainEvaluationCallback.GetConstraintPriorityOverride(Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.ConstraintType,Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry[])">
            <summary>This function will be called when the system finds a possible constraint between a given set of constrained geometries. This function expects to get an override to increase, decrease or maintain the priority for the given constraint condition.</summary>
            <param name="type"> Geometric constraint type that is possible between given set of constrained geometry.</param>
            <param name="geometries"> List of constrained geometry, which are potential candidate for provided constraint type. User may</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AutoConstrainEvaluationCallback.GetAutoConstrainPriority">
            <summary>Defines the order in which constraint types can be used for autoConstrain.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AutoConstrainEvaluationCallback.GetTotalConstraints(Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint[]&)">
            <summary>Returns a list of constraints found by autoconstraint evaluation.</summary>
            <param name="constraints"> reference to array of constraints, to return list of constraints found by autoconstraint evaluation. This parameter can be null if caller doesn't want list of constraints.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AutoConstrainEvaluationCallback.IsEvaluationCancelled">
            <summary>Indicates whether the evaluation was canceled by the caller.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintCallback">
            <summary>
Client code can register callbacks derived from Assoc2dConstraintCallback that are then called when some events happen with Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintCallback.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintCallback.CanBeRelaxed(Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint)">
            <summary>Allows client code to veto erasing a dimension constraint when a dimension constraint is not satisfied and is being erased during a relax evaluation of a 2D constraint group.</summary>
            <param name="constraint"> The dimension constraint that is to be erased.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintCallback.ConstraintDeactivated(Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint,System.Boolean)">
            <summary>
This function will be called when a constraint is deactivated or reactivated. This notification takes place when ExplicitConstraint.deactivate() or ExplicitConstraint.reactivate() is invoked.</summary>
            <param name="constraint"> The constraint that is to be activated or deactivated.</param>
            <param name="deactivated"> Whether to deactivate or reactivate the constraint</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ActionsToEvaluateCallback">
            <summary>
AcDbActionsToEvaluateCallback Wrapper This callback is used by AssocAction::getDependentActionsToEvaluate() method to inform about other actions, dependencies or arbitrary objects that should also be evaluated because they depend on the given action that is to be evaluated.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ActionsToEvaluateCallback.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ActionsToEvaluateCallback.NeedsToEvaluate(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.AssocStatus,System.Boolean)">
            <summary>
This callback method is called by AssocAction::getDependentActionsToEvaluate(). It is a mechanism by which getDependentActionsToEvaluate() informs that an AssocAction, AssocDependency, or an DBObject needs to be evaluated and suggests new status for them that the callback implementation should set. If the given ObjectId is not of an action or of a dependency, but of an arbitrary DBObject, the callback implementation should simply recursively call needsToEvaluate() for all dependencies on that object..</summary>
            <param name="objectId"> ObjectId of an AssocAction, AssocDependency or an arbitrary DBObject that needs to be evaluated.</param>
            <param name="newStatus"> The new evaluation request status of the action or dependency. If it is not an evaluation request, the needsToEvaluate() implementation should not change the status of the action or dependency.</param>
            <param name="ownedActionsAlso"> If the action that needs to evaluate is an AssocNetwork, this argument controls whether all the actions owned by the network also need to be evaluated. The caller usually passes true.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback">
            <summary>
This wraps the ObjectARX AcDbAssocEvaluationCallback class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.EvaluationMode">
            <summary>The action needs to call this method at the beginning of the Evaluate() code to obtain the mode in which it should evaluate itself. The default implementation returns ModifyObjectsAssocEvaluationMode.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.BeginActionEvaluation(Autodesk.AutoCAD.DatabaseServices.AssocAction)">
            <summary>The action informs that it is starting its evaluation. This callback is issued at the beginning of AssocAction.Evaluate() call and should not be issued from the individual EvaluateOverride() method calls. The action is open for write when this callback is issued.</summary>
            <param name="action"> The action that is being evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.EndActionEvaluation(Autodesk.AutoCAD.DatabaseServices.AssocAction)">
            <summary>The action informs that it has finished its evaluation. This callback is issued at the end of AssocAction.Evaluate() call and should not be issued from the individual Evaluate() method calls. The action is open for write when this callback is issued.</summary>
            <param name="action"> The action that is being evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.EndActionEvaluationUsingObject(Autodesk.AutoCAD.DatabaseServices.AssocAction,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>The action informs that it is done with using or modifying a DBObject. The action issues this callback just before it closes the object. If the object is a substitute object provided by the client code, the action does not close it.</summary>
            <param name="action"> The action that is being evaluated.</param>
            <param name="objectId"> The same DBObjectId that has been previously passed to the matching BeginActionEvaluationUsingObject() callback.</param>
            <param name="object"> The object that has been used or modified by the action. It may be NULL if the original object couldn't be opened or if the substitute object was not of the expected type.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.DraggingState">
            <summary>The action may inquire of the client code whether the evaluation is happening from inside of the dragging loop and at which stage the dragging is. The custom evaluation callback code may provide this information by implementing this callback.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.CancelActionEvaluation">
            <summary>The custom evaluation callback code can request that the action evaluation should be cancelled by implementing this callback predicate. The AssocAction.Evaluate() method checks this predicate just after issuing the BeginActionEvaluation() callback, i.e. just before the action EvaluateOverride() method is called. If a whole associative network is evaluated, this predicate is also checked after evaluating each action in the network to see if the network evaluation should continue. Custom actions can freely add their own calls to check this predicate, particularly if the action evaluation is time consuming.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback.GetTransformationType">
            <summary>Allows the custom evaluation callback code to pass information about what type of transformation (which AutoCAD command) has been performed with the entities prior to action evaluation. The default implementation returns NotSpecified.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Curve3d">
            <summary>
This .NET class wraps the AcGeCurve3d ObjectARX class. This ia an abstract base class for all 3D curves. Any class that is derived from this class represents a 3D curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetInterval">
            <summary>Returns the parametric range of the curve. The function EvaluatePoint(double) always returns a point on this curve when called with a value within the returned interval.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.SetInterval(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Sets the parametric range of the curve based on the parametric value.</summary>
            <param name="value"> Input parametric interval on which this curve is defined</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetReverseParameterCurve">
            <summary>Reverses the parametric direction of the curve. The point set of the curve is unchanged, but the direction of the curve is reversed.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This method calls Curve3d.GetDistanceTo(Curve3d curve, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve"> Input any 3D curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the distance between the closest points between this curve and the input curve.</summary>
            <param name="curve"> Input any 3D curve</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Curve3d.GetDistanceTo(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the distance between the input point and the closest point on this curve.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This method calls Curve3d.GetClosestPointTo(Curve3d curve, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve3d"> Input any 3D curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the closest points between this curve and the input curve. This function is the same as closestPointTo(), except the closest points are returned as PointOnCurve3d objects.</summary>
            <param name="curve3d"> Input any 3D curve</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Curve3d.GetClosestPointTo(Point3d curve, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the closest point on this curve to the input point. This function is the same as closestPointTo(), except that the closest point is returned as an PointOnCurve3d object.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetProjectedClosestPointTo(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls Curve3d.GetProjectedClosestPointTo(Curve3d curve, Vector3d projectDirection, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve3d"> Input any 3D curve</param>
            <param name="projectDirection"> Input direction of projection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetProjectedClosestPointTo(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the points on the two curves which when projected onto a plane whose normal is projectDirection are the closest points on the projected curves. The return value of this function is the closest point on this curve. This function is mainly used by graphics where projectDirection is the line of sight. In this case, this function returns the points on the two curves that appear to be the closest points between the two curves (but may not be the actual closest points).</summary>
            <param name="curve3d"> Input any 3D curve</param>
            <param name="projectDirection"> Input direction of projection</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetProjectedClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls Curve3d.GetProjectedClosestPointTo(Point3d curve, Vector3d projectDirection, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="projectDirection"> Input direction of projection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetProjectedClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the point on the curve which when projected onto a plane whose normal is projectDirection is the closest point on the projected curve to the input point. This function is mainly used by graphics where projectDirection is the line of sight. In this case, this function returns the point on the curve that appears to be closest to the input point (but may not be the actual closest point).</summary>
            <param name="point"> Input any 3D point</param>
            <param name="projectDirection"> Input direction of projection</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetNormalPoint(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Curve3d.GetNormalPoint(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetNormalPoint(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the point on the input curve whose normal passes through the input point. The returned point lies on a plane that also contains the input point and is perpendicular to the curve tangent at that point. The returned point is therefore at a local minimum or a local maximum from the input point.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetBoundBlockOf(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns the bounding box of the specified sub-interval of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
            <param name="range"> Input sub-interval of curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetOrthoBoundBlockOf(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns the bounding box of the specified sub-interval of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
            <param name="range"> Input sub-interval of curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetProjectedEntity(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls Curve3d.GetProjectedEntity(Plane projectionPlane, Vector3d projectDirection, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="projectionPlane"> Input plane on which curve is to be projected</param>
            <param name="projectDirection"> Input direction in which curve is to be projected</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetProjectedEntity(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the entity that is the projection of the curve onto the projection plane in the specified direction. The projectDirection vector must not be parallel to the projection plane. The returned entity may not be of the same type as the original curve and may not even be a curve (for instance, a line projects into a point if it is parallel to projectDirection). The returned entity is created with the new operator and it is the responsibility of the caller to delete it.</summary>
            <param name="projectionPlane"> Input plane on which curve is to be projected</param>
            <param name="projectDirection"> Input direction in which curve is to be projected</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetOrthoProjectEntity(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This method calls Curve3d.GetOrthoProjectEntity(Plane projectionPlane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="projectionPlane"> Input plane on which curve is to be projected</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetOrthoProjectEntity(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the entity that is the orthogonal projection of the curve onto the projection plane. The returned entity may not be of the same type as the original curve and may not even be a curve (for instance, a line projects into a point if it is orthogonal to the projection plane). The returned entity is created with the new operator and it is the responsibility of the caller to delete it.</summary>
            <param name="projectionPlane"> Input plane on which curve is to be projected</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsOn(System.Double)">
            <summary>This method calls Curve3d.IsOn(Double value, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="value"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsOn(System.Double,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if input parameter value is within valid parametric range of curve.</summary>
            <param name="value"> Input parameter value</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsOn(Autodesk.AutoCAD.Geometry.Point3d,System.Double&)">
            <summary>Determines if the point lies on curve. The value is only set to a meaningful value if this function returns true.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="value"> Input parameter value of point if point lies on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsOn(Autodesk.AutoCAD.Geometry.Point3d,System.Double&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if point lies on curve. The value is only set to a meaningful value if this function returns true.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="value"> Input parameter value of point if point lies on curve</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsOn(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Curve3d.IsOn(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsOn(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if input point lies on curve.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetParameterOf(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Curve3d.GetParameterOf(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetParameterOf(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the parameter value of point. This function assumes that point lies on the curve and does not verify this. If point does not lie on the curve, this function will return unpredictable results.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetTrimmedOffset(System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType)">
            <summary>This method calls Curve3d.GetTrimmedOffset(Double distance, Vector3d planeNormal, OffsetCurveExtensionType extensionType, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="distance"> Input offset distance</param>
            <param name="planeNormal"> Input normal vector to plane of curve</param>
            <param name="extensionType"> Input determines how offset curve will be extended at points of C1 discontinuity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetTrimmedOffset(System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns one or more offset curves that represent the trimmed offset of the curve. The curve must be planar and planeNormal must be perpendicular to the plane of the curve. The positive direction of offset at a point on the curve is taken to be the cross product of planeNormal with the tangent vector at that point. The curve may be offset in either of two directions by specifying a positive or negative offset distance; planeNormal determines which direction is the positive direction of offset. The returned offset curves are trimmed so that they do not contain any points of self-intersection.</summary>
            <param name="distance"> Input offset distance</param>
            <param name="planeNormal"> Input normal vector to plane of curve</param>
            <param name="extensionType"> Input determines how offset curve will be extended at points of C1 discontinuity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsClosed">
            <summary>This method calls Curve3d.IsClosed(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsClosed(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if start point and endpoint of curve are the same.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsPlanar(Autodesk.AutoCAD.Geometry.Plane&)">
            <summary>Determines if curve is planar. If the curve is a line, then this function returns an arbitrary plane that contains the line. The plane parameter contains meaningful data only if this function returns a value of true.</summary>
            <param name="plane"> Input plane on which this curve lies if it is planar</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsPlanar(Autodesk.AutoCAD.Geometry.Plane&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if curve is planar. If the curve is a line, then this function returns an arbitrary plane that contains the line. The plane parameter contains meaningful data only if this function returns a value of true.</summary>
            <param name="plane"> Input plane on which this curve lies if it is planar</param>
            <param name="tolerance"> EvaluatePoint</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsLinear(Autodesk.AutoCAD.Geometry.Line3d&)">
            <summary>Determines if curve is linear. The line parameter contains meaningful data only if this function returns a value of true.</summary>
            <param name="line"> Input line on which this curve lies if it is linear</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsLinear(Autodesk.AutoCAD.Geometry.Line3d&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if curve is linear. The line parameter contains meaningful data only if this function returns a value of true.</summary>
            <param name="line"> Input line on which this curve lies if it is linear</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsCoplanarWith(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Plane&)">
            <summary>Returns true if both curve are planar and lie in the same plane. The plane parameter is only valid if this function returns a value of true.</summary>
            <param name="curve3d"> Input any 3D curve</param>
            <param name="plane"> Input plane in which this curve and input curve lie</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsCoplanarWith(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Plane&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if both curve are planar and lie in the same plane. The plane parameter is only valid if this function returns a value of true.</summary>
            <param name="curve3d"> Input any 3D curve</param>
            <param name="plane"> Input plane in which this curve and input curve lie</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsPeriodic(System.Double&)">
            <summary>Determines if the curve is periodic. The curve is periodic if and only if it is closed and the two points EvaluatePoint(t) and EvaluatePoint(t+period) are always the same point for all values of t.</summary>
            <param name="period"> Input period of curve parameter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsDegenerate(Autodesk.AutoCAD.Geometry.Entity3d&)">
            <summary>Determines if the curve is degenerate and if so returns the entity which the curve degenerates into.</summary>
            <param name="result"> Output type of degenerate entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.IsDegenerate(Autodesk.AutoCAD.Geometry.Entity3d&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the curve is degenerate and if so returns the entity which the curve degenerates into.</summary>
            <param name="result"> Output type of degenerate entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetLength(System.Double,System.Double,System.Double)">
            <summary>Returns the arc length of the curve between the two parameter values.</summary>
            <param name="fromParameter"> Input parameter value of interval start</param>
            <param name="toParameter"> Input parameter value of interval end (must be larger than fromParameter)</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetParameterAtLength(System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
Returns the parameter value of the point whose arc length distance (from the point with parameter value datumParameter) is the input length. In other words, if.</summary>
            <param name="datumParameter"> Input parameter value</param>
            <param name="length"> Input arc length</param>
            <param name="direction"> Input parameter direction</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetArea(System.Double,System.Double)">
            <summary>This method calls Curve3d.GetArea(Double startParameter, Double endParameter, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="startingParameter"> Input parameter value of interval start</param>
            <param name="endingParameter"> Input parameter value of interval end (must be larger than startParameter)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetArea(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the area of the interval of the curve defined by startingParameter and endingParameter. Returns true if area was successfully computed to within the specified tolerance. If the curve is not planar, then the area cannot be calculated and a value of false is returned.</summary>
            <param name="startingParameter"> Input parameter value of interval start</param>
            <param name="endingParameter"> Input parameter value of interval end (must be larger than startParameter)</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetSplitCurves(System.Double)">
            <summary>Returns two segments which are obtained by splitting the curve at the input parameter value.</summary>
            <param name="value"> Input parameter value at which curve is to be split</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.Explode(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Explodes the curve into its individual components.</summary>
            <param name="interval"> Input interval of curve that is to be exploded</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.EvaluatePoint(System.Double)">
            <summary>Returns the point on the curve that corresponds to the input parameter value.</summary>
            <param name="value"> Input parameter value at which curve is to be evaluated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetSamplePoints(System.Int32)">
            <summary>Returns the specified number of points on the curve. The points are equally spaced by parameter value. So if the interval of the curve [0,1] and numSample is 5, the parameter values of the returned points are 0, 0.25, 0.5, 0.75, and 1.</summary>
            <param name="numSample"> Input number of points that are to be returned</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetSamplePoints(System.Double,System.Double,System.Double)">
            <summary>Returns a list of points on the curve between fromParameter and toParameter.</summary>
            <param name="fromParameter"> Input starting parameter</param>
            <param name="toParameter"> Input ending parameter</param>
            <param name="chordHeight"> Input chord-height tolerance</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3d.GetNewSamplePoints(System.Double,System.Double,System.Double)">
            <summary>Returns a list of points on the curve.</summary>
            <param name="fromParameter"> Input starting parameter</param>
            <param name="toParameter"> Input ending parameter</param>
            <param name="chordHeight"> Input chord-height tolerance</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3d.BoundBlock">
            <summary>Returns the bounding box of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3d.OrthoBoundBlock">
            <summary>Returns the bounding box of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3d.HasStartPoint">
            <summary>Returns true if curve has a start point. A return value of false means that the parametric interval of the curve does not have a lower bound.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3d.HasEndPoint">
            <summary>Returns true if curve has an endpoint. A return value of false means that the parametric interval of the curve does not have an upper bound.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3d.StartPoint">
            <summary>Returns the start point of the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3d.EndPoint">
            <summary>Returns the end point of the curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Surface">
            <summary>
This .NET class wraps the AcGeSurface ObjectARX class. Surface class is an abstract base class for all other parametric surfaces.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Surface.GetClosestPointTo(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input point on surface</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns in the output argument result the point on this surface that is closest to the point point.</summary>
            <param name="point"> Input point on surface</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.GetEnvelope">
            <summary>Returns the minimal pair of intervals such that the corresponding rectangle in parameter space contains the parameter domain of this surface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.ParameterOf(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Surface.ParameterOf(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input point on surface</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.ParameterOf(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Inverse evaluator.</summary>
            <param name="point"> Input point on surface</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.IsOn(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Surface.IsOn(Point3d point, Point2d parameterPoint, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input point on surface</param>
            <param name="parameterPoint"> Input parameter point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.IsOn(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the point point is on the surface within tolerance. In this case returns the parameters of the point pnt on surface in the output argument parameterPoint. Returns false otherwise.</summary>
            <param name="point"> Input point on surface</param>
            <param name="parameterPoint"> Input parameter point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.ClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Surface.ClosestPointTo(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input point on surface</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.ClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the point on this surface that is closest to the point point.</summary>
            <param name="point"> Input point on surface</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.DistanceTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Surface.DistanceTo(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input point on surface</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.DistanceTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the minimal distance between this surface and the point point.</summary>
            <param name="point"> Input point on surface</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.IsClosedInU">
            <summary>This method calls Surface.IsClosedInU(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.IsClosedInU(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Indicates whether the surface is closed in the u direction or not.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.IsClosedInV">
            <summary>This method calls Surface.IsClosedInV(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.IsClosedInV(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Indicates whether the surface is closed in the v direction or not.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Surface.EvaluatePoint(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Evaluator. Returns the point corresponding to the parameter point parameter.</summary>
            <param name="parameter"> Input parameter point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Surface.IsNormalReversed">
            <summary>Returns true if the normal to the surface is evaluated as.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Surface.ReverseNormal">
            <summary>The normal to the surface is evaluated either by formula.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocVariableCallback">
            <summary>
This wraps the ObjectARX AcDbAssocVariableCallback class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariableCallback.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariableCallback.CanBeErased(Autodesk.AutoCAD.DatabaseServices.AssocVariable)">
            <summary>Allows client code to veto erasing a variable when the variable would be erased because the dimensional constraint that uses the variable is erased and the variable is no more referenced.</summary>
            <param name="variable"> The AcDbAssocVariable that is to be erased.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariableCallback.ValidateNameAndExpression(Autodesk.AutoCAD.DatabaseServices.AssocVariable,System.String,System.String)">
            <summary>Called from AssocVariable.ValidateNameAndExpression(). It lets the client code perform additional checks to decide if a given name and/or expression can be used as a name and/or expression for the given variable.</summary>
            <param name="variable"> The variable whose name and/or expression are being validated.</param>
            <param name="nameToValidate"> The variable name to validate. May be null.</param>
            <param name="expressionToValidate"> The variable expression to validate. May be null.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Context">
            <summary>
This .NET class wraps the AcGiContext ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Context.DisableFastMoveDrag">
            <summary>For plane transformations it is possible for a graphics system to maintain a cache of the graphics primitives and apply a transformation to those primitives, instead of requerying the object. This works fine for many objects. However if an object would not perform such a transformation, but performs some other operation, then the drag image would not represent the true state of the object. By calling this method, the object is indicating that it requires to be queried for each transformation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.IsPostScriptOut">
            <summary>Returns true if the regen is for the purposes of PostScript out; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.IsPlotGeneration">
            <summary>Returns true if the regen is for hard copy output; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.Database">
            <summary>Every regeneration relates to a specific database, and if your object needs to query the database for any purpose, this is the database you should use. This is in contrast to using the database returned by the DBObject.database() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.IsBoundaryClipping">
            <summary>Returns true if boundary clipping is currently active. This indicates that any primitive drawn will be clipped to a boundary. For clarification, if this version of  supports clipping but there is currently no active clip boundary, the return value would be false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.IsNesting">
            <summary>Returns true if the system is regenerating a.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.EffectiveColor">
            <summary>Returns the color that would be used to draw a primitive at this point, any bylayer and byblock resolution has been done. This does not include any change that may be caused in the plot pipeline by any active plot style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.ByBlockLineWeight">
            <summary>Returns the lineweight that will be used if byblock lineweight is specified. This does not include any change that may be caused in the plot pipeline by any active plot style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.ByBlockPlotStyleNameId">
            <summary>Returns the plotstyle that will be used if byblock is specified.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Context.SupportsTrueTypeText">
            <summary>Returns true if the current implementation of  supports True type font elaboration. A return value of false indicates that the device will be using a stroke based font for any text specified with a true type font.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Point2d">
            <summary>
This class wraps AcGePoint2d ObjectARX class. It represents a point in 2-dimensional space. It can be viewed as a structure consisting of two doubles.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.#ctor(System.Double[])">
            <summary>Constructs 2d-point with coordinates taken from the first two elements of the input array.</summary>
            <param name="xy"> Input coordinate array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.#ctor(System.Double,System.Double)">
            <summary>Constructs 2d-point with coordinates x and y.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.TransformBy(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Transforms this pre-multiplying it by the matrix leftSide. Returns the reference to this point.</summary>
            <param name="leftSide"> Input left side of the matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.RotateBy(System.Double,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns 2D point which is the result of rotation of this point around the origin. Rotation angle is given by the argument angle, where positive direction of rotation is considered from X axis to Y axis.</summary>
            <param name="angle"> Input rotation angle</param>
            <param name="origin"> Input center of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.Mirror(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Returns the 2D point which is the result of mirroring of this point with respect to 2D line line in the same plane.</summary>
            <param name="line"> Input line of symmetry</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.ScaleBy(System.Double,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns 2d point that is the result of scaling this point with respect to the input point by the scale factor.</summary>
            <param name="scaleFactor"> Input scale factor</param>
            <param name="origin"> Input center of scaling</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.MultiplyBy(System.Double)">
            <summary>Returns 2D point which is the result of multiplying this point with value.</summary>
            <param name="value"> Input object to be multiplied with the 2D point.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.DivideBy(System.Double)">
            <summary>Returns the 2D point which is the result of diving this point by value.</summary>
            <param name="value"> Input for dividing the 2D point.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.Add(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns the 2D point which is the result of adding this point to 2D vector value.</summary>
            <param name="value"> Input object to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.Subtract(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns 2D point which is the result of subtracting value from this point.</summary>
            <param name="value"> Input value to subtract.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.GetAsVector">
            <summary>Converts 2D point into 2D vector with the same set of coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Evaluates and returns distance from this point to the point point.</summary>
            <param name="point"> Input point to measure to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.GetVectorTo(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Evaluates and returns the vector with respect to the point point.</summary>
            <param name="point"> Input point to measure to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.Equals(System.Object)">
            <summary>Returns true if this object is equal to obj.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Point2d.IsEqualTo(Point2d a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this point is within the distance tolerance.equalPoint() from the point a.</summary>
            <param name="a"> Input object to check against</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.op_Inequality(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.op_Equality(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.op_Multiply(Autodesk.AutoCAD.Geometry.Matrix2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Multiplies mat and b.</summary>
            <param name="mat"> Left operand</param>
            <param name="a"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.op_Multiply(System.Double,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Multiplies a and b.</summary>
            <param name="value"> Left operand</param>
            <param name="a"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.op_Multiply(Autodesk.AutoCAD.Geometry.Point2d,System.Double)">
            <summary>Multiplies a and value.</summary>
            <param name="a"> Left operand</param>
            <param name="value"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="format"> Input format</param>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point2d.ToArray">
            <summary>This method returns an array containing the X and Y coordinate values for this point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point2d.X">
            <summary>Returns the X coordinate axis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point2d.Y">
            <summary>Returns the Y coordinate axis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point2d.Origin">
            <summary>Returns the origin of point 2D space.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectId">
            <summary>
This .NET struct wraps the AcDbObjectId ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.#ctor(System.IntPtr)">
            <summary>Constructs an object ID based on an old integer pointer.</summary>
            <param name="oldId"> Input pointer to construct from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.Equals(System.Object)">
            <summary>Returns true if this object is equal to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.op_Inequality(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.op_Equality(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input culture definition</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.Compare(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Compares this object to value1 and returns true if they are equal.</summary>
            <param name="value1"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectId.ConvertToRedirectedId">
            <summary>This function will take the object ID for this object if it has been redirected from another database, and convert it to the actual object ID for the other database (for example: the object ID from an xref database). If this object ID is not redirected or if it has a value of Null, the function will do nothing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.ObjectClass">
            <summary>Accesses the RXClass of the object that is associated with the object id, thus guaranteeing that the result can be safely de-referenced and correctly compared against any class derived from DBObject. This is done because the entire purpose of this property is to streamline code being written; having to always compare the result against NULL would partially defeat the purpose of the function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.OldIdPtr">
            <summary>Accesses the objectId value as a long, which is the old format (an is an array of two longs, the first element of which contains the same value as that in an objectId).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.Database">
            <summary>Accesses the database in which the object ID is resident. If the object ID is NULL, then NULL is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.IsNull">
            <summary>Assesses if the object ID has a null value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.IsValid">
            <summary>Assesses if the object ID is associated with a database that is currently in memory. If the object ID is associated with a database that is no longer available (in other words, has been deleted), then the value is false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.IsErased">
            <summary>Assesses if the object associated with this object ID is erased.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.IsEffectivelyErased">
            <summary>Assesses true if the object associated with this object ID is erased or if any of the owners in the ownership hierarchy for the object (in other words, the object's owner, the object's owner's owner, etc.) are erased.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.OriginalDatabase">
            <summary>If this object ID is in an xref database and the object associated with this object ID has been redirected to the host database, then this property will return a pointer to the xref database. If the object associated with this object ID is not from an xref database or is not redirected, then this property's value is the same as ObjectId.Database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.Handle">
            <summary>Accesses the handle of the object associated with the object ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.NonForwardedHandle">
            <summary>If this object ID is in an xref database and the object associated with this object ID has been redirected to the host database, then the value of this property is the handle in the xref database. If the object associated with this objectId is not from an xref database or is not redirected, then this method is the same as ObjectId.Handle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.Null">
            <summary>Accesses a null object ID. This property allows more compact expressions to be used and helps the compiler generate better code (it knows the ObjectId is zero instead of having to lookup the Null object).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectId.IsResident">
            <summary>Assesses if the object associated with this objectId is resident in memory.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.EdgeData">
            <summary>
This .NET class wraps the AcGiEdgeData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.SetTrueColors(Autodesk.AutoCAD.Colors.EntityColor[])">
            <summary>Sets the true colors for this entity to colors.The colors array must have the same number of elements as there are edges in the mesh or shell with which it is used. The array elements control individual edge colors. The order of the array elements corresponds to the order of the edges in the mesh or shell. The first array element is used as the color for the first mesh or shell edge, the second element for the second edge, and so on.</summary>
            <param name="colors"> Input array of EntityColor objects</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.SetLayers(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Sets layers to be the array of LayerTableRecord object IDs used by this object. The array must have exactly the same number of elements as there are edges in the mesh or shell it is used with.</summary>
            <param name="layers"> Input array of LayerTableRecord object IDs.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.SetLineTypes(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Sets lineTypes to be the array of LinetypeTableRecord object IDs used by this object.The array must have exactly the same number of elements as there are edges in the mesh or shell it is used with. The array elements control the linetypes used for the mesh or shell edges--the first array element specifies the linetype used for the first edge, the second element for the second edge, etc.</summary>
            <param name="lineTypes"> Input array of LinetypeTableRecord object IDs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.GetTrueColors">
            <summary>Returns the true colors defined for this entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.GetLayers">
            <summary>Returns the array of LayerTableRecord object IDs, one for each edge in the mesh or shell with which this object is used. If the layer ID array has not been set, an empty array is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.GetLineTypes">
            <summary>Returns the array of LinetypeTableRecord object IDs, one for each edge in the mesh or shell with which this object is used. If the linetype ID array has not been set, an empty array is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.GetSelectionMarkers">
            <summary>Returns a pointer to an array of graphic system selection markers (gsmarkers), one for each edge in the mesh or shell the EdgeData object is used with. If the selectionMarker's data array has not been set, then NULL is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.GetVisibility">
            <summary>Returns a pointer to an array of visibility flags (that is, 0 == invisible, 1 == visible), one for each edge in the mesh or shell the EdgeData object is used with. If the visibility flags data array has not been set, then NULL is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.SetSelectionMarkers(System.IntPtr[])">
            <summary>Sets selectionMarkers to be the array of graphics system selection markers (gsmarkers) used by the EdgeData object. The array must have exactly the same number of elements as there are edges in the mesh or shell it is used with.</summary>
            <param name="selectionMarkers"> Input array of non-zero graphic system selection markers.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.SetVisibility(System.Byte[])">
            <summary>Sets visibility to be the array of edge visibility flags used by this object. The array must have exactly the same number of elements as there are edges in the mesh or shell it is used with.</summary>
            <param name="visibility"> Input array of visibility flags</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.SetColors(System.Int16[])">
            <summary>Sets colors to be the array of edge color indices used by this object.The array must have exactly the same number of elements as there are edges in the mesh or shell it is used with.</summary>
            <param name="colors"> Input array of AutoCAD color indices.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.EdgeData.GetColors">
            <summary>Returns an array of AutoCAD color indices, one for each edge in the mesh or shell with which this object is used. If the colors array has not been set, an empty array is returned.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.FaceData">
            <summary>
This .NET class wraps the AcGiFaceData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetColors(System.Int16[])">
            <summary>Sets colors to be the array of face color indices used by the FaceData object. The array must have exactly the same number of elements as there are faces in the mesh or shell it is used with. The array elements control the individual face colors. The order of the array elements corresponds with the order of the faces in the mesh or shell--the first array element is used as the color index for the first mesh or shell face, the second element for the second face, etc.</summary>
            <param name="colors"> Input array of AutoCAD color indices</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetTrueColors(Autodesk.AutoCAD.Colors.EntityColor[])">
            <summary>This function sets the array of face color used by the FaceData object.</summary>
            <param name="colors"> Input array of EntityColor objects</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetLayers(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Sets layers to be the array of LayerTableRecord object IDs used by the FaceData object. The array must have exactly the same number of elements as there are faces in the mesh or shell it is used with. The array elements control the layers the mesh or shell faces reside on--the first array element specifies the layer used for the first face, the second element for the second face, etc.</summary>
            <param name="layers"> Input array of LayerTableRecord object IDs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetNormalVectors(Autodesk.AutoCAD.Geometry.Vector3d[])">
            <summary>Sets normal to be the array of face normal vectors used by the FaceData object. The array must have exactly the same number of elements as there are faces in the mesh or shell it is used with. The array elements specify the normal vectors of the mesh or shell faces--the first array element specifies the normal vector for the first face, the second element for the second face, etc.</summary>
            <param name="normal"> Input array of normal vectors.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetVisibility(System.Byte[])">
            <summary>Sets visibility to be the array of face visibility flags used by the FaceData object. The array must have exactly the same number of elements as there are faces in the mesh or shell it is used with.</summary>
            <param name="visibility"> Input array of visibility flags</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetColors">
            <summary>Returns an array of AutoCAD color indices, one for each face in the mesh or shell with which this object is used. If the colors array has not been set, an empty array is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetLayers">
            <summary>Returns an array of LayerTableRecord object IDs, one for each face in the mesh or shell the FaceData object is used with. If the layerId's data array has not been set, then NULL is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetSelectionMarkers">
            <summary>Returns an array of graphic system selection markers (gsmarkers), one for each face in the mesh or shell the FaceData object is used with. If the selectionMarker's data array has not been set, then NULL is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetSelectionMarkers(System.IntPtr[])">
            <summary>Sets selectionMarker to be the array of graphics system selection markers (gsmarkers) used by the FaceData object. The array must have exactly the same number of elements as there are faces in the mesh or shell it is used with. The array elements control the graphic system selection markers (gsmarkers) used for the mesh or shell faces--the first array element specifies the gsmarker used for the first face, the second element for the second face, etc.</summary>
            <param name="selectionMarker"> Input array of non-zero graphic system selection markers.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetNormalVectors">
            <summary>Returns the array of normal vectors, one for each face in the mesh or shell with which this object is used. If the normal vector array has not been set, an empty array is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetTrueColors">
            <summary>Returns the array of EntityColor objects, one for each face in the mesh or shell with which this object is used. If the true color array has not been set, an empty array is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetVisibility">
            <summary>Returns an array of visibility flags (that is, 0 == invisible, 1 == visible), one for each face in the mesh or shell the FaceData object is used with. If the visibility flag's data array has not been set, then NULL is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetMaterials(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Sets materials to the array of face materials used by the FaceData object. The array must have exactly the same number of elements as there are faces in the mesh or shell it is used with. The array elements control the individual face material. The order of the array elements corresponds with the order of the faces in the mesh or shell--the first array element is used as the material for the first mesh or shell face, the second element for the second face, etc. For faces that do not have a per-face material override, the corresponding entries should be occupied by ObjectId.Null.</summary>
            <param name="materials"> Input array of materials to be set on the this object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetMaterials">
            <summary>Returns the array of materials assigned to the FaceData object. Please refer to FaceData.SetMaterials for how materials are mapped to individual faces.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetMappers(Autodesk.AutoCAD.GraphicsInterface.Mapper[])">
            <summary>Sets mappers to be the array of face mappers used by the FaceData object. The array must have exactly the same number of elements as there are faces in the mesh or shell it is used with. The array elements control the individual face mapper. The order of the array elements corresponds with the order of the faces in the mesh or shell--the first array element is used as the mapper for the first mesh or shell face, the second element for the second face, etc. For faces that do not have a per-face mapper override, the corresponding entries should be occupied by Mapper.Identity.</summary>
            <param name="mappers"> Input face mappers to be set on the this object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetMappers">
            <summary>Returns the array of mappers assigned to the FaceData object. Refer to FaceData.SetMappers for how mappers are mapped to individual faces.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.SetTransparency(Autodesk.AutoCAD.Colors.Transparency[])">
            <summary>This .NET method wraps the ObjectARX method AcGiFaceData::setTransparency.</summary>
            <param name="transparency"> Input Autodesk.AutoCAD.Colors.Transparency to set into the FaceData.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FaceData.GetTransparency">
            <summary>This .NET method wraps the ObjectARX method AcGiFaceData::transparency.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VertexData">
            <summary>
This .NET class wraps the AcGiVertexData ObjectARX class. This class is a container for the optional data that can be specified for a set of vertices for meshes and shells. An object of this class is meant to be passed in as an argument to Geometry.mesh() and AcGiGeometry.shell().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VertexData.SetNormalVectors(Autodesk.AutoCAD.Geometry.Vector3d[])">
            <summary>Sets normal to be the array of face normal vectors used by this object. Input one array for each vertex in the mesh or shell, or NULL if specification of normal is not desired at the vertices.</summary>
            <param name="normal"> Input array of normal vectors</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VertexData.SetTrueColors(Autodesk.AutoCAD.Colors.EntityColor[])">
            <summary>Read-only.</summary>
            <param name="colors"> Input array of colors</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VertexData.GetTrueColors">
            <summary>Returns the true colors defined for this entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VertexData.GetNormalVectors">
            <summary>Returns the vertex normal currently in use by the VertexData object. The object returned is either NULL or points to an array which has exactly the same number of elements as there are vertices in the mesh or shell. If the pointer is not NULL, then each of the elements in the array pointed to is a valid Model Coordinate System vector, which is used as the normal for the corresponding vertex in the mesh or shell's vertex array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.VertexData.OrientationFlag">
            <summary>Returns the current orientation type for vertices. The orientation type indicates the direction the vertices in a mesh or shell appear to follow when viewed in order while looking down the normal axis towards any given vertex. Essentially the orientation type defines the normal's positive or negative direction at the vertices.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath">
            <summary>
This .NET class wraps the AcDbFullSubentPath ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId[],Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Initializes the embedded ObjectIdCollection withids and the embedded SubentityId with index.</summary>
            <param name="ids"> Input object ID array</param>
            <param name="index"> Input subent ID object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.GetObjectIds">
            <summary>Returns an array of object IDs for all objects in this subentity path.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Object to compare to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.op_Inequality(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.op_Equality(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.Null">
            <summary>Accesses the Null property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.IsNull">
            <summary>Compares if the object is a null subentity or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FullSubentityPath.SubentId">
            <summary>Accesses the const copy of the embedded SubentityId.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.VertexRef">
            <summary>
This wraps the ObjectARX AcDbVertexRef class</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VertexRef.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This wraps the ObjectARX AcDbVertexRef::AcDbVertexRef(const AcGePoint3d *pGePoint) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VertexRef.#ctor(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This wraps the ObjectARX AcDbVertexRef::VertexRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VertexRef.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This wraps the ObjectARX AcDbVertexRef::AcDbVertexRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VertexRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This wraps the ObjectARX AcDbVertexRef::AcDbVertexRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VertexRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This wraps the ObjectARX AcDbVertexRef::AcDbVertexRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VertexRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId)">
            <summary>This wraps the ObjectARX AcDbVertexRef::AcDbVertexRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VertexRef.#ctor">
            <summary>This wraps the ObjectARX AcDbVertexRef::AcDbVertexRef() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.VertexRef.Point">
            <summary>This wraps the ObjectARX AcDbVertexRef::point() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EdgeRef">
            <summary>
This wraps the ObjectARX AcDbEdgeRef class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This wraps the ObjectARXAcDbEdgeRef::AcDbEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This wraps the ObjectARX AcDbEdgeRef::AcDbEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This wraps the ObjectARX AcDbEdgeRef::AcDbEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This wraps the ObjectARX AcDbEdgeRef::AcDbEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This wraps the ObjectARX AcDbEdgeRef::AcDbEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This wraps the ObjectARX AcDbEdgeRef::AcDbEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId)">
            <summary>This wraps the ObjectARX AcDbEdgeRef::AcDbEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EdgeRef.#ctor">
            <summary>This wraps the ObjectARX AcDbEdgeRef::AcDbEdgeRef method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.EdgeRef.FaceSubentity">
            <summary>This wraps the ObjectARX AcDbEdgeRef::faceSubentId() and AcDbEdgeRef::setFaceSubentity() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.EdgeRef.Curve">
            <summary>This wraps the ObjectARX AcDbEdgeRef::curve() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ResultBuffer">
            <summary>
This .NET class wraps the resbuf ObjectARX struct.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.Create(System.IntPtr,System.Boolean)">
            <summary>
This method creates a managed ResultBuffer object from an unmanaged resbuf pointer.</summary>
            <param name="buffer"> Input pointer</param>
            <param name="autoDelete"> Set to true if the pointer should be deleted after creation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.GetEnumerator">
            <summary>Returns an enumerator object for this ResultBuffer object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.Add(System.Object)">
            <summary>Adds value to the end of this ResultBuffer's list.</summary>
            <param name="value"> Input object to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.Add(Autodesk.AutoCAD.DatabaseServices.TypedValue)">
            <summary>If value can be coerced to type TypedValue , then it is added to the end of this ResultBuffer's list.</summary>
            <param name="value"> Input object to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.AsArray">
            <summary>This method returns an array of typed values representing the nodes in the resbuf chain.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object..</summary>
            <param name="obj"> Object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.op_Inequality(Autodesk.AutoCAD.DatabaseServices.ResultBuffer,Autodesk.AutoCAD.DatabaseServices.ResultBuffer)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.op_Equality(Autodesk.AutoCAD.DatabaseServices.ResultBuffer,Autodesk.AutoCAD.DatabaseServices.ResultBuffer)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input culture definition</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBuffer.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in a specific format, with the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="format"> Input format for string</param>
            <param name="provider"> Input culture definition</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode">
            <summary>
This .NET class wraps the AcDbCustomOsnapMode and AcDbCustomOsnapManager ObjectARX classes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.#ctor(System.String,System.String,System.String,Autodesk.AutoCAD.GraphicsInterface.Glyph)">
            <summary>Constructor.</summary>
            <param name="localModeString"> Input local mode string</param>
            <param name="globalModeString"> Input global mode string</param>
            <param name="toolTipText"> Input tool tip text</param>
            <param name="glyph"> Input glyph to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.ApplyToEntityType(Autodesk.AutoCAD.Runtime.RXClass,Autodesk.AutoCAD.DatabaseServices.AddObjectSnapInfo)">
            <summary>Applies a new callback to the given entity.</summary>
            <param name="entity"> Input entity to apply to</param>
            <param name="callback"> Input callback to apply</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.RemoveFromEntityType(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>Removes an entity type.</summary>
            <param name="entity"> Input entity to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.Activate(System.String)">
            <summary>This function is used to activate an OSNAP mode. The input string is compared with local mode strings if it does not begin with "_", and with the global mode strings if it does begin with "_".</summary>
            <param name="mode"> Input custom OSNAP mode string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.Deactivate(System.String)">
            <summary>Used to deactivate an OSNAP mode. The same search rules apply as for activateOsnapMode().</summary>
            <param name="mode"> Input mode string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.IsActive(System.String)">
            <summary>Returns true if the mode is registered and active; otherwise, returns false.</summary>
            <param name="mode"> Input custom OSNAP mode string</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.LocalModeString">
            <summary>Returns the local custom OSNAP keyword string the user must type; this is the actual text string that AutoCAD point acquisition and running OSNAP modes will recognize.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.GlobalModeString">
            <summary>Returns the global custom OSNAP keyword string that user must type in which is the actual text string which AutoCAD point acquisition and running OSNAP modes will recognize.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.Glyph">
            <summary>Returns the custom glyph. Returns NULL if a custom glyph is not used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.ToolTipText">
            <summary>This method returns the OSNAP mode glyph and default tooltip string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.GlyphSize">
            <summary>Returns the size of the glyph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.Bitmap">
            <summary>Gets the bitmap used as osnap menu item icon.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode.DisplayString">
            <summary>Gets the display string. If no display string is set, local mode string will be used as the menu item string.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SecurityParameters">
            <summary>
This .NET class wraps the SecurityParams ObjectARX struct.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.op_Inequality(Autodesk.AutoCAD.DatabaseServices.SecurityParameters,Autodesk.AutoCAD.DatabaseServices.SecurityParameters)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.op_Equality(Autodesk.AutoCAD.DatabaseServices.SecurityParameters,Autodesk.AutoCAD.DatabaseServices.SecurityParameters)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input System.IFormatProvider object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.Action">
            <summary>Accesses the.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.Password">
            <summary>Returns the password, formatted as a zero-terminated "wide-char" string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.ProviderName">
            <summary>Returns the name of the cryptography provider.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.Algorithm">
            <summary>Returns the algorithm identifier; must be SECURITYPARAMS_ALGID_RC4.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.Subject">
            <summary>Returns the name of the certificate (digital ID) subject.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.Issuer">
            <summary>Returns the name of the certificate (digital ID) issuer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.SerialNumber">
            <summary>Returns the serial number of the certificate (digital ID).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.Comment">
            <summary>Returns the comment to be included with the signature.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SecurityParameters.TimeServer">
            <summary>Returns the name of the time server used for timestamping. The name must be provided as a wide-char string in the format “Description(server_name)”. An example is “Natl Inst of Standards and Technology(time.nist.gov)”.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellRange">
            <summary>
This class represents ranges of table cells.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CellRange.op_Equality(Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Returns true if the values within the two cells (each row and column) is equal.</summary>
            <param name="t1"> Input Autodesk.AutoCAD.DatabaseServices.CellRange object for left operator.</param>
            <param name="t2"> Input Autodesk.AutoCAD.DatabaseServices.CellRange object for right operator.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CellRange.op_Inequality(Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Returns true if the two cells do not match.</summary>
            <param name="t1"> Input Autodesk.AutoCAD.DatabaseServices.CellRange object for left operator.</param>
            <param name="t2"> Input Autodesk.AutoCAD.DatabaseServices.CellRange object for right operator.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CellRange.Equals(System.Object)">
            <summary>Returns true if the two CellRange objects match.</summary>
            <param name="pRange"> Input range to check against.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CellRange.GetHashCode">
            <summary>Returns a hash code for the specific cell.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.TopRow">
            <summary>Returns the index of the top row.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.LeftColumn">
            <summary>Returns the index of the left column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.BottomRow">
            <summary>Returns the index of the bottom row.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.RightColumn">
            <summary>Returns the index of the right column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.TopLeft">
            <summary>Returns the Cell in the top left.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.BottomRight">
            <summary>Returns the Cell from the bottom row.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GripData">
            <summary>
This .NET class wraps the ObjectARX class GripData class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripData.OnRightClick(Autodesk.AutoCAD.DatabaseServices.GripDataCollection,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This is OnRightClick, a member of class GripData.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripData.GetTooltip">
            <summary>This .NET method wraps the ObjectARX method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripData.GetHoverDimensionData(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Double)">
            <summary>This is GetHoverDimensionData, a member of class GripData.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripData.GetHotGripDimensionData(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Double)">
            <summary>This is GetHotGripDimensionData, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.GripPoint">
            <summary>This is GripPoint, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.AlternateBasePoint">
            <summary>This is AlternateBasePoint, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.SkipWhenShared">
            <summary>This is SkipWhenShared, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.RubberBandLineDisabled">
            <summary>This is RubberBandLineDisabled, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.ModeKeywordsDisabled">
            <summary>This is ModeKeywordsDisabled, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.DrawAtDragImageGripPoint">
            <summary>This is DrawAtDragImageGripPoint, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.TriggerGrip">
            <summary>This is TriggerGrip, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.ForcedPickOn">
            <summary>This is ForcedPickOn, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.HotGripInvokesRightClick">
            <summary>This is HotGripInvokesRightClick, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.GizmosEnabled">
            <summary>This is GizmosEnabled, a member of class GripData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripData.IsPerViewport">
            <summary>This is IsPerViewport, a member of class GripData.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayerStateManager">
            <summary>
This .NET class wraps the AcDbLayerStateManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.#ctor(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Database to be used by the new layer state manager object.</summary>
            <param name="database"> Database association constructor.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStatesDictionaryId(System.Boolean)">
            <summary>
Returns ObjectId of the layer states extension dictionary (within the layer table extension dictionary) or ObjectId(NULL) if the database is Null, or if the symbol table is Null, or if the layer table extension dictionary or the layer states extension dictionary is Null (and createIfNotPresent is false), or if the layer table extension dictionary or layer states extension dictionary cannot be created (and createIfNotPresent is true), or if the layer table extension dictionary cannot be opened for read.</summary>
            <param name="createIfNotPresent"> Input flag controlling dictionary creation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.HasLayerState(System.String)">
            <summary>Checks if the layer state name is present and returns true if so, and false otherwise.</summary>
            <param name="name"> Input layer state name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.SetLayerStateMask(System.String,Autodesk.AutoCAD.DatabaseServices.LayerStateMasks)">
            <summary>Updates the mask used when restoring a layer state.</summary>
            <param name="name"> Input name of layer state to mask</param>
            <param name="mask"> Input mask to apply to layer state</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.GetLayerStateMask(System.String)">
            <summary>Gets the mask for the named layer state.</summary>
            <param name="name"> Input layer state name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.DeleteLayerState(System.String)">
            <summary>Deletes the specified layer state.</summary>
            <param name="name"> Input layer state name to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.RenameLayerState(System.String,System.String)">
            <summary>Renames the layer state name to be newName.</summary>
            <param name="name"> Input existing layer state name</param>
            <param name="newName"> Input new layer state name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.ImportLayerState(System.String)">
            <summary>ImportLayerState() reads the passed-in filename (saved by a previous export) and extracts layer states to import. If an import file layer state has the same name as a layer state already existing in the drawing, the imported layer state is ignored. If an import file layer state name is not found in the drawing, it is created in the drawing. If any newly-created layer states refer to layers which are nonexistent in the drawing, the layers are created using default settings.</summary>
            <param name="fileName"> Input file to extract layer states from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.ExportLayerState(System.String,System.String)">
            <summary>ExportLayerState() reads the passed-in layer state name and exports the corresponding layer state to the export file. The layer state name must be passed with a single 0 after the name.</summary>
            <param name="nameToExport"> Input layer state name to export</param>
            <param name="fileName"> Input filename to export layer state to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.SaveLayerState(System.String,Autodesk.AutoCAD.DatabaseServices.LayerStateMasks,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Saves the current state of the layer table to the layer state specified by name. This function also captures the VPLAYER settings for the viewport specified. Specify Null for the id argument to capture a layer state without VPLAYER settings.</summary>
            <param name="name"> Input name of layer state to save</param>
            <param name="mask"> Input mask to apply to layer state</param>
            <param name="id"> Input object ID of the viewport whose VPLAYER setting is to be captured</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.RestoreLayerState(System.String,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32,Autodesk.AutoCAD.DatabaseServices.LayerStateMasks)">
            <summary>Restores the layer state name and the VPLAYER settings for the viewport specified. Also restores attributes specified in clientMask.</summary>
            <param name="name"> Input name of layer state to make current</param>
            <param name="id"> Input object ID of the viewport whose VPLAYER setting is to be updated with the viewport data stored</param>
            <param name="undefinedLayerStatePolicy"> Input value that indicates whether to handle undefined layers</param>
            <param name="clientMask"> Input layer attribute mask</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.SetLayerStateDescription(System.String,System.String)">
            <summary>Sets an arbitrary description string on the layer state.</summary>
            <param name="name"> Input layer state whose description is to be updated</param>
            <param name="description"> Input description string up to 255 characters</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.GetLayerStateDescription(System.String)">
            <summary>Retrieves the description set by SetLayerStateDescription().</summary>
            <param name="name"> Input layer state whose description is to be retrieved</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateHasViewportData(System.String)">
            <summary>Returns a Boolean indicating whether the given layer state has viewport data associated with it. A layer state has viewport data if SaveLayerState() was called with a non-null id parameter.</summary>
            <param name="name"> Input layer state to be interrogated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.ImportLayerStateFromDb(System.String,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Imports the layer state name passed in name from the open drawing file pointer passed in database. This method will also import linetypes, materials and plot styles that are saved in the imported layer state but are missing in the current drawing. This method allows importing of layer states directly from drawing files rather than having to export to an .LAS file format in order to import a layer state.</summary>
            <param name="name"> Input the name of the layer state to be imported</param>
            <param name="database"> Input a pointer to a valid, readable database from which the layer state is to be imported.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.GetLayerStateNames(System.Boolean,System.Boolean)">
            <summary>
Gets an array of the names of all the layer states.</summary>
            <param name="bIncludeHidden"> Input flag to include names of hidden layer states in array.</param>
            <param name="bIncludeXref"> Input flag to include XRefs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.GetLayerStateLayers(System.String,System.Boolean)">
            <summary>
Gets an array of the names of all the layers that are saved in a layer state. If bInvert is true, the array will contain the names of the layers in the current drawing that are NOT saved in the layer state.</summary>
            <param name="name"> Input the name of the layer state to query</param>
            <param name="bInvert"> Input if true, the returned array will contain the names of the layers in the current drawing that are NOT saved in the layer state.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.CompareLayerStateToDb(System.String,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Compares the layer values saved in a layer state to the current layer values in the drawing. This method compares everything except layer description. This method can also use VPLAYER and override settings of a viewport for comparison of visibility and overridable properties. Specify Null for the idVp argument to ignore viewport settings.</summary>
            <param name="name"> Input name of layer state to be compared to the drawing.</param>
            <param name="idVp"> Input object ID of the viewport whose VPLAYER settings are to be used when comparing.</param>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateCreated">
            <summary>Event if the layer state is created.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateCompareFailed">
            <summary>Event if the layer state compare failed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateToBeRestored">
            <summary>Event if the layer state is about to be restored.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateRestored">
            <summary>Event if the layer state is restored.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.AbortLayerStateRestore">
            <summary>Event if the layer state restore process is aborted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateToBeDeleted">
            <summary>Event if the layer state is about to be deleted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateDeleted">
            <summary>Event if the layer state is deleted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.AbortLayerStateDelete">
            <summary>Event if the layer state delete process is aborted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateToBeRenamed">
            <summary>Event if the layer state is about to be renamed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LayerStateRenamed">
            <summary>Event if the layer state is renamed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.AbortLayerStateRename">
            <summary>Event if the layer state rename process is aborted.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerStateManager.LastRestoredLayerState">
            <summary>Accesses the last layer state which was restored.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayoutEventArgs">
            <summary>
This class provides data for various events of the LayoutManager class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutEventArgs.Id">
            <summary>Accesses the object ID of the layout that is changing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutEventArgs.Name">
            <summary>Accesses the name of the layout that is changing.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventArgs">
            <summary>
This class provides data for LayoutRenamed event of the LayoutManager class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventArgs.Id">
            <summary>Accesses the object ID of the layout that is changing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventArgs.Name">
            <summary>Accesses the name of the layout that is changing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventArgs.NewName">
            <summary>Accesses the new name of the layout.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventArgs">
            <summary>
This class provides data for LayoutCopied event of the LayoutManager class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventArgs.Id">
            <summary>Accesses the object ID of the layout that is copied.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventArgs.NewId">
            <summary>Accesses the object ID of the new layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventArgs.Name">
            <summary>Accesses the name of the layout that is copied.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventArgs.NewName">
            <summary>Accesses the name of the new layout.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotStyleTableChangedEventArgs">
            <summary>
This class provides data for PlotStyleTableChanged event of the LayoutManager class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotStyleTableChangedEventArgs.Id">
            <summary>Accesses the object ID of the layout that is changing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotStyleTableChangedEventArgs.NewName">
            <summary>Accesses the name of the plot style table that is newly associated with the layout denoted by Id.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.RXClass">
            <summary>
This .NET class wraps the AcRxClass ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXClass.AddX(Autodesk.AutoCAD.Runtime.RXClass,Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>Adds the class protocol extension object protocolObject into the protocol extension object dictionary of Class object. The search key is protocolClass, which is the Class object for the class of protocolObject. The value is the protocol object protocolObject.</summary>
            <param name="runtimeClass"> Input object for the protocol extension class.</param>
            <param name="protocolExtension"> Input protocol extension object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXClass.GetX(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>Returns the protocol extension object stored with the key protocolClass. If there is no such object specific to the class represented by this Class object, then the protocol extension object for the parent class is used, or its parent class, or on up the hierarchy as far as needed to obtain the protocol extension object sought.</summary>
            <param name="runtimeClass"> Input object for the protocol extension class.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXClass.DelX(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>Searches the Class object's protocol extension dictionary for an entry with the key protocolClass, and if found, removes the entry. If an entry is found and removed, the protocol extension object removed is returned; otherwise NULL is returned.</summary>
            <param name="runtimeClass"> Input object for the protocol extension class.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXClass.QueryX(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>Returns the protocol extension object stored with the key protocolClass. If there is no such object specific to the class represented by this Class object, then the protocol extension object for the parent class is used, or its parent class, or on up the hierarchy as far as needed to obtain the protocol extension object sought.</summary>
            <param name="runtimeClass"> Input Autodesk.AutoCAD.Runtime.RXClass object for the protocol extension class.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXClass.IsDerivedFrom(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>When an object's isKindOf() method is called, its associated Class object's isDerivedFrom() is called to make the determination. A recursive search up the parent class chain will be made if need be.</summary>
            <param name="runtimeClass"> Input object for the desired base class.</param>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.RXClass.EntityAlignment">
            <summary>Automatically aligns block instances to adjacent objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXClass.Create">
            <summary>This function creates a new instance of the C++ class that this RxClass object represents.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXClass.GetRuntimeType">
            <summary>This is GetRuntimeType, a member of class RXClass.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RXClass.AppName">
            <summary>Returns the application name string which is the last parameter in the ACRX_DXF_DEFINE_MEMBERS macro and is also the last parameter to the global newClass() pseudo-constructor. This string is used as the application identifier in the error dialog that is displayed whenever an object of the class is loaded and the application is not present.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RXClass.DxfName">
            <summary>Returns the DXF name for the class. This string is only required to be non-NULL for classes derived from DBObject. Other classes may set this via the second to the last parameter of the global newClass() pseudo-constructor. If the dxfName string has not been set, then this function will return NULL.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RXClass.Name">
            <summary>Returns a string that is the name of the C++ class represented by this Class object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RXClass.ClassVersion">
            <summary>Returns DWG_VERSION and MAINTENANCE_VERSION, which must be specified when the class is registered. These are mandatory, and there is no default. The data members are not persistent; in other words, they are not written to the DWG/DXF files.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RXClass.ProxyFlags">
            <summary>Returns the value which was set as the third parameter to either the global newClass() pseudo-constructor or the ACRX_DXF_DEFINE_MEMBERS macro.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RXClass.MyParent">
            <summary>Returns the Class object associated with the base class of the class that is represented by the Class object on which this method is called.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.DynamicLinker">
            <summary>
This .NET class wraps the AcRxDynamicLinker ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.LoadModule(System.String,System.Boolean,System.Boolean)">
            <summary>
Loads the fileName ObjectARX program. fileName is the application name as set in the operating system registry. If the ObjectARX application does not have an entry in the registry, or if the registry entry has the AcadApp.LoadDisabled load reason set, or if any of the the LoadReasons in reasons do not match the LoadReasons in the application's registry entry, then this function will be unable to load the application..</summary>
            <param name="fileName"> Input name of the file to load.</param>
            <param name="printIt"> Input indicating whether or not to print load status message.</param>
            <param name="asCmd"> Input indicating whether to load the application as if by user command.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.UnloadModule(System.String,System.Boolean)">
            <summary>
Unloads the fileName ObjectARX program. fileName is the application name as set in the operating system registry. If the ObjectARX application was not loaded via the DynamicLinker.loadApp() method or through the demand loading mechanism (all of which use the system registry entry for the application), then this function will be unable to unload the application..</summary>
            <param name="fileName"> Input null-terminated string which is the file name of the program to unload.</param>
            <param name="asCmd"> Input indicating whether to unload the application as if by user command.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.IsModuleLoaded(System.String)">
            <summary>Returns true if the module is successfully found and loaded; otherwise, returns false.</summary>
            <param name="fileName"> Input name of the file to load.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.GetLoadedModules">
            <summary>Retrieves the loaded modules.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.LoadApp(System.String,System.Boolean,System.Boolean)">
            <summary>
Loads the appName ObjectARX program. appName is the application name as set in the operating system registry. If the ObjectARX application does not have an entry in the registry, or if the registry entry has the AcadApp.LoadDisabled load reason set, or if any of the the LoadReasons in reasons do not match the LoadReasons in the application's registry entry, then this function will be unable to load the application..</summary>
            <param name="appName"> Input null-terminated string which is the application name (as set in the system registry) of the ObjectARX module to load</param>
            <param name="printIt"> Input indicating whether or not to print load status message.</param>
            <param name="asCmd"> Input indicating whether to load the application as if by user command.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.UnloadApp(System.String,System.Boolean)">
            <summary>
Unloads the appName ObjectARX program. appName is the application name as set in the operating system registry. If the ObjectARX application was not loaded via the DynamicLinker.LoadApp() method or through the demand loading mechanism (all of which use the system registry entry for the application), then this function will be unable to unload the application..</summary>
            <param name="appName"> Input null-terminated string which is the application name (as set in the system registry) of the ObjectARX module to unload.</param>
            <param name="asCmd"> Input indicating whether to unload the application as if by user command.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.IsApplicationLocked(System.String)">
            <summary>Indicates whether the moduleName application is locked and cannot be unloaded, or is unlocked and can be successfully unloaded.</summary>
            <param name="moduleName"> Input name of loaded ObjectARX program.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.IsAppMdiAware(System.String)">
            <summary>Determines if an application already loaded is MDI aware. Returns true if the application is MDI aware or false otherwise.</summary>
            <param name="moduleName"> Input name of the module to check.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.IsAppBusy(System.String)">
            <summary>For internal use.</summary>
            <param name="moduleName"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinker.SetAppBusy(System.String,System.Boolean)">
            <summary>
For internal use..</summary>
            <param name="moduleName"> Input.</param>
            <param name="busyFlag"> Input.</param>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.DynamicLinker.ModuleLoading">
            <summary>Occurs when the dynamic linker is loading an application module. Notification occurs before the program file has been loaded.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.DynamicLinker.ModuleLoaded">
            <summary>Occurs when the dynamic linker has successfully finished loading an application module. Notification occurs after the program file has been loaded, it has initialized, and any classes it has registered have been added to the runtime system.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.DynamicLinker.ModuleLoadAborted">
            <summary>Occurs when the dynamic linker aborts an unsuccessful attempt to load an application module.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.DynamicLinker.ModuleUnloading">
            <summary>Occurs when the dynamic linker is unloading an application module.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.DynamicLinker.ModuleUnloaded">
            <summary>Occurs when the dynamic linker has successfully finished unloading an application module.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.DynamicLinker.ModuleUnloadAborted">
            <summary>Occurs when the dynamic linker aborts an unsuccessful attempt to unload an application module.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.DynamicLinker.ProductLcid">
            <summary>Returns the ProductLcid property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.DisposableWrapper">
            <summary>
This class implements the IDisposable interface and is the common base class for all ObjectARX managed wrapper classes. It provides the wrapper that creates a managed object from an unmanaged ObjectARX pointer. It also provides access to a wrapper object's underlying unmanaged pointer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DisposableWrapper.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DisposableWrapper.op_Inequality(Autodesk.AutoCAD.Runtime.DisposableWrapper,Autodesk.AutoCAD.Runtime.DisposableWrapper)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DisposableWrapper.op_Equality(Autodesk.AutoCAD.Runtime.DisposableWrapper,Autodesk.AutoCAD.Runtime.DisposableWrapper)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DisposableWrapper.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.DisposableWrapper.UnmanagedObject">
            <summary>Returns the UnmanagedObject property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.DisposableWrapper.IsDisposed">
            <summary>Returns the IsDisposed property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.DisposableWrapper.AutoDelete">
            <summary>Returns the AutoDelete property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Variables">
            <summary>
A singleton instance of this collection represents all variables in the system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Variables.GetAllNames">
            <summary>Retrieves the names of all variables currently registered in the system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Variables.GetEnumerator">
            <summary>Returns an object that implements the System.Collections.IEnumerator interface that can iterate through the Variable objects within this Variables collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Variables.Reset(Autodesk.AutoCAD.Runtime.Variable.StorageType)">
            <summary>Resets variables in this collection, filtered by "filter", to their default values.</summary>
            <param name="filter"> Strorage type of variable to reset.</param>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.Variables.Changed">
            <summary>Event fired when variables changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.Variables.Changing">
            <summary>Event fired when variables changing.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Variable">
            <summary>
Represents a variable in the system. Variables are a convenient way to advertise arbitrary state to other parts of the system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Variable.#ctor(System.IntPtr,System.Boolean)">
            <summary>
This is Variable, a member of class Variable.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Variable.Reset">
            <summary>Resets this variable to its default value. Observers are notified.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.Variable.Changed">
            <summary>Event fired when the variable changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Runtime.Variable.Changing">
            <summary>Event fired when variable changing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.Value">
            <summary>Gets or sets the value of the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.IsReadOnly">
            <summary>Gets or sets a value indicating whether the variable is read-only, true if the variable is read-only; false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.IsLocked">
            <summary>Gets a value indicating whether the variable is locked by a CAD Administrator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.Name">
            <summary>Gets the name of the variable in a String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.PrimaryType">
            <summary>Gets the primary data type of the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.SecondaryType">
            <summary>Gets the secondary data type of the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.Storage">
            <summary>Gets the StorageType enum value that reprents the storage type of the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.TypeFlags">
            <summary>Gets the type flags of the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Variable.Range">
            <summary>Gets the RangeInfo object that provides the valid range of the variable or NULL if no range restriction was specified.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.WrapperAttribute">
            <summary>
This class defines an attribute that identifies the corresponding wrapped ObjectARX class or member.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.WrapperAttribute.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="wrappedClass"> Input.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.WrapperAttribute.WrappedClass">
            <summary>Returns the WrappedClass property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LineWeightConverter">
            <summary>
This class is used to convert lineweights.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LineWeightConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns true if sourceType can be converted to this type.</summary>
            <param name="context"> Input context with which to handle source</param>
            <param name="sourceType"> Input source type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LineWeightConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Returns the converted object.</summary>
            <param name="context"> Input context to convert within</param>
            <param name="culture"> Input culture to convert within</param>
            <param name="value"> Input object to convert from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LineWeightConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>This method is used to convert a string to a LineWeight value. It attempts to interpret value as a System.String object. If successful, it attempts to find a matching string in the LineWeight enum. If a match is found, this method returns the matching LineWeight value. If no match is found, this method throws a FormatException exception. If value cannot be cast to a System.String object, this method calls the superclass version of this method.</summary>
            <param name="context"> Input context within which to handle value</param>
            <param name="culture"> Input culture within which to handle value</param>
            <param name="value"> Input value to process</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnitsConverter">
            <summary>
This class implements the System.ComponentModel.TypeConverter interface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnitsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns true if the object can be converted within the context.</summary>
            <param name="context"> Input context to convert with</param>
            <param name="sourceType"> Input source type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnitsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>This method is used to convert a string to a Units value. It attempts to interpret value as a System.String object. If successful, it attempts to find a matching string in the Unit enum. If a match is found, this method returns the matching Unit value. If no match is found, this method throws a FormatException exception. If value cannot be cast to a System.String object, this method calls the superclass version of this method.</summary>
            <param name="context"> Input context to convert within</param>
            <param name="culture"> Input culture to convert within</param>
            <param name="value"> Input object to convert from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnitsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Returns the result of converting value to destinationType in the specified culture and context.</summary>
            <param name="context"> Input System.ComponentModel.ITypeDescriptorContext object.</param>
            <param name="culture"> Input System.Globalization.CultureInfo object.</param>
            <param name="value"> Input.</param>
            <param name="destinationType"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnitsConverter.GetConversionFactor(Autodesk.AutoCAD.DatabaseServices.UnitsValue,Autodesk.AutoCAD.DatabaseServices.UnitsValue)">
            <summary>Computes the conversion factor between the block's units and the current drawing's units.</summary>
            <param name="from"> Input Autodesk.AutoCAD.DatabaseServices.UnitsValue object to be converted.</param>
            <param name="to"> Input Autodesk.AutoCAD.DatabaseServices.UnitsValue object converted to</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnitsValue">
            <summary>
This .NET class wraps AcDb::UnitsValue ObjectARX class. It indicates the type of units of length measure used by the drawing.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Exception">
            <summary>
This class provides a container for an ObjectARX Acad.ErrorStatus enumerator value.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Exception.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Exception.ErrorStatus">
            <summary>Returns the ErrorStatus property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.ErrorStatus">
            <summary>
Defines Acad error statuses.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Interop">
            <summary>
This class provides interoperability capabilities for managed classes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.Check(System.Int32)">
            <summary>Checks returnValue and throws an exception if it does not equal to the reference object.</summary>
            <param name="returnValue"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.CheckAdsForCancel(System.Int32)">
            <summary>This method returns true if returnValue is RTNORM or RTNONE, or false if it is RTCAN. If returnValue is any other value, this method throws an eInvalidInput exception.</summary>
            <param name="returnValue"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.CheckAds(System.Int32)">
            <summary>This method throws an InvalidInput exception if returnValue is anything other than RTNORM.</summary>
            <param name="returnValue"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.CheckBool(System.Boolean)">
            <summary>
This method throws System.InvalidOperationException if returnValue is false.</summary>
            <param name="returnValue"> Input System.Boolean object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.CheckBoolean(System.Int32)">
            <summary>This method throws System.InvalidOperationException if returnValue evaluates to false.</summary>
            <param name="returnValue"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.CheckNull(System.IntPtr)">
            <summary>If returnValue is null (or System.IntPtr.Zero), this method throws System.NullReferenceException.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.ThrowExceptionForErrorStatus(System.Int32)">
            <summary>This method throws a new Autodesk.AutoCAD.Runtime.Exception> exception.</summary>
            <param name="errorStatus"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.SetAutoDelete(Autodesk.AutoCAD.Runtime.DisposableWrapper,System.Boolean)">
            <summary>
Sets a Boolean indicating whether the given wrapper object owns the underlying unmanaged resource. When the wrapper owns the resource the Dispose method will delete the resource.</summary>
            <param name="obj"> Input Autodesk.AutoCAD.Runtime.DisposableWrapper object. The wrapper.</param>
            <param name="value"> Input System.Boolean object. Boolean that is true if the wrapper is to own the object; otherwise, false.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.AttachUnmanagedObject(Autodesk.AutoCAD.Runtime.DisposableWrapper,System.IntPtr,System.Boolean)">
            <summary>
Attaches the wrapper to an unmanaged resource. The wrapper must be compatible with the unmanaged resource.</summary>
            <param name="obj"> Input Autodesk.AutoCAD.Runtime.DisposableWrapper object. The wrapper.</param>
            <param name="unmanagedPointer"> Input System.IntPtr object. The unmanaged resource.</param>
            <param name="autoDelete"> Input System.Boolean object. Boolean indicating whether the given wrapper object owns the underlying unmanaged resource. When the wrapper owns the resource the Dispose method will delete the resource.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Interop.DetachUnmanagedObject(Autodesk.AutoCAD.Runtime.DisposableWrapper)">
            <summary>Detaches the wrapper from the underlying unmanaged resource.</summary>
            <param name="obj"> Input Autodesk.AutoCAD.Runtime.DisposableWrapper object. The wrapper.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.ExtensionApplicationAttribute">
            <summary>
This class defines a custom attribute that marks an assembly as an ObjectDBX/AutoCAD extension. The type that this attribute represents must implement the IExtensionApplication interface. When the assembly is loaded, this attribute is used to create an instance of the application's entry point type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.ExtensionApplicationAttribute.Type">
            <summary>Returns the Type property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.SecuredApplicationAttribute">
            <summary>
This attribute is used to grant access to ObjectDBX. It encapsulates information about the caller's license and digital signature, as well as Autodesk's signature. ObjectDBX APIs query this assembly-level attribute to verify that the caller is properly licensed.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SecuredApplicationAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="license"> Input license</param>
            <param name="ourSignature"> Input signature</param>
            <param name="clientSignature"> Input client signature</param>
            <param name="clientPublicKey"> Input the client's public key</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SecuredApplicationAttribute.License">
            <summary>Returns the License property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SecuredApplicationAttribute.OurSignature">
            <summary>Returns the base64 encoded digital signature computed over the license.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SecuredApplicationAttribute.ClientSignature">
            <summary>Returns the ClientSingature property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SecuredApplicationAttribute.ClientPublicKey">
            <summary>Returns the ClientPublicKey property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectTypeAttribute">
            <summary>
This class reports the type of an object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectTypeAttribute.#ctor(System.Type)">
            <summary>Creates a new object based on an existing type.</summary>
            <param name="type"> Object type</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectTypeAttribute.ObjectType">
            <summary>Accesses the object type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnitType">
            <summary>
This .NET class wraps the AcValue::UnitType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Tolerance">
            <summary>
This .NET class wraps AcGeTol ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Tolerance.#ctor(System.Double,System.Double)">
            <summary>Constructs an object with the given vector and point.</summary>
            <param name="equalVector"> Input default vector</param>
            <param name="equalPoint"> Input default point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Tolerance.EqualPoint">
            <summary>Returns EqualPoint tolerance.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Tolerance.EqualVector">
            <summary>Returns equalVector tolerance.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Tolerance.Global">
            <summary>Returns the Global property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Matrix2d">
            <summary>
This .NET class wraps the AcGeMatrix2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.#ctor(System.Double[])">
            <summary>This constructor creates a 2D matrix based on values in an array.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Multiply(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Multiplies this object with Matrix2d object.</summary>
            <param name="matrix"> Input matrix to multiply</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.PreMultiplyBy(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Sets this matrix to the product leftSide * (this matrix). Returns a reference to this matrix.</summary>
            <param name="leftSide"> Input left side of matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.PostMultiplyBy(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Sets this matrix to the product (this matrix) * rightSide. Returns a reference to this matrix.</summary>
            <param name="rightSide"> Input right side of matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Inverse">
            <summary>Returns inverse of this matrix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsSingular">
            <summary>This method calls Matrix2d.IsSingular(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsSingular(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if either of the vectors e0, e1 returned by the function getCoordSystem(origin,e0,e1) has zero length, or if these vectors are parallel.</summary>
            <param name="tolerance"> Input tolerance data value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Transpose">
            <summary>Returns the matrix that is the result of transposition of this matrix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsUniscaledOrtho">
            <summary>This method calls Matrix2d.IsUniscaledOrtho(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsUniscaledOrtho(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the columns of the linear part of this matrix are perpendicular to each other as 2D vectors and these two vectors have equal length.</summary>
            <param name="tolerance"> Input tolerance data value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsScaledOrtho">
            <summary>This method calls Matrix2d.IsScaledOrtho(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsScaledOrtho(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the columns of the linear part of this matrix are perpendicular to each other as 2D vectors,. Returns false otherwise.</summary>
            <param name="tolerance"> Input tolerance data value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.GetScale">
            <summary>Returns scale factor of matrix. The returned scale is the square root of the maximum length of the two column vectors.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.GetDeterminant">
            <summary>Returns the determinant of the matrix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsConformal(Autodesk.AutoCAD.Geometry.Matrix2dInfo)">
            <summary>Returns true if the columns of the linear part of this matrix are perpendicular to each other as 2D vectors and these two vectors have equal length. Returns false otherwise.</summary>
            <param name="info"> Input matrix to check with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Displacement(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns the displacement vector.</summary>
            <param name="vector"> Input vector to calculate displacement from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Rotation(System.Double,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the matrix of the rotation by angle angle around the point center.</summary>
            <param name="angle"> Input rotation angle</param>
            <param name="center"> Input center of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Scaling(System.Double,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the matrix of uniform scaling by scale factor scaleAll with respect to the point center.</summary>
            <param name="scaleAll"> Input scale factor</param>
            <param name="center"> Input origin of the scale</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Mirroring(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Returns the matrix of mirroring with respect to line.</summary>
            <param name="line"> Input the mirror line</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Mirroring(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the matrix of mirroring with respect to point. This is the same as central symmetry with a center point.</summary>
            <param name="point"> Input point that defines the mirror line</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.AlignCoordinateSystem(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns matrix that maps the coordinate system with the origin fromOrigin and the axes fromE0 and fromE1 to the coordinate system with the origin toOrigin and the axes toE0 and toE1.</summary>
            <param name="fromOrigin"> Input point that defines the origin of the from coordinate system</param>
            <param name="fromE0"> Input vector that defines the x axis of the from coordinate system</param>
            <param name="fromE1"> Input vector that defines the y axis of the from coordinate system</param>
            <param name="toOrigin"> Input point that defines the origin of the to coordinate system</param>
            <param name="toE0"> Input vector that defines the x axis of the to coordinate system</param>
            <param name="toE1"> Input vector that defines the y axis of the to coordinate system</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.Equals(System.Object)">
            <summary>Returns true if each column of this matrix is equal to the corresponding object matrix column.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>This method calls Matrix2d.IsEqualTo(Matrix2d a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input matrix to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Matrix2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if each column of this matrix is equal to the corresponding column of the matrix mat as vectors. Returns false otherwise.</summary>
            <param name="a"> Input matrix to compare against</param>
            <param name="tolerance"> Input tolerance data value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.op_Inequality(Autodesk.AutoCAD.Geometry.Matrix2d,Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.op_Equality(Autodesk.AutoCAD.Geometry.Matrix2d,Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.op_Multiply(Autodesk.AutoCAD.Geometry.Matrix2d,Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Returns matrices a times b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="format"> Input format</param>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2d.ToArray">
            <summary>This method returns this matrix as a 1-dimensional array containing 9 elements of type System.Double. The array elements store the matrix row (rn) and column (cn) indices in the following order:.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix2d.Translation">
            <summary>Returns the translation part of this matrix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix2d.CoordinateSystem2d">
            <summary>This function returns the origin and axes of the coordinate system to which this matrix maps the coordinate system with the origin (0, 0) and axes (1, 0) and (0,1).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Line2d">
            <summary>
This .NET class wraps the AcGeLine2d ObjectARX class. It represents an unbounded line in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs an unbounded line that passes through point1 and point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input any 2D point</param>
            <param name="point2"> Input any 2D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructs an unbounded line that passes through point and has a direction of vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="vector"> Input any 2D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2d.#ctor">
            <summary>Default constructor. Constructs an unbounded line that is coincident with the X axis.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Changes the definition of the line to pass through point1 and point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input any 2D point</param>
            <param name="point2"> Input any 2D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Changes the definition of the line to pass through point in the direction of vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="vector"> Input any 2D vector</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Vector2d">
            <summary>
This .NET class wraps the AcGeVector2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.#ctor(System.Double[])">
            <summary>Creates a vector at the origin.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.#ctor(System.Double,System.Double)">
            <summary>Constructs a 2D vector with coordinates x and y correspondingly.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.TransformBy(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Transform this pre-multiplying it the matrix leftSide.</summary>
            <param name="leftSide"> Input 2D matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.RotateBy(System.Double)">
            <summary>Returns 2D vector which is the result of rotation of this vector. Rotation angle is given by the argument angle, where the positive direction of rotation is considered from X axis to Y axis.</summary>
            <param name="angle"> Input rotation angle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.Mirror(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns the 2D vector which is the result of mirroring of this vector with respect to 2D line line in the same plane.</summary>
            <param name="line"> Input any 2D line</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.Add(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Adds this vector with v.</summary>
            <param name="v"> Input vector to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.Subtract(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Subtracts object v from this vector.</summary>
            <param name="v"> Input value to subtract by</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.DivideBy(System.Double)">
            <summary>Divides value by this vector.</summary>
            <param name="value"> Input value to divide by</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.MultiplyBy(System.Double)">
            <summary>Read-only.</summary>
            <param name="value"> Input value to multiply by</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.Negate">
            <summary>Negates this vector, namely sets it to be equal to the vector (-x, -y).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.GetPerpendicularVector">
            <summary>Returns a vector orthogonal to this vector, namely the vector ( -y, x).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.GetAngleTo(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns the angle between this vector and the vector vector in the range [0, Pi].</summary>
            <param name="vector"> Input vector to get angle to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.GetNormal">
            <summary>This method calls Vector2d.GetNormal(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.GetNormal(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the unit vector codirectional to this vector. The vector is not normalized if its length is less than tolerance.equalVector(), in which case the returned vector is the same as this vector.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsUnitLength">
            <summary>This method calls Vector2d.IsUnitLength(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsUnitLength(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if this vector is equal to its normalization. Returns false otherwise.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsZeroLength">
            <summary>This method calls Vector2d.IsZeroLength(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsZeroLength(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if this vector is equal to zero vector. Returns false otherwise.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsParallelTo(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>This method calls Vector2d.IsParallelTo(Vector2d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsParallelTo(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this vector is parallel to the vector vector. Namely, it checks if after normalization (and negation in case of negative dot product with the vector vector) this vector is within the distance tolerance.equalVector() from the normalization of the vector vector.</summary>
            <param name="vector"> Input vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsCodirectionalTo(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>This method calls Vector2d.IsCodirectionalTo(Vector2d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsCodirectionalTo(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This function checks if this vector is codirectional to the vectorv vec. Namely, it checks if after normalization this vector is within the distance tolerance.equalVector() from the normalization of the vector vec.</summary>
            <param name="vector"> Input vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>This method calls Vector2d.IsPerpendicularTo(Vector2d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this vector is perpendicular to the vector vector. Namely, it checks if after normalization the dot product of this vector with the normalization of the vector vector is less than tolerance.equalVector() in absolute value.</summary>
            <param name="vector"> Input vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>This method calls Vector2d.IsEqualTo(Vector2d vector, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="vector"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this vector is within the distance tolerance.equalVector() from the vector vector.</summary>
            <param name="vector"> Input vector</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.DotProduct(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns the dot product of this vector and the vector v.</summary>
            <param name="v"> Input vector to perform the dot product with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.Equals(System.Object)">
            <summary>Returns true if this object is equal to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.op_Inequality(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.op_Equality(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.op_Multiply(Autodesk.AutoCAD.Geometry.Matrix2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns the vector equal to the product of matrix a and vector b. The order of multiplication is matrix * vector, where vectors are considered as columns.</summary>
            <param name="a"> Input matrix</param>
            <param name="b"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.op_Multiply(System.Double,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Returns the vector equal to a multiplied by scale factor factor.</summary>
            <param name="factor"> Input scale factor</param>
            <param name="a"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.op_Multiply(Autodesk.AutoCAD.Geometry.Vector2d,System.Double)">
            <summary>Returns the vector equal to vector a multiplied by scale factor factor.</summary>
            <param name="a"> Input scale factor</param>
            <param name="factor"> Input vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="format"> Input format</param>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Vector2d.ToArray">
            <summary>Returns an array of type System.Double containing the X and Y coordinate values for this vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector2d.XAxis">
            <summary>Returns the XAxis property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector2d.YAxis">
            <summary>Returns the YAxis property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector2d.X">
            <summary>Returns the X property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector2d.Y">
            <summary>Returns the Y property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector2d.Angle">
            <summary>Returns the angle between this vector and X axis in the range [0, 2 * Pi].</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector2d.Length">
            <summary>Returns the Euclidian length of this vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Vector2d.LengthSqrd">
            <summary>Returns the square of the Euclidian length of this vector.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Extents2d">
            <summary>
This class encapsulates values of simple 2D extents used in layouts and plot settings.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This constructor creates a new 2D Extents using Point 2D values.</summary>
            <param name="minimum"> Input minimum extent</param>
            <param name="maximum"> Input maximum extent</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>This constructor creates a new 2D Extents using Double values.</summary>
            <param name="minX"> Minimum X extent</param>
            <param name="minY"> Minimum Y extent</param>
            <param name="maxX"> Maximum X extent</param>
            <param name="maxY"> Maximum Y extent</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.Extents2d)">
            <summary>This method compares this Extents2d object to a by calling the IsEqualTol(Extents2d a, Tolerance tolerance) overloaded method with tolerance set to Global.</summary>
            <param name="a"> Object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.Extents2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method compares this Extents2d object with a by testing the equivalency of their definition points. If the points match within the range specified by tolerance, this method returns true. Otherwise, it returns false.</summary>
            <param name="a"> Input object to compare</param>
            <param name="tolerance"> Input tolerance to be used</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.op_Inequality(Autodesk.AutoCAD.DatabaseServices.Extents2d,Autodesk.AutoCAD.DatabaseServices.Extents2d)">
            <summary>Returns true if a is not equivalent to b.</summary>
            <param name="a"> Left-hand operand</param>
            <param name="b"> Right-hand operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.op_Equality(Autodesk.AutoCAD.DatabaseServices.Extents2d,Autodesk.AutoCAD.DatabaseServices.Extents2d)">
            <summary>Returns true if a is equivalent to b.</summary>
            <param name="a"> Left-hand operand</param>
            <param name="b"> Right-hand operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider, displayed with a specific format. See the Microsoft .NET API documentation for details.</summary>
            <param name="format"> Input format to display</param>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents2d.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Extents2d.MinPoint">
            <summary>Accesses the minimum point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Extents2d.MaxPoint">
            <summary>Accesses the maximum point.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PlanarEntity">
            <summary>
This .NET class wraps the AcGePlanarEnt ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls PlanarEntity.IsPerpendicularTo(PlanarEntity linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true, if the plane of this planar entity and linear entity linearEntity are perpendicular within the tolerance tolerance. Returns false otherwise.</summary>
            <param name="linearEntity"> Input linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls PlanarEntity.IsPerpendicularTo(LinearEntity3d linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true, if the plane of this planar entity and the plane of the planar entity linearEntity are perpendicular within the tolerance tolerance. Returns false otherwise.</summary>
            <param name="linearEntity"> Input linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsParallelTo(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls PlanarEntity.IsParallelTo(PlanarEntity otherPlanarEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="otherPlanarEntity"> Input other planar entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsParallelTo(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the plane of this planar entity and the plane of the planar entity otherPlanarEntity are parallel within the tolerance tolerance. Returns false otherwise.</summary>
            <param name="otherPlanarEntity"> Input other planar entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsParallelTo(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls PlanarEntity.IsParallelTo(LinearEntity3d linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsParallelTo(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Overloads for the PlanarEntity.IsParallelTo method.</summary>
            <param name="linearEntity"> Input linear entity</param>
            <param name="tolerance"> Input tolerance valueDetermines if line is parallel to input plane.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls PlanarEntity.IntersectWith(LinearEntity3d linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if this planar entity intersects the linear entity linearEntity. In this case the function returns the point within the tolerance from the intersection point. If there is no intersection, the return value of the function is false.</summary>
            <param name="linearEntity"> Input linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.ClosestPointToLinearEntity(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls PlanarEntity.ClosestPointToLinearEntity(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any LinearEntity3d object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.ClosestPointToLinearEntity(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Evaluates the pair of closest points between this planar entity and the linear entity line. The point on this planar entity is returned as a return value of the function. Points are evaluated with a tolerance.</summary>
            <param name="line"> Input any LinearEntity3d object</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.ClosestPointToPlanarEntity(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls PlanarEntity.ClosestPointToPlanarEntity(PlanarEntity otherPlane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="otherPlane"> Input any PlanarEntity object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.ClosestPointToPlanarEntity(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Evaluates the pair of closest points between this planar entity and the planar entity otherPlane. The point on this planar entity is returned as a return value of the function. Points are evaluated with a tolerance.</summary>
            <param name="otherPlane"> Input any PlanarEntity object</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsCoplanarTo(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls PlanarEntity.IsCoplanarTo(PlanarEntity otherPlaneEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="otherPlanarEntity"> Input other planar entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.IsCoplanarTo(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the plane of this planar entity and the plane of the planar entity otherPlanarEntity are equal within the tolerance tolerance. Returns false otherwise.</summary>
            <param name="otherPlanarEntity"> Input other planar entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEntity.GetCoordinateSystem">
            <summary>Evaluates the canonical coordinate system of this planar entity and returns it in the output coordinate system arguments.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PlanarEntity.PointOnPlane">
            <summary>Returns originOfPlanarEntity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PlanarEntity.Normal">
            <summary>Returns the unit normal to the plane of this planar entity. One of the two possible directions of the normal is set according to functions isNormalReversed and reverseNormal of the class Surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PlanarEntity.Coefficients">
            <summary>Evaluates the coefficients of the equation of the plane containing this planar entity, namely a*x + b*y + c*z + d, where a, b, c, and d are coefficients of the normal to this surface.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Matrix3d">
            <summary>
This .Net class wraps AcGeMatrix3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.#ctor(System.Double[])">
            <summary>This constructor creates a 3D matrix based on values in an array.</summary>
            <param name="data"> Input matrix array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.PreMultiplyBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Sets this matrix to the product leftSide * (this matrix). Returns the reference to this matrix.</summary>
            <param name="leftSide"> Input left side of matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.PostMultiplyBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Sets this matrix to the product (this matrix) * rightSide. Returns the reference to this matrix.</summary>
            <param name="rightSide"> Input right side of matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Inverse">
            <summary>Returns inverse matrix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsSingular">
            <summary>This method calls Matrix3d.IsSingular(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsSingular(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if either of the vectors e0, e1, e2 returned by the function getCoordSystem(origin,e0, e1, e2) has zero length or these vectors are parallel.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Transpose">
            <summary>Returns the matrix that is the result of transposition of this matrix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This method calls Matrix3d.IsEqualTo(Matrix3d mat, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="mat"> Input matrix to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if each column of this matrix is equal to the corresponding column of the matrix mat as vectors.</summary>
            <param name="mat"> Input matrix to compare against</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsUniscaledOrtho">
            <summary>This method calls Matrix3d.IsUniscaledOrtho(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsUniscaledOrtho(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the columns of the linear part of this matrix are perpendicular to each other as 3D vectors and these two vectors have equal length.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsScaledOrtho">
            <summary>This method calls Matrix3d.IsScaledOrtho(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsScaledOrtho(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the columns of the linear part of this matrix are perpendicular to each other as 3D vectors.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.GetDeterminant">
            <summary>Gets the determinant of the matrix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Displacement(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the displacement vector.</summary>
            <param name="vector"> Input vector to calculate displacement from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Rotation(System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the matrix of the rotation by angle angle around the axis with vector axis passing through the point center. The direction of the rotation is defined by right-hand rule.</summary>
            <param name="angle"> Input angle of rotation</param>
            <param name="axis"> Input axis of rotation</param>
            <param name="center"> Input origin point of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Scaling(System.Double,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the matrix of uniform scaling by scale factor scaleAll with respect to the point center.</summary>
            <param name="scaleAll"> Input scale factor</param>
            <param name="center"> Input origin point of the scale</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Mirroring(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the matrix of mirroring with respect to pointValue. This is the same as central symmetry with a center point.</summary>
            <param name="pointValue"> Input point of symmetry</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Mirroring(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Returns the matrix of mirroring with respect to plane.</summary>
            <param name="plane"> Input mirror plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Mirroring(Autodesk.AutoCAD.Geometry.Line3d)">
            <summary>Returns the matrix of mirroring with respect to line.</summary>
            <param name="line"> Input line of symmetry</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.WorldToPlane(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Creates a transformation matrix to transform points from WCS to plane coordinate system.</summary>
            <param name="normal"> Input normal vector to the plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.WorldToPlane(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Creates a transformation matrix to transform points from WCS to plane coordinate system.</summary>
            <param name="plane"> Input transformation plane.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.PlaneToWorld(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the matrix transformation from plane to world coordinates, using the normal to the plane.</summary>
            <param name="normal"> Input normal to the plane for transformation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.PlaneToWorld(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Returns the matrix transformation from plane to world coordinates.</summary>
            <param name="plane"> Input transformation plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Projection(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the matrix of the parallel projection into the plane projectionPlane. The direction of the projection is defined by the vector projectDir.</summary>
            <param name="projectionPlane"> Input projection plane</param>
            <param name="projectDir"> Input projection direction</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.AlignCoordinateSystem(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns matrix that maps coordinate system with the origin fromOrigin and the axes fromXAxis, fromYAxis, and fromZAxis to coordinate system with the origin toOrigin and the axes toXAxis, toYAxis, and toZAxis.</summary>
            <param name="fromOrigin"> Input origin point of the from coordinate system</param>
            <param name="fromXAxis"> Input vector defining the x axis of the from coordinate system</param>
            <param name="fromYAxis"> Input vector defining the y axis of the from coordinate system</param>
            <param name="fromZAxis"> Input vector defining the z axis of the from coordinate system</param>
            <param name="toOrigin"> Input origin point of the to coordinate system</param>
            <param name="toXAxis"> Input vector defining the x axis of the to coordinate system</param>
            <param name="toYAxis"> Input vector defining the y axis of the to coordinate system</param>
            <param name="toZAxis"> Input vector defining the z axis of the to coordinate system</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.GetScale">
            <summary>Returns scale factor of matrix. The returned scale is the square root of the maximum length of the three column vectors.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsInverse(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This method calls Matrix3d.IsInverse(Matrix3d inv, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="inv"> Input inverse matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.IsInverse(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the matrix is an inverse matrix.</summary>
            <param name="inv"> Input inverse matrix</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.Equals(System.Object)">
            <summary>Returns true if this matrix is equal to the corresponding column of the object matrix.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.op_Inequality(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.op_Equality(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.op_Multiply(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Returns matrices a times b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="format"> Input format</param>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3d.ToArray">
            <summary>This method returns this matrix as a 1-dimensional array containing 16 elements of type System.Double. The array elements store the matrix row (rn) and column (cn) indices in the following order:.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix3d.Identity">
            <summary>Returns the reference to identity matrix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix3d.Translation">
            <summary>Returns the matrix of the translation by the vector that defines the translation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix3d.CoordinateSystem3d">
            <summary>Returns this matrix to the matrix which maps the standard coordinate system with the origin (0, 0, 0) and axes (1, 0, 0), (0, 1, 0) and (0, 0, 1) to the coordinate system with the origin origin and axes xAxis, yAxis, and zAxis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix3d.Normal">
            <summary>Takes the absolute value of each element of the upper 3x3 of the matrix and returns the absolute value of the largest such element.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Point3d">
            <summary>
This class wraps AcGePoint3d ObjectARX class. It represents a point in 3D space. It can be viewed as a structure consisting of three doubles.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.#ctor(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs 3D point by the formula.</summary>
            <param name="plane"> Input plane</param>
            <param name="point"> Input 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.#ctor(System.Double[])">
            <summary>Constructs 3D point with coordinates taken from the first three array elements.</summary>
            <param name="xyz"> Input array of coordinates</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.#ctor(System.Double,System.Double,System.Double)">
            <summary>Constructs a 3D point with coordinates x, y, and z.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.TransformBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Transforms this pre-multiplying it by the matrix leftSide. Returns the reference to this point.</summary>
            <param name="leftSide"> Input transform matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.RotateBy(System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Rotates the entity by the input angle about the line defined by the input point and vector.</summary>
            <param name="angle"> Input angle of rotation</param>
            <param name="vector"> Input vector about which entity is to be rotated</param>
            <param name="centerPoint"> Input point about which to rotate</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.ScaleBy(System.Double,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns 3d point that is the result of scaling this point with respect to the input point by the scale factor.</summary>
            <param name="scaleFactor"> Input scale factor</param>
            <param name="centerPoint"> Input center of scaling</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.MultiplyBy(System.Double)">
            <summary>Returns 3D point which is the result of multiplying this point with value.</summary>
            <param name="value"> Input object to be multiplied with the 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.DivideBy(System.Double)">
            <summary>Returns the 3D point which is the result of diving this point by value.</summary>
            <param name="value"> Input for dividing the 3D point.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.Add(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns the 3D point which is the result of adding this point to 3D vector value.</summary>
            <param name="value"> Input object to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.Subtract(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns 3D point which is the result of subtracting value from this point.</summary>
            <param name="value"> Input object to be subtracted from the 3D point.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.GetAsVector">
            <summary>Converts 3D point into 3D vector with the same set of coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.DistanceTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Evaluates and returns distance from this point to the point point.</summary>
            <param name="point"> Input point to measure to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.GetVectorTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Evaluates and returns the vector with respect to the point point.</summary>
            <param name="point"> Input point to measure to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Point3d.IsEqualTo(Point3d a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Checks if this point is within the distance tolerance.equalPoint() from the point a.</summary>
            <param name="point"> Input object to check against</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.Convert2d(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>Returns 2D point with the coordinates corresponding to the decomposition of the vector *this - p in the basis uAxis, vAxis in the planar entity, where p, uAxis, and vAxis can found by function call pln.get(p, uAxis, vAxis).</summary>
            <param name="plane"> Input plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.OrthoProject(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Projects the 3D point with respect to the plane without direction vector.</summary>
            <param name="plane"> Input plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.Project(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Projects the 3D point with respect to the plane and direction vector vector.</summary>
            <param name="plane"> Input plane</param>
            <param name="vector"> Input vector Input axis of rotation</param>
            <param name="angle"> Input rotation angle</param>
            <param name="centerPoint"> Input center of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.Mirror(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Returns the 3D point which is the result of mirroring of this point with respect to 3D line line in the same plane.</summary>
            <param name="plane"> Input line of symmetry</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.Equals(System.Object)">
            <summary>Returns true if this object is equal to obj.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.op_Inequality(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.op_Equality(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.op_Multiply(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Multiplies mat and b.</summary>
            <param name="mat"> Left operand</param>
            <param name="a"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.op_Multiply(System.Double,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Multiplies value and a.</summary>
            <param name="value"> Left operand</param>
            <param name="a"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.op_Multiply(Autodesk.AutoCAD.Geometry.Point3d,System.Double)">
            <summary>Multiplies a and value.</summary>
            <param name="a"> Left operand</param>
            <param name="value"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="format"> Input format</param>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3d.ToArray">
            <summary>This method returns an array containing the X, Y, and Z coordinate values for this point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point3d.X">
            <summary>Returns the X coordinate axis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point3d.Y">
            <summary>Returns the Y coordinate axis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point3d.Z">
            <summary>Returns the Z coordinate axis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point3d.Origin">
            <summary>Returns the origin of point 3D space.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Plane">
            <summary>
This .NET class wraps the AcGePlane ObjectARX class. Plane represents a parameterized infinite plane in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Constructor. Constructs the plane satisfying the equation.</summary>
            <param name="a"> Input coordinate a</param>
            <param name="b"> Input coordinate b</param>
            <param name="c"> Input coordinate c</param>
            <param name="d"> Input coordinate d</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs the plane with origin=or, uAxis=v1, and vAxis=v2.</summary>
            <param name="origin"> Input origin</param>
            <param name="u"> Input point U on U axis</param>
            <param name="v"> Input point V on V axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs the plane with origin=or, uAxis=v1, and vAxis=v2.</summary>
            <param name="u"> Input point U on U axis</param>
            <param name="origin"> Input origin</param>
            <param name="v"> Input point V on V axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs the plane with origin=pnt, uAxis= normal.perpVector(), and vAxis=normal.crossProduct(uAxis).</summary>
            <param name="origin"> Input origin of plane</param>
            <param name="normal"> Input normal vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.#ctor(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Copy constructor. Constructs plane with the same origin, uAxis, and vAxis as the plane source.</summary>
            <param name="source"> Another plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.#ctor">
            <summary>Constructor. Constructs the plane with the origin=(0, 0, 0), uAxis=(1, 0, 0), and vAxis=(0, 1, 0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.GetSignedDistanceTo(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the signed distance from the point pointValue to this plane. The sign of the result is the same as the sign of the dot product of the vector pointValue - originOfPlane and the normal to the plane.</summary>
            <param name="pointValue"> Input point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.IntersectWith(Autodesk.AutoCAD.Geometry.BoundedPlane)">
            <summary>This method calls Plane.IntersectWith(BoundedPlane boundPlane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="boundPlane"> Input bounded plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.IntersectWith(Autodesk.AutoCAD.Geometry.BoundedPlane,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if this plane and the bounded plane boundPlane are non-parallel. Intersection is performed with tolerance tolerance. Returns false if there is no intersection.</summary>
            <param name="boundPlane"> Input bounded plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.IntersectWith(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This method calls Plane.IntersectWith(Plane otherPlane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="otherPlane"> Input other plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.IntersectWith(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if this plane and the plane otherPlane are non-parallel. Intersection is performed with tolerance tolerance.</summary>
            <param name="otherPlane"> Input other plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets this plane to the plane with origin, U axis u, and V axis v.</summary>
            <param name="origin"> Input origin</param>
            <param name="u"> Input point u</param>
            <param name="v"> Input point v</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.Set(System.Double,System.Double,System.Double,System.Double)">
            <summary>Sets this plane to the plane satisfying the equation.</summary>
            <param name="a"> Input coordinate a</param>
            <param name="b"> Input coordinate b</param>
            <param name="c"> Input coordinate c</param>
            <param name="d"> Input coordinate d</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets this plane to the plane with origin, uAxis=v1, and vAxis=v2.</summary>
            <param name="u"> Input point U</param>
            <param name="origin"> Input origin</param>
            <param name="v"> Input point V</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Plane.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets this plane to the plane with origin=pointValue, u= normal.perpVector() and v=normal.crossProduct(u).</summary>
            <param name="pointValue"> Input origin point</param>
            <param name="normal"> Input vector normal</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Extents3d">
            <summary>
This .NET class wraps the AcDbExtents ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This constructor creates a new 3D Extents using Point 3D values.</summary>
            <param name="min"> Input minimum extent</param>
            <param name="max"> Input maximum extent</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Set MinPoint to min and MaxPoint to max if each of the X, Y, and Z values of min are less than or equal to the corresponding values of max.</summary>
            <param name="min"> Input minimum extent</param>
            <param name="max"> Input maximum extent</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.AddPoint(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Expand this box to also enclose the point pt.</summary>
            <param name="pt"> Input 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.AddExtents(Autodesk.AutoCAD.DatabaseServices.Extents3d)">
            <summary>Expand the box defined by this object to also enclose the box defined by source.</summary>
            <param name="source"> Input another Extents3d object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.AddBlockExtents(Autodesk.AutoCAD.DatabaseServices.BlockTableRecord)">
            <summary>Compute the minimum box that encloses all of the entities in the block pointed to by pointerToBlockTableRecord and the box already defined by this object.</summary>
            <param name="pointerToBlockTableRecord"> Pointer to a block table record</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.ExpandBy(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Expand this box by the amount in the vector. This could be used for objects with a constant thickness, for example. You would accumulate the basic box by iterating through the object's points calling AddPoint(), then you would make a single ExpandBy() call to expand that box by the thickness amount.</summary>
            <param name="vector"> Input 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.TransformBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Transform the eight corners of the current box by this matrix and compute the box that encloses the current box and those points.</summary>
            <param name="mat"> Input 3D transformation matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.Extents3d)">
            <summary>This method returns a value indicating whether the minimum and maximum points of a are equivalent to those of this object. Tolerance is set to Global for this overload.</summary>
            <param name="a"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.Extents3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method returns a value indicating whether the minimum and maximum points of a are equivalent, within the tolerance range specified by tolerance, to those of this object.</summary>
            <param name="a"> Input object to compare</param>
            <param name="tolerance"> Input tolerance to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.op_Inequality(Autodesk.AutoCAD.DatabaseServices.Extents3d,Autodesk.AutoCAD.DatabaseServices.Extents3d)">
            <summary>Returns true if a is not equivalent to b.</summary>
            <param name="a"> Left-hand operand</param>
            <param name="b"> Right-hand operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.op_Equality(Autodesk.AutoCAD.DatabaseServices.Extents3d,Autodesk.AutoCAD.DatabaseServices.Extents3d)">
            <summary>Returns true if a is equivalent to b.</summary>
            <param name="a"> Left-hand operand</param>
            <param name="b"> Right-hand operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.ToString(System.String,System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider, displayed with a specific format. See the Microsoft .NET API documentation for details.</summary>
            <param name="format"> Input format to display</param>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Extents3d.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Extents3d.MinPoint">
            <summary>Accesses the miniimum point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Extents3d.MaxPoint">
            <summary>Accesses the maximum point.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord">
            <summary>
This .NET class wraps the AcDbBlockTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.#ctor">
            <summary>Default constructor. Initializes the origin to (0,0,0); the IsAnonymous, HasAttributeDefinitions, IsFromExternalReference, and IsFromOverlayReference flags to false; and the PathName to NULL. In addition, the SymbolTableRecord default constructor is invoked.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.GetBlockReferenceIds(System.Boolean,System.Boolean)">
            <summary>
This function returns a list of BlockReferences that either directly or indirectly, through block nesting, reference this block. It only returns those block references that are currently active. Use getErasedBlockReferenceIds() to get a list of erased references.</summary>
            <param name="directOnly"> Input an indication that only those BlockReferences that directly refer to this BlockTableRecord should be included in the IDs. If this value is true and the block is nested, the parent block's references will not be included.</param>
            <param name="forceValidity"> Input an indication that older drawings which have been demand loaded should be loaded completely, in order to find their BlockReferenceIds. This is because older drawings did not store this information. This parameter is only applicable if directOnly is false.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.GetErasedBlockReferenceIds">
            <summary>This function returns a list of BlockReferences that directly reference this block. It only returns those block references that have been erased.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.GetAnonymousBlockIds">
            <summary>Retrieves a collection populated with the ObjectIds of the anonymous blocks created from the dynamic block definition.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.GetXrefDatabase(System.Boolean)">
            <summary>
This function returns the database that defines this block table record’s contents. If incrementUnresolved is true, then a database will be returned, even if the xref block table record is currently unresolved (for reasons other than that the xref drawing file could not be found).</summary>
            <param name="incrementUnresolved"> Input an indication whether or not to return the database of an unresolved xref</param>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.BlockInsertionPoints">
            <summary>This event occurs during the insertion of a block for which an application has defined custom insertion points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.AssumeOwnershipOf(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This method causes the invoked block table record to assume the ownership of all the entities listed in the input entitiesToMove collection, and provides an optimized way of moving entities between block table records.</summary>
            <param name="entitiesToMove"> Input a collection of entities to change ownership of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.UpdateAnonymousBlocks">
            <summary>Updates the anonymous blocks created from this dynamic block definition to reflect any changes made to the dynamic block definition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.Comments">
            <summary>Accesses the description text associated with the BlockTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.PathName">
            <summary>Accesses the path and name of the xref drawing. If this block table record is not an xref, then this string will be copied into the block table record, but will not be used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.Origin">
            <summary>Accesses the insertion point of the block table record in WCS coordinates. This point is the origin of the MCS (which is the local WCS for the entities within the block table record).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.BlockBeginId">
            <summary>Returns the the block begin opened openMode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.BlockEndId">
            <summary>Returns the the block end opened openMode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.HasAttributeDefinitions">
            <summary>Returns true if the block table record contains attribute definitions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.HasPreviewIcon">
            <summary>Returns true if the block table record has a preview icon.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.PreviewIcon">
            <summary>Accesses the preview icon.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.IsAnonymous">
            <summary>Returns true if the block table record is anonymous.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.IsFromExternalReference">
            <summary>Returns true if the block table record is describing an xref drawing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.IsFromOverlayReference">
            <summary>Gets and sets the BlockTableRecord's overlay flag.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.IsLayout">
            <summary>Returns true if this block table record represents a layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.LayoutId">
            <summary>Accesses the layout ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.IsUnloaded">
            <summary>Returns true if this block table record is an xref that is currently unloaded.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.XrefStatus">
            <summary>Retrieves the xref status of the block table record on which this method is called.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.DrawOrderTableId">
            <summary>Returns the DrawOrderTable object ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.Explodable">
            <summary>Specifies whether block references associated with this block table record can be exploded.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.BlockScaling">
            <summary>Specifies whether block references associated with this block table record can be uniformly or non-uniformly scaled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.IsDynamicBlock">
            <summary>Returns true if the block table record is a dynamic block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.Units">
            <summary>Accesses the units value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.IncludingErased">
            <summary>Returns the IncludingErased property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockTableRecord.Hyperlinks">
            <summary>Accesses a collection of hyperlinks associated with the BlockTableRecord.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.RXObject">
            <summary>
This .NET class wraps the AcRxObject ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXObject.X(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>Searches for a protocol extension object associated with this class. The method begins the search by examining the Class object associated with this class, and if no protocol extension object is found, the search continues in this class's base class and so on up the inheritance tree for this class. This procedure provides a form of protocol extension inheritance. This class's Class member may be found by using this class's isA() method.</summary>
            <param name="protocolClass"> Input protocol class</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXObject.QueryX(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>Searches for a protocol extension object associated with this object. The method begins the search by examining the Class object associated with this object, and if no protocol extension object is found, the search continues in the base class of the object's class and so on up the inheritance tree for the class. This procedure provides a form of protocol extension inheritance. An object's Class member may be found by using the class's isA() method.</summary>
            <param name="protocolClass"> Input protocol to query with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXObject.GetRXClass">
            <summary>Returns the RXClass.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXObject.CompareTo(System.Object)">
            <summary>Allow classes to provide a means to compare class objects. The objects are compared and the result of the comparison is returned.</summary>
            <param name="obj"> Input object to compare with.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXObject.Clone">
            <summary>Creates a clone of the object and returns a pointer to the clone. If the function is not successful in creating the clone, then NULL is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RXObject.CopyFrom(Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>Copies the contents of other into the messaged object, whenever feasible.</summary>
            <param name="source"> Input object to copy from.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Handle">
            <summary>
This .NET class wraps the AcDbHandle ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Handle.#ctor(System.Int64)">
            <summary>Constructs a handle using the input the 64 bit handle value.</summary>
            <param name="value"> Input all 64 bits of the handle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Handle.op_Inequality(Autodesk.AutoCAD.DatabaseServices.Handle,Autodesk.AutoCAD.DatabaseServices.Handle)">
            <summary>Returns true if a is not equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Handle.op_Equality(Autodesk.AutoCAD.DatabaseServices.Handle,Autodesk.AutoCAD.DatabaseServices.Handle)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Handle.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Handle.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Handle.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Handle.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Handle.Value">
            <summary>Accesses the value of the handle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Handle.IsOne">
            <summary>Assesses true if the handle value in this object is 1.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.OpenModeAttribute">
            <summary>
Reports the open mode. See the OpenMode enum documentation for more information.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OpenModeAttribute.#ctor(Autodesk.AutoCAD.DatabaseServices.OpenMode)">
            <summary>Constructor.</summary>
            <param name="mode"> Mode of open object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.OpenModeAttribute.OpenMode">
            <summary>Accesses the open mode.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.OpenMode">
            <summary>
This .NET class wraps the AcDb::OpenMode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CallerMustCloseAttribute">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.CallerMustCloseAttribute.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBObject">
            <summary>
This .NET class wraps the AcDbObject ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DeepClone(Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.IdMapping,System.Boolean)">
            <summary>
This function gives control of deep clone operations to the object. In the default implementation, the object is cloned and appended to the owner object (ownerPointer). The cloning is performed by an DeepCloneFiler. A record is also added to the idMap. Then, using the filer, any owned objects are deep cloned, with isPrimary set to false.</summary>
            <param name="ownerPointer"> Object to which the clones should be appended</param>
            <param name="idMap"> Current object ID map</param>
            <param name="isPrimary"> Boolean indicating whether this object is primary or owned</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.WblockClone(Autodesk.AutoCAD.Runtime.RXObject,Autodesk.AutoCAD.DatabaseServices.IdMapping,System.Boolean)">
            <summary>
This function is almost identical to DBObject.DeepClone, except that a WblockCloneFiler is used and ownership is not carried across database boundaries. Subcloning is based on hard owner and hard pointer connections.</summary>
            <param name="ownerPointer"> Input object to which the clones should be appended. If the owner has not been cloned, then the Database must be passed in.</param>
            <param name="idMap"> Input current object ID map</param>
            <param name="isPrimary"> Input Boolean indicating whether this object is primary or owned</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DecomposeForSave(Autodesk.AutoCAD.DatabaseServices.DwgVersion)">
            <summary>This member function is used to control behavior for custom objects and entities when saving to previous formats. Custom objects can decompose themselves into other objects and can add additional xdata to the objects created.</summary>
            <param name="version"> DWG version being saved to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.CreateExtensionDictionary">
            <summary>Creates a DBDictionary object and sets it up as the extension dictionary for the DBObject.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.ReleaseExtensionDictionary">
            <summary>Removes the object's extension dictionary (that is, removes the object as the owner of the dictionary object) if it exists and is empty. Once removed, this function calls the dictionary's erase() method. Any reactors attached to the extension dictionary receive normal notification appropriate to an open for write, erase, close sequence.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.UpgradeOpen">
            <summary>If the object is currently open OpenMode.ForRead with only one reader, then this function upgrades the object to open OpenMode.ForWrite. In the process of changing to open for write, the object is closed, thus triggering any pertinent notification.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.UpgradeFromNotify">
            <summary>Upgrades the object from being at least open OpenMode.ForNotify to being open both OpenMode.ForNotify and OpenMode.ForWrite.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DowngradeOpen">
            <summary>Downgrades the object from being open OpenMode.ForWrite, to being OpenMode.ForRead. In the process, all changes made to the object while it was open for write are committed to the database and appropriate notification is sent.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DowngradeToNotify(System.Boolean)">
            <summary>
Restores an object from being open both OpenMode.ForNotify and OpenMode.ForWrite, to being open just OpenMode.ForNotify. The wasWritable value that was returned from the matching DBObject.upgradeFromNotify() call should be passed into this function to restore the proper open status..</summary>
            <param name="wasWritable"> Input indicating if object was open for write when upgradeFromNotify was called</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.Cancel">
            <summary>Terminates the current open operation. All changes made to.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.Close">
            <summary>Closes the object. All changes made to the object since it was opened are committed to the database, the object is marked as pageable, and a "closed" notification (as well as any other appropriate notification such as "modified", "erased", and so on) is sent.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.CloseAndPage(System.Boolean)">
            <summary>
Closes the object and pages it if the object pager is turned on. All changes made to the object since it was opened are committed to the database, and a "closed" notification (as well as any other appropriate notification such as "modified", "erased", and so on) is sent.</summary>
            <param name="onlyWhenClean"> Boolean indicating to turn off or on undo recording</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.Erase">
            <summary>Sets the erase bit of the object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.Erase(System.Boolean)">
            <summary>
Sets the erase bit of the object.</summary>
            <param name="erasing"> Boolean indicating if object is to be erased or unerased</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.SwapReferences(Autodesk.AutoCAD.DatabaseServices.IdMapping)">
            <summary>The purpose of this method is similar to the object ID reference translations done at the end of deep cloning. References between objects in the workset have their object IDs translated to the swapped object IDs of the referenced objects. Unlike cloning, this translation must happen in both directions. Thus, it is possible to see two different ID maps passed in on different calls to this method.</summary>
            <param name="idMap"> Input refedit ID map</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.Audit(Autodesk.AutoCAD.DatabaseServices.AuditInfo)">
            <summary>This function is called by AutoCAD when the AUDIT command is executed. The AuditInfo object pointed to by auditInfo contains member functions that are used to determine what to do and also to report the results of the audit operation on the object.</summary>
            <param name="auditInfo"> An AuditInfo object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DwgIn(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>This function does some internal bookkeeping, calls the object's DBObject.dwgInFields() function, and then reads in any xdata attached to the object. If the object's dwgInFields() function does not supermessage its parent class, then an assert is triggered.</summary>
            <param name="filer"> DWG filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DwgOut(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>This function does some internal bookkeeping, calls the object's DBObject.dwgOutFields() function, and then writes out any xdata attached to the object. If the object's dwgOutFields() function does not supermessage its parent class, then an assert is triggered.</summary>
            <param name="filer"> DWG filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DxfIn(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>This function does some internal book keeping by reading in any xdata that comes before the main entity data. The dxfIn function then calls the object's DBObject.dxfInFields() function, and then reads in any xdata that comes after the entity data.</summary>
            <param name="filer"> DXF filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DxfOut(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>This function does some internal bookkeeping, calls the object's DBObject.dxfOutFields() function, and then writes out any xdata attached to the object.</summary>
            <param name="filer"> Filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.XDataTransformBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This method applies the xform transformation matrix to any XData data types 1011, 1021, 1031, 1012, 1022, 1032, 1013, 1023, 1033, 1041, and 1042 in the object's XData. See the documentation on XData for more information on the way the transformation matrix is applied to the different data types.</summary>
            <param name="transform"> Transformation matrix to be applied to the XData</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetXDataForApplication(System.String)">
            <summary>Gets the xdatafrom the identified application.</summary>
            <param name="applicationName"> Name of the registered application to use when retrieving the xdata</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.DisableUndoRecording(System.Boolean)">
            <summary>
Turns off or on the Undo recording for the object. If disable is set to true, then Undo recording is turned off.</summary>
            <param name="disable"> Boolean indicating to turn off or on Undo recording</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.ApplyPartialUndo(Autodesk.AutoCAD.DatabaseServices.DwgFiler,Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>This function is called by AutoCAD whenever an Undo operation is performed on the DBObject object and the object has consistently set the autoUndo Boolean in all assertWriteEnabled() calls to false, thus indicating that it's using the partial undo mechanism.</summary>
            <param name="undoFiler"> The undo filer containing the partial undo information to be re-instated</param>
            <param name="classObj"> The RXClass object for the class that is expected to be handling this Undo information</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetReactors">
            <summary>This function is obsolete. One can retrieve all reactors by calling GetTransientReactors() and GetPersistentReactors().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetTransientReactors">
            <summary>Retrieves the transient reactors.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetPersistentReactorIds">
            <summary>Returns the persistent reactor collection list.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.SetObjectIdsInFlux">
            <summary>This function must be called on any newly created objects in DBObject.DeepClone or DBObject.WblockClone. It indicates that reference object IDs are not yet pointing to the correct objects. The references can be translated only when the entire deep clone operation is complete. The flag is cleared at that time.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetObjectSaveVersion(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>Override this function to specify which version the object data needs to be stored in. This does not require super-messaging.</summary>
            <param name="filer"> DXF filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetObjectSaveVersion(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>Override this function to specify which version the object data needs to be stored in. This does not require super-messaging.</summary>
            <param name="filer"> Filer to be used for this filing operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetField(System.String)">
            <summary>This function provides access to Field objects associated with a database object and the supplied property name by returning the object ID.</summary>
            <param name="propertyName"> Input a property name for the field you want to retrieve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.GetField">
            <summary>This function provides access to Field objects associated with a database object by returning the object ID.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.RemoveField(System.String)">
            <summary>Removes the specified field. Returns the object ID of the removed field.</summary>
            <param name="propertyName"> Property name whose field is to be removed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.RemoveField">
            <summary>Removes the text field. Returns its field ID.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.SetFromStyle">
            <summary>Sets the annotative property of an object from its (optionally) associated style. Returns true on successful return if the annotative property of the object changed.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.ResetScaleDependentProperties">
            <summary>Resets any scale dependent object properties to the default values.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.SetPaperOrientation(System.Boolean)">
            <summary>
Sets the current value of the paper orientation property on an annotative object.</summary>
            <param name="bPaperOrientation"> The new value for the paper orientation property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.SupportsCollection(System.String)">
            <summary>Determines if a particular context type is supported by the object.</summary>
            <param name="collectionName"> The name of the collection (context type) to test for support.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.HasContext(Autodesk.AutoCAD.DatabaseServices.ObjectContext)">
            <summary>Determines whether a context with the specified name exists in the collection.</summary>
            <param name="context"> The context to check for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.AddContext(Autodesk.AutoCAD.DatabaseServices.ObjectContext)">
            <summary>Adds a copy of a context to the object.</summary>
            <param name="context"> The context to add.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObject.RemoveContext(Autodesk.AutoCAD.DatabaseServices.ObjectContext)">
            <summary>Removes a context from the collection.</summary>
            <param name="context"> The context to remove from the collection.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsPersistent">
            <summary>Returns true if the Drawable object is database resident (belongs to an Model that requires the use of open and close functions).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.Id">
            <summary>Returns the Id property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.ObjectId">
            <summary>Accesses the object ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.OwnerId">
            <summary>Accesses the owner ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.Handle">
            <summary>Accesses the associated handle object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.Database">
            <summary>Accesses the database used by the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.Drawable">
            <summary>Accesses the Drawable object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.ExtensionDictionary">
            <summary>Accesses the extension dictionary for the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.MergeStyle">
            <summary>Accesses the merge style of the dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.XData">
            <summary>Accesses the xdata on the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsEraseStatusToggled">
            <summary>Returns true if the object's erase bit has been toggled since it was opened.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsErased">
            <summary>Returns true if the object associated with this object ID is erased.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsReadEnabled">
            <summary>Returns true if the object is currently open OpenMode.ForRead.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsWriteEnabled">
            <summary>Returns true if the object is currently /c> and is not currently sending notification.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsNotifyEnabled">
            <summary>Returns true if the object is currently open OpenMode.ForNotify.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsModified">
            <summary>Returns true if the object has had an AssertWriteEnabled() called since it was opened (which would indicate that a member function that can change its data was called).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsModifiedXData">
            <summary>Returns true if the object has had an AssertWriteEnabled() called since it was opened (which would indicate that a member function that can change its data was called) and has then had its SetXData() method called.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsModifiedGraphics">
            <summary>Returns true if the object is derived from Entity nabled() called since it was opened (which would indicate that a member function that can change its data was called), or its RecordGraphicsModified() function called with an true argument value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsNewObject">
            <summary>Returns true if the object has not yet been closed since it was first created.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsNotifying">
            <summary>Returns true if the object is in the process of sending notification.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsUndoing">
            <summary>Returns true if the object is involved in an Undo operation at this time.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsCancelling">
            <summary>Returns true if the object is currently in the middle of a Cancel() call (that is, an open is being canceled and all changes made are being rolled back).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsReallyClosing">
            <summary>Returns true if calling Close() at this time would really close the object completely. For example, if the object is not in a transaction, and is open for read with only one reader, then true would be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsTransactionResident">
            <summary>Returns true if the object is currently part of a transaction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsAProxy">
            <summary>Returns true if the object is a proxy.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.UndoFiler">
            <summary>Accesses the undo filer for the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.IsObjectIdsInFlux">
            <summary>This refers to a condition that occurs during deep clone operations. It returns true when the cloned objects' IDs have not yet been translated and thus cannot be used in any operations on the objects. This condition normally occurs only during CEventReactorImpl.beginDeepCloneXlation, DBObject.DeepClone, or DBObject.WblockClone. Any operations that involve ObjectId references, such as symbol table records, should be postponed until after endDeepClone. DBObject.SubClose is never called on any objects whose IDs are in flux.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.HasSaveVersionOverride">
            <summary>Accesses if the object has the bit set to override the filer version.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.ObjectBirthVersion">
            <summary>Accesses the birth version of an object. The birth version is the version in which the class was introduced. This information needs to be specified when the class is registered with AutoCAD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.ClassID">
            <summary>Accesses the class ID for the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.HasFields">
            <summary>Returns true if the object has one or more fields.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.Annotative">
            <summary>Accesses the annotative status.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObject.PaperOrientation">
            <summary>Accesses the current value of the paper orientation property on an annotative object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Database">
            <summary>
This .NET class wraps the AcDbDatabase ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.#ctor(System.Boolean,System.Boolean)">
            <summary>
Constructor with additional options.</summary>
            <param name="buildDefaultDrawing"> System.Boolean specifying whether or not to build an empty object</param>
            <param name="noDocument"> System.Boolean specifying whether or not to associate this database to the current document</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.DwgFileOpened">
            <summary>Wraps AcRxEventReactor::dwgFileOpened. The event indicates that the drawing file is being read and stored in the drawing database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.InitialDwgFileOpenComplete">
            <summary>Wraps AcRxEventReactor::initialDwgFileOpenComplete. The event is sent at the completion of the initial load of a drawing database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.DatabaseConstructed">
            <summary>Wraps AcRxEventReactor::databaseConstructed. The event indicates that the Database constructor has finished.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.DatabaseToBeDestroyed">
            <summary>Wraps AcRxEventReactor::databaseToBeDestroyed. The event indicates that the drawing database is about to be destroyed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginSave">
            <summary>Wraps AcRxEventReactor::beginSave. The event indicates that the drawing database being operated on is about to be saved.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.SaveComplete">
            <summary>Wraps AcRxEventReactor::saveComplete. The event indicates that the drawing database was saved to a file.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.AbortSave">
            <summary>Wraps AcRxEventReactor::abortSave. The event indicates that the drawing database being operated on was not saved, and the save operation failed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginDxfIn">
            <summary>Wraps AcRxEventReactor::beginDxfIn. The event indicates that the drawing database being operated on is about to be altered by a DXF input operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.AbortDxfIn">
            <summary>Wraps AcRxEventReactor::abortDxfIn. The event indicates that the drawing database being operated on was modified by a DXF input operation, but that the operation was terminated before completion.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.DxfInComplete">
            <summary>Wraps AcRxEventReactor::dxfInComplete. The event indicates that the drawing database was successfully modified by a DXF input operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginDxfOut">
            <summary>Wraps AcRxEventReactor::beginDxfOut. The event indicates that the drawing database being operated on is about to be output in a DXF output operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.AbortDxfOut">
            <summary>Wraps AcRxEventReactor::abortDxfOut. The event indicates that the drawing database being operated on was modified by a DXF output operation, but that the operation was terminated before completion.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.DxfOutComplete">
            <summary>Wraps AcRxEventReactor::dxfOutComplete. The event indicates that the output operation taking place on the drawing database was successful.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginInsert">
            <summary>Wraps AcRxEventReactor::beginInsert. The event indicates that the drawing database being operated on is being added to the drawing database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.InsertMappingAvailable">
            <summary>Wraps AcRxEventReactor::otherInsert. The event is sent right before beginDeepCloneTranslation is sent.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.InsertAborted">
            <summary>Wraps AcRxEventReactor::abortInsert. The event indicates that an insert operation on the drawing database was terminated and did not complete.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.InsertEnded">
            <summary>Wraps AcRxEventReactor::endInsert. The event indicates that an insert operation on the drawing database is complete.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.WblockNotice">
            <summary>Wraps AcRxEventReactor::wblockNotice. The event indicates that a wblock operation is about to start.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginWblockSelectedObjects">
            <summary>Wraps AcRxEventReactor::beginWblock. The event indicates that a wblock operation is being performed on a set of entities within the drawing database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginWblockBlock">
            <summary>Wraps AcRxEventReactor::beginWblock. The event indicates that a wblock operation is being performed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginWblockEntireDatabase">
            <summary>Wraps AcRxEventReactor::beginWblock. The event indicates that a wblock operation is being performed on the drawing database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.WblockMappingAvailable">
            <summary>Wraps AcRxEventReactor::otherWblock. The event indicates that a wblock is being performed on the drawing database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.WblockAborted">
            <summary>Wraps AcRxEventReactor::abortWblock. The event indicates that a wblock being performed to the drawing was terminated and did not complete.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.WblockEnded">
            <summary>Wraps AcRxEventReactor::endWblock. The event indicates that a wblock being performed to the drawing completed successfully.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginWblockObjects">
            <summary>Wraps AcRxEventReactor::beginWblockObjects. The event is made once for the database during each wblock clone execution.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginDeepClone">
            <summary>Wraps AcRxEventReactor::beginDeepClone. This event indicates that a deep clone operation is starting on the drawing database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.BeginDeepCloneTranslation">
            <summary>Wraps AcRxEventReactor::beginDeepCloneTranslation. A deep clone operation has two stages. First, each object and any owned objects are cloned. Second, any object ID references are translated to their cloned IDs.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.DeepCloneAborted">
            <summary>Wraps AcRxEventReactor::abortDeepClone. The event indicates that the deep clone operation terminated.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.DeepCloneEnded">
            <summary>Wraps AcRxEventReactor::endDeepClone. The event indicates that the deep clone operation concluded successfully.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.PartialOpenNotice">
            <summary>Wraps AcRxEventReactor::partialOpenNotice. The event is invoked just before an attempt to partially open a database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefBeginAttached">
            <summary>Wraps AcEditorReactor::beginAttach. The event indicates that an that an external reference database is to be attached to the database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefBeginOtherAttached">
            <summary>Wraps AcEditorReactor::otherAttach. The event is sent just after beginDeepCloneTranslation notification, but only occurs for the xref attach process.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefAttachAborted">
            <summary>Wraps AcEditorReactor::abortAttach. The event indicates that an that an external reference attach operation has been performed to the drawing, but has not completed successfully.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefAttachEnded">
            <summary>Wraps AcEditorReactor::endAttach. The event indicates that an that an external reference attach operation has been performed to the drawing, and has completed successfully.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefRedirected">
            <summary>Wraps AcEditorReactor::redirected. The event indicates that an objectId is redirected, meaning that an objectId in the xref drawing is modified to point to the associated object in the host drawing (the drawing being XREFd into).</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefComandeered">
            <summary>Wraps AcEditorReactor::commandeered. The event indicates that an object is commandeered, meaning that the objectId of the object is appended to the host drawing's (the drawing being XREFd into) symbol table.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefBeginRestore">
            <summary>Wraps AcEditorReactor::beginRestore. The event indicates that the Xref was previously unloaded, and now is to be reloaded, but its file has not changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefRestoreAborted">
            <summary>Wraps AcEditorReactor::abortRestore. The event indicates that a restore operation on the drawing database was terminated and did not complete.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefRestoreEnded">
            <summary>Wraps AcEditorReactor::endRestore. The event indicates that that the Xref was previously unloaded, and now has been reloaded, but its file has not changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.ObjectAppended">
            <summary>Wraps AcDbDatabaseReactor::objectAppended. The event indicates that an object has been added to the database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.ObjectUnappended">
            <summary>Wraps AcDbDatabaseReactor::objectUnAppended. The event is invoked when an object has had its addition to the database dwg undone during an Undo operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.ObjectReappended">
            <summary>Wraps AcDbDatabaseReactor::objectReAppended. The event is invoked when an object has had its addition to the database dwg undone during an Undo operation, and has now been re-appended to the database due to an execution of the AutoCAD REDO command.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.ObjectOpenedForModify">
            <summary>Wraps AcDbDatabaseReactor::objectModified. The event is invoked before the object has been modified.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.ObjectModified">
            <summary>Wraps AcDbDatabaseReactor::objectModified. The event indicates that an object has been modified.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.ObjectErased">
            <summary>Wraps AcDbDatabaseReactor::objectErased. The event indicates that an object is being erased or unerased from the database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.SystemVariableWillChange">
            <summary>Wraps AcDbDatabaseReactor::headerSysVarWillChange. The event indicates that an attempt is being made to change the 'name' system variable.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.SystemVariableChanged">
            <summary>Wraps AcDbDatabaseReactor::headerSysVarChanged. The event indicates that an attempt was made to change the 'name' system variable.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.ProxyResurrectionCompleted">
            <summary>Wraps AcDbDatabaseReactor::proxyResurrectionCompleted. The event is invoked when the loading of an ObjectARX or ObjectDBX module resurrects proxy objects in the DWG database.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.Disposed">
            <summary>Wraps AcDbDatabaseReactor::goodbye. The event indicates that the DWG database is about to be deleted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefSubCommandStart">
            <summary>Wraps AcRxEventReactor::xrefSubCommandStart. This notification is sent on the start of an xref subcommand.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefPreXrefLockFile">
            <summary>Wraps AcEditorReactor::preXrefLockFile. The event is sent just before an Xref is locked.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefSubCommandAborted">
            <summary>Wraps AcRxEventReactor::xrefSubCommandAborted. This notification is sent if the xref subcommand is aborted during the xrefSubCommandStart() call.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.Database.XrefSubCommandEnd">
            <summary>This is XrefSubCommandEnd, a member of class Database.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.EraseEmptyObjects(System.Int32)">
            <summary>Erases empty objects (zero length curves and/or empty TEXT/MTEXT) in the database.</summary>
            <param name="flags"> The setting of the erase mode. It is stored as a bitcode using the combination of the following enum values:ZeroLengthCurve - Erase zero length curves (AcDbCurve derived objects such as LINE, POLYLINE, SPLINE, etc.)EmptyText - Erase empty TEXT/MTEXT objects (which contain only spaces, tabs, enters and/or new lines)AllEmptyObj - Erase all empty objects</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.CountEmptyObjects(System.Int32)">
            <summary>Counts empty objects (zero length curves and/or empty TEXT/MTEXT) in the database.</summary>
            <param name="flags"> The setting of the count mode. It is stored as a bitcode using the combination of the following enum values:ZeroLengthCurve - Count zero length curves (AcDbCurve derived objects such as LINE, POLYLINE, SPLINE, etc.)EmptyText - Count empty TEXT/MTEXT objects (which contain only spaces, tabs, enters and/or new lines)AllEmptyObj - Count all empty objects</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetVisualStyleList">
            <summary>This function returns a list containing the localized names of the visual styles defined in the visual style dictionary. Anonymous visual styles and visual styles marked for internal use only are excluded from this list.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.SetTimeZoneAsUtcOffset(System.Double)">
            <summary>This .NET function wraps the the AcDbDatabase::setTimeZoneAsUtcOffset() ObjectARX function.</summary>
            <param name="offset"> Input the offset, in hours</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetViewports(System.Boolean)">
            <summary>
This function enumerates the Viewports in a drawing.</summary>
            <param name="bGetPaperspaceVports"> Input flag indicating whether to return paperspace viewports associated with layouts</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ResetTimes">
            <summary>This function resets the Database TDCREATE, TDUPDATE, TDINDWG, and TDUSRTIMER to the settings for a new drawing (TDCREATE and TDUPDATE to the current date/time, and TDINDWG and TDUSRTIMER to 0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.SetDimstyleData(Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord)">
            <summary>This function copies the dimension variable information in style into the database on which this method is called, making those dimension variable values current for the database.</summary>
            <param name="style"> Input pointer to DimStyleTableRecord from which to copy dimension variable information</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetDimstyleData">
            <summary>This function copies the database dimension variable values into the DimStyleTableRecord.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetDimensionStyleChildData(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>This function returns the DimStyleTableRecord referenced by the dimension.</summary>
            <param name="classDescriptor"> Input object to check.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetDimensionStyleChildId(Autodesk.AutoCAD.Runtime.RXClass,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Given a parent dimension style ID and a dimension class descriptor, this function returns the child dimension style ID, if available, for the given dimension type.</summary>
            <param name="classDescriptor"> Input dimension class descriptor</param>
            <param name="parentStyle"> Input parent dimension style ID</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetDimensionStyleParentId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Given a child dimension style ID, this function returns the parent dimension style ID. If the parent is unavailable, the given child dimension style ID is returned.</summary>
            <param name="childStyle"> Input child dimension style ID</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.UpdateExt(System.Boolean)">
            <summary>
This function iterates through all the entities in the database's Model Space and updates the database's Model Space extents variables EXTMAX and EXTMIN to the values determined during the iteration..</summary>
            <param name="doBestFit"> Determines whether to generate the tightest bounding box</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetDimRecentStyleList">
            <summary>This function allows the application to get the object ID entities of the most recently used dimstyles (up to 6) for dimension context menu dimstyle MRU list support. Most recently used dimstyle objects are tracked by monitoring the past six dimstyle objects that were current in the database.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.LoadLineTypeFile(System.String,System.String)">
            <summary>This function loads the linetype specified by lineTypeName from the file specified by filename and stores it in the database on which this method is called.</summary>
            <param name="lineTypeName"> Input linetype name string (wild cards may be used)</param>
            <param name="filename"> Input path/filename or URL of linetype file to load from (path is optional)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.DisablePartialOpen">
            <summary>When called during partial open notification, this function vetoes the partial open operation and causes the entire drawing database to be loaded.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.IsValidLineWeight(System.Int32)">
            <summary>Returns true for lineweights that match one of the predefined lineweights, and false otherwise.</summary>
            <param name="weight"> Input lineweight in hundredths of a millimeter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetNearestLineWeight(System.Int32)">
            <summary>The getNearestLineWeight() method takes a lineweight and returns the nearest LineWeight enum value. For example, if you pass in 4, then the value LineWeight005 is returned.</summary>
            <param name="weight"> Input lineweight in hundredths of a millimeter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.MarkObjectNonPersistent(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Marks an object non-persistent or persistent. Objects in the drawing database are persistent by default (if they have an owner). This function allows objects to be marked non-persistent.</summary>
            <param name="id"> Input ID of the object to be modified</param>
            <param name="value"> Input true to make the object non-persistent, or false to make it persistent</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.IsObjectNonPersistent(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if the object denoted by id is non-persistent.</summary>
            <param name="id"> Input ID of the object to be interrogated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ReclaimMemoryFromErasedObjects(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This member function deletes the objects underneath the input object ids and performs some related cleanup.</summary>
            <param name="ids"> A collection of object ids whose memory is to be reclaimed by deleting their objects. All object ids in the collection must correspond to erased objects, which must be entirely closed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.Purge(Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph)">
            <summary>This version of the purge() method works in one pass. The method looks for references between the objects passed in so that it does not need to be called multiple times. In other words, if a Layer and a Linetype are passed in, and the only reference to the Linetype is from the Layer, then the graph returned will indicate that both the Layer and the Linetype can be purged. (The older ObjectIdCollection version of purge() would first indicate that only the Layer could be purged. Then a second call, after erasing the Layer, would say that the Linetype could be purged.).</summary>
            <param name="idGraph"> Input graph of objects in the database. The graph will be returned containing only those objects that may safely be removed from the database.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.Purge(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This function searches through the database to see if there are any hard references to objects with object ID entities in the ids array. If any such objects are found, their object ID entities are removed from the ids array. So, when this function returns, the ids array will contain only object ID entities of objects that are not currently hard-referenced and thus can safely be erased.</summary>
            <param name="ids"> Input collection of object ID entities of objects</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.CountHardReferences(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,System.Int32[])">
            <summary>This function traverses the database looking for objects with a hard reference to any of the objects whose objectId entities are in the ids array. Each time such a hard reference is found, the count will be incremented by 1 within the element of count that corresponds to the ids element of the objectId that is being hard referenced. For example, if a hard reference is found to the objectId in ids[2], then count[2] will be incremented by 1.</summary>
            <param name="ids"> Input collection of objectId entities of objects to find the count of hard references to those objects</param>
            <param name="count"> Input array of the same size as ids that will be filled in with the counts for each corresponding element in ids</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetObjectId(System.Boolean,Autodesk.AutoCAD.DatabaseServices.Handle,System.Int32)">
            <summary>
Returns the objectId of the object that has the handle value contained in objHandle. If createIfNotFound is true and the handle is not found in the database, then a new objectId stub object is created using the handle sought..</summary>
            <param name="createIfNotFound"> Input Boolean indicating to create a objectId stub if input handle is not found</param>
            <param name="objHandle"> Input Handle object containing the handle being passed in</param>
            <param name="identifier"> Reserved for future use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ClassDxfName(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>This function returns the DXF name for the class.</summary>
            <param name="getMyDxfName"> Input Autodesk.AutoCAD.Runtime.RXClass object to get the name of.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ReadDwgFile(System.IntPtr,System.Boolean,System.String)">
            <summary>
Reads the drawing file specified by drawingFile into the database object executing this function..</summary>
            <param name="drawingFile"> Input pointer to DWG file to read</param>
            <param name="allowCPConversion"> Input Boolean indicating whether to allow codepage conversion</param>
            <param name="password"> Input string containing a DWG password</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ReadDwgFile(System.String,Autodesk.AutoCAD.DatabaseServices.FileOpenMode,System.Boolean,System.String)">
            <summary>
Reads the drawing file specified by fileName into the database object executing this function. fileName must include the extension of the file (which does not have to be .dwg) if the file to open has one, even if the extension is .dwg. fileName may be a URL..</summary>
            <param name="fileName"> Input name or URL of file to read</param>
            <param name="mode"> Input open mode</param>
            <param name="allowCPConversion"> Input Boolean indicating whether to allow codepage conversion</param>
            <param name="password"> Input string containing a DWG password</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.SaveAs(System.String,Autodesk.AutoCAD.DatabaseServices.DwgVersion)">
            <summary>Runs the save process on the database and writes the drawing information out to fileName. The fileName argument is taken as is. If no file extension is present, .dwg is not appended.</summary>
            <param name="fileName"> Input file name or URL to write database out to</param>
            <param name="version"> Input dwg version to which to save the file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.Save">
            <summary>Currently not implemented.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.DxfIn(System.String,System.String)">
            <summary>This function reads the DXF file specified into the database object.</summary>
            <param name="fileName"> Input full path of the DXF file to be read into database</param>
            <param name="logFilename"> Log file to record all warning/error messages from reading the DXF file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.DxfOut(System.String,System.Int32,Autodesk.AutoCAD.DatabaseServices.DwgVersion)">
            <summary>This function creates an DXF file.</summary>
            <param name="fileName"> Input name or URL of the new DXF file to create (the .dxf extension is not added automatically)</param>
            <param name="precision"> Number of bits of accuracy, from 0 to 16</param>
            <param name="version"> Sets the DWG version major and minor number</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.DxfOut(System.String,System.Int32,System.Boolean)">
            <summary>
This function creates an DXF file.</summary>
            <param name="fileName"> Input name or URL of the new DXF file to create (the .dxf extension is not added automatically)</param>
            <param name="precision"> Number of bits of accuracy, from 0 to 16</param>
            <param name="saveThumbnailImage"> Input Boolean indicating whether to save thumbnail</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.CloseInput(System.Boolean)">
            <summary>
If a drawing file is associated with this database, then this function forces an immediate read of all necessary information from the file into the database object. If closeFile is true, the drawing file will be closed when it has been fully read into the Database.</summary>
            <param name="closeFile"> Input System.Boolean indicating whether to close the drawing file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ResolveXrefs(System.Boolean,System.Boolean)">
            <summary>
This function resolves existing xrefs in the working database..</summary>
            <param name="useThreadEngine"> Input Boolean indicating whether to use the thread engine for xref resolution</param>
            <param name="doNewOnly"> Input Boolean indicating whether to process only newly added xrefs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.AttachXref(System.String,System.String)">
            <summary>Attaches the xref file specified by fileName to the database, thus creating a new xref BlockTableRecord. The new block table record's name is specified in blockName. Its object ID is returned.</summary>
            <param name="fileName"> Input xref file path name</param>
            <param name="blockName"> Input xref block name symbol to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.OverlayXref(System.String,System.String)">
            <summary>Overlays the xref file specified by fileName to the database, thus creating a new xref BlockTableRecord. The new block table record's name is specified in blockName. Its object ID is returned.</summary>
            <param name="fileName"> Input xref file path name</param>
            <param name="blockName"> Input xref block name symbol to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.DetachXref(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function detaches the xref in the database whose BlockTableRecord is specified by xrefId.</summary>
            <param name="xrefId"> Input object ID of the xref block to detach</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.UnloadXrefs(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Unloads the xrefs whose BlockTableRecord ObjectIds are in xrefIds.</summary>
            <param name="xrefIds"> Input collection of ObjectIds for the xref BlockTableRecords to unload</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ReloadXrefs(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This function reloads the xrefs whose BlockTableRecord ObjectIds are in xrefIds. The ObjectIds in xrefIds must all be from the working database.</summary>
            <param name="xrefIds"> Input collection of ObjectIds for the xref BlockTableRecords to unload</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.BindXrefs(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,System.Boolean)">
            <summary>
This function binds the xrefs whose BlockTableRecord object IDs are in xrefIds. If insertBind is true, then the symbolTable record names will be changed from the xref naming convention to normal insert block names..</summary>
            <param name="xrefIds"> Input collection of ObjectIds for the xref BlockTableRecords to bind.</param>
            <param name="insertBind"> Input System.Boolean to indicate whether or not to convert xref symbols to insert-like bind names.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.XBindXrefs(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,System.Boolean)">
            <summary>
This function binds the xref symbolTable records whose ObjectIds are in xrefSymbolIds. If insertBind is true, then the symbolTable record names will be changed from the xref naming convention to normal insert symbolTable record names..</summary>
            <param name="xrefSymbolIds"> Input collection of ObjectIds of SymbolTableRecord objects to be bound.</param>
            <param name="insertBind"> Input bool to indicate whether or not to convert xref symbols to insert-like bind names.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetHostDwgXrefGraph(System.Boolean)">
            <summary>
Returns the node associated with the host drawing.</summary>
            <param name="includeGhosts"> If set to true, includes ghost nodes.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.LoadMlineStyleFile(System.String,System.String)">
            <summary>This function loads the MlineStyle specified by mlineStyleName from the file specified by fileName. If fileName is not a URL and does not contain any path information, then the AutoCAD library search path will be searched for the file.</summary>
            <param name="mlineStyleName"> Input MlineStyle name string (no wild cards)</param>
            <param name="fileName"> Input path/filename or URL of file to load from (path is optional)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetSupportedSaveVersions">
            <summary>Returns an array with the major and minor version numbers of the saving ability.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.GetSupportedDxfOutVersions">
            <summary>Returns an array with the major and minor version numbers of outputting DXF.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.Wblock">
            <summary>Creates a new Database object, and then uses the wblockClone mechanism to write the entire contents of the database on which this function is being called out to the new database.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.ForceWblockDatabaseCopy">
            <summary>This function causes the next (and only the next) Database.wblock() call on this database to result in a copy of the database. (A database copy was always done by ObjectARX SDK 1.0 and 1.1.).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.Insert(System.String,System.String,Autodesk.AutoCAD.DatabaseServices.Database,System.Boolean)">
            <summary>
This function creates a new block table record in the database executing this function. This new block table record is given the name pointed to by destinationBlockName. Then, each entity in the block table record whose name is sourceBlockName and which resides in the database pointed to by dataBase is copied into the new block table record..</summary>
            <param name="sourceBlockName"> Input name of the blockTableRecord</param>
            <param name="destinationBlockName"> Input name to be used by the new block table record created by this function</param>
            <param name="dataBase"> Input database from which to insert entities</param>
            <param name="preserveSourceDatabase"> Input bool to determine whether the source database is left intact</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.Insert(Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.DatabaseServices.Database,System.Boolean)">
            <summary>
Inserts the Model Space of the database pointed to by dataBase into the Model Space of the database invoking the insert() function. All objects being inserted have the xform matrix passed into their transformBy() function during the insertion process..</summary>
            <param name="transform"> Input transformation matrix applied to all objects being inserted</param>
            <param name="dataBase"> Input database to insert from</param>
            <param name="preserveSourceDatabase"> Input to determine whether the source database pDb will be left intact</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.Insert(System.String,Autodesk.AutoCAD.DatabaseServices.Database,System.Boolean)">
            <summary>
This function mimics the AutoCAD INSERT command. First a new block table record is created in the database executing this function. This new block table record is given the name pointed to by blockName. Then, all the Model Space entities in the database pointed to by dataBase are copied into the new block table record..</summary>
            <param name="blockName"> Input name to be used by the new block table record created by this function</param>
            <param name="dataBase"> Input database from which to insert entities</param>
            <param name="preserveSourceDatabase"> Input bool to determine whether the source database is left intact</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.DeepCloneObjects(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.IdMapping,System.Boolean)">
            <summary>
Clones all objects in the objectId array and appends them to the container object specified by owner. mapping is filled with IdMapping objects that contain the objectId entities of the original and cloned object pairs. This array can be used for post-processing the objects involved in the deepClone operation..</summary>
            <param name="identifiers"> Input collection of objects to be deep cloned</param>
            <param name="id"> Input Object ID of object to be the owner of the clones</param>
            <param name="mapping"> Returns collection of objects to be used for translating object ID relationships</param>
            <param name="deferTranslation"> Input Boolean indicating whether or not ID translation should be done</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.AbortDeepClone(Autodesk.AutoCAD.DatabaseServices.IdMapping)">
            <summary>Triggers an Editor notification that the deepClone operation identified by idMap has been aborted. The IdMapping object will uniquely identify a deepClone operation.</summary>
            <param name="idMap"> Input used in the deepClone operation being aborted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.AuditXData(Autodesk.AutoCAD.DatabaseServices.AuditInfo)">
            <summary>Currently not implemented.</summary>
            <param name="info"> Not implemented</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.DisableUndoRecording(System.Boolean)">
            <summary>
This function turns Undo recording on or off for operations performed on the database. If disable==true, then Undo recording is turned off..</summary>
            <param name="disable"> Input Boolean indicating turn Undo on or off</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.RestoreOriginalXrefSymbols">
            <summary>This function must be used with RestoreForwardingXrefSymbols(), and should be wrapped around all code with plans to edit and/or save Xref databases.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Database.RestoreForwardingXrefSymbols">
            <summary>This function must be used with RestoreOriginalXrefSymbols(), and should be wrapped around all code with plans to edit and/or save Xref databases.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.UpdateThumbnail">
            <summary>Accesses the UPDATETHUMBNAIL header variable value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.GeoDataObject">
            <summary>Accesses the Geo data object ID for this database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.HomeView">
            <summary>Accesses the navigation home view associated with the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimsah">
            <summary>Accesses current DIMSAH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimscale">
            <summary>Accesses the current DIMSCALE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimsd1">
            <summary>Accesses the current DIMSD1 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimsd2">
            <summary>Accesses the current DIMSD2 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimse1">
            <summary>Accesses the current DIMSD1 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimse2">
            <summary>Accesses the current DIMSD2 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimsoxd">
            <summary>Accesses the current DIMSOXD value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtad">
            <summary>Accesses the current DIMTAD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtdec">
            <summary>Accesses the current DIMTDEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtfac">
            <summary>Accesses the current DIMTFAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtfill">
            <summary>Accesses the dimension background color state, which can be one of the following values:.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtfillclr">
            <summary>Accesses the current dimension background color (if dimtfill is set to 1).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtih">
            <summary>Accesses the current DIMTIH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtix">
            <summary>Accesses the current DIMTIX value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtm">
            <summary>Accesses the current DIMTM value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtmove">
            <summary>Accesses the current DIMTMOVE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtofl">
            <summary>Accesses the current DIMTOFL value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtoh">
            <summary>Accesses the current DIMTOH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtol">
            <summary>Accesses the current DIMTOL value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtolj">
            <summary>Accesses the current DIMTOLJ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtp">
            <summary>Accesses the current DIMTP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtsz">
            <summary>Accesses the current DIMTSZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtvp">
            <summary>Accesses the current DIMTVP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtxsty">
            <summary>Accesses the object ID of the TextStyle specified by the current DIMTXSTY value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtxt">
            <summary>Accesses the current DIMTXT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimtzin">
            <summary>Accesses the current DIMTZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimupt">
            <summary>Accesses the current DIMUPT value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimzin">
            <summary>Accesses the current DIMZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.SummaryInfo">
            <summary>Accesses the database's summary info.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DrawOrderCtl">
            <summary>Returns the value of the DRAWORDERCTL system variable, which enables users to revert to legacy draw order mode if required. This system variable is per drawing in order to be consistent with SORTENTS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LayerFilters">
            <summary>Accesses the layer filters.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.CameraHeight">
            <summary>Accesses the value of CAMERAHEIGHT system variable.This value is used as the default when creating new cameras.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LensLength">
            <summary>Accesses the value of LENSLENGTH system variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.CameraDisplay">
            <summary>Accesses the value of the CAMERADISPLAY sysvar to display or hide cameras.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.StepsPerSec">
            <summary>Accesses the current STEPSPERSEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.StepSize">
            <summary>Accesses the current STEPSIZE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DxEval">
            <summary>Accesses the DX Eval value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.SolidHist">
            <summary>Accesses the current SOLIDHIST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ShowHist">
            <summary>Accesses the current SHOWHIST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PsolWidth">
            <summary>Accesses the current PSOLWIDTH value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PsolHeight">
            <summary>Accesses the current PSOLHEIGHT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LoftParam">
            <summary>Accesses the current LOFTPARAM value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LoftNormals">
            <summary>Accesses the current LOFTNORMALS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LoftAng1">
            <summary>Accesses the current LOFTANG1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LoftAng2">
            <summary>Accesses the current LOFTANG2 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LoftMag1">
            <summary>Accesses the current LOFTMAG1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LoftMag2">
            <summary>Accesses the current LOFTMAG2 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TimeZone">
            <summary>Accesses the current time zone for the drawing, an enumerated value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Cshadow">
            <summary>Accesses the value of the CSHADOW system variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Cmaterial">
            <summary>Accesses the object ID of the layer material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ShadowPlaneLocation">
            <summary>Accesses the current ground plane z position in world coordinates. The ground plane is always parallel to the X-Y world plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.AnnoAllVisible">
            <summary>Accesses the current ANNOALLVISIBLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.AnnotativeDwg">
            <summary>Controls whether the drawing is treated as an annotative block when it is inserted into other drawings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.MsLtScale">
            <summary>Accesses the current MSLTSCALE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DwfFrame">
            <summary>Accesses the current DWFFRAME value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DgnFrame">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PdfFrame">
            <summary>This .NET property wraps the ObjectARX functions AcDbDatabase::pdfframe and AcDbDatabase::setPdfframe.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Indexctl">
            <summary>Accesses the INDEXCTL header variable value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LayerEval">
            <summary>Accesses the LAYEREVAL header variable value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LayerNotify">
            <summary>Accesses the value of the LAYEREVAL header variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.MsOleScale">
            <summary>Accesses the value of the LAYERNOTIFY header variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Insunits">
            <summary>Accesses the current INSUNITS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PlotStyleMode">
            <summary>Returns true when this database is using color-dependent plot styles, and false for named plot styles. See the AutoCAD User's Guide for more information on the two types of plot styles.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.CurrentViewportTableRecordId">
            <summary>This .NET property wraps the acdbGetCurVportTableRecordId() ObjectARX function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ViewportScaleDefault">
            <summary>Accesses the database's default value for viewport scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DwgFileWasSavedByAutodeskSoftware">
            <summary>Returns true if it determines that the database was last saved by Autodesk software (such as AutoCAD or AutoCAD LT).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.SortEnts">
            <summary>Accesses the current SORTENTS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DimAssoc">
            <summary>Accesses the current DIMASSOC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.HideText">
            <summary>Accesses the current HIDETEXT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.HaloGap">
            <summary>Accesses the current HALOGAP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ObscuredColor">
            <summary>Accesses the current OBSCUREDCOLOR value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ObscuredLineType">
            <summary>Accesses the current OBSCUREDLINETYPE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.IntersectDisplay">
            <summary>Accesses the INTERSECTIONDISPLAY header variable value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.IntersectColor">
            <summary>Accesses the INTERSECTIONCOLOR header variable value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.AllowExtendedNames">
            <summary>Set to true if extended names are permitted.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Latitude">
            <summary>Accesses the latitude for the location of the model, in decimal degrees. Allowable values are -90 to +90 degrees, where positive numbers represent North latitudes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Longitude">
            <summary>Accesses the longitude for the location of the model, in decimal degrees. Allowable values are -180 to +180 degrees, where positive numbers represent East longitudes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.NorthDirection">
            <summary>Accesses an angle representing a direction towards North, based on the orientation of the drawing model in the WCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LightGlyphDisplay">
            <summary>Accesses whether light objects are displayed in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TileModeLightSynch">
            <summary>For internal use only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LightingUnits">
            <summary>Accesses the lighting units for the drawing, where 0 = Generic, 1 = International, and 2 = American.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LightsInBlocks">
            <summary>Accesses if blocks are ignored and do not contribute lighting to the scene.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.dragvs">
            <summary>Accesses the visual style set in the DRAGVS system variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Cannoscale">
            <summary>Accesses a AnnotationScale object which will be the CANNOSCALE value for the database when model space is current.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.AcadDatabase">
            <summary>Returns the current database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimadec">
            <summary>Accesses the current DIMADEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimalt">
            <summary>Accesses the current DIMALT value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimaltd">
            <summary>Accesses the current DIMALTD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimaltf">
            <summary>Accesses the current DIMALTF value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimaltrnd">
            <summary>Accesses the current DIMALTRND value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimalttd">
            <summary>Accesses the current DIMALTTD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimalttz">
            <summary>Accesses the current DIMALTTZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimaltu">
            <summary>Accesses the current DIMALTU value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimaltz">
            <summary>Accesses the current DIMALTZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimapost">
            <summary>Accesses the current DIMAPOST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimarcsym">
            <summary>Accesses the arc length placement value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimasz">
            <summary>Accesses the current DIMASZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimatfit">
            <summary>Accesses the current DIMATFIT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimaunit">
            <summary>Accesses the current DIMAUNIT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimazin">
            <summary>Accesses the current DIMAZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimcen">
            <summary>Accesses the current DIMCEN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimclrd">
            <summary>Accesses the current DIMCLRD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimclre">
            <summary>Accesses the current DIMCLRE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimclrt">
            <summary>Accesses the current DIMCLRT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimdec">
            <summary>Accesses the current DIMDEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimdle">
            <summary>Accesses the current DIMDLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimdli">
            <summary>Accesses the current DIMDLI value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimdsep">
            <summary>Accesses the current DIMDSEP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimexe">
            <summary>Accesses the current DIMEXE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimexo">
            <summary>Accesses the current DIMEXO value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimfrac">
            <summary>Accesses the current DIMFRAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DimfxlenOn">
            <summary>Accesses a value that indicates whether the fixed extension lines are on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimfxlen">
            <summary>Accesses the fixed extension lines value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimgap">
            <summary>Accesses the current DIMGAP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimjogang">
            <summary>Accesses the current large radial angle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimjust">
            <summary>Accesses the current DIMJUST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimldrblk">
            <summary>Accesses the object ID of the block reference specified by the current DIMLDRBLK value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimlfac">
            <summary>Accesses the current DIMLFAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimlim">
            <summary>Accesses the current DIMLIM value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimltex1">
            <summary>Accesses the object ID of the linetype of extension line 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimltex2">
            <summary>Accesses the object ID of the linetype of extension line 2.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimltype">
            <summary>Accesses the dimension linetype.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimlunit">
            <summary>Accesses the current DIMLUNIT value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimlwd">
            <summary>Accesses the current DIMLWD value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimlwe">
            <summary>Accesses the current DIMLWE value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimrnd">
            <summary>Accesses the current DIMRND value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.HpInherit">
            <summary>Accesses a bool indicating the current HPINHERIT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.HpOrigin">
            <summary>Accesses a 2D point that is the current HPORIGIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tdcreate">
            <summary>Accesses the current TDCREATE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tdupdate">
            <summary>Accesses the current TDUPDATE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tducreate">
            <summary>Accesses the current TDUCREATE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tduupdate">
            <summary>Accesses the current TDUUPDATE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tdindwg">
            <summary>Accesses the current TDINDWG value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tdusrtimer">
            <summary>Accesses the current TDUSRTIMER value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Cecolor">
            <summary>Accesses the current CECOLOR value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Cetransparency">
            <summary>Gets and sets the current CETRANSPARENCY value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Handseed">
            <summary>Accesses the current HANDSEED value for the database. The HANDSEED is a counter which maintains the next available handle number. Handles are 64-bit integers represented in DXF and LISP/ADS in hexadecimal form as a string. In hexadecimal, a 64-bit integer can be up to 16 digits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PlotStyleNameId">
            <summary>Accesses the objectId of the entry in the PlotStyleName dictionary for the plotStyleName of the layer table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Textstyle">
            <summary>Accesses the current TEXTSTYLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Celtype">
            <summary>Accesses the object ID of the linetype specified by the current CELTYPE value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimstyle">
            <summary>Accesses the object ID of the dimstyle specified by the current DIMSTYLE value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tablestyle">
            <summary>Accesses object ID of the table style specified by the current CTABLESTYLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.MLeaderstyle">
            <summary>Accesses the object ID of the MLeader style specified by the current CMLEADERSTYLE value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.SectionViewStyle">
            <summary>The Object ID of the current section view style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DetailViewStyle">
            <summary>The Object ID of the current detail view style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Interfereobjvs">
            <summary>Accesses the visual style for interference objects as defined by the INTERFEREOBJVS system variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Interferevpvs">
            <summary>Accesses the visual style for interference objects as defined by the INTERFEREVPVS system variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Interferecolor">
            <summary>Accesses the color for interference objects as defined by the INTERFERECOLOR system variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.CmlstyleID">
            <summary>Accesses the object ID of the MlineStyle specified by the current CMLSTYLEID value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Cmljust">
            <summary>Accesses the current CMLJUST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Cmlscale">
            <summary>Accesses the current CMLSCALE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Celtscale">
            <summary>Accesses the current CELTSCALE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pinsbase">
            <summary>Accesses the current INSBASE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pextmin">
            <summary>Accesses the current EXTMIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pextmax">
            <summary>Accesses the current EXTMAX value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Plimmin">
            <summary>Accesses the current LIMMIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Plimmax">
            <summary>Accesses the current LIMMAX value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pelevation">
            <summary>Accesses the current ELEVATION value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pucsorg">
            <summary>Accesses the current Paper Space UCSORG value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pucsxdir">
            <summary>Accesses the current Paper Space UCSXDIR value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pucsydir">
            <summary>Accesses the current Paper Space UCSYDIR value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pucs">
            <summary>Sets the Paper Space UCS. The Pucsorg(), Pucsxdir(), and Pucsydir() are the query properties for this UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pucsname">
            <summary>Accesses the object ID of the UCS table entry that is currently in use in the Paper Space of the database (Paper Space value of UCSNAME).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PucsBase">
            <summary>Accesses the object ID of the UcsTableRecord that defines the origin and orientation of orthographic UCS settings for the database's current paper space.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PucsOrthographic">
            <summary>Returns false if the database's paper space UCS does not have an orthographic view whose reference UCS matches the database's PUCSBASE system variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Insbase">
            <summary>Accesses the current Model Space INSBASE value for the database. The point is in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Extmin">
            <summary>Accesses the current Model Space EXTMIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Extmax">
            <summary>Accesses the current Model Space EXTMAX value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Limmin">
            <summary>Accesses the current Model Space LIMMIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Limmax">
            <summary>Accesses the current Model Space LIMMAX value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Elevation">
            <summary>Accesses the Model Space ELEVATION value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Ucsorg">
            <summary>Accesses the current Model Space UCSORG value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Ucsxdir">
            <summary>Accesses the current Model Space UCSXDIR value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Ucsydir">
            <summary>Accesses the current Model Space UCSYDIR value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Ucs">
            <summary>Sets the Model Space UCS. The Ucsorg(), Ucsxdir(), and Ucsydir() are the query properties for this UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Ucsname">
            <summary>Accesses the object ID of the UCS table entry that is currently in use in the Model Space of the database; that is, the Model Space value of UCSNAME.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.UcsBase">
            <summary>Accesses the object ID of the UcsTableRecord that defines the origin and orientation of orthographic UCS settings for the database's model space.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.UcsOrthographic">
            <summary>Accesses the current orthographic view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimpost">
            <summary>Accesses the character string that is the current DIMPOST value for the datatbase.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimblk">
            <summary>Accesses the current DIMBLK value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimblk1">
            <summary>Accesses the current DIMBLK1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimblk2">
            <summary>Accesses the current DIMBLK2 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ProjectName">
            <summary>Accesses the database's PROJECTNAME header variable string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.HyperlinkBase">
            <summary>Accesses the database to use a copy of path as the new value for the HYPERLINKBASE header variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.StyleSheet">
            <summary>Accesses the database's current plot style sheet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Filename">
            <summary>Accesses the filename associated with the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.IsBeingDestroyed">
            <summary>Finds out if this database is in the process of being destroyed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.IsPartiallyOpened">
            <summary>Returns true if the database is in a partially opened state; false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.FingerprintGuid">
            <summary>Accesses the database's fingerprintguid header variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.VersionGuid">
            <summary>Accesses the database's Version GUID string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TStackAlign">
            <summary>Accesses the current TSTACKALIGN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TstackSize">
            <summary>Accesses the current TSTACKSIZE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Saveproxygraphics">
            <summary>Accesses the current PROXYGRAPHICS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DispSilh">
            <summary>Accesses the current DISPSILH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PlineEllipse">
            <summary>Accesses the current PELLIPSE value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Usrtimer">
            <summary>Returns the current USRTIMER value for the database. A value of false is off. A value of true is on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Skpoly">
            <summary>Accesses the current SKPOLY value for the database. The value of false is 0. The value of true is 1. See the System Variables section of the AutoCAD Command Reference for information on SKPOLY.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Angdir">
            <summary>Accesses the current ANGDIR value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Splframe">
            <summary>Accesses the current SPLFRAME value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.XclipFrame">
            <summary>Accesses the value of the XCLIPFRAME header variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Mirrtext">
            <summary>Accesses the current MIRRTEXT value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Worldview">
            <summary>Accesses the current WORLDVIEW value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Plimcheck">
            <summary>Accesses the current Paper Space LIMCHECK value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Visretain">
            <summary>Accesses the current VISRETAIN value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Treedepth">
            <summary>Accesses the current TREEDEPTH value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Lunits">
            <summary>Accesses the current LUNITS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Luprec">
            <summary>Accesses the current LUPREC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Aunits">
            <summary>Accesses the current AUNITS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Auprec">
            <summary>Accesses the current AUPREC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Attmode">
            <summary>Accesses the current ATTMODE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pdmode">
            <summary>Accesses the current PDMODE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Useri1">
            <summary>Returns the current USERI1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Useri2">
            <summary>Returns the current USERI2 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Useri3">
            <summary>Returns the current USERI3 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Useri4">
            <summary>Returns the current USERI4 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Useri5">
            <summary>Returns the current USERI5 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Splinesegs">
            <summary>Accesses the current SPLINESEGS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Surfu">
            <summary>Accesses the current SURFU value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Surfv">
            <summary>Accesses the current SURFV value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Surftype">
            <summary>Accesses the current SURFTYPE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Surftab1">
            <summary>Accesses the current SURFTAB1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Surftab2">
            <summary>Accesses the current SURFTAB2 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Splinetype">
            <summary>Accesses the current SPLINETYPE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Shadedge">
            <summary>Accesses the current SHADEDGE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Shadedif">
            <summary>Accesses the current SHADEDIF value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Measurement">
            <summary>Accesses the current MEASUREMENT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Unitmode">
            <summary>Returns the current UNITMODE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Maxactvp">
            <summary>Accesses the current MAXACTVP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Isolines">
            <summary>Accesses the current ISOLINES value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Ltscale">
            <summary>Accesses the current LTSCALE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Textsize">
            <summary>Accesses the current TEXTSIZE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Tracewid">
            <summary>Accesses the current TRACEWID value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Sketchinc">
            <summary>Accesses the current SKETCHINC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Filletrad">
            <summary>Accesses the current FILLETRAD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Thickness">
            <summary>Accesses the current THICKNESS value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Celweight">
            <summary>Accesses the LineWeight value indicating what the current line weight is for the database. See the System Variables section of the AutoCAD Command Reference for information on CELWEIGHT.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.EndCaps">
            <summary>Accesses the database's endCaps header variable value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.JoinStyle">
            <summary>Accesses the database's joinstyle header variable value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LineWeightDisplay">
            <summary>Accesses the line weight display status.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.XrefEditEnabled">
            <summary>Accesses the database's XEDIT value. A return value of true is the same as an XEDIT value of 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.OleStartUp">
            <summary>Accesses the database's OLESTARTUP header variable value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Angbase">
            <summary>Accesses the current ANGBASE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Pdsize">
            <summary>Accesses the current PDSIZE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Plinewid">
            <summary>Accesses the current PLINEWID value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Userr1">
            <summary>Returns the current USERR1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Userr2">
            <summary>Returns the current USERR2 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Userr3">
            <summary>Returns the current USERR3 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Userr4">
            <summary>Returns the current USERR4 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Userr5">
            <summary>Returns the current USERR5 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Chamfera">
            <summary>Accesses the current CHAMFERA value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Chamferb">
            <summary>Accesses the current CHAMFERB value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Chamferc">
            <summary>Accesses the current CHAMFERC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Chamferd">
            <summary>Accesses the current CHAMFERD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Facetres">
            <summary>Accesses the current Model Space FACETRES value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Menu">
            <summary>Accesses the menu display text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LayerTableId">
            <summary>Accesses the object ID of the database's LayerTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LinetypeTableId">
            <summary>Accesses the object ID of the database's LinetypeTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TransactionManager">
            <summary>Accesses the TransactionManager for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LayerStateManager">
            <summary>Accesses Class the layer state manager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ObjectContextManager">
            <summary>Accesses the object context manager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TileMode">
            <summary>Accesses the current TILEMODE value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Clayer">
            <summary>Accesses the object ID of the LAYER specified by the current CLAYER value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.BlockTableId">
            <summary>Returns the object ID of the database's BlockTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TextStyleTableId">
            <summary>Accesses the object ID of the database's TextStyleTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ViewTableId">
            <summary>Accesses the object ID of the database's ViewTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.UcsTableId">
            <summary>Accesses the object ID of the database's UCSTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ViewportTableId">
            <summary>Accesses the object ID of the database's ViewportTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.RegAppTableId">
            <summary>Accesses the object ID of the database's RegAppTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DimStyleTableId">
            <summary>Accesses the object ID of the database's DimStyleTable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.MLStyleDictionaryId">
            <summary>Accesses the object ID of the database's MLStyle dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.GroupDictionaryId">
            <summary>Accesses the object ID of the database's Group dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LayoutDictionaryId">
            <summary>Accesses the object ID of the ACAD_LAYOUT dictionary, which contains objects of type Layout. The Layout dictionary stores characteristics of each Paper Space layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PlotStyleNameDictionaryId">
            <summary>Accesses the object ID of the database's plot style name dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.MaterialDictionaryId">
            <summary>Accesses the object ID of the ACAD_MATERIAL dictionary, which contains objects of type Material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.VisualStyleDictionaryId">
            <summary>Accesses the object ID of the ACAD_VISUALSTYLE dictionary, which contains objects of type VisualStyle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ColorDictionaryId">
            <summary>Accesses the object ID of the database's color dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.NamedObjectsDictionaryId">
            <summary>Accesses the object ID of the database's NamedObjects dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PlotSettingsDictionaryId">
            <summary>Accesses the object ID of the ACAD_PLOTSETTINGS dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LayerZero">
            <summary>Accesses the object ID of the layer 0 LayerTableRecord for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ContinuousLinetype">
            <summary>Accesses the object ID of the continuous linetype LinetypeTableRecord for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ByLayerLinetype">
            <summary>Returns the object ID of the BYLAYER LinetypeTableRecord for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ByBlockLinetype">
            <summary>Returns the object ID of the BYBLOCK LinetypeTableRecord for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.PaperSpaceVportId">
            <summary>Accesses the object ID of the paperspace Viewport for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.CurrentSpaceId">
            <summary>Accesses the object ID of the BlockTableRecord of the current space (e.g., model space or paper space.).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.TableStyleDictionaryId">
            <summary>Accesses the object ID of the table style dictionary in named object dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.MLeaderStyleDictionaryId">
            <summary>For the ACAD_MLEADERSTYLE dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.SectionViewStyleDictionaryId">
            <summary>The Object ID of the section view style dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DetailViewStyleDictionaryId">
            <summary>The Object ID of the detail view style dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.SectionManagerId">
            <summary>Accesses the section manager associated with this database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DataLinkDictionaryId">
            <summary>Accesses the data link's dictionary ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.DataLinkManager">
            <summary>Returns the ID of the data link manager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ApproxNumObjects">
            <summary>Returns a value that is at least as large as the number of objects in the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.NumberOfSaves">
            <summary>Accesses the number of times the database has been saved in the current session, or zero if it has not been saved in the current session.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.OriginalFileName">
            <summary>Accesses the file name that the database was originally opened under. May return a null pointer if the database was created from a DXF file or a pre-R13 drawing file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LastSavedAsVersion">
            <summary>Accesses the version that the current drawing was last saved as in the current session. If the current session has not yet done a save on this drawing, then it returns zero.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.OriginalFileVersion">
            <summary>Accesses the version value that the database file had when it was first opened.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.OriginalFileSavedByVersion">
            <summary>Accesses the version value of the last AutoCAD product which saved the drawing file, not counting the current session.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.LastSavedAsMaintenanceVersion">
            <summary>Accesses the maintenance version that the current drawing was last saved as in the current session. If the current session has not yet done a save on this drawing, then it returns zero.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.OriginalFileMaintenanceVersion">
            <summary>Accesses the maintenance version value that the database file had when it was first opened.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.OriginalFileSavedByMaintenanceVersion">
            <summary>Accesses the maintenance version value of the last AutoCAD product which saved the drawing file, not counting the current session.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.UndoRecording">
            <summary>Returns true if undo recording is enabled for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.FileDependencyManager">
            <summary>Accesses the FileDependencyManager object for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.MaintenanceReleaseVersion">
            <summary>Determines which point release of AutoCAD created this database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.XrefBlockId">
            <summary>Accesses the object ID of the BlockTableRecord which refers to this database as an xref.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.ThumbnailBitmap">
            <summary>Accesses the thumbnail bitmap image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.RetainOriginalThumbnailBitmap">
            <summary>Accesses the status of the thumbnail bitmap toggle flag. The status is FALSE by default. If it is toggled to TRUE, the Database will always try to retain the original image, no matter what other action is taken.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.SecurityParameters">
            <summary>Accesses the security parameters associated with this database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimaso">
            <summary>Accesses the current DIMASO value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Dimsho">
            <summary>Accesses the current DIMSHO value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Plinegen">
            <summary>Accesses the current PLINEGEN value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Orthomode">
            <summary>Accesses the current ORTHOMODE value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Regenmode">
            <summary>Accesses the current REGENMODE value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Fillmode">
            <summary>Accesses the current FILLMODE value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Qtextmode">
            <summary>Accesses the current QTEXTMODE value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Psltscale">
            <summary>Accesses the current PSLTSCALE value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Database.Limcheck">
            <summary>Accesses the current Model Space LIMCHECK value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SubentityType">
            <summary>
This .NET enum wraps the AcDb::SubentType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection">
            <summary>
This class contains a collection of Object IDs.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Index of object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.Clear">
            <summary>Erases the entire collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.Add(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Item to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.Contains(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if value exists within the collection.</summary>
            <param name="value"> Item to check for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.IndexOf(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns the zero-based index of the collection item that matches value.</summary>
            <param name="value"> Item to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.Insert(System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Index to insert at</param>
            <param name="value"> Item to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.Remove(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.ObjectId[],System.Int32)">
            <summary>Copies objects in array to this collection, starting from index.</summary>
            <param name="array"> Array to copy from</param>
            <param name="index"> Index to begin at</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection.Count">
            <summary>Accesses the total number of objects in the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs">
            <summary>
This class provides data for the EntityAlignment event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs.GetPickedEntities">
            <summary>This method returns an array containing the full subentity paths of the picked entities.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs.Entity">
            <summary>Accesses the Entity property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs.PickPoint">
            <summary>Accesses the PickPoint property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs.Normal">
            <summary>Accesses the Normal property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs.ClosestPoint">
            <summary>Accesses the ClosestPoint property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs.Direction">
            <summary>Accesses the Direction property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Entity">
            <summary>
This .NET class wraps the AcDbEntity ObjectARX class. It is the base class for all database objects having a graphical representation.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.SetLayerId(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
This method sets entity to reference the LayerTableRecord identified by the name specified in newValue. For an BlockReference entity, this method will also update any associated SequenceEnd subentity..</summary>
            <param name="newValue"> Input name of the LayerTableRecord to be referenced by the entity</param>
            <param name="allowHidden"> Input Boolean indicating whether to allow newValue to specify a hidden layer</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.SetPropertiesFrom(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This method copies the.</summary>
            <param name="entityPointer"> Input entity from which to copy the properties</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetPlane">
            <summary>Returns the plane which contains the curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.AddSubentityPaths(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>Adds one or more subentities to an entity.</summary>
            <param name="subPaths"> Input an array of FullSubentityPath identifiers to add to the entity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.DeleteSubentityPaths(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>Deletes one or more subentities from an entity.</summary>
            <param name="subPaths"> Input an array of FullSubentityPath identifiers to delete from the entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.TransformSubentityPathsBy(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Applies a geometric transformation to one or more subentities on an object.</summary>
            <param name="subPaths"> Input an array of one or more FullSubentityPath objects identifying the subentities to transform</param>
            <param name="transform"> Input the WCS transformation to apply to each of the supplied subentities.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetGripPointsAtSubentityPath(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.DatabaseServices.GripDataCollection,System.Double,System.Int32,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags)">
            <summary>This .NET method wraps the ObjectARX method AcDbEntity::getGripPointsAtSubentPath.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetSubentityGeometricExtents(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>Retrieves the geometric extents for a subentity.</summary>
            <param name="subPath"> Input the path to the subentity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetGraphicsMarkersAtSubentityPathIntPtr(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>Entities use various graphic primitives to draw themselves. Part of this mechanism is the ability to associate an integer identifier called a graphics system marker (or, GS marker) with each primitive or with groups of primitives. Through the use of certain selection mechanisms the GS marker for the actual subentity selected on screen can be obtained and used with this function and several other functions for various purposes such as highlighting or unhighlighting the subentity on screen.</summary>
            <param name="subPath"> Input FullSubentityPath object that contains an SubentId property with the information necessary to determine the subentity (or subentities) for which the GS Marker(s) is requested.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.Highlight(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,System.Boolean)">
            <summary>
This function uses the FullSubentityPath ID to determine which subentity in the entity is desired. It then highlights that subentity on screen. If no FullSubentityPath argument is provided, then the entire entity will be highlighted..</summary>
            <param name="subId"> Input FullSubentityPath that identifies the subentity to highlight</param>
            <param name="highlightAll"> Input Boolean indicating whether to highlight in all viewports</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.Highlight">
            <summary>This function highlights the entire entity on the screen.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.Unhighlight(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,System.Boolean)">
            <summary>
This function uses the FullSubentityPath id to determine which subentity in the entity is desired. It then unhighlights that subentity on screen. If no FullSubentityPathargument is provided, then the entire entity will be unhighlighted..</summary>
            <param name="subId"> Input FullSubentityPath that identifies which subentity to unhighlight</param>
            <param name="highlightAll"> Input Boolean indicating whether to unhighlight in all viewports</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.Unhighlight">
            <summary>This unhighlights the entire entity on screen.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.PushHighlight(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.GraphicsInterface.HighlightStyle)">
            <summary>This wraps the ObjectARX AcDbEntity::pushHighlight() method.</summary>
            <param name="subId"> Input AcDbFullSubentPath that identifies the subentity to highlight</param>
            <param name="highlightStyle"> Input AcGiHighlightStyle for this subid</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.PopHighlight(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This wraps the ObjectARX AcDbEntity::popHighlight() method.</summary>
            <param name="subId"> Input AcDbFullSubentPath that identifies the subentity to unhighlight</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.HighlightState(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This wraps the ObjectARX AcDbEntity::highlightState() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetObjectSnapPoints(Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes,System.Int32,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This function behaves exactly as its counterpart without the insertionMat parameter. Entities contained in a block will receive the block transformation in the insertionMat parameter.</summary>
            <param name="snapMode"> Input osnap mode being requested</param>
            <param name="gsSelectionMark"> Input GS marker of the subentity involved in the object snap operation</param>
            <param name="pickPoint"> Input point (in WCS coordinates) picked during the object snap operation</param>
            <param name="lastPoint"> Input point (in WCS coordinates) selected just before pickPoint</param>
            <param name="viewTransform"> Input transformation matrix to transform from WCS to DCS</param>
            <param name="snapPoints"> Input pre-existing array to append osnap points to (may already contain points); output with object snap points appended</param>
            <param name="geometryIds"> Not in use</param>
            <param name="insertionMat"> Input block transformation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetObjectSnapPoints(Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes,System.Int32,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Matrix3d,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This function must use the material provided in snapMode, gsSelectionMark, pickPoint, lastPoint, and viewTransform to determine all appropriate osnap points for the entity. It must then append all such osnap points to the snapPoints array.</summary>
            <param name="snapMode"> Input osnap mode being requested</param>
            <param name="gsSelectionMark"> Input GS marker of the subentity involved in the object snap operation</param>
            <param name="pickPoint"> Input point (in WCS coordinates) picked during the object snap operation</param>
            <param name="lastPoint"> Input point (in WCS coordinates) selected just before pickPoint</param>
            <param name="viewTransform"> Input transformation matrix to transform from WCS to DCS</param>
            <param name="snapPoints"> Input pre-existing array to append osnap points to (may already contain points); output with object snap points appended</param>
            <param name="geometryIds"> Not in use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetGripPoints(Autodesk.AutoCAD.DatabaseServices.GripDataCollection,System.Double,System.Int32,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags)">
            <summary>This .NET method wraps the ObjectARX method AcDbEntity::getGripPoints.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetGripPoints(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This function supports "old style" grips, in applications that existed before the enhancement of grip functionality.</summary>
            <param name="gripPoints"> Input pre-existing array to append the grip points to; output with the entity's grip points appended</param>
            <param name="snapModes"> not currently used</param>
            <param name="geometryIds"> not currently used</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.MoveGripPointsAt(Autodesk.AutoCAD.DatabaseServices.GripDataCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags)">
            <summary>This .NET method wraps the ObjectARX method AcDbEntity::moveGripPointsAtSubentPaths.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.MoveGripPointsAt(Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function is intended to be called by AutoCAD during a grip edit of the entity. However, it is certainly possible for ObjectARX applications to call this function.</summary>
            <param name="indices"> Input array containing index values (which correspond to grip points reported by the GetGripPoints() method) that indicate which grip points are currently "hot"</param>
            <param name="offset"> Input vector (in WCS coordinates) indicating the direction and magnitude that the grip points have been translated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetStretchPoints(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This function is not intended to be called by ObjectARX applications. However, it is possible to do so (for example, as a pass-through from the GetGripPoints() method).</summary>
            <param name="stretchPoints"> Input pre-existing array to append the stretch points to; output with the entity's stretch points appended</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.MoveStretchPointsAt(Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function is intended to be called by AutoCAD during execution of a stretch command in which the entity has been selected. However, it is certainly possible for ObjectARX applications to call this function.</summary>
            <param name="indices"> Input array containing index values (which correspond to stretch points reported by the GetStretchPoints() method) that indicate which stretch points are being translated</param>
            <param name="offset"> Input vector (in WCS coordinates) indicating the direction and magnitude that the stretch points have been translated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.List">
            <summary>This function is intended to be called from AutoCAD whenever the entity is selected during the LIST command. However, it can be called from ObjectARX applications if desired.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.TransformBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This function provides a means by which AutoCAD and ObjectARX applications can ask the entity to apply a transformation matrix (xform) to itself.</summary>
            <param name="transform"> Input transformation matrix to be applied to the entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetTransformedCopy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This function creates a clone of the entity, applies the transform transformation matrix to the clone, and then returns the transformed clone.</summary>
            <param name="transform"> Input matrix by which to transform the copy of the entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.GetSubentity(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>Obtains the subentity.</summary>
            <param name="id"> Input the path to the subentity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.Explode(Autodesk.AutoCAD.DatabaseServices.DBObjectCollection)">
            <summary>This function is primarily intended for AutoCAD to call as part of an explode operation that includes this entity. However, this function can be used by ObjectARX applications to obtain a collection of pointers to non-database-resident entity objects that are what the entity considers to be its exploded parts.</summary>
            <param name="entitySet"> Input collection of pointers to new entities; this array may already contain pointers from other entities' explode() methods</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.RecordGraphicsModified(System.Boolean)">
            <summary>
This method sets the entity's state to indicate whether or not the entity should be updated on screen when it is closed. If the entity is set not to update, then any changes made will appear the next time the entity is regenerated..</summary>
            <param name="setModified"> Input Boolean value to indicate if the entity's graphics should be updated on screen when the object is closed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.Draw">
            <summary>This function queues up the entity's graphics and flushes the graphics queue, forcing the entity and anything else in the queue to be drawn or re-drawn on-screen.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.SetDatabaseDefaults(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>This function sets the entity's:.</summary>
            <param name="sourceDatabase"> Input database whose defaults will be used to set the values of the entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.SetDatabaseDefaults">
            <summary>This function sets the entity's.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.SetDragStatus(Autodesk.AutoCAD.DatabaseServices.DragStatus)">
            <summary>This function is called when a drag operation involving this entity is starting, ending, or aborting. The status argument provides information about what is happening with the drag operation.</summary>
            <param name="status"> Value describing the status of the drag operation; one of the values from the DragStat enumeration</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.SetGripStatus(Autodesk.AutoCAD.DatabaseServices.GripStatus)">
            <summary>This notification allows the entity to perform any required resource management tasks before the grip's GripStatus objects and any alternate basepoint objects pointed to by the GripStatus objects are deleted.</summary>
            <param name="status"> Value describing the status of the grip operation; one of the values from the GripStatus enumeration</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.SetSubentityGripStatus(Autodesk.AutoCAD.DatabaseServices.GripStatus,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This function is called with a status value of GripsToBeDeleted when the grips for the subentity are about to be deleted in the host application. This notification allows the entity to perform any required resource management tasks before the grip's GripStatus objects and any alternate base point objects pointed to by the GripStatus objects are deleted. This notification may be sent more than once for a given grip edit session. If the grip edit session is not over when this notification is sent, the entity will subsequently receive a call to its GetGripPoints() function to acquire new grip points to be used by the grip edit session.</summary>
            <param name="status"> Input the status of the grip operation</param>
            <param name="subentity"> Input the subentity on the object whose grip status changed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.JoinEntity(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This wraps AcDbJoinEntityPE::joinEntity, which when implemented for an Entity, it can be used to join two supported entities together. Some implementations might require the this and the secondary entity be of the same type, while other implementations might convert the data from the secondary entity to match the type of the this entity.</summary>
            <param name="secondaryEntity"> The secondary entity, which provides the data to be joined to the this entity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Entity.JoinEntities(Autodesk.AutoCAD.DatabaseServices.Entity[])">
            <summary>This wraps AcDbJoinEntityPE::joinEntities(), which when implemented for an Entity can be used to join supported entities together. Some implementations might require the entities be of the same type, while other implementations might convert the data from the other entities to match the type of the this entity.</summary>
            <param name="otherEntities"> The other entities to be joined to the primary entity. Note, some implementations might require all of these entities to be of the same type as the primary entity.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.BlockId">
            <summary>Accesses the ObjectId of the entity's owner, which must be a BlockTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Color">
            <summary>Accesses the full true color information for the entity within an instance of Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.ColorIndex">
            <summary>Accesses the AutoCAD color number of the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.EntityColor">
            <summary>Accesses the color settings of the entity in an EntityColor form.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Transparency">
            <summary>Accesses the transparency value for the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.PlotStyleName">
            <summary>Accesses the plotstyle name string of the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.PlotStyleNameId">
            <summary>Accesses the object ID of the PlaceHolder object referenced by the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Layer">
            <summary>Accesses the name string in the LayerTableRecord object referenced by the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.LayerId">
            <summary>Accesses the ObjectId of the LayerTableRecord referenced by the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Linetype">
            <summary>Accesses the name string in the LinetypeTableRecord object referenced by the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.LinetypeId">
            <summary>Accesses the ObjectId of the LinetypeTableRecord referenced by the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.LinetypeScale">
            <summary>Accesses the linetype scale factor for the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Visible">
            <summary>Accesses the visibility of an entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.LineWeight">
            <summary>Accesses the LineWeight of the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.CollisionType">
            <summary>Accesses the collision detection treatment for this entity. Subclasses may override this method to customize how the class interacts in collision-aware features.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.IsPlanar">
            <summary>Assesses if a plane contains the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Ecs">
            <summary>Accesses a transformation matrix that can be used to transform vectors or points from the object's object coordinate system (OCS) to the World Coordinate System (WCS).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.GeometricExtents">
            <summary>Accesses the corner points (in WCS coordinates) of a box (with edges parallel to the WCS X, Y, and Z axes) that encloses the 3D extents of the entity, and return those points as an instance of class Extents in the "extents" parameter.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.CompoundObjectTransform">
            <summary>Accesses the transformation matrix used for nested objects.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.CloneMeForDragging">
            <summary>Accesses whether a clone should be created for use in a dragging operation. AutoCAD has always created a clone in the past, but due to entities with large amounts of data (for example, polylines) it is sometimes desirable to have AutoCAD perform dragging with the original entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Hyperlinks">
            <summary>Accesses a collection of hyperlinks associated with the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.CastShadows">
            <summary>Accesses whether the entity can cast shadows.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.ReceiveShadows">
            <summary>Accesses whether this entity can receive shadows.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.Material">
            <summary>Accesses the material name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.MaterialId">
            <summary>Accesses the ID of the associated Material object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.MaterialMapper">
            <summary>Accesses the Mapper that is use to map a material to the entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.BlockName">
            <summary>Accesses the name of the owner block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.ForceAnnoAllVisible">
            <summary>Accesses the current ANNOALLVISIBLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.VisualStyleId">
            <summary>Get and set the full visual style object ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.FaceStyleId">
            <summary>Get and set the face-only visual style object ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Entity.EdgeStyleId">
            <summary>Get and set the edge-only visual style object ID.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Drawable">
            <summary>
This .NET class wraps the AcGiDrawable ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Drawable.SetAttributes(Autodesk.AutoCAD.GraphicsInterface.DrawableTraits)">
            <summary>This function will take the input DrawableTraits object and set the values for the current object’s subentity traits.</summary>
            <param name="traits"> Input object to be set. Traits are filled in with the calling objects subentity traits values.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Drawable.IsPersistent">
            <summary>Returns true if the Drawable object is database resident (belongs to an Model that requires the use of open and close functions). Returns false if the Drawable object is non-persistent (pointer-based); these drawables are accessed directly through their Drawable pointer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Drawable.Id">
            <summary>Returns the database ID that corresponds to this drawable (if the drawable is persistent).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Drawable.DrawableType">
            <summary>Accesses the type of the current drawable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Drawable.Bounds">
            <summary>Accesses the bounds of the drawable, if available. Returns null if the drawable does not have bounds or the bounds cannot be computed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Drawable.DrawStream">
            <summary>This is DrawStream, a member of class Drawable.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DrawableType">
            <summary>
This .NET class wraps the AcGiDrawable::DrawableType ObjectARX class. Indicates the type of a drawable object. By default the type on all drawables is kGeometry.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor">
            <summary>
This .NET class wraps certain elements within the AcGiTextStyle ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.#ctor(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
Constructs a new FontDescriptor.</summary>
            <param name="typeFace"> Input the font name</param>
            <param name="bold"> Input true for a bold text</param>
            <param name="italic"> Input true for an italic text</param>
            <param name="characters"> Input indicating the character set being used</param>
            <param name="pitchAndFamily"> Input indicating the pitch and family being used</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.FontDescriptor,Autodesk.AutoCAD.GraphicsInterface.FontDescriptor)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.op_Equality(Autodesk.AutoCAD.GraphicsInterface.FontDescriptor,Autodesk.AutoCAD.GraphicsInterface.FontDescriptor)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.TypeFace">
            <summary>Returns font name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.Bold">
            <summary>Returns Boolean indicating bold text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.Italic">
            <summary>Returns Boolean indicating italic text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.CharacterSet">
            <summary>Returns integer indicating the character set being used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FontDescriptor.PitchAndFamily">
            <summary>Returns integer indicating the pitch and family being used.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.TextStyle">
            <summary>
This .NET class wraps the AcGiTextStyle ObjectARX class. This class is used to set the display attributes of text. It is passed as an argument to one of the Geometry.Text() member functions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.ExtentsBox(System.String,System.Boolean,System.Boolean,Autodesk.AutoCAD.GraphicsInterface.WorldDraw)">
            <summary>
This function provides the means to find out the extents of the text string value1 when using the TextStyle..</summary>
            <param name="value1"> Input text string for which the extents are to be determined</param>
            <param name="includeSpaces"> Input indicating if leading and trailing spaces are to be included</param>
            <param name="raw"> Input indicating if the AutoCAD escape sequences are to be interpreted</param>
            <param name="context"> Input if NULL, the AutoCAD default regen pipeline is used to calculate extents</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.SetTrackKerning(System.Double)">
            <summary>For internal use.</summary>
            <param name="trackPercent"> Input. For internal use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.FromTextStyleTableRecord(System.String)">
            <summary>Copies the style properties from the TextStyleTableRecord whose name is AcDbStyleName.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.FromTextStyleTableRecord(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Copies the style properties from the TextStyleTableRecord whose ObjectId is AcDbStyleId.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.ToTextStyleTableRecord(System.String)">
            <summary>Copies the style properties to the TextStyleTableRecord whose name is AcDbStyleName.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.ToTextStyleTableRecord(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Copies the style properties to the TextStyleTableRecord whose ObjectId is AcDbStyleId.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TextStyle.ToTextStyleTableRecord">
            <summary>Copies the style properties to a TextStyleTableRecord whose name is same as this TextStyle's name. If no such record exists, then one is created. If this TextStyle has no name, then a random name will be generated and used for both this TextStyle and the TextStyleTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.LoadStyleRec">
            <summary>This function loads a font (not a style) and is run after TextStyle.FileName or TextStyle.BigFontFileName has set the font file name. This function must be called after loading a True Type font (TTF). It also must be called after changing any TextStyle properties, such as tracking percent, in order to load the new values into the graphics system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.TextSize">
            <summary>Returns the text height currently in use by the TextStyle object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.XScale">
            <summary>Returns the X scale factor currently in use by the TextStyle object. The X scale factor is applied to the character cell widths as each character is drawn to allow the width to be adjusted independently of the height. For example, if the xScale value is 0.8, then each character will be drawn at 80% of its normal "unadjusted" width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.ObliquingAngle">
            <summary>Returns the text obliquing angle (in radians) currently in use by the TextStyle object. If no obliquing angle has been set, then 0 is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.TrackingPercent">
            <summary>Returns the tracking percent in use by the TextStyle object. The value may be between 0.75 and 4.0. The tracking percent is a factor applied to the distance between the starting points of successive characters. A value of 1.0 indicates that the characters have no spacing adjustment (that is, they are spaced based only on the character definitions in the font file).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.Backward">
            <summary>Returns Boolean indicating if text should be displayed backwards.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.UpsideDown">
            <summary>Returns True if the TextStyle object is set to display text upside down. Otherwise returns False.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.Vertical">
            <summary>Returns True if the TextStyle object is set to display text vertically rather than horizontally. Otherwise returns False.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.Underlined">
            <summary>Returns true if the TextStyle object is set to display underlined text. Otherwise returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.Overlined">
            <summary>Returns true if the TextStyle object is set to display text with a line over it (that is, similar to underlining, but over the text instead of under it). Otherwise returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.Strikethrough">
            <summary>This wraps the AcGiTextStyle::setStrikethrough() and AcGiTextStyle::strikethrough().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.FileName">
            <summary>Returns the font file name in use by the TextStyle object. If no font file name has been set in the object, then NULL is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.BigFontFileName">
            <summary>Returns the big font file name in use by the TextStyle object. If no big font file name has been set in the object, then NULL is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.StyleName">
            <summary>Returns a pointer to the styleName of the TextStyle object. The returned name meets the same restrictions as any symbol table name (that is, alphanumeric or "|" only and 32 characters maximum). The return value is NULL if no styleName has been set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.Font">
            <summary>Returns the font definition from the TextStyle object. The returned values are the typeface, the bold and italics style attributes, the character set, and the pitch and family attributes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TextStyle.PreLoaded">
            <summary>For internal use.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CoordinateSystem3d">
            <summary>
This struct encapsulates the origin point, and X-, Y-, and Z-axis vectors that define a 3D coordinate system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.IsEqualTo(Autodesk.AutoCAD.Geometry.CoordinateSystem3d)">
            <summary>This method calls CoordinateSystem3d.IsEqualTo(CoordinateSystem3d a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input object to compare with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.IsEqualTo(Autodesk.AutoCAD.Geometry.CoordinateSystem3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests a against this object for equivalency within the tolerance range specified by tolerance.</summary>
            <param name="a"> Input object to compare with</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.op_Inequality(Autodesk.AutoCAD.Geometry.CoordinateSystem3d,Autodesk.AutoCAD.Geometry.CoordinateSystem3d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.op_Equality(Autodesk.AutoCAD.Geometry.CoordinateSystem3d,Autodesk.AutoCAD.Geometry.CoordinateSystem3d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.Origin">
            <summary>Returns the origin of the coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.Xaxis">
            <summary>Returns the vector defining the x axis of the coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.Yaxis">
            <summary>Returns the vector defining the y axis of the coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CoordinateSystem3d.Zaxis">
            <summary>Returns the vector defining the z axis of the coordinate system.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Line3d">
            <summary>
This .NET class wraps the AcGeLine3d ObjectARX class. It represents an unbounded line in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs an unbounded line that passes through point1 and point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input any 3D point</param>
            <param name="point2"> Input any 3D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs an unbounded line that passes through pnt and has a direction of vec. vec must not be a zero-length vector.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line3d.#ctor">
            <summary>Default constructor. Constructs an unbounded line that is coincident with the X axis.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes the definition of the line to pass through point1 and point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input any 3D point</param>
            <param name="point2"> Input any 3D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Changes the definition of the line to pass through point in the direction of vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input any 3D point</param>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Matrix3dBuilder">
            <summary>
This class is required to build instances of Autodesk.AutoCAD.Geometry.Matrix3d , which is an immutable value type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3dBuilder.#ctor(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Constructs a new builder based on an existing matrix.</summary>
            <param name="value"> Input matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3dBuilder.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix3dBuilder.ToMatrix3d">
            <summary>Returns the Matrix3d object built using this object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.IdPair">
            <summary>
This .NET class wraps the AcDbIdPair ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdPair.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
This constructor allows the creation of an IdPair object with all internal data specified in the arguments passed in.</summary>
            <param name="key"> Input objectId to use as the key</param>
            <param name="value"> Input objectId to use as the value</param>
            <param name="isCloned"> Input Boolean indicating if it has been cloned already</param>
            <param name="isPrimary"> Input Boolean indicating if it is a primary object</param>
            <param name="isOwnerTranslated"> Input Boolean indicating if its owner has already been translated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdPair.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdPair.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdPair.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdPair.op_Inequality(Autodesk.AutoCAD.DatabaseServices.IdPair,Autodesk.AutoCAD.DatabaseServices.IdPair)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdPair.op_Equality(Autodesk.AutoCAD.DatabaseServices.IdPair,Autodesk.AutoCAD.DatabaseServices.IdPair)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdPair.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdPair.Key">
            <summary>Accesses the key (which is the objectId of the original object).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdPair.Value">
            <summary>Accesses the value (which is the objectId of the cloned object).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdPair.IsCloned">
            <summary>Assesses if the key object has been cloned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdPair.IsPrimary">
            <summary>Assesses if the key object is part of the primary set of objects being cloned, or if it was "deep cloned" because it was owned by a cloned primary object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdPair.IsOwnerTranslated">
            <summary>Assesses if the owner has been translated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.IdMapping">
            <summary>IdMapping is used by the deep clone operation to map ObjectIds between original objects and their clones (using IdPairs).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdMapping.#ctor">
            <summary>Default constructor. The new IdMapping object is initialized as follows:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdMapping.Add(Autodesk.AutoCAD.DatabaseServices.IdPair)">
            <summary>This function adds pairToAdd to the IdMapping object's map.</summary>
            <param name="pairToAdd"> Input IdPair to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdMapping.Lookup(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function searches the IdMapping object's ID map for an IdPair that has a key that matches the key passed.</summary>
            <param name="key"> Input key to look for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdMapping.Change(Autodesk.AutoCAD.DatabaseServices.IdPair)">
            <summary>This function searches the IDMapping object's map for the key contained in pairToChange and, if found, replaces the entry with a copy of pairToChange.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdMapping.Delete(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function searches the IdMapping ID map for an entry that has a key matching key. If a matching entry is found, it is deleted from the ID map.</summary>
            <param name="key"> Input objectId which is the key of the ID pair to be deleted from the map</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdMapping.Contains(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function searches the IdMapping object's ID map for an IdPair that has a key that matches the key passed.</summary>
            <param name="key"> Input key to look for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IdMapping.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdMapping.DestinationDatabase">
            <summary>Accesses the database that is the destination for the deep clone operation for which the IdMapping object is being used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdMapping.OriginalDatabase">
            <summary>Accesses the source database for the deep clone operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdMapping.DeepCloneContext">
            <summary>Accesses the context of the deepclone operation the IdMapping object is involved in.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdMapping.DuplicateRecordCloning">
            <summary>Accesses the value for duplicate record cloning, which determines what happens if symbols or dictionary entries are cloned, and a duplicate is found to already exist in the destination database.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DeepCloneType">
            <summary>
This .NET class wraps the AcDb::DeepCloneType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning">
            <summary>
This .NET class wraps the DuplicateRecordCloning ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEventArgs">
            <summary>
This class provides data for the XrefSubCommand event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEventArgs.xrefOp">
            <summary>Returns the xrefOp property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEventArgs.btrIds">
            <summary>Returns the block table record id collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEventArgs.btrNames">
            <summary>Returns the block table record  names.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEventArgs.paths">
            <summary>Returns the path of block table  records.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefOperation">
            <summary>
This class enumerates the XREF subcommands.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefVetoableSubCommandEventArgs">
            <summary>
This class provides data for the XrefVetoableSubCommand event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefVetoableSubCommandEventArgs.abortOp">
            <summary>Returns a Boolean indicating whether the operation is aborted or not.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefPreXrefLockFileEventArgs">
            <summary>
This class provides data for the XrefPreXrefLockFile event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefPreXrefLockFileEventArgs.btrId">
            <summary>Returns the btrId property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DatabaseIOEventArgs">
            <summary>
This class provides data for the DwgFileOpened, BeginSave and SaveComplete events of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseIOEventArgs.FileName">
            <summary>Accesses the name of the drawing file being operated on.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BeginInsertEventArgs">
            <summary>
This class provides data for the BeginInsert event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginInsertEventArgs.From">
            <summary>Gets the database being inserted.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BeginWblockEntireDatabaseEventArgs">
            <summary>
This class provides data for the BeginWblockEntireDatabase event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginWblockEntireDatabaseEventArgs.From">
            <summary>Gets the database being wblock'ed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BeginWblockBlockEventArgs">
            <summary>
This class provides data for the BeginWblockBlock event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginWblockBlockEventArgs.From">
            <summary>Gets the database being wblock'ed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginWblockBlockEventArgs.BlockId">
            <summary>Gets the object ID of the block being wblock'ed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BeginWblockSelectedObjectsEventArgs">
            <summary>
This class provides data for the BeginWblockSelectedObjects event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginWblockSelectedObjectsEventArgs.From">
            <summary>Gets the database being wblock'ed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginWblockSelectedObjectsEventArgs.InsertionPoint">
            <summary>Gets the insertion point chosen by the user at the beginning of the wblock operation.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.IdMappingEventArgs">
            <summary>
This class provides data for the various events of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IdMappingEventArgs.IdMapping">
            <summary>Accesses the IdMapping that is associated with this event.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BeginWblockObjectsEventArgs">
            <summary>
This class provides data for the BeginWblockObjects event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginWblockObjectsEventArgs.From">
            <summary>Gets the database being wblock'ed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BeginWblockObjectsEventArgs.IdMapping">
            <summary>Get the IdMapping that maps the source objects to the destination objects.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.WblockNoticeEventArgs">
            <summary>
This class provides data for the WblockNotice event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.WblockNoticeEventArgs.To">
            <summary>Gets the database being written to.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventArgs">
            <summary>
This class provides data for the XrefBeginRestore, XrefBeginAttached and XrefBeginOtherAttached events of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventArgs.From">
            <summary>Gets the database being xref.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventArgs.FileName">
            <summary>Gets the name of the file being xrefed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefRedirectedEventArgs">
            <summary>
This class provides data for the XrefRedirected event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefRedirectedEventArgs.NewId">
            <summary>Gets the object ID of the symbol table record that the xref symbol table record is redirected to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefRedirectedEventArgs.OldId">
            <summary>Gets the object ID of the symbol table record in the xref that is being redirected.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefComandeeredEventArgs">
            <summary>
This class provides data for the XrefComandeered event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefComandeeredEventArgs.Id">
            <summary>Gets the object ID of the object being commandeered.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefComandeeredEventArgs.From">
            <summary>Gets the database being xrefed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectEventArgs">
            <summary>
This class provides data for various object-related events of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectEventArgs.DBObject">
            <summary>Accesses the object that is changed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectErasedEventArgs">
            <summary>
This class provides data for the ObjectErased event of the Database class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectErasedEventArgs.DBObject">
            <summary>Accesses the object that is changed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectErasedEventArgs.Erased">
            <summary>Accesses a value indicating whether the object was erased or unerased.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ProxyResurrectionCompletedEventArgs">
            <summary>
This class provides data for the ProxyResurrectionCompleted event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyResurrectionCompletedEventArgs.ApplicationName">
            <summary>Accesses the name of the application.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyResurrectionCompletedEventArgs.Ids">
            <summary>Accesses the objects that were resurrected.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DxfFiler">
            <summary>
This .NET class wraps the AcDbDxfFiler ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.RewindFiler">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should reset the filer to its default condition without changing the position that the filer is pointing to in the data it's reading or writing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.FilerStatus">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It checks the current state of the filer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.ResetFilerStatus">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should reset the filer's internal error status.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.ReadResultBuffer">
            <summary>This method is the only actual "read" input function provided to read data.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteResultBuffer(Autodesk.AutoCAD.DatabaseServices.ResultBuffer)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="buffer"> Resbuf structure to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteObjectId(Autodesk.AutoCAD.DatabaseServices.DxfCode,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Input object ID value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteString(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.String)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Input System.String value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteBytes(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Byte[])">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> Input DXF group code to be written out</param>
            <param name="chunk"> Input byte array to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteHandle(Autodesk.AutoCAD.DatabaseServices.DxfCode,Autodesk.AutoCAD.DatabaseServices.Handle)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Input Handle value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteInt64(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Int64)">
            <summary>This .Net method wraps the ObjectARX method AcDbDxfFiler::writeInt64.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteInt32(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Input System.Int32 value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteInt16(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Int16)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Input System.Int16 value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteUInt64(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.UInt64)">
            <summary>This .NET method wraps ObjectARX method AcDbDxfFiler::writeUInt64.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteUInt32(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.UInt32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Input System.UInt32 value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteUInt16(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.UInt16)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Input System.UInt16 value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteByte(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Byte)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> Input DXF group code to be written out</param>
            <param name="value"> Input byte value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteBoolean(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Boolean)">
            <summary>
The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="opCode"> DXF group code to be written out Boolean to be written out</param>
            <param name="value"> Input boolean value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteBool(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Boolean)">
            <summary>
The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> Input DXF group code to be written out</param>
            <param name="value"> Input boolean value to be written out</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteDouble(Autodesk.AutoCAD.DatabaseServices.DxfCode,System.Double,System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should do the following:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Double to be written out</param>
            <param name="precision"> _nt_</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WritePoint2d(Autodesk.AutoCAD.DatabaseServices.DxfCode,Autodesk.AutoCAD.Geometry.Point2d,System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> 2D point to be written out</param>
            <param name="precision"> Decimal places to use when writing out the coordinate double values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WritePoint3d(Autodesk.AutoCAD.DatabaseServices.DxfCode,Autodesk.AutoCAD.Geometry.Point3d,System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> 3D point to be written out</param>
            <param name="precision"> Decimal places to use when writing out the coordinate double values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteVector2d(Autodesk.AutoCAD.DatabaseServices.DxfCode,Autodesk.AutoCAD.Geometry.Vector2d,System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> 2D vector to be written out</param>
            <param name="precision"> Decimal places to use when writing out the 2D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteVector3d(Autodesk.AutoCAD.DatabaseServices.DxfCode,Autodesk.AutoCAD.Geometry.Vector3d,System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> 3D vector to be written out</param>
            <param name="precision"> Decimal places to use when writing out the 3D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteScale3d(Autodesk.AutoCAD.DatabaseServices.DxfCode,Autodesk.AutoCAD.Geometry.Scale3d,System.Int32)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should:.</summary>
            <param name="opCode"> DXF group code to be written out</param>
            <param name="value"> Scale3d object to be written out</param>
            <param name="precision"> Decimal places to use when writing out the Scale3d object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteXDataStart">
            <summary>If the filer is filing to AutoLISP or ADSRX, then this function writes out the DxfCode.XDataStart (value of -3) to indicate the start of xdata. If the filer is filing to a DXF file, then this function does nothing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.PushBackItem">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.AtSubclassData(System.String)">
            <summary>The implementation of this function should follow that of the ObjectARX internal filers. It should test to see if the filer is currently pointing to an item with an DxfCode of Subclass and a data value string that exactly matches the subClassName string. If this is the case, then the filer moves the file pointer to the next item and returns true. Otherwise the file pointer is left alone and false is returned.</summary>
            <param name="value"> subClassName that should be compared</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.HaltAtClassBoundaries(System.Boolean)">
            <summary>
The implementation of this function should follow that of the ObjectARX internal filers. If value is false, then set the filer to read all input without resetting its ErrorStatus unless an I/O error occurs..</summary>
            <param name="value"> Input Boolean indicating whether or not to halt at certain key markers in the file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DxfFiler.WriteEmbeddedObjectStart">
            <summary>The implementation of this function should follow the implementation used by ObjectARX internal filers. The steps are as follows:.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.ErrorMessage">
            <summary>Accesses the error string message the filer is currently set to display if an error occurs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.FilerType">
            <summary>Accesses what the filer is, or should be, used for.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.Database">
            <summary>Accesses the working database being read or written by this filer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.DwgVersion">
            <summary>Accesses the drawing file version, such as Release 13 or Release 14.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.ExtendedMinorVersion">
            <summary>Gets the drawing file minor version.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.Precision">
            <summary>Accesses the precision.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.IncludesDefaultValues">
            <summary>Assesses if the filer is being used for a purpose where default values (that is, color BYLAYER, normal = (0,0,1), etc.) are normally filed out. In such cases, the ObjectARX base classes such as DBObject and Entity are filing out default values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.AtEndOfFile">
            <summary>True if the filer is either at a subclass data marker in the object (that is, next item to read has an DxfCode.Subclass), or at the start of the object's xdata (that is, no more normal object data to read), or at the end of the object's data (that is, another object's data is next or the filer is at the end of the file being read).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.AtExtendedData">
            <summary>True if the filer is currently pointing to an item with an DxfCode.XDataStart or .RegAppName.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.AtEndOfObject">
            <summary>True if the end of the object has been reached.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.AtEmbeddedObjectStart">
            <summary>True if the filer is currently pointing to an item with a DxfCode.EmbeddedObjectStart.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.Elevation">
            <summary>Accesses the elevation of the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.Thickness">
            <summary>Accesses the thickness.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DxfFiler.IsModifyingExistingObject">
            <summary>Assesses if the DxfFiler is being used for an entmod operation.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FilerType">
            <summary>
This .NET class wraps the FilerType ObjectARX enum. This enum defines the types of filers.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion">
            <summary>
This class encapsulates major and minor DWG versions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion.op_Equality(Autodesk.AutoCAD.DatabaseServices.FullDwgVersion,Autodesk.AutoCAD.DatabaseServices.FullDwgVersion)">
            <summary>Returns true if ver1 is equal to ver2.</summary>
            <param name="ver1"> Left operand</param>
            <param name="ver2"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion.op_Inequality(Autodesk.AutoCAD.DatabaseServices.FullDwgVersion,Autodesk.AutoCAD.DatabaseServices.FullDwgVersion)">
            <summary>Returns true if ver1 is not equal to ver2.</summary>
            <param name="ver1"> Left operand</param>
            <param name="ver2"> Right operand</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion.MajorVersion">
            <summary>Accesses the major version number.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FullDwgVersion.MinorVersion">
            <summary>Accesses the minor version number.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion">
            <summary>
This .NET class wraps the AcDb::MaintenanceReleaseVersion ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DxfCode">
            <summary>
This .NET class wraps the AcDb::DxfCode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Scale3d">
            <summary>
This .NET class wraps the AcGeScale3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.#ctor(System.Double[])">
            <summary>Constructs a scale from the first two parameters of an array.</summary>
            <param name="xyz"> Input array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.#ctor(System.Double,System.Double,System.Double)">
            <summary>Constructs scale transformation with scale factors.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.#ctor(System.Double)">
            <summary>Constructs the uniform scale transformation with scale factor factor.</summary>
            <param name="factor"> Input uniform scale factor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.MultiplyBy(System.Double)">
            <summary>Returns the scale vector that is the product of the input scale vector and input scale factor s.</summary>
            <param name="s"> Input scale factor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.PreMultiplyBy(Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>Sets this scale vector to the product of itself and the scale vector leftSide. Note that the multiplication of scale vectors is commutative.</summary>
            <param name="leftSide"> Input scale vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.PostMultiplyBy(Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>Sets this scale vector to the product of itself and the scale vector rightSide. Note that the multiplication of scale vectors is commutative.</summary>
            <param name="rightSide"> Input scale vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.Inverse">
            <summary>Returns the scale vector with the inverse scale factors.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.IsProportional">
            <summary>This method calls Scale3d.IsProportional(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.IsProportional(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the matrix of scaling corresponding to this scale vector isUniScaledOrtho(). Returns false otherwise.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>This method calls Scale3d.IsEqualTo(Scale3d a, Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Scale3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the matrix of scaling corresponding to this scale vector is equal to the matrix scaling corresponding to the scaleVector.</summary>
            <param name="scaleVector"> Input scale vector to test equality for</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.GetMatrix">
            <summary>Returns in the output parameter mat the matrix that corresponds to the same scaling transformations as the one determined by this scale vector.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.ExtractScale(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>The function returns scale vector with scale factors equal to the lengths of the vectors forming the columns of the matrix mat.</summary>
            <param name="mat"> Input matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.RemoveScale(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>For each index i is less than 2, this function sets the i-th scale factor of this scale vector to the length of the i-th column of the matrix mat considered as vector. If det(mat) is not positive, then sx is negated. Then for each index i that is less than 2, the i-th column is divided by i-th scale factor.</summary>
            <param name="mat"> Input matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.op_Inequality(Autodesk.AutoCAD.Geometry.Scale3d,Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.op_Equality(Autodesk.AutoCAD.Geometry.Scale3d,Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.op_Multiply(System.Double,Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>Multiplies factor and a.</summary>
            <param name="factor"> Left operand</param>
            <param name="a"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.op_Multiply(Autodesk.AutoCAD.Geometry.Scale3d,System.Double)">
            <summary>Multiplies a and factor.</summary>
            <param name="a"> Left operand</param>
            <param name="factor"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.op_Multiply(Autodesk.AutoCAD.Geometry.Scale3d,Autodesk.AutoCAD.Geometry.Scale3d)">
            <summary>Multiplies a and b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale3d.ToArray">
            <summary>This method returns an array containing the coordinates of this scale vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Scale3d.X">
            <summary>Returns the X direction scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Scale3d.Y">
            <summary>Returns the Y direction scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Scale3d.Z">
            <summary>Returns the Z direction scale.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DwgVersion">
            <summary>
This .NET class wraps the AcDb::AcDbDwgVersion ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DecomposeForSaveReplacementRecord">
            <summary>
This class encapsulates the three output parameters used by the Object.decomposeForSave() ObjectARX function. These values represent the replacement object if it is non-database-resident, the replacement object's object ID if it is database-resident, and a flag indicating whether xdata should be transferred to the replacement object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DecomposeForSaveReplacementRecord.#ctor(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>
Constructor which sets the replacement as a DBObject, and whether Xdata should be exchanged.</summary>
            <param name="replacement"> Input Autodesk.AutoCAD.DatabaseServices.DBObject object</param>
            <param name="exchangeXData"> Input System.Boolean object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DecomposeForSaveReplacementRecord.ReplacementObject">
            <summary>Accesses the replacement object property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DecomposeForSaveReplacementRecord.ReplacementId">
            <summary>Accesses the replacement id property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DecomposeForSaveReplacementRecord.ExchangeXData">
            <summary>Accessesthe exchange xdata property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AuditInfo">
            <summary>
This .NET class wraps the AcDbAuditInfo ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.ErrorsFound(System.Int32)">
            <summary>Increments the count of errors found that is maintained in the instance of AuditInfo.</summary>
            <param name="count"> Input the number of errors found</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.ErrorsFixed(System.Int32)">
            <summary>Increments the count of errors fixed that is maintained in the instance of AuditInfo by NumFixes.</summary>
            <param name="count"> Input the number of errors fixed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.PrintError(Autodesk.AutoCAD.DatabaseServices.DBObject,System.String,System.String,System.String)">
            <summary>Prints out log information about the errors detected or fixed using the object pointed to by value to construct a "name" string for the object type (using the name method of the RxClass object for the object type pointed to by value).</summary>
            <param name="value"> Input the name string will be extracted.</param>
            <param name="value2"> Input a string describing the value of the bad data</param>
            <param name="validation"> Input a string describing the reason the data is bad</param>
            <param name="defaultValue"> Input a string describing the default value it is set to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.PrintError(System.String,System.String,System.String,System.String)">
            <summary>Prints out log information about the errors detected or fixed.</summary>
            <param name="name"> Input a string describing the type of erroneous data found</param>
            <param name="value"> Input a string describing the value of the bad data</param>
            <param name="validation"> Input a string describing the reason the data is bad</param>
            <param name="defaultValue"> Input a string describing the default value it is set to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.RequestRegen">
            <summary>This method allows objects which are fixing themselves to tell audit that the windows need to be reloaded from the database. Otherwise the in-core window list remains in effect and the changes to the database are overwritten at the next save time.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.ResetNumEntities">
            <summary>Resets the count of entities being maintained in the instance of AuditInfo to zero.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.IncNumEntities">
            <summary>Increments the count of entities being maintained in the instance of AuditInfo by 1.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AuditInfo.PrintNumEntities(System.String)">
            <summary>If the current count of entities being maintained in the instance of AuditInfo is a multiple of 100, and msg is not NULL, then this function will print the string pointed to by msg followed by the current entity count out to the audit log file.</summary>
            <param name="msg"> Input the string to be printed</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AuditInfo.FixErrors">
            <summary>Returns true if errors are to be fixed by the entity that is being implemented.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AuditInfo.NumErrors">
            <summary>Accesses the count maintained in the instance of AuditInfo of the number of errors.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AuditInfo.NumFixes">
            <summary>Returns the count maintained in the instance of AuditInfo of the number of errors fixed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AuditInfo.AuditPass">
            <summary>Two passes through each object's data are made during the AUDIT command. This method returns if it is PASS1 or PASS2.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AuditInfo.NumEntities">
            <summary>Returns the count maintained in the instance of AuditInfo of the number of entities that were processed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Field">
            <summary>
This .NET class wraps the AcDbField ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.#ctor(System.String,System.Boolean)">
            <summary>
Constructor that sets the field code. It does not evaluate the field..</summary>
            <param name="fieldCode"> Input field code</param>
            <param name="textField"> Input flag indicating whether this is a text field</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.#ctor(System.String)">
            <summary>Constructor that sets the field code. It does not evaluate the field.</summary>
            <param name="fieldCode"> Input field code</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.SetFieldCodeWithChildren(Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags,Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren)">
            <summary>Sets the field code. For fields attached to DBObject objects, the DBObject object should be closed before calling SetFieldCodeWithChildren() to ensure the field contents are updated correctly.</summary>
            <param name="flag"> Input flag, which can be one or more of the FieldCodeFlags values</param>
            <param name="fieldCode"> Input field code to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.SetFieldCodeWithChildren(Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren)">
            <summary>Sets the field code. For fields attached to DBObject objects, the DBObject object should be closed before calling SetFieldCodeWithChildren() to ensure the field contents are updated correctly.</summary>
            <param name="fieldCode"> Input field code to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.ConvertToTextField">
            <summary>Converts the field to a text field. A text field encapsulates text with embedded fields.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetFieldCode(Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags)">
            <summary>This function can be used to get a field code in various forms.</summary>
            <param name="flags"> Input flag, which can be one or more of the FieldCodeFlags values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetFieldCode">
            <summary>This function can be used to get a field code in various forms. It returns the field code as a string.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.SetFieldCode(System.String)">
            <summary>Sets the field code. For fields attached to DBObject objects, the DBObject object should be closed before calling SetFieldCode() to ensure the field contents are updated correctly.</summary>
            <param name="fieldCode"> Input field code to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetFieldCodeWithChildren(Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags)">
            <summary>This function can be used to get a field code in various forms.</summary>
            <param name="flags"> Input flag, which can be one or more of the FieldCodeFlags values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetFieldCodeWithChildren">
            <summary>This function can be used to get a field code in various forms. It returns the field code as a string.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetChildren">
            <summary>Gets the child field.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetChildrenIds">
            <summary>This .NET method wraps the ObjectARX method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.Evaluate">
            <summary>This method evaluates the field.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.Evaluate(System.Int32,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>This method evaluates the field. After creating a field object and setting the field code, call this method to evaluate the field.</summary>
            <param name="evaluationOptions"> Input context in which the field is evaluated; the context flag can be one of the predefined FieldEvaluationContext enum flags or a user-defined context flag</param>
            <param name="database"> Input database to be used for the evaluation, which can be null</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetStringValue">
            <summary>Returns the string.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.GetData(System.String)">
            <summary>Gets data from the field object using a key.</summary>
            <param name="key"> Input key to get the data; the key cannot be null or an empty string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.SetData(System.String,System.Object,System.Boolean)">
            <summary>
Sets data in the field object using a key. The data will be copied and stored in the field object, and filed in and filed out with it. If the data contains an object ID, it will be properly translated during wblock operations..</summary>
            <param name="key"> Input key to use to set and get the data; the key cannot be null or an empty string</param>
            <param name="data"> Input the object that contains the data</param>
            <param name="recursive"> Input true if the data is to be set in all child fields, false if it is to be set only in this field</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.SetData(System.String,System.Object)">
            <summary>Sets data in the field object using a key. The data will be copied and stored in the field object, and filed in and filed out with it. If the data contains an object ID, it will be properly translated during wblock operations.</summary>
            <param name="key"> Input key to use to set and get the data; the key cannot be null or an empty string</param>
            <param name="data"> Input the object that contains the data</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Field.FindField(System.String,System.Int32,System.Int32&,System.Int32&)">
            <summary>This function can be used to extract the embedded fields in text. It can be called in a loop to extract all the fields in the text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.State">
            <summary>Accesses the field state, which can be one or more of the FieldState values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.EvaluationStatus">
            <summary>Accesses the evaluation status set by the evaluator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.EvaluationOption">
            <summary>Accesses the evaluation option explicitly set in the field.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.FilingOption">
            <summary>Accesses the filing option set in the field.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.EvaluatorId">
            <summary>Accesses the ID of the evaluator used by the field for evaluation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.IsTextField">
            <summary>Assesses true if this field is a text field, which is text with embedded fields.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.Format">
            <summary>Accesses the output format set in the field.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.DataType">
            <summary>Accesses the data type of the field evaluation result.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.Value">
            <summary>Accesses the field evaluation result in its original data type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Field.HyperLink">
            <summary>Accesses the hyperlink associated with the field. A field can have only one hyperlink associated with it. The hyperlink can be set in a database-resident field object or an in-memory field object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AnnotativeStates">
            <summary>
This class determines the state of the annotation (whether it exists or not).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PaperOrientationStates">
            <summary>
An enum which retrieves the current value of the paper orientation property on an annotative object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Viewport">
            <summary>
This .NET class wraps the AcDbViewport ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.#ctor">
            <summary>Default constructor. Initializes:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.ThawAllLayersInViewport">
            <summary>This function thaws, in this viewport only, all the layers currently frozen in the viewport.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.GetFrozenLayers">
            <summary>This function returns a collection of the objectIds of all LayerTableRecords currently frozen in the viewport.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.IsLayerFrozenInViewport(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function returns true if the LayerTableRecord with objectId layerId is frozen in the viewport. Otherwise false is returned.</summary>
            <param name="layerId"> Input id of the LayerTableRecord in question</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.UpdateDisplay">
            <summary>This function updates the onscreen display to reflect any changes made to the viewport's view parameters. If no changes have been made, or the viewport is not on, or is not onscreen, then this function does nothing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.GetUcs(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function returns the origin, x-axis, and y-axis of the ucs for this viewport.</summary>
            <param name="origin"> Input origin
: Input x-axis</param>
            <param name="y"> Input y-axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.SetUcs(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function sets the UCS for this viewport. The new UCS will be named and userCoordinateSystemId must reference a valid UcsTableRecord object.</summary>
            <param name="userCoordinateSystemId"> Input reference to a valid UcsTableRecord object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.SetUcs(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function sets the UCS for this viewport as defined by origin, x, and y. The resulting UCS will be unnamed.</summary>
            <param name="origin"> Input origin
: Input X axis</param>
            <param name="y"> Input Y axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Viewport.SetUcsToWorld">
            <summary>This function sets the ucs for this viewport to the world ucs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.PlotWireframe">
            <summary>Assesses whether or not the viewport will plot as a vector output based on the viewport's current shade plot settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.PlotAsRaster">
            <summary>Assesses whether or not the viewport will plot as a raster based on the viewport's current shade plot settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.LinkedToSheetView">
            <summary>Assesses if the viewport is linked to a sheet view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ToneOperatorParameters">
            <summary>Accesses the tone parameters for this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.AnnotationScale">
            <summary>Accesses the AnnotationScale associated with the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Thumbnail">
            <summary>Accesses the packed BITMAPINFO structure of the thumbnail, with the thumbnail data following it immediately in memory. It will be set to null if no thumbnail has been set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Height">
            <summary>Accesses the height of the viewport entity's window in drawing units.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Width">
            <summary>Accesses the width of the viewport entity's window in drawing units. This is the width in Paper Space of the viewport itself, not the width of the Model Space view within the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.CenterPoint">
            <summary>Accesses the center point of the viewport entity in WCS coordinates (within Paper Space).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Number">
            <summary>Accesses the viewport ID number. This is the number that is reported by the AutoCAD CVPORT system variable when the viewport is the current viewport in the AutoCAD editor. If the viewport is inactive, -1 is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.On">
            <summary>Assesses if the grid is currently turned on in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ViewTarget">
            <summary>Accesses the location (in Model Space WCS coordinates) of the view's target.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ViewDirection">
            <summary>Accesses the vector (in Model Space WCS coordinates) from the view's target to the view's camera. This also represents the point coordinate set by the AutoCAD VPOINT command.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ViewHeight">
            <summary>Accesses the height (in display coordinate system coordinates) of the Model Space view within the viewport. Zooming the view out within the viewport increases this value and zooming in decreases this value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ViewCenter">
            <summary>Accesses the view center (in display coordinate system coordinates) of the view in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.TwistAngle">
            <summary>Accesses the twist angle (in radians) of the view in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.LensLength">
            <summary>Accesses the lens length used when perspective mode is on in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.FrontClipOn">
            <summary>Assesses the front clipping plane is currently turned on in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.BackClipOn">
            <summary>Assesses if the back clipping plane is currently turned on in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.FrontClipAtEyeOn">
            <summary>Assesses if the front clipping plane is currently located at the camera, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.FrontClipDistance">
            <summary>Accesses the distance (along the camera-target line) from the target to the front clipping plane. Positive values indicate that the clipping plane is in front of the target (that is, between the target and the camera) whereas negative values indicate the clipping plane is behind the target.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.BackClipDistance">
            <summary>Accesses the distance (along the camera-target line) from the target to the back clipping plane. Positive values indicate that the clipping plane is in front of the target (that is, between the target and the camera) whereas negative values indicate the clipping plane is behind the target.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.PerspectiveOn">
            <summary>Assesses if the perspective mode is currently turned on in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.UcsFollowModeOn">
            <summary>Assesses if the viewport is set to generate and display a plan view whenever the UCS changes in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.UcsIconVisible">
            <summary>Assesses if the viewport is currently set to have the UCS icon display, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.UcsIconAtOrigin">
            <summary>Assesses if the viewport is currently set to have the UCS icon follow the current UCS origin, as long as the origin is far enough within the viewport to allow the icon to display properly. If the icon is not set to follow the UCS origin in the viewport, then false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.FastZoomOn">
            <summary>This property always returns true and is obsolete and will be removed in a future release.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.CircleSides">
            <summary>Accesses the circle zoom percent for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.SnapOn">
            <summary>Assesses if snap mode is currently turned on in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.SnapIsometric">
            <summary>Assesses if snap mode is currently set to isometric in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.SnapAngle">
            <summary>Accesses the snap angle setting (in radians) for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.SnapBasePoint">
            <summary>Accesses the snap basepoint (in UCS coordinates) for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.SnapIncrement">
            <summary>Accesses the snap basepoint (in UCS coordinates) for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.SnapIsoPair">
            <summary>Accesses the snap IsoPair setting for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.GridOn">
            <summary>Assesses if the grid is currently turned on in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.GridIncrement">
            <summary>Accesses the Vector2d in which the X value represents the X spacing (in drawing units) of the grid and the Y value represents the Y spacing of the grid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.HiddenLinesRemoved">
            <summary>Accesses the viewport is set to remove hidden lines during plotting, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.GridBoundToLimits">
            <summary>Assesses if the grid is drawn beyond limits for the WCS and user-defined UCS in the viewport, otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.GridAdaptive">
            <summary>Assesses if the grid adapts to display fewer lines in the viewport than the GRIDUNIT setting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.GridSubdivisionRestricted">
            <summary>Assesses if subdivisions are allowed below the minor grid spacing in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.GridFollow">
            <summary>Assesses if the grid will follow a dynamic UCS change in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.GridMajor">
            <summary>Accesses the number of minor grid lines between each major grid line in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.DefaultLightingOn">
            <summary>Assesses if any kind of default light is on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.DefaultLightingType">
            <summary>Accesses the type of default lighting being used in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Brightness">
            <summary>Accesses the brightness factor for this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Contrast">
            <summary>Accesses the contrast factor for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.AmbientLightColor">
            <summary>Accesses the ambient light color for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.SunId">
            <summary>Accesses the Sun object associated with this viewport. If not sun object has been set, it returns Null.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.VisualStyleId">
            <summary>Accesses the object ID of the visual style in effect for this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Locked">
            <summary>Assesses if a viewport's scale is locked. When a viewport is locked, its zoom factor relative to paperspace cannot be changed via AutoCAD commands such as ZOOM and VIEW.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Transparent">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.CustomScale">
            <summary>Accesses the custom scale for the viewport. The custom scale defines the relationship of units in paperspace to units in the viewport. For example, a custom scale of 0.5 would indicate that 1 unit in the viewport maps to 0.5 units in paperspace.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.StandardScale">
            <summary>This function returns the scale of a viewport by using a standard scale defined by the StdScaleType enumeration. Possible values are:.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.PlotStyleSheet">
            <summary>Accesses the style sheet applied to objects in this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.EffectivePlotStyleSheet">
            <summary>Accesses the layout's plot style table name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.NonRectClipOn">
            <summary>Assesses if non-rectangular clipping is currently turned on for this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.NonRectClipEntityId">
            <summary>Accesses the single clipping entity for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.UcsOrthographic">
            <summary>Retrieves the orthographic UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.UcsName">
            <summary>Accesses the object id of an UcsTableRecord if this viewport's ucs is a named ucs, otherwise it returns a null id.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Elevation">
            <summary>Accesses the elevation of the ucs plane for this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ViewOrthographic">
            <summary>Accesses the orthographic view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.UcsPerViewport">
            <summary>Assesses the value of UCSVP for the viewport. If ucsvp is true, then the UCS that is saved with this viewport will become active whenever the viewport is made active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ShadePlot">
            <summary>Accesses the shade plot mode of the current viewport. The shade plot mode specifies how the current viewport will plot.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.Background">
            <summary>Accesses the object ID for the background of the current viewport. Returns NULL if no background has been defined.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Viewport.ShadePlotId">
            <summary>Accesses the shade object associated with this viewport. The shade object is a visual style or render preset that defines how the current viewport will plot.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectContext">
            <summary>
This .NET class wraps the AcDbObjectContext ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectContext.Name">
            <summary>Accesses the name of the object context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectContext.UniqueIdentifier">
            <summary>Accesses the unique context identifier.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectContext.CollectionName">
            <summary>Accesses the name of the containing collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord">
            <summary>
This .NET class wraps the AcDbSymbolTableRecord ObjectARX class. This is the base class for each type of record corresponding to the various symbol tables.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord.Name">
            <summary>Returns the name of the symbol table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord.IsDependent">
            <summary>Returns true when the SymbolTableRecord is a dependent (that is, part of) of an attached xref drawing; otherwise false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord.IsResolved">
            <summary>Returns true if the SymbolTableRecord is part of an xref which has been successfully "resolved" (loaded into the drawing). If the record is not part of an xref, or it is part of an xref but the xref has not been successfully resolved, then false is returned. The SymbolTableRecord.IsDependent property can be used to determine if the record is part of an xref.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SymbolTableEnumerator">
            <summary>
This .NET class wraps the AcDbSymbolTableIterator ObjectARX class. This class is a base class for iterator classes that are used for iterating over the records in the SymbolTable objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolTableEnumerator.MoveNext">
            <summary>Increments the enumerator to the next entry.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolTableEnumerator.Reset">
            <summary>Resets the enumerator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolTableEnumerator.Current">
            <summary>Returns the objectId of the current symbol table entry.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SymbolTable">
            <summary>
This .NET class wraps the AcDbSymbolTable ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolTable.Has(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function returns true if the table contains a record with an ObjectId that matches id. Otherwise it returns false.</summary>
            <param name="id"> Input object ID of record to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolTable.Has(System.String)">
            <summary>This function returns true if the table contains a record with a name that matches key. If no matches are found, then false is returned.</summary>
            <param name="key"> Input name of record to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolTable.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolTable.IncludingErased">
            <summary>Returns erased SymbolTable entries in addition to any entries already present.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Colors.EntityColor">
            <summary>
This .NET class wraps the AcCmEntityColor ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.EntityColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>Initializes the color using the supplied RGB values. The color method defaults to ByColor.</summary>
            <param name="red"> Input red value from 0 to 255</param>
            <param name="green"> Input green value from 0 to 255</param>
            <param name="blue"> Input blue value from 0 to 255</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.EntityColor.#ctor(Autodesk.AutoCAD.Colors.ColorMethod,System.Int16)">
            <summary>Initializes the color method and color index.</summary>
            <param name="value"> Input color method</param>
            <param name="index"> Input color index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.EntityColor.#ctor(Autodesk.AutoCAD.Colors.ColorMethod)">
            <summary>Initializes the color value to 0 and sets the color method to value.</summary>
            <param name="value"> Input color method</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.EntityColor.#ctor(System.Int32)">
            <summary>Constructs the object through an integer color index.</summary>
            <param name="trueColor"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.EntityColor.LookUpRgb(System.Byte)">
            <summary>Looks up the RGB value. colorIndex is an ACI that is to be mapped to an RGB value, where the low byte is blue, the second byte is green, and the third byte is red. The high byte is the color method.</summary>
            <param name="colorIndex"> Input color value and color method</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.EntityColor.LookUpAci(System.Byte,System.Byte,System.Byte)">
            <summary>This method maps the RGB values given to an ACI value, and returns the closest match.</summary>
            <param name="red"> Input red value from 0 to 255</param>
            <param name="green"> Input green value from 0 to 255</param>
            <param name="blue"> Input blue value from 0 to 255</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.ColorMethod">
            <summary>Accesses the color method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.TrueColor">
            <summary>Accesses the color through an EntityColor object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.ColorIndex">
            <summary>Accesses the AutoCAD color index (ACI) value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.LayerIndex">
            <summary>Assesses the layer index.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.PenIndex">
            <summary>Assesses the pen index.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.Red">
            <summary>Accesses the color value's red component.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.Green">
            <summary>Accesses the color value's green component.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.Blue">
            <summary>Accesses the color value's blue component.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsByColor">
            <summary>Assesses if the color is by another color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsByLayer">
            <summary>Wrap the ObjectARX function Color.isByLayer(). Assesses if the color method is EntityColor.ByLayer, or if the color method is EntityColor.ByACI and the ACI is EntityColor.ACIbyLayer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsByBlock">
            <summary>Assesses if the color is by a block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsByAci">
            <summary>Assesses if the color is defined by ACI.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsByPen">
            <summary>Assesses if the color is by a pen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsForeground">
            <summary>Assesses if the color is from the foreground.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsLayerOff">
            <summary>Assesses if the layer is off.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsLayerFrozen">
            <summary>Assesses if the layer is frozen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsNone">
            <summary>Assesses if there is no color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.EntityColor.IsLayerFrozenOrOff">
            <summary>For internal use only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Colors.ColorMethod">
            <summary>
This .NET class wraps the AcCmEntityColor::ColorMethod ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Colors.ColorConverter">
            <summary>
This class performs conversions between Autodesk.AutoCAD.Colors.Color objects and ACI, RGB, and AutoCAD Color Book names.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns true if sourceType can be converted to this type.</summary>
            <param name="context"> Input an object for the context</param>
            <param name="sourceType"> Input object to change to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Returns the converted object.</summary>
            <param name="context"> Input context to convert within</param>
            <param name="culture"> Input culture to convert within</param>
            <param name="value"> Input object to convert from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>This method converts value to type destinationType. If the color is described by an ACI value, destinationType is System.String, and culture is set to InvariantCulture, this method returns the color index converted to a string.</summary>
            <param name="context"> Input context to convert within</param>
            <param name="culture"> Input culture to convert within</param>
            <param name="value"> Input object to convert from</param>
            <param name="destinationType"> Input System.Type to convert to</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Colors.Transparency">
            <summary>
This .NET class wraps the AcCmTransparency ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.#ctor(System.Byte)">
            <summary>Creates a Transparency based on an alpha value.</summary>
            <param name="alpha"> Input alpha value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.#ctor(Autodesk.AutoCAD.Colors.TransparencyMethod)">
            <summary>Copy constructor.</summary>
            <param name="method"> Input transparency to copy</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.op_Inequality(Autodesk.AutoCAD.Colors.Transparency,Autodesk.AutoCAD.Colors.Transparency)">
            <summary>Returns true if a is not equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.op_Equality(Autodesk.AutoCAD.Colors.Transparency,Autodesk.AutoCAD.Colors.Transparency)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Colors.Transparency.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input System.IFormatProvider object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Transparency.Alpha">
            <summary>Accesses the alpha value. The valid alpha value range is from 0 (for totally transparent) to 255 (for totally opaque).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Transparency.IsByAlpha">
            <summary>Assesses if the transparency method is ByAlpha.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Transparency.IsByBlock">
            <summary>Assesses if the transparency method is ByBlock.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Transparency.IsByLayer">
            <summary>Assesses if the transparency method is ByLayer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Transparency.IsInvalid">
            <summary>Indicates whether this object is currently set to an invalid value (the default for a newly created Entity object).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Transparency.IsClear">
            <summary>Assesses if the transparency method is ByAlpha and the alpha value is zero.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Colors.Transparency.IsSolid">
            <summary>Assesses if the transparency method is ByAlpha and the alpha value is 255.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Colors.TransparencyMethod">
            <summary>
This .NET class wraps the AcCmTransparency::transparencyMethod ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord">
            <summary>
This .NET class wraps the AcDbLayerTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.#ctor">
            <summary>Default constructor. Initializes color to 7 (white); IsFrozen, IsLocked, IsOff, ViewportVisibilityDefault, and IsPlottable to false; and linetype object ID to NULL.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.GetViewportOverrides(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Retrieves all of the table record's overrides.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.RemoveAllOverrides">
            <summary>Removes all overrides associated with this layer, for all viewports.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.HasViewportOverrides(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if this layer has one or more property overrides that are associated with the viewport whose object id is passed in to the method.</summary>
            <param name="viewportId"> The object id of the viewport.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.IsUsed">
            <summary>Assesses if the layer is used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.IsFrozen">
            <summary>Assesses if the layer is frozen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.IsOff">
            <summary>Assesses if the layer is off.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.ViewportVisibilityDefault">
            <summary>Assesses if the layer is frozen by default in new viewports.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.IsLocked">
            <summary>Assesses if the layer is frozen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.Color">
            <summary>Accesses the color value of the layer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.EntityColor">
            <summary>Accesses the color settings of the layer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.Transparency">
            <summary>Accesses the transparency value of the layer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.LinetypeObjectId">
            <summary>Accesses the ObjectId referenced by the LinetypeTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.MaterialId">
            <summary>Accesses the id of the associated Material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.IsPlottable">
            <summary>Assesses if the layer is plottable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.LineWeight">
            <summary>Accesses the LineWeight of the layer table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.PlotStyleName">
            <summary>Accesses the PlotStyleName of the layer table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.PlotStyleNameId">
            <summary>Accesses the objectId of the entry in the PlotStyleName dictionary for the PlotStyleName of the layer table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.Description">
            <summary>Accesses the user-defined descriptive text for the layer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.IsHidden">
            <summary>Assesses if the layer is frozen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.IsReconciled">
            <summary>Assesses if the layer is reconciled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTableRecord.HasOverrides">
            <summary>Assesses if this layer has any property overrides associated with any viewport in the drawing.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LineWeight">
            <summary>
This .NET class wraps the AcDb::LineWeight ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties">
            <summary>
Defines further properties of the layer viewports in LayerTableRecord.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.RemoveOverrides">
            <summary>Removes all overrides associated with this layer and this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.Color">
            <summary>Accesses the color of this layer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.IsColorOverridden">
            <summary>Assesses whether or not the color is overridden for the associated layer and viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.LinetypeObjectId">
            <summary>Accesses the linetype object id of this layer, in this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.IsLinetypeOverridden">
            <summary>Accesses whether or not the linetype is overridden for the associated layer and viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.LineWeight">
            <summary>Accesses the line weight of this layer, in this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.IsLineWeightOverridden">
            <summary>Accesses whether or not the line weight is overridden for the associated layer and viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.Transparency">
            <summary>Gets and sets the transparency or this layer, in this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.IsTransparencyOverridden">
            <summary>Indicates whether the transparency is overridden for the associated layer and viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.PlotStyleName">
            <summary>Accesses the plot style name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.PlotStyleNameId">
            <summary>Accesses the plot style name ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties.IsPlotStyleOverridden">
            <summary>Accesses whether or not the plot style is overridden for the associated layer and viewport.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayerTable">
            <summary>
This .NET class wraps the AcDbLayerTable ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerTable.GenerateUsageData">
            <summary>Generates usage data for each LayerTableRecord in this layer table. The usage data is cached in LayerTableRecords and can be retrieved using the IsUsed property.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerTable.GetUnreconciledLayers">
            <summary>Retrieves the unreconciled layer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayerTable.GetEnumerator">
            <summary>This method returns an enumerator for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTable.HasUnreconciledLayers">
            <summary>Assesses if the table has unreconciled layers.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTable.IncludingHidden">
            <summary>Accesses the hidden layers.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayerTable.SkippingReconciled">
            <summary>Accesses the skipped reconciled layers.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AbstractViewTable">
            <summary>
This .NET class wraps the AcDbAbstractViewTable ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord">
            <summary>
This .NET class wraps the AcDbAbstractViewTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.SetUcs(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function sets the UCS for the view or viewport table record. The new UCS will be named and UcsId must reference a valid UcsTableRecord object.</summary>
            <param name="id"> Input the object which references a UcsTableRecord.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.SetUcs(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function sets the UCS for the view or viewport table record. The new UCS will be unnamed and is defined by origin, x, and y.</summary>
            <param name="origin"> Input the object to act as an origin</param>
            <param name="y"> Input the object to act as a Y-coordinate</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.SetUcsToWorld">
            <summary>This function sets the UCS for the view or viewport table record to the world UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.CenterPoint">
            <summary>Accesses the center point of the view in DCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Height">
            <summary>Accesses the TableRecord height (in DCS coordinates) as the height of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Width">
            <summary>Accesses the width of the view in DCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Target">
            <summary>Accesses the location of the view's target, in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.ViewDirection">
            <summary>Accesses the vector (in WCS coordinates) from the view's target to the view's camera.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.ViewTwist">
            <summary>Accesses the twist angle (in radians) of the view in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.LensLength">
            <summary>Accesses the lens length when perspective mode is on in the TableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.FrontClipDistance">
            <summary>Accesses the value of the distance (along the camera-target line) from the target to the front clipping plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.BackClipDistance">
            <summary>Accesses the distance (along the camera-target line) from the target to the back clipping plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.PerspectiveEnabled">
            <summary>If true, this function sets perspective mode to On in the TableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.FrontClipEnabled">
            <summary>If set to true, the front clipping is On in the TableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.BackClipEnabled">
            <summary>If set to true, the back clipping is On for TableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.FrontClipAtEye">
            <summary>Accesses the front clipping plane for perspective views.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.DefaultLightingOn">
            <summary>Accesses the state of default lighting for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.DefaultLightingType">
            <summary>Accesses the type of default lighting being used in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Brightness">
            <summary>Accesses the brightness factor for this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Contrast">
            <summary>Accesses the contrast factor for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.AmbientLightColor">
            <summary>Accesses the ambient light color for the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.SunId">
            <summary>Accesses the object id associated as a sun object with this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Ucs">
            <summary>Accesses the UCS for the view or viewport table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.UcsOrthographic">
            <summary>Accesses the orthographic view associated with the UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.UcsName">
            <summary>Accesses the name of the UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Elevation">
            <summary>Accesses the elevation of the UCS plane for the view or viewport table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.ViewOrthographic">
            <summary>Accesses the orthographic view from the view's target to the view's camera.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.Background">
            <summary>Accesses the background associated with this view. To unset one, set it to NULL.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.VisualStyleId">
            <summary>Accesses the object ID of the visual style in effect for this viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord.ToneOperatorParameters">
            <summary>Accesses the tone operator parameters for this view.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DefaultLightingType">
            <summary>
This .NET enum wraps the AcGiViewportTraits.DefaultLightingTypeObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.OrthographicView">
            <summary>
This .NET class wraps the AcDb::OrthographicView ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters">
            <summary>
This .NET class wraps the AcGiToneOperatorParameters ObjectARX class. ToneOperatorParameters is a container class for all tone operator parameters.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.#ctor">
            <summary>Default constructor. Initializes members to reasonable default values.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.CopyFrom(Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>This .NET method wraps the ObjectARX method. Copies all the tone parameter settings from an Tone Operator object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.op_Equality(Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters,Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters,Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.IsActive">
            <summary>Returns true if the tone operator is active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.ChromaticAdaptation">
            <summary>Returns ChromaticAdaptation property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.ColorDifferentiation">
            <summary>Returns ColorDifferentiation property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.ProcessBackground">
            <summary>Returns ProcessBackground property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.Brightness">
            <summary>Accesses the brightness for the tone operator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.Contrast">
            <summary>Accesses the contrast for the tone operator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.MidTones">
            <summary>Accesses the midtones for the tone operator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.WhiteColor">
            <summary>Accesses the WhiteColor property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters.ExteriorDaylight">
            <summary>Accesses the exterior daylight mode for the tone operator.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord">
            <summary>
This .NET class wraps the AcDbViewTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.DisassociateUcsFromView">
            <summary>Disassociates the ucs from this view. If this function is called, then no ucs will be associated with the view and the ucs will not change when the view is restored.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.IsPaperspaceView">
            <summary>Returns true if this ViewTableRecord is a Paper Space view. Otherwise it returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.IsUcsAssociatedToView">
            <summary>Returns true if this view table record has an associated ucs. If this function returns true, then the ucs that is associated with this view will become active whenever this view is restored. The associated ucs can be obtained by calling getUcs() (defined in AbstractViewTableRecord parent class). A ucs can be associated to this view by calling one of the setUcs() functions in the AcDbAbstractViewTableRecord class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.CategoryName">
            <summary>Returns the name of the category of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.LayerState">
            <summary>Returns the name of the layer state. The caller is responsible for creating the layer state and storing it into the ACAD_LAYERSTATES dictionary. Passing in null will clear the layer state from the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.Layout">
            <summary>Returns the layout of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.ViewAssociatedToViewport">
            <summary>Returns a flag to indicate whether or not the view is associated with a paperspace viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.LiveSection">
            <summary>Returns a live section to be associated with a view. During the restoration of a view, it's associated live section is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.AnnotationScale">
            <summary>This function returns a pointer to the AnnotationScale object associated with the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewTableRecord.Thumbnail">
            <summary>Returns the packed BITMAPINFO structure of the thumbnail with the thumbnail data following it immediately in memory. It can be set to null if no thumbnail is desired for this view.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AnnotationScale">
            <summary>
This .NET class wraps the AcDbAnnotationScale ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.Name">
            <summary>Accesses the name of the annotation scale. Annotation scale names are not guaranteed to be unique.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.UniqueIdentifier">
            <summary>Accesses the unique annotation scale identifier.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.CollectionName">
            <summary>Accesses the name of the annotation scale collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.PaperUnits">
            <summary>The paper units must be positive and non-zero. Annotation scales are described as a ratio of paper units to drawing units. For example a scale of 1 inch = 1 foot has a paper units scale of 1.0, and a drawing units scale of 12.0, for an effective scale of 0.083.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.DrawingUnits">
            <summary>Accesses the drawing units portion of the annotation scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.Scale">
            <summary>Accesses the annotation scale factor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AnnotationScale.IsTemporaryScale">
            <summary>Assesses whether the scale is temporarily stored in the drawing.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord">
            <summary>
This .NET class wraps the AcDbViewportTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.LowerLeftCorner">
            <summary>This function returns an Point2d object containing the lower left corner of the viewport window.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.UpperRightCorner">
            <summary>This function returns an Point2d object containing the upper right corner of the viewport window.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.UcsFollowMode">
            <summary>This function returns true if the ViewportTableRecord is set to generate and display a plan view whenever the UCS changes in the viewport; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.CircleSides">
            <summary>Returns the circle zoom percent of the ViewportTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.FastZoomsEnabled">
            <summary>This function always returns true. It is obsolete and will be removed in a future release.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.IconEnabled">
            <summary>This function returns true if the ViewportTableRecord is currently set to have the UCS icon display; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.IconAtOrigin">
            <summary>This function returns true if the ViewportTableRecord is currently set to have the UCS icon follow the current UCS origin (as long as the origin is far enough within the viewport to allow the icon to display properly). If the icon is not set to follow the UCS origin in the viewport, then false is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.GridEnabled">
            <summary>This function returns true if the grid is set on in the ViewportTableRecord; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.GridIncrements">
            <summary>Returns an Vector2d in which the X value represents the X spacing (in drawing units) of the grid and the Y value represents the Y spacing of the grid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.SnapEnabled">
            <summary>This function returns true if snap mode is currently set on in the ViewportTableRecord; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.IsometricSnapEnabled">
            <summary>This function returns true if snap mode is currently set to isometric in the ViewportTableRecord; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.SnapPair">
            <summary>This function returns the snap IsoPair setting for the ViewportTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.SnapAngle">
            <summary>This function returns the snap angle setting (in radians) for the ViewportTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.SnapBase">
            <summary>This function returns the snap basepoint (in UCS coordinates) for the ViewportTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.SnapIncrements">
            <summary>This function returns an Point2d in which the X value represents the X spacing of the snap grid and the Y value represents the Y spacing of the snap grid. Both values are in drawing units.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.UcsSavedWithViewport">
            <summary>This function returns the value of UCSVP for the viewport. If this function returns true, then the ucs that is saved with this viewport will become active whenever the viewport is made active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.GridBoundToLimits">
            <summary>Returns true if the grid is drawn beyond the limits for the WCS and user-defined UCS in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.GridAdaptive">
            <summary>Returns true if the grid adapts to display fewer lines in the viewport than specified by the GRIDUNIT setting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.GridSubdivisionRestricted">
            <summary>Returns true if the grid adapts to display more lines that specified in the GRIDUNIT setting. When zooming in the gridlines may get too sparse, so more lines are displayed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.GridFollow">
            <summary>Returns true of the grid will follow a dynamic UCS change in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.GridMajor">
            <summary>Returns the number of minor grid lines between each major grid line in the viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord.ToneOperatorParameters">
            <summary>Accesses the tone operator paramters.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataCell">
            <summary>
This .NET class wraps the AcDbDataCell ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.Init">
            <summary>This function re-initializes the cell by clearing its value.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetBool(System.Boolean)">
            <summary>
Sets a boolean value for this cell.</summary>
            <param name="value"> Input System.Boolean object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetInteger(System.Int32)">
            <summary>Sets an integer value for this cell.</summary>
            <param name="value"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetDouble(System.Double)">
            <summary>Sets a double value for this cell.</summary>
            <param name="value"> Input System.Double object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetString(System.String)">
            <summary>Sets a string value for this cell.</summary>
            <param name="value"> Input System.String object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetPoint(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets a 3D point ID value for this cell.</summary>
            <param name="value"> Input Autodesk.AutoCAD.Geometry.Point3d object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetVector(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets a 3D vector value for this cell.</summary>
            <param name="value"> Input Autodesk.AutoCAD.Geometry.Vector3d object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetObjectId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets an object ID value for this cell.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetHardOwnershipId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the hard ownership id for this cell.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetSoftOwnershipId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets a soft ownership ID value for this cell.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetHardPointerId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the hard pointer ID for this cell.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCell.SetSoftPointerId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets a soft pointer ID value for this cell.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataCell.Value">
            <summary>Accesses the value of this cell.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataCell.CellType">
            <summary>Accesses the type associated with this cell.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellType">
            <summary>
This .NET class wraps the AcDbDataCell::CellType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataColumn">
            <summary>
This .NET class wraps the AcDbDataColumn ObjectARX class. It represents a single column of a DataTable.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.#ctor(Autodesk.AutoCAD.DatabaseServices.DataColumn)">
            <summary>Sets the column to a standard format.</summary>
            <param name="column"> Set the column to a specific type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.Assign(Autodesk.AutoCAD.DatabaseServices.DataColumn)">
            <summary>Assigns a new column to this object.</summary>
            <param name="col"> New column to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.GetCellAt(System.Int32)">
            <summary>This function retrieves the cell at the position in this column specified by index.</summary>
            <param name="index"> Index of cell to retrieve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.SetCellAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>This function sets the cell at the specified index. The index must be less than the number of cells in the column.</summary>
            <param name="index"> Index of the cell to be updated</param>
            <param name="cell"> Cell to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.AppendCell(Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>This function appends the specified cell to the end of the column.</summary>
            <param name="cell"> New cell to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.InsertCellAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>This function inserts the cell into the column at the specified index. If index is greater than or equal to the number of cells in the column, it calls the appendCell() function.</summary>
            <param name="index"> Position at which to insert the cell</param>
            <param name="cell"> Cell to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.RemoveCellAt(System.Int32)">
            <summary>This function removes the cell at the specified index. The index must be less than the number of cells in the column.</summary>
            <param name="index"> Index of cell to remove from the column</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataColumn.GetIndexAtCell(Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>This function searches the column for the first cell with a value that matches cell. It returns the index of the first cell found in the column with the value of cell.</summary>
            <param name="cell"> Input cell to be matched</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataColumn.PhysicalLength">
            <summary>Accesses the physical length of the column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataColumn.GrowLength">
            <summary>Accesses the grow length of the column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataColumn.ColumnType">
            <summary>Accesses the type of the column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataColumn.ColumnName">
            <summary>Accesses the name of the column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataColumn.NumCells">
            <summary>Accesses the number of cells.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataTable">
            <summary>
This .NET class wraps the AcDbDataTable ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.Assign(Autodesk.AutoCAD.DatabaseServices.DataTable)">
            <summary>Assigns a new table to this object.</summary>
            <param name="other"> New table to assign.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.GetColumnAt(System.Int32)">
            <summary>This function gets the column at the specified column index.</summary>
            <param name="index"> Index of column</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.GetColumnNameAt(System.Int32)">
            <summary>This function gets the name of the column at the specified column index.</summary>
            <param name="index"> Column index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.GetColumnTypeAt(System.Int32)">
            <summary>This function gets the type of the column at the specified column index.</summary>
            <param name="index"> Column index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.GetColumnIndexAtName(System.String)">
            <summary>This function gets the index of the column with the specified column name.</summary>
            <param name="name"> Name of column</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.RemoveColumnAt(System.Int32)">
            <summary>This function removes the specified column from the table.</summary>
            <param name="index"> Index of column to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.GetRowAt(System.Int32)">
            <summary>This function gets the row of data at the specified row index.</summary>
            <param name="index"> Row index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.SetRowAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.DataCellCollection,System.Boolean)">
            <summary>
This function replaces the row at the specified index ..</summary>
            <param name="index"> Row index of the row to be replaced</param>
            <param name="row"> New row of data</param>
            <param name="validate"> Validation flag</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.AppendRow(Autodesk.AutoCAD.DatabaseServices.DataCellCollection,System.Boolean)">
            <summary>
This method appends a row to the end of the table..</summary>
            <param name="row"> Row being added</param>
            <param name="validate"> Validation flag</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.InsertRowAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.DataCellCollection,System.Boolean)">
            <summary>
This function inserts a row of data into the table immediately before the row at the specified index.</summary>
            <param name="index"> Row index of position at which to insert the row</param>
            <param name="row"> Row of data to insert</param>
            <param name="validate"> Validation flag</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.RemoveRowAt(System.Int32)">
            <summary>This function removes the specified row from the table.</summary>
            <param name="index"> Index of row to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.GetCellAt(System.Int32,System.Int32)">
            <summary>This function gets the cell at the specified row and column indexes.</summary>
            <param name="row"> Row index of cell to access</param>
            <param name="col"> Column index of cell to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataTable.SetCellAt(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>This function replaces the cell in the table at the specified row and column with the specified cell.</summary>
            <param name="row"> Row index of the cell to be replaced</param>
            <param name="col"> Column index of the cell to be replaced</param>
            <param name="cell"> New cell</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataTable.NumColumns">
            <summary>Accesses the number of columns in the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataTable.NumRows">
            <summary>Accesses the number of rows in the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataTable.NumRowsPhysicalSize">
            <summary>Accesses the number of rows allocated for the physical size of the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataTable.NumRowsGrowSize">
            <summary>Accesses the grow size for the number of physical rows of a table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataTable.NumColsPhysicalSize">
            <summary>Accesses the number of columns allocated for the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataTable.NumColsGrowSize">
            <summary>Accesses the grow size for the number of physical columns of a table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataTable.TableName">
            <summary>Accesses the table name.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataCellCollection">
            <summary>
This .NET class is a wrapper for the typedef AcArray<AcDbDataCell> ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Index to remove from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.Clear">
            <summary>Clears the collection of its contents.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.Add(Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.DataCell object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.IndexOf(Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>Returns the 0-based index of the collection item that matches value.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.DataCell object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.Insert(System.Int32,Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Input index to insert at</param>
            <param name="value"> Input the data to be inserted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.Remove(Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Input value to be removed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.Contains(Autodesk.AutoCAD.DatabaseServices.DataCell)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.DataCell object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.DataCell[],System.Int32)">
            <summary>Copies objects in array to this collection, starting from index.</summary>
            <param name="array"> Input Autodesk.AutoCAD.DatabaseServices.DataCell[] object</param>
            <param name="index"> Input</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataCellCollection.Count">
            <summary>Accesses the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.LayerFilterTree">
            <summary>
This class encapsulates the root and current LayerFilter objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterTree.#ctor(Autodesk.AutoCAD.LayerManager.LayerFilter,Autodesk.AutoCAD.LayerManager.LayerFilter)">
            <summary>Constructs the root and current nodes of the true.</summary>
            <param name="root"> Input root of tree</param>
            <param name="current"> Input current node</param>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilterTree.Root">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilterTree.Current">
            <summary>Returns the number of objects in this tree.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.LayerFilter">
            <summary>
This .NET class wraps the AcLyLayerFilter ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilter.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilter.Filter(Autodesk.AutoCAD.DatabaseServices.LayerTableRecord)">
            <summary>Returns true if the given LayerTableRecord is visible with this filter.</summary>
            <param name="layer"> Input object on which the decision is going to be made.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilter.CompareTo(Autodesk.AutoCAD.LayerManager.LayerFilter)">
            <summary>Returns true if the two objects are equivalent.</summary>
            <param name="otherFilter"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilter.ShowEditor">
            <summary>Called by the host application to show an editor window for the filter. The editor is displayed as a child of the active popup window.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilter.GetFilterExpressionTree">
            <summary>Returns a read-only expression tree that represents this filter. May return null if the filter cannot be described this way.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilter.GenerateNested">
            <summary>Called by the ObjectDBX framework after a filter is loaded from persistent storage. This is an opportunity for the filter to generate nested filters.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.Name">
            <summary>Returns the name of the filter. This usually what is entered by the user when filter is created. However, for some filters such as the Xref or All filter, this is a localized constant.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.AllowRename">
            <summary>Returns a Boolean value indicating whether or not renaming this filter is allowed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.Parent">
            <summary>Returns the parent filter for this filter. All filters except the top level ("All") filter have a parent. The top level filter Returns null.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.NestedFilters">
            <summary>Returns an array containing the nested filters of this filter. The returned array is const; clients should not remove or add filters to this array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.AllowNested">
            <summary>Returns true if this filter allows nested filters.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.DynamicallyGenerated">
            <summary>When implemented in a derived class, this function should return true if the filter is dynamically generated by its parent and should not be persisted on its own.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.AllowDelete">
            <summary>Returns true if this filter can be removed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.IsProxy">
            <summary>Returns true if this is a proxy filter.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.IsIdFilter">
            <summary>Returns true if this filter only filters for the object ID property of a layer. These filters are also known as layer groups.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.DisplayImages">
            <summary>Accesses the DisplayImages property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilter.FilterExpression">
            <summary>Returns a filter expression of this form:.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SecurityActions">
            <summary>
This enumeration encapsulates a corresponding ObjectARX enum that is used by the SecurityParams ObjectARX struct. SecurityParams stores information for security operations requested during DWG file I/O.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SecurityAlgorithm">
            <summary>
This enumeration lists the available security algorithms for use in AutoCAD drawings.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo">
            <summary>
This .NET class wraps the AcDbDatabaseSummaryInfo ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input System.Object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.op_Inequality(Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo,Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo)">
            <summary>Compares the two operands and returns true if they are not equivalent.</summary>
            <param name="a"> Input left operand</param>
            <param name="b"> Input right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.op_Equality(Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo,Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo)">
            <summary>Compares the two operands and returns true if they are equivalent.</summary>
            <param name="a"> Input left operand</param>
            <param name="b"> Input right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input System.IFormatProvider object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.Title">
            <summary>Accesses the title.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.Subject">
            <summary>Accesses the subject value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.Author">
            <summary>Accesses the author property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.Keywords">
            <summary>Accesses the keywords property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.Comments">
            <summary>Accesses the comments property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.LastSavedBy">
            <summary>Accesses the last saved by property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.RevisionNumber">
            <summary>Accesses the revision number.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.HyperlinkBase">
            <summary>Accesses the hyperlink base property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo.CustomProperties">
            <summary>Accesses the custom properties property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder">
            <summary>
This class is required to build instances of Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo, which is an immutable value type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.#ctor(Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo)">
            <summary>Copy constructor.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.ToDatabaseSummaryInfo">
            <summary>This method returns a DatabaseSummaryInfo object that contains the values specified in this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.Title">
            <summary>Accesses the title.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.Subject">
            <summary>Accesses the subject value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.Author">
            <summary>Accesses the author property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.Keywords">
            <summary>Accesses the keywords property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.Comments">
            <summary>Accesses the comments property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.LastSavedBy">
            <summary>Accesses the last saved by property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.RevisionNumber">
            <summary>Accesses the revision number.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.HyperlinkBase">
            <summary>Accesses the hyperlink base property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.CustomProperties">
            <summary>Accesses the custom properties property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder.CustomPropertyTable">
            <summary>Accesses the custom properties table collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor">
            <summary>
This class encapsulates a PlotStyleNameType ObjectARX enum value, and the object ID of the associated plot style name dictionary entry.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="unmanagedObjPtr"> Object to compare with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.op_Equality(Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor,Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.op_Inequality(Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor,Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Culture-specific format</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.Id">
            <summary>Accesses the plot ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor.Type">
            <summary>Accesses the type of plot style name.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType">
            <summary>
This .NET class wraps the AcDb::PlotStyleNameType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatusResult">
            <summary>
This class is used to return the codes that describe the results of a field evaluation. These results are the equivalent of the three values returned by the Field.evaluationStatus() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatusResult.#ctor(Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus,System.Int32,System.String)">
            <summary>For internal use only.</summary>
            <param name="s"> _nt_</param>
            <param name="e"> _nt_</param>
            <param name="m"> _nt_</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatusResult.Status">
            <summary>Accesses the Status property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatusResult.ErrorCode">
            <summary>Accesses the ErrorCode property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatusResult.ErrorMessage">
            <summary>Accesses the ErrorMessage property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus">
            <summary>
This .NET enum wraps the AcDbField::EvalStatus ObjectARX enum. These values specify the evaluation status of the field.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TransactionManager">
            <summary>
This .NET class wraps the AcDbTransactionManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransactionManager.StartTransaction">
            <summary>Begins a new transaction.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransactionManager.StartOpenCloseTransaction">
            <summary>This method instantiates, initializes, and returns an OpenCloseTransaction object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransactionManager.AddNewlyCreatedDBObject(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>
This method wraps the AcDbTransactionManager::addNewlyCreatedDBRObject ObjectARX function..</summary>
            <param name="obj"> Input object to be added or removed</param>
            <param name="add"> Input Boolean indicating whether to add or remove the object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransactionManager.GetAllObjects">
            <summary>Searches all currently existing transaction objects and returns an objects collection with pointers to all objects it finds.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TransactionManager.QueueForGraphicsFlush">
            <summary>Queues up the graphics changes of all transaction-resident modified entities from any existing transaction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TransactionManager.NumberOfActiveTransactions">
            <summary>Returns the number of active transactions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TransactionManager.TopTransaction">
            <summary>Accesses the the Transaction object that is at the top of the transaction stack (that is, the most recently created Transaction object). This can be compared to a cached Transaction to determine if the cached object is the top (that is, "current") transaction, or it can be used to access the two member functions of that transaction object. However, because there are member functions in the TransactionManager class that provide direct access to the two member functions in the top transaction, there's no need to use TopTransaction for this purpose.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectContextManager">
            <summary>
This .NET class wraps the AcDbObjectContextManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextManager.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextManager.RegisterContextCollection(System.String,Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection)">
            <summary>Registers a context collection with the context manager.</summary>
            <param name="collectionName"> The name of the collection to register with the manager.</param>
            <param name="collection"> The collection to register with the manager.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextManager.UnregisterContextCollection(System.String)">
            <summary>Unregisters a context collection with the context manager.</summary>
            <param name="collectionName"> The name of the collection to unregister with the manager.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextManager.GetContextCollection(System.String)">
            <summary>Returns the collection registered if one exists with the specified name.</summary>
            <param name="collectionName"> The name of the desired collection.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataLinkManager">
            <summary>
This .NET class wraps the AcDbDataLinkManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataLinkManager.GetDataLink">
            <summary>Returns a collection of data links.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataLinkManager.GetDataLink(System.String)">
            <summary>Returns the object ID for the selected data link.</summary>
            <param name="name"> Name of the data link to get.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataLinkManager.AddDataLink(Autodesk.AutoCAD.DatabaseServices.DataLink)">
            <summary>Adds the specified data link object to the manager.</summary>
            <param name="dataLink"> Data link object to add to the manager.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataLinkManager.RemoveDataLink(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Removes the specified data link from the manager.</summary>
            <param name="idDataLink"> Reference to the data link to remove.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataLinkManager.RemoveDataLink(System.String)">
            <summary>Removes the specified data link from the manager.</summary>
            <param name="name"> Key to retrieve the data link.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLinkManager.DataLinkCount">
            <summary>Returns the number of data links.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph">
            <summary>
This .NET class wraps the AcDbObjectIdGraph ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph.#ctor">
            <summary>Constructor for the ObjectIdGraph class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph.AddNode(Autodesk.AutoCAD.DatabaseServices.ObjectIdGraphNode)">
            <summary>This function will add the ObjectIdGraphNode nodeToAdd to the graph.</summary>
            <param name="nodeToAdd"> Input ObjectIdGraphNode to add to the graph.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph.DelNode(Autodesk.AutoCAD.DatabaseServices.ObjectIdGraphNode)">
            <summary>Removes the ObjectIdGraphNode nodeToDelete from the graph, and the AcDbObjectIdGraph wrapped by this ObjectIdGraph deletes the AcDbObjectIdGraphNode wrapped by nodeToDelete.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph.FindNode(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Finds the ObjectIdGraphNode that contains the ObjectId id and returns that ObjectIdGraphNode or null if no node with that id is found in the graph.</summary>
            <param name="id"> Input ObjectId for node to find.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph.IdNode(System.Int32)">
            <summary>Returns the ObjectIdGraphNode at index in the ObjectIdGraph, or null if that index is not valid.</summary>
            <param name="index"> Input zero based index of the node to get.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FileOpenMode">
            <summary>
This .NET enum wraps the AcDbDatabase::OpenMode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefGraph">
            <summary>
This .NET class wraps the AcDbXrefGraph ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefGraph.GetXrefNode(System.Int32)">
            <summary>Searches for the node that corresponds to its passed in parameter, and returns NULL if no nodes match the parameter.</summary>
            <param name="idx"> Input System.Int32 object; Index into the graph</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefGraph.GetXrefNode(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns a pointer to the host drawing's database.</summary>
            <param name="db"> Input Autodesk.AutoCAD.DatabaseServices.Database object; node database to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefGraph.GetXrefNode(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns a pointer to the Terminator Block, if there is one. Otherwise it returns ObjectId.Null.</summary>
            <param name="btrId"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object; Block table record ID to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefGraph.GetXrefNode(System.String)">
            <summary>Searches for the node that corresponds to its passed in parameter, and returns NULL if no nodes match the parameter.</summary>
            <param name="name"> Input System.String object; Node name to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefGraph.MarkUnresolvedTrees">
            <summary>This method marks all unresolved xrefs and their nested xrefs with the GraphNode.UnresTree flag. It is really only effective on an xref graph which includes ghost references.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefGraph.HostDrawing">
            <summary>Returns the node associated with the host drawing.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FileDependencyManager">
            <summary>
This .NET class wraps the AcFileDependencyManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FileDependencyManager.GetEntry(System.String,System.String,System.Boolean)">
            <summary>
Using this function returns a FileDependencyInfo object containing data about the File Dependency List entry identified by feature and fullFileName..</summary>
            <param name="feature"> Input feature string of the entry.</param>
            <param name="fullFileName"> Input file name of the entry.</param>
            <param name="useCachedInfo"> Input is Boolean. If true, the parameter includes cached information; false does not include cached information.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FileDependencyManager.UpdateEntry(System.String,System.String)">
            <summary>The UpdateEntry() function is a shortcut for erasing and recreating the File Dependency List entry identified by feature and fullFileName.</summary>
            <param name="feature"> Input feature string of the entry</param>
            <param name="fullFileName"> Input file name of the entry</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FileDependencyManager.EraseEntry(System.String,System.String,System.Boolean)">
            <summary>
Erases the entry identified by feature and fullFileName from the File Dependency List if its reference count equals 1..</summary>
            <param name="feature"> Input feature string of the entry to erase</param>
            <param name="fullFileName"> Input file name of the entry to erase</param>
            <param name="forceRemove"> Input Boolean: true removes an entry with multiple references regardless of its reference count; false removes it only if the reference count is zero</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FileDependencyManager.IteratorInitialize(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
Initializes an iterator for the File Dependency List..</summary>
            <param name="feature"> Input feature name of entries to be returned using the iterator; can be null</param>
            <param name="modifiedOnly"> Input Boolean: true gets only those entries that were modified since the last save; false gets entries regardless of whether they were modified</param>
            <param name="affectsGraphicsOnly"> Input Boolean: true gets only those entries that have the affectsGraphicsOnly bits set; false gets entries regardless of the affectsGraphicsOnly bits</param>
            <param name="walkXRefTree"> Input Boolean: true creates an iterator that automatically iterates over the entries of File Dependency Lists in xref'd drawings; false creates an iterator to iterate over only entries in the local list</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MeasurementValue">
            <summary>
This .NET class wraps the AcDb::MeasurementValue ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EndCap">
            <summary>
This .NET class wraps the AcDb::EndCaps ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.JoinStyle">
            <summary>
This .NET class wraps the AcDb::JoinStyle ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord">
            <summary>
This .NET class wraps the AcDbDimStyleTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.GetArrowId(Autodesk.AutoCAD.DatabaseServices.DimArrowFlag)">
            <summary>Given an arrowhead, this function returns the ObjectId of the arrowhead.</summary>
            <param name="whichArrow"> Input a dimension arrowhead</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.IsModifiedForRecompute">
            <summary>Assesses the modified state of this dimension style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimadec">
            <summary>Accesses the current DIMADEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimalt">
            <summary>Accesses the current DIMALT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimaltd">
            <summary>Accesses the current DIMALTD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimaltf">
            <summary>Accesses the current DIMALTF value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimaltrnd">
            <summary>Accesses the current DIMALTRND value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimalttd">
            <summary>Accesses the current DIMALTTD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimalttz">
            <summary>Accesses the current DIMALTTZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimaltu">
            <summary>Accesses the current DIMALTU value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimaltz">
            <summary>Accesses the current DIMALTZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimarcsym">
            <summary>Accesses the arc length placement value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimasz">
            <summary>Accesses the current DIMASZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimatfit">
            <summary>Accesses the current DIMATFIT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimaunit">
            <summary>Accesses the current DIMAUNIT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimazin">
            <summary>Accesses the current DIMAZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimcen">
            <summary>Accesses the current DIMCEN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimclrd">
            <summary>Accesses the current DIMCLRD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimclre">
            <summary>Accesses the current DIMCLRE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimclrt">
            <summary>Accesses the current DIMCLRT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimdec">
            <summary>Accesses the current DIMDEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimdle">
            <summary>Accesses the current DIMDLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimdli">
            <summary>Accesses the current DIMDLI value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimdsep">
            <summary>Accesses the current DIMDSEP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimexe">
            <summary>Accesses the current DIMEXE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimexo">
            <summary>Accesses the current DIMEXO value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimfrac">
            <summary>Accesses the current DIMFRAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimgap">
            <summary>Accesses the current DIMGAP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimjogang">
            <summary>Accesses the current large radial angle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimjust">
            <summary>Accesses the current DIMJUST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimldrblk">
            <summary>Accesses the object ID of the block reference specified by the current DIMLDRBLK value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimlfac">
            <summary>Accesses the current DIMLFAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimlim">
            <summary>Accesses the current DIMLIM value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimltex1">
            <summary>Accesses the object ID of the linetype of extension line 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimltex2">
            <summary>Accesses the object ID of the linetype of extension line 2.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimltype">
            <summary>Accesses the dimension linetype.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimlunit">
            <summary>Accesses the current DIMLUNIT value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimlwd">
            <summary>Accesses the current DIMLWD value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimlwe">
            <summary>Accesses the current DIMLWE value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimrnd">
            <summary>Accesses the current DIMRND value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimsah">
            <summary>Accesses current DIMSAH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimscale">
            <summary>Accesses the current DIMSCALE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimsd1">
            <summary>Accesses the current DIMSD1 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimsd2">
            <summary>Accesses the current DIMSD2 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimse1">
            <summary>Accesses the current DIMSD1 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimse2">
            <summary>Accesses the current DIMSD2 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimsoxd">
            <summary>Accesses the current DIMSOXD value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtad">
            <summary>Accesses the current DIMTAD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtdec">
            <summary>Accesses the current DIMTDEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtfac">
            <summary>Accesses the current DIMTFAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtfill">
            <summary>Accesses the dimension background color state, which can be one of the following values:.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtfillclr">
            <summary>Accesses the current dimension background color (if dimtfill is set to 1).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtih">
            <summary>Accesses the current DIMTIH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtix">
            <summary>Accesses the current DIMTIX value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtm">
            <summary>Accesses the current DIMTM value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtmove">
            <summary>Accesses the current DIMTMOVE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtofl">
            <summary>Accesses the current DIMTOFL value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtoh">
            <summary>Accesses the current DIMTOH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtol">
            <summary>Accesses the current DIMTOL value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtolj">
            <summary>Accesses the current DIMTOLJ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtp">
            <summary>Accesses the current DIMTP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtsz">
            <summary>Accesses the current DIMTSZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtvp">
            <summary>Accesses the current DIMTVP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtxsty">
            <summary>Accesses the object ID of the TextStyle specified by the current DIMTXSTY value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtxt">
            <summary>Accesses the current DIMTXT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimtzin">
            <summary>Accesses the current DIMTZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimupt">
            <summary>Accesses the current DIMUPT value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimzin">
            <summary>Accesses the current DIMZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimapost">
            <summary>Accesses the current DIMAPOST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimpost">
            <summary>Accesses the character string that is the current DIMPOST value for the datatbase.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.DimfxlenOn">
            <summary>Accesses a value that indicates whether the fixed extension lines are on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimfxlen">
            <summary>Accesses the fixed extension lines value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimblk">
            <summary>Accesses the current DIMBLK value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimblk1">
            <summary>Accesses the current DIMBLK1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord.Dimblk2">
            <summary>Accesses the current DIMBLK2 value for the database.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter">
            <summary>
This .NET class wraps the AcDbSpatialFilter ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.GetQueryBounds">
            <summary>This function is used to get the boundary area of this SpatialFilter object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.GetQueryBounds(Autodesk.AutoCAD.DatabaseServices.BlockReference)">
            <summary>This function has been deprecated and will be removed in a future release.</summary>
            <param name="blockReference"> Deprecated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.GetVolume">
            <summary>Transforms the SpatialFilter object's clip boundary definition into the coordinate space of the associated block or xref.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.SetPerspectiveCamera(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets the perspective camera position to the location specified by fromPoint.</summary>
            <param name="fromPoint"> Input new base point for the camera</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.ClipVolumeIntersectsExtents(Autodesk.AutoCAD.DatabaseServices.Extents3d)">
            <summary>This function is used to determine whether an object with extents ext intersects this SpatialFilter object's clipping volume.</summary>
            <param name="ext"> Input extents</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.Definition">
            <summary>Accesses the definition of the SpatialFilter object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.HasPerspectiveCamera">
            <summary>Assesses if a perspective camera is currently defined for this SpatialFilter object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.ClipSpaceToWorldCoordinateSystemTransform">
            <summary>Transforms the clip boundary points from their coordinate system (whatever it may be) to WCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.OriginalInverseBlockTransform">
            <summary>Accesses the inverse of the block transform for the associated BlockReference when the Filter was last set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter.Inverted">
            <summary>This property controls whether or not the SpatialFilter filters out the contents outside of the clip boundary (not inverted) or inside the clip boundary (inverted).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter">
            <summary>
This .NET class wraps the AcDbLayerFilter ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter.Add(System.String)">
            <summary>This function will add the input layer to the set of layers within the filter object that define those entities that pass the filter test. Once layer is added, all entities on layer will be accepted.</summary>
            <param name="layer"> Input layer name to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter.Remove(System.String)">
            <summary>This function will remove the input layer from the filter. This will mean entities NOT on this layer are considered NOT to pass the filtered test.</summary>
            <param name="layer"> Input layer name to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter.GetAt(System.Int32,System.String)">
            <summary>This function finds the layer whose index is index and sets name to point to that layer's name.</summary>
            <param name="index"> Input index of layer to get</param>
            <param name="name"> Input name of layer at index index</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter.IsValid">
            <summary>Assesses whether all the layers exist in the layer table of the database the object is associated with.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter.LayerCount">
            <summary>Assesses the number of layers in the filter.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DbHomeView">
            <summary>
This .NET class wraps the AcDbHomeView ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DbHomeView.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DbHomeView.ToggleDefaultSettings">
            <summary>Fills the members of this class with default settings.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DbHomeView.Equals(System.Object)">
            <summary>Returns true if the two objects are equal.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DbHomeView.op_Equality(Autodesk.AutoCAD.DatabaseServices.DbHomeView,Autodesk.AutoCAD.DatabaseServices.DbHomeView)">
            <summary>Returns true if lhvm equals rhvm.</summary>
            <param name="rhvw"> Right operand</param>
            <param name="lhvm"> Left operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DbHomeView.op_Inequality(Autodesk.AutoCAD.DatabaseServices.DbHomeView,Autodesk.AutoCAD.DatabaseServices.DbHomeView)">
            <summary>Returns true if lhvm does not equal rhvm.</summary>
            <param name="lhvm"> Left operand</param>
            <param name="rhvw"> Right operand</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbHomeView.Eye">
            <summary>Accesses the eye point of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbHomeView.Center">
            <summary>Accesses the center point of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbHomeView.Up">
            <summary>Accesses the up direction of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbHomeView.Width">
            <summary>Accesses the orthogonal width of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbHomeView.Height">
            <summary>Accesses the orthogonal height of the view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbHomeView.Perspective">
            <summary>Assesses if the view is perspective.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext">
            <summary>
This .NET enum wraps the AcDbField::EvalContext ObjectARX enum. These values specify the context in which the field is evaluated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataLink">
            <summary>
This .NET class wraps the AcDbDataLink ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataLink.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DataLink.GetTargets">
            <summary>Returns the IDs of the entities which use this data link.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.DataAdapterId">
            <summary>Accesses the data adapter ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.ConnectionString">
            <summary>Accesses the connection string which describes the data source.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.Name">
            <summary>Accesses the name of the data link.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.Description">
            <summary>Accesses the data link description.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.ToolTip">
            <summary>Accesses the data link tool tip string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.DataLinkOption">
            <summary>Accesses the data link option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.UpdateOption">
            <summary>Accesses the update option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DataLink.IsValid">
            <summary>Accesses if the data link is valid and can be used to update data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataLinkOption">
            <summary>
This .NET class wraps the DataLinkOption ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UpdateDirection">
            <summary>
This .NET enum wraps AcDb::UpdateDirection ObjectARX enum. It gives the enumerations for updating the data source and target data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UpdateOption">
            <summary>
This .NET enum wraps AcDb::UpdateOption ObjectARX enum. It gives the options for updating adapters.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext">
            <summary>
Describes where the data link source is contexted.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PathOption">
            <summary>
This .NET class wraps the AcDb::PathOption ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LinkedData">
            <summary>
This .NET class wraps the AcDbLinkedData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedData.Clear">
            <summary>Deletes the data. This should be implemented by the derived classes and the implementation should delete the current contents. Base class implementation does nothing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinkedData.IsEmpty">
            <summary>Assesses whether the object has data or not. This should be implemented by the derived classes and the implementation should return true if the object is currently empty (i.e. it does not have any data).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinkedData.Name">
            <summary>Accesses the name of the data. The name can be blank string if there is no name set.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CollisionType">
            <summary>
This .NET class wraps the AcDbEntity::collisionType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.HighlightStyle">
            <summary>
This .NET enum is a wrapper for AcGiHighlightStyle</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes">
            <summary>
This .NET class wraps the AcDb::OsnapMode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Point3dCollection">
            <summary>
This .NET class wraps the AcGePoint3dArray ObjectARX class. Point3dArray is a template class that uses the AcArray class template.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.#ctor(Autodesk.AutoCAD.Geometry.Point3d[])">
            <summary>Constructs a collection from an array.</summary>
            <param name="values"> Input array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.CopyTo(Autodesk.AutoCAD.Geometry.Point3d[],System.Int32)">
            <summary>Copies objects in array to this collection from theindex point.</summary>
            <param name="array"> Input array to copy into</param>
            <param name="index"> Input index to begin copying</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.Add(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Input object to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.Contains(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Input object to check for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.IndexOf(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the 0-based index of the collection item that matches value.</summary>
            <param name="value"> Input index of object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.Insert(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Input index to insert at</param>
            <param name="value"> Input object to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.Remove(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Input object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Input index of object to remove at</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Point3dCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Point3dCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Intersect">
            <summary>
This .NET class wraps the AcDb::Intersect ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection">
            <summary>
An interface to a collection of DBObjects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.RemoveAt(System.Int32)">
            <summary>Removes the object at index from this collection.</summary>
            <param name="index"> Index of item to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.Add(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Input object to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.IndexOf(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Returns the zero-based index of the collection item that matches value.</summary>
            <param name="value"> Item to retrieve the index of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.Insert(System.Int32,Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Index to insert at</param>
            <param name="value"> Item to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.Remove(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Item to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.Contains(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Returns a Boolean indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Object to look for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.DBObject[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Array to copy from</param>
            <param name="index"> Zero-based index to start copying at</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObjectCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SaveType">
            <summary>
This .NET enum wraps the AcDb::SaveType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DragStatus">
            <summary>
This .NET class wraps the AcDb::DragStat ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GripStatus">
            <summary>
This .NET class wraps the AcDb::GripStat ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection">
            <summary>
This .NET class wraps the AcDbHyperlinkCollection ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Index of object to remove.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.HyperLink[],System.Int32)">
            <summary>Copies the entire collection to another zero-based array.</summary>
            <param name="array"> Target array.</param>
            <param name="index"> The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.Add(Autodesk.AutoCAD.DatabaseServices.HyperLink)">
            <summary>Add an item to the collection.</summary>
            <param name="value"> Item to add.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.IndexOf(Autodesk.AutoCAD.DatabaseServices.HyperLink)">
            <summary>Returns the 0-based index of the collection item that matches value.</summary>
            <param name="value"> Item to look for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.Insert(System.Int32,Autodesk.AutoCAD.DatabaseServices.HyperLink)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Location to insert at</param>
            <param name="value"> Item to insert.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.Remove(Autodesk.AutoCAD.DatabaseServices.HyperLink)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Object to remove.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.Contains(Autodesk.AutoCAD.DatabaseServices.HyperLink)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Item to check for.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection.Count">
            <summary>Accesses the number of objects in the array.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Mapper">
            <summary>
This .NET class wraps the AcGiMapper ObjectARX class. The Mapper class defines mappers. Mappers determine how an MaterialMap is positioned, sized, and rotated when it is mapped to an object surface. Mappers</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Mapper.#ctor">
            <summary>Default constructor. Initialized to planar, tiled, no automatic transform, and identity transform.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Mapper.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Mapper.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Mapper.Projection">
            <summary>Returns the mapping projection; one of the values from the Projection enumeration.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Mapper.AutoTransform">
            <summary>Returns the automatic transform mode of the mapper; one of the AutoTransform enumerators.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Mapper.Transform">
            <summary>Returns the transform of the mapper.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Mapper.UTiling">
            <summary>Deprecated. Likely to be removed from future release.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Mapper.VTiling">
            <summary>Deprecated. Likely to be removed from future release.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TypedValue">
            <summary>
This value type may contain objects of various types. The type of the value is indicated by this object's TypeCode property, which is analogous to the restype member of the ObjectARX resbuf structure. See ObjectARX Developer's Guide for more information on resbuf.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.#ctor(System.Int32,System.Object)">
            <summary>Constructs an object given a type code and a value.</summary>
            <param name="typeCode"> Input the type code.</param>
            <param name="value"> Input the value.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.#ctor(System.Int32)">
            <summary>Constructs an object given a type code.</summary>
            <param name="typeCode"> Input the type code.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare with.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.op_Inequality(Autodesk.AutoCAD.DatabaseServices.TypedValue,Autodesk.AutoCAD.DatabaseServices.TypedValue)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.op_Equality(Autodesk.AutoCAD.DatabaseServices.TypedValue,Autodesk.AutoCAD.DatabaseServices.TypedValue)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TypedValue.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TypedValue.TypeCode">
            <summary>Returns the TypeCode property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TypedValue.Value">
            <summary>Returns the Value property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ResultBufferEnumerator">
            <summary>
This enumerator walks the linked list of an underlying resbuf ObjectARX structure.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBufferEnumerator.MoveNext">
            <summary>Advances this enumerator to the next node in the ResultBuffer list, or to the first node if the current node is null. Returns false if the pointer advances past the end of the list, or if the list is empty. Otherwise, returns true.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ResultBufferEnumerator.Reset">
            <summary>Sets the current ResultBuffer node to null.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ResultBufferEnumerator.Current">
            <summary>Accesses the current item.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty">
            <summary>
This .NET class wraps the AcDbDynBlockReferenceProperty ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.GetAllowedValues">
            <summary>Returns the allowed values for the property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.BlockId">
            <summary>Accesses the ObjectId of the dynamic block reference containing the property represented by the DynamicBlockReferenceProperty.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.PropertyName">
            <summary>Accesses the name of the property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.PropertyTypeCode">
            <summary>Accesses the property type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.ReadOnly">
            <summary>Assesses whether the property is read only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.Show">
            <summary>Accesses.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.VisibleInCurrentVisibilityState">
            <summary>Indicates whether the property is visible in the current visibility state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.Description">
            <summary>Accesses the property description.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.UnitsType">
            <summary>Accesses the format type of the property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty.Value">
            <summary>Accesses the current value of the property on the block.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollection">
            <summary>
This class provides a container for Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty[],System.Int32)">
            <summary>Copies objects in array to this collection, starting from index.</summary>
            <param name="array"> Input array to copy from</param>
            <param name="index"> Input zero-based index to start at</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollection.Count">
            <summary>Accesses the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyUnitsType">
            <summary>
This .NET class wraps the AcDbDynBlockReferenceProperty::UnitsType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollectionEnumerator">
            <summary>
This class enumerates the properties in a DynamicBlockReferencePropertyCollection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollectionEnumerator.MoveNext">
            <summary>This method moves the current pointer to the next item, or to the end marker if the current item is at the end of the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollectionEnumerator.Reset">
            <summary>This method resets the current pointer to the first item in the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollectionEnumerator.Current">
            <summary>Accesses the current item.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockReference">
            <summary>
This .NET class wraps the AcDbBlockReference ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockReference.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This constructor initializes the block reference to use position (in WCS) as the position point; blockTableRecord as the object ID of the block table record to reference; the X, Y, and Z scale factors to 1.0; the rotation to 0.0; and the normal vector to (0,0,1).</summary>
            <param name="position"> Input Autodesk.AutoCAD.Geometry.Point3d object, the position point</param>
            <param name="blockTableRecord"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object, the object ID of BlockTableRecord to reference</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockReference.GeometryExtentsBestFit">
            <summary>Retrieves copies of all the entities in the referenced block table record.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockReference.GeometryExtentsBestFit(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Retrieves copies of all the entities in the referenced block table record, applying parentTransform to them, and then calculating the extents on the resulting entity set.</summary>
            <param name="parentTransform"> Input Autodesk.AutoCAD.Geometry.Matrix3d transformation to be applied to the block reference’s geometry</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockReference.ExplodeToOwnerSpace">
            <summary>Explodes the block reference into individual components. It appends the resulting entities to the BlockTableRecord that owns the BlockReference on which this method was called.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockReference.ResetBlock">
            <summary>Resets the BlockReference to the default state of the dynamic block.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockReference.ConvertToStaticBlock(System.String)">
            <summary>Converts the dynamic block instance to a legacy (non-dynamic) block.</summary>
            <param name="newBlockName"> Input the name of the new block definition</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockReference.ConvertToStaticBlock">
            <summary>Converts the dynamic block instance to a legacy (non-dynamic) anonymous block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.BlockTableRecord">
            <summary>Accesses the object ID of the BlockTableRecord referenced by the block reference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.Position">
            <summary>Accesses the position value (often referred to as the insertion point), in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.ScaleFactors">
            <summary>Accesses the block reference to use the X, Y, and Z scale factors contained in scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.Rotation">
            <summary>Accesses the rotation value (in radians) of the block reference. The rotation value is relative to the X axis of a coordinate system that is parallel to the OCS of the block reference, but has its origin at the position point of the block reference. The rotation axis is the Z axis of this coordinate system with positive rotations going counterclockwise when looking down the Z axis towards the origin.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.Normal">
            <summary>Accesses the normal vector (in WCS coordinates) of the plane containing the block reference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.BlockTransform">
            <summary>Accesses the block reference’s position (insertion point), normal vector, scale factors, and rotation so that the resulting MCS-to-drawing-WCS transform is the same as the transform matrix. MCS is the WCS within the block table record’s microspace.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.AttributeCollection">
            <summary>Returns the AttributeCollection property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.TreatAsBlockRefForExplode">
            <summary>Called by the AutoCAD EXPLODE command to determine how the entity should be exploded.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.DynamicBlockReferencePropertyCollection">
            <summary>Returns the collection the dynamic block (a BlockTableRecord) is a part of, if the block reference is a dynamic block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.IsDynamicBlock">
            <summary>Determines whether the BlockReference passed to the class constructor contains dynamic block information.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.DynamicBlockTableRecord">
            <summary>Returns the object ID of the dynamic block definition (a BlockTableRecord) if the block reference is a dynamic block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.AnonymousBlockTableRecord">
            <summary>Returns the anonymous block definition used to draw the dynamic block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.Name">
            <summary>Returns the name of the associated BlockTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.BlockUnit">
            <summary>Accesses the units associated with block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockReference.UnitFactor">
            <summary>Returns the unit factor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AttributeCollection">
            <summary>
This collection class provides a container for block reference attributes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.ObjectId[],System.Int32)">
            <summary>Copies the objects in the element to the array.</summary>
            <param name="array"> Input the array to copy to.</param>
            <param name="index"> Input the index position to start adding at.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeCollection.Count">
            <summary>Accesses the number of items in the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AttributeReference">
            <summary>
This .NET class wraps the AcDbAttribute ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeReference.#ctor">
            <summary>Default constructor. Initializes the field length to 0, the flags to 0 (that is, non-constant, visible, not preset, and not verifiable), and the tag to 0. In addition, all the initializations for a default new DBText object take place.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeReference.SetAttributeFromBlock(Autodesk.AutoCAD.DatabaseServices.AttributeDefinition,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Uses definition as a template for the attributes textual, entity, and starting geometric properties (in other words, it copies this information from the attribute definition into the attribute). It then applies blockTransform to transform the position, sizing, and obliquing as would be done by the INSERT command.</summary>
            <param name="definition"> Input the the attribute definition entity to be used as a data template</param>
            <param name="blockTransform"> Input a block transformation matrix.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeReference.SetAttributeFromBlock(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Applies blockTransform to the attribute's geometric data to transform the position, sizing, and obliquing as would be done by the INSERT command. The attribute's textual and entity properties data is left alone.</summary>
            <param name="blockTransform"> Input a block transformation matrix.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeReference.UpdateMTextAttribute">
            <summary>Updates the internal MText entity from the basic AttributeReference properties.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.Tag">
            <summary>Accesses the tag string, which is the identifier you see if you explode the BlockReference that owns the attribute, so that the attribute reverts back to the AttributeDefinition that was part of the original reference’s block definition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.Invisible">
            <summary>Accesses the visibility flag of the AttributeReference. If invisible is true, then the AttributeReference object is set to be invisible.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.IsConstant">
            <summary>Returns true if the AttributeReference object is set to be constant.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.IsVerifiable">
            <summary>Returns true if the attribute object is set to verify user input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.IsPreset">
            <summary>Returns true if the attribute object has a preset value and will not prompt for user input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.FieldLength">
            <summary>Accesses the attribute’s field length value. This value is not currently used within AutoCAD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.LockPositionInBlock">
            <summary>Returns true if the AttributeReference object is set to be immovable relative to the geometry in the block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.IsMTextAttribute">
            <summary>Returns true if the attribute is a multi-line attribute.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeReference.MTextAttribute">
            <summary>Accesses the internal MText entity, to replace or modify it.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableEnumerator">
            <summary>
This .NET class wraps the AcDbTableIterator ObjectARX class. It creates an iterator to traverse table rows, columns, and cells.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableEnumerator.MoveNext">
            <summary>Returns true if the target moves to next row, column or cell.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableEnumerator.Reset">
            <summary>Resets the current target row, column or cell.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableEnumerator.Current">
            <summary>Input cell at which to  position the iterator. This should specify a cell, row, or column depending on what is being iterated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Table">
            <summary>
This .NET class wraps the AcDbTable ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetColumnName(System.Int32)">
            <summary>Returns the columns name retrieved from the specified index.</summary>
            <param name="index"> Input zero based index of the column</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetColumnName(System.Int32,System.String)">
            <summary>Sets a column's name; it can be left blank.</summary>
            <param name="index"> Input zero based index of the column</param>
            <param name="name"> Input column name to set. This can be an empty string.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetToolTip(System.Int32,System.Int32)">
            <summary>Returns the tooltip string for cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetToolTip(System.Int32,System.Int32,System.String)">
            <summary>Sets the tooltip string for cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="toolTip"> Input tool tip string to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SuppressRegenerateTable(System.Boolean)">
            <summary>
This method allows the user to temporarily disable the regeneration of the table object during changes in one or more of its properties..</summary>
            <param name="suppress"> Input boolean value to suppress or enable the regeneration of a table object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.ColumnWidth(System.Int32)">
            <summary>Returns the column width at the specified column index in the table.</summary>
            <param name="col"> Input zero-based column index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetColumnWidth(System.Double)">
            <summary>This function sets a uniform column width for all the columns in the table.</summary>
            <param name="width"> Input uniform width to be used for all the columns in the table</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetColumnWidth(System.Int32,System.Double)">
            <summary>This function sets the column width at the specified column index in the table.</summary>
            <param name="col"> Input zero-based column index</param>
            <param name="width"> Input width to be used for the specified column</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.RowHeight(System.Int32)">
            <summary>Returns the row height of the specified row in the table.</summary>
            <param name="row"> Input zero-based row index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetRowHeight(System.Double)">
            <summary>This function sets a uniform row height for all the rows in the table.</summary>
            <param name="height"> Input height to be used for the specified row</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetRowHeight(System.Int32,System.Double)">
            <summary>This function sets the row height for the specified row index in the table.</summary>
            <param name="row"> Input zero-based row index</param>
            <param name="height"> Input height to be used for the specified row</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.MinimumColumnWidth(System.Int32)">
            <summary>Returns the minimum column width at the specified column index in the table.</summary>
            <param name="col"> Input zero-based column index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.MinimumRowHeight(System.Int32)">
            <summary>Returns the minimum row height for the specified row in the table.</summary>
            <param name="row"> Input zero-based row index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.Alignment(System.Int32,System.Int32)">
            <summary>This function returns the alignment of the text or block in the specified cell of the table.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.IsBackgroundColorNone(System.Int32,System.Int32)">
            <summary>Returns true if the background color for the specified cell in the table is set to no color value. Otherwise, returns false.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBackgroundColorNone(System.Int32,System.Int32,System.Boolean)">
            <summary>
This function enables or disables the background color for the specified cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="value"> Input indicating whether to enable the background color for the specified cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBackgroundColorNone(System.Boolean,System.Int32)">
            <summary>
This function enables or disables the background color for the specified row type. Different row types can be combined..</summary>
            <param name="value"> Input indicating whether to enable the background color for the specified row type</param>
            <param name="rowTypes"> Input row types</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.BackgroundColor(System.Int32,System.Int32)">
            <summary>This function returns the background color of the specified cell in the table.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.ContentColor(System.Int32,System.Int32)">
            <summary>This function returns the color of the cell content for the specified cell in the table.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.TextStyle(System.Int32,System.Int32)">
            <summary>Returns the object ID of the text style of the specified cell.</summary>
            <param name="row"> Input the zero-based row index for the cell</param>
            <param name="col"> Input the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextStyle(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function sets the table object to use the TextStyleTableRecord specified by id for the specified cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="id"> Input TextStyleTableRecord object ID</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextStyle(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32)">
            <summary>This function sets the table object to use the TextStyleTableRecord specified by id for the specified row types. Different row types can be OR'd.</summary>
            <param name="id"> Input TextStyleTableRecord object ID</param>
            <param name="rowTypes"> Input row types for which to set the text style</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.TextHeight(System.Int32,System.Int32)">
            <summary>Returns the text height of the specified table cell.</summary>
            <param name="row"> Input the zero-based row index for the cell</param>
            <param name="col"> Input the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextHeight(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Sets the text height of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="height"> Input text height</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextHeight(System.Int32,System.Int32,System.Double)">
            <summary>This function sets the text height for the specified table cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="height"> Input text height</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextHeight(System.Double,System.Int32)">
            <summary>This function sets the text height for the specified row types. Different row types can be OR'd.</summary>
            <param name="height"> Input text height</param>
            <param name="rowTypes"> Input row types</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GridLineWeight(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks)">
            <summary>This function returns the grid lineweight of the specified edge of the cell.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="col"> Input column index. This can be -1.</param>
            <param name="edge"> Input integer specifying the edge index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GridColor(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks)">
            <summary>This function returns the grid color of the specified edge of the cell.</summary>
            <param name="row"> Input object specifying the zero-based row index for the cell</param>
            <param name="col"> Input object specifying the zero-based column index for the cell</param>
            <param name="edge"> Input object specifying the edge index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GridVisibility(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks)">
            <summary>This function returns the grid visibility of the specified edge of the cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="edge"> Input specifying the edge index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetGridVisibility(System.Int32,System.Int32,System.Int16,System.Boolean)">
            <summary>
This function sets the grid visibility of the specified edge of the cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="edges"> Input specifying the edge index for the cell</param>
            <param name="value"> Input visibility to be used for the grid at the specified edge of the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetGridVisibility(System.Boolean,System.Int32,System.Int32)">
            <summary>
This function sets the grid visibility for a given grid line type and row type of the table object. Different grid line and row types can be combined..</summary>
            <param name="visible"> Input visibility</param>
            <param name="borders"> Input grid line type for which to set the visibility</param>
            <param name="rows"> Input row type for which to set the visibility</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.TableStyleOverrides">
            <summary>This function returns the table style overrides. Table.TableStyleOverrides defines the values for table style overrides.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.ClearTableStyleOverrides(System.Int32)">
            <summary>Clears the overrides used in a table and its cells.</summary>
            <param name="options"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CellType(System.Int32,System.Int32)">
            <summary>Returns the cell type of the cell at the specified location in the table. Possible values for cell type are Table.TextCell and Table.BlockCell.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetCellType(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.TableCellType)">
            <summary>This function sets the cell type to be applied to the cell at the specified location in the table. Possible values for cell type are Table.TextCell and Table.BlockCell.</summary>
            <param name="row"> Input the zero-based row index for the cell</param>
            <param name="col"> Input the zero-based column index for the cell</param>
            <param name="type"> Input enum value specifying the cell type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetCellExtents(System.Int32,System.Int32,System.Boolean,Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>
Gets the cell extents for the specified cell.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
            <param name="isOuterCell"> Output System.Boolean object indicating whether the specified cell is an outer cell</param>
            <param name="pts"> Output Autodesk.AutoCAD.Geometry.Point3dCollection object; point collection containing the cell extents information</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.AttachmentPoint(System.Int32,System.Int32)">
            <summary>Returns the attachment point of the specified cell.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CellStyleOverrides(System.Int32,System.Int32)">
            <summary>Returns the cell overrides for the specified cell.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.DeleteCellContent(System.Int32,System.Int32)">
            <summary>This function deletes the cell content for the specified cell.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.RowType(System.Int32)">
            <summary>Returns the row type of the specified row in the table. The row type may be TitleRow, HeaderRow, or DataRow.</summary>
            <param name="row"> Input zero-based row index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.TextStringConst(System.Int32,System.Int32)">
            <summary>Returns a copy of the null-terminated text string in the specified cell.</summary>
            <param name="row"> Input the zero-based row index for the cell</param>
            <param name="col"> Input the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.TextString(System.Int32,System.Int32)">
            <summary>Returns a copy of the null-terminated text string in the specified cell.</summary>
            <param name="row"> Input the zero-based row index for the cell</param>
            <param name="col"> Input the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextString(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Sets the text for the first content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents</param>
            <param name="text"> Input null-terminated text string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextString(System.Int32,System.Int32,System.String)">
            <summary>This function makes a copy of text and uses the copy as the value in the specified cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="value"> Input null-terminated text string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.FieldId(System.Int32,System.Int32)">
            <summary>Returns the object ID of the Field in the specified cell.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetFieldId(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function sets the Field object ID for the specified cell.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="col"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="fieldId"> Input field id to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.TextRotation(System.Int32,System.Int32)">
            <summary>This function returns the rotation angle of the text in the specified cell.</summary>
            <param name="row"> Input the zero-based row index for the cell</param>
            <param name="col"> Input the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.IsAutoScale(System.Int32,System.Int32)">
            <summary>This function returns the status of the mBlockAutoFit flag at the specified cell in the table. If this flag is true, the Table object automatically computes the scale and insertion point for the block content in order to fit it into the specified cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetAutoScale(System.Int32,System.Int32,System.Boolean)">
            <summary>
This function sets the auto fit flag, which determines whether to automatically fit the block into the specified cell. If autoFit is true, the Table object automatically computes the scale and insertion point for the block content in order to fit it into the specified cell..</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="autoFit"> Input Boolean indicating whether to auto fit the block at the specified cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.BlockTableRecordId(System.Int32,System.Int32)">
            <summary>Returns the object ID of the block table record at the specified cell in the table.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBlockTableRecordId(System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Sets the id of the block table record for the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="blockId"> Input block table record id to set</param>
            <param name="autoFit"> Input System.Boolean object indicating whether to auto fit the block into the specified cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBlockTableRecordId(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
This function sets the object ID of the block table record at the specified cell in the table.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="blockId"> Input BlockTableRecord object ID</param>
            <param name="autoFit"> Input indicating whether to auto fit the block into the specified cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.BlockScale(System.Int32,System.Int32)">
            <summary>This function returns the scale factor of the block reference at the specified cell in the table.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBlockScale(System.Int32,System.Int32,System.Double)">
            <summary>This function sets the scale factor of the block reference at the specified cell in the table.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="scale"> Input scale factor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.BlockRotation(System.Int32,System.Int32)">
            <summary>This function returns the rotation angle of the block reference at the specified cell in the table.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBlockRotation(System.Int32,System.Int32,System.Double)">
            <summary>This function sets the rotation angle of the block reference at the specified cell in the table.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="rotationalAngle"> Input rotation angle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetBlockAttributeValue(System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Gets the block attribute value if the content at the specified content index is a block with attributes.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="column"> Input System.Int32 object specifying the zero-based column index for the cell</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="attDefId"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetBlockAttributeValue(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function gets the attribute value from the block cell using the specified object ID key. If there is no overridden attribute value, it returns the default attribute value defined in the original AttributeDefinition object.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
            <param name="attributeDefinitionId"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBlockAttributeValue(System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.String)">
            <summary>Sets the block attribute value if the content at the specified content index is a block with attributes.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents</param>
            <param name="attDefId"> Input the object ID of the AttributeDefinition object</param>
            <param name="value"> Input character string specifying attribute value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBlockAttributeValue(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.String)">
            <summary>Sets the block attribute value if the content at the specified content index is a block with attributes.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="attributeDefinitionId"> Input the object ID of an of AttributeDefinition object</param>
            <param name="value"> Input character string specifying attribute v</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.InsertColumns(System.Int32,System.Double,System.Int32)">
            <summary>Inserts one or more columns at the specified index.</summary>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="width"> Input width for the inserted columns</param>
            <param name="columns"> Input number of columns to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.DeleteColumns(System.Int32,System.Int32)">
            <summary>This function deletes the specified number of columns from the table at the column index col.</summary>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
            <param name="columns"> Input System.Int32 object number of columns to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.InsertRows(System.Int32,System.Double,System.Int32)">
            <summary>Inserts one or more rows at the specified index.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="height"> Input height for the inserted rows</param>
            <param name="rows"> Input number of rows to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.DeleteRows(System.Int32,System.Int32)">
            <summary>This function deletes the specified number of rows from the table at the row index row.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="rows"> Input System.Int32 object number of rows to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.MergeCells(Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>This function merges cells within the specified range.</summary>
            <param name="range"> Input range of cells to merge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.UnmergeCells(Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>This function unmerges a cells within a specified range.</summary>
            <param name="range"> Input the cell range</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.IsMergedCell(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellRange&)">
            <summary>This function returns true if the specified cell is within merged cells. The merged cell region is always a rectangular area.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="range"> Output the range of merged cells</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GenerateLayout">
            <summary>This function will update the table object according to the current table style. It computes table geometry, including grid lines, text content, block content, and background fills, from given definition data and table style. The generated table geometry are maintained internally by member data mpEntities, which is a list of in-memory Entity pointers.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.RecomputeTableBlock(System.Boolean)">
            <summary>
This function updates the block table record the table object references to match any changes made to the table object since the last time the block table record was updated..</summary>
            <param name="forceUpdate"> Input indicating whether to force an update on the screen</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.HitTest(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function performs a hit test for the specified point and viewing direction.</summary>
            <param name="point"> Input 3D point in WCS specifying the input picking point</param>
            <param name="viewVector"> Input 3D vector in WCS specifying the view direction for the hit test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.ClearSubSelection">
            <summary>Removes the subselection set of cells from the table.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.DataType(System.Int32,System.Int32)">
            <summary>Returns the data type and unit type of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="col"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.UnitType(System.Int32,System.Int32)">
            <summary>Returns the object ID of the unit type of the specified cell.</summary>
            <param name="row"> Input the zero-based row index for the cell</param>
            <param name="col"> Input the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetDataType(System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.DataTypeParameter)">
            <summary>Sets the data type of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="dataType"> Input data type to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.Format(System.Int32,System.Int32)">
            <summary>Returns the cell format based on the zero-based row and column index.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetFormat(System.Int32,System.Int32,System.String)">
            <summary>For internal use.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="col"> Input System.Int32 object specifying the zero-based column index for the cell</param>
            <param name="pFormat"> Input format string to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetFormat(System.String,System.Int32)">
            <summary>For internal use.</summary>
            <param name="pFormat"> Input System.String object.</param>
            <param name="rowTypes"> Input System.Int32 object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.Value(System.Int32,System.Int32)">
            <summary>Returns the content type of the content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="col"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetValue(System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>Sets the value of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="value"> Input value to be set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>Sets the value of the first content of a cell.</summary>
            <param name="row"> Input specifying the zero-based row index for the cell</param>
            <param name="col"> Input specifying the zero-based column index for the cell</param>
            <param name="pValue"> Input value to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.ResetValue(System.Int32,System.Int32)">
            <summary>Resets the value in a particular cell.</summary>
            <param name="row"> Input object specifying the zero-based row index for the cell</param>
            <param name="col"> Input object specifying the zero-based column index for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.Select(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Boolean,System.Boolean,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>
Selects a cell in the table using a specified point, viewing direction, and orientation. If Paths is not null, the cell subentities, including bounding grid lines, MText, and block insert, will be returned by Paths.</summary>
            <param name="pickingPoint"> Input 3D point in WCS specifying the input picking point</param>
            <param name="hitTestViewDirection"> Input 3D vector in WCS specifying the view direction for the hit test</param>
            <param name="hitTestViewOrientation"> Input 3D vector in WCS specifying the view orientation for the hit test</param>
            <param name="allowOutside"> Input indicating whether a pick point outside the table will select a cell</param>
            <param name="inPickFirst"> Input indicating if the entity is already in the pickfirst set (true) or if the pickfirst logic should attempt to subselect the entity directly (false)</param>
            <param name="paths"> Output SubentPathArray</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.ReselectSubRegion(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This function provides the subentities of the current subselection cells. The paths may be empty if there are no subselection cells.</summary>
            <param name="paths"> Output array of FullSubentPath</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetSize(System.Int32,System.Int32)">
            <summary>Resizes the table.</summary>
            <param name="numRows"> Input number of rows</param>
            <param name="numCols"> Input number of columns</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CanInsertRow(System.Int32)">
            <summary>Checks if new rows can be inserted at the specified index.</summary>
            <param name="index"> Input System.Int32 object to check if new row can be inserted.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CanInsertColumn(System.Int32)">
            <summary>Checks if new columns can be inserted at the specified index.</summary>
            <param name="index"> Input System.Int32 object to check if new column can be inserted.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.InsertRowsAndInherit(System.Int32,System.Int32,System.Int32)">
            <summary>Inserts the specified number of new rows into the table at the row index.</summary>
            <param name="index"> Input index at which to insert the new rows</param>
            <param name="inheritFrom"> Input index of the row to inherit the format for the new rows. It can be -1. If it is -1 new rows don't inherit any format and they use default format.</param>
            <param name="numRows"> Input number of rows to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.InsertColumnsAndInherit(System.Int32,System.Int32,System.Int32)">
            <summary>Inserts the specified number of new columns into the table at the column index col.</summary>
            <param name="col"> Input index at which to insert the new columns</param>
            <param name="inheritFrom"> Input index of the column to inherit the format for the new columns. It can be -1. If it is -1 new columns don't inherit any format and they use default format.</param>
            <param name="numCols"> Input number of columns to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CanDeleteRows(System.Int32,System.Int32)">
            <summary>Checks if the row can be deleted from the specified index.</summary>
            <param name="index"> Input System.Int32 object to check if a row can be deleted.</param>
            <param name="nCount"> Input number of rows to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CanDeleteColumns(System.Int32,System.Int32)">
            <summary>Checks if the column can be deleted from the specified index.</summary>
            <param name="index"> Input System.Int32 object to check if a column can be deleted.</param>
            <param name="nCount"> Input number of columns to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetEnumerator(Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption)">
            <summary>Returns the enumerator object within the specified range based on the table enumeration option.</summary>
            <param name="range"> Input range of cells to delete the contents</param>
            <param name="option"> Input enumerator option</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetEnumerator">
            <summary>Returns the enumerator object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.IsEmpty(System.Int32,System.Int32)">
            <summary>Checks if the content of the specified cell is empty.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetMergeRange(System.Int32,System.Int32)">
            <summary>Returns merge range. The merge range will be invalid if the cell is not part of a merge range.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.IsContentEditable(System.Int32,System.Int32)">
            <summary>This function checks the cell state to determine if a cell content can be modified.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.IsFormatEditable(System.Int32,System.Int32)">
            <summary>This function checks the cell state to determine if a cell format can be modified. Applications should use this function to determine if a cell is editable instead of calling cellState directly and checking the state since the semantics of an editable cell may change as new states are added.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetCellState(System.Int32,System.Int32)">
            <summary>Returns the cell state.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetCellState(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellStates)">
            <summary>Sets the cell state.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="cellState"> Input cell state to set. This will replace all the bits of the current state</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CreateContent(System.Int32,System.Int32,System.Int32)">
            <summary>This function is called to create additional contents for a cell; one is created by default.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetNumberOfContents(System.Int32,System.Int32)">
            <summary>Returns the number of contents in the specified cell.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.MoveContent(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Moves a content in a cell from one position to another position within the cell.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="fromIndex"> Input index of the content to move</param>
            <param name="toIndex"> Input get index to which the content should be moved</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.DeleteContent(Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Deletes all the contents in a range of cells.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.DeleteContent(System.Int32,System.Int32,System.Int32)">
            <summary>Deletes content from a cell from the specified index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of row.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.DeleteContent(System.Int32,System.Int32)">
            <summary>Deletes all the contents in a cell.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetContentTypes(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the content type of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetContentTypes(System.Int32,System.Int32)">
            <summary>Returns the content type of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetValue(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the value of the first content based on the specified contentIndex.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetDataFormat(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the data format of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetDataFormat(System.Int32,System.Int32)">
            <summary>Returns the data format of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetDataFormat(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Sets the data format of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="format"> Input data format to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetDataFormat(System.Int32,System.Int32,System.String)">
            <summary>Sets the data format of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns</param>
            <param name="format"> Input data format to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetTextString(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the text for the first content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.HasFormula(System.Int32,System.Int32,System.Int32)">
            <summary>Returns true if the content at the specified index is a formula.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetFormula(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the formula if the content at the specified content index has a formula, otherwise returns empty string.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetFormula(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Sets the formula at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="formula"> Input formula to set.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetFieldId(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the id of the field at the specified index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetBlockTableRecordId(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the id of the block table record for the content at the specified content index.</summary>
            <param name="row"> Input System.Int32 object specifying the zero-based row index for the cell</param>
            <param name="column"> Input System.Int32 object specifying the zero-based column index for the cell</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetCustomData(System.Int32,System.Int32,System.String)">
            <summary>Gets the custom data value set in cell, row, or column as key-value pairs.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="key"> Input key to store the custom data</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetCustomData(System.Int32,System.Int32)">
            <summary>Returns the custom data value set in cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetCustomData(System.Int32,System.Int32,System.String,System.Object)">
            <summary>Sets the custom data value set in cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="key"> Input key to use for the custom data</param>
            <param name="value"> Input custom data to set. If this is NULL, it deletes the custom data.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetCustomData(System.Int32,System.Int32,System.Int32)">
            <summary>Sets the custom data value set in cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="data"> Input custom data to set. If this is NULL, it deletes the custom data.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetCellStyle(System.Int32,System.Int32)">
            <summary>Returns the the cell style of a cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetCellStyle(System.Int32,System.Int32,System.String)">
            <summary>Sets the the cell style of a cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="styleName"> Input cell style to set. The cell style should exist in the table style set in this table.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetMargin(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellMargins)">
            <summary>Returns the margin of cell, row, or column.</summary>
            <param name="row"> Input row index. Pass the value -1 if you are only concerned with the column.</param>
            <param name="column"> Input row index. Pass the value -1 if you are only concerned with the row.</param>
            <param name="margin"> Input margin type to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetMargin(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellMargins,System.Double)">
            <summary>Sets the margin of cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="margin"> Input margin type to set. Multiple margin types can be combined using OR</param>
            <param name="value"> Input margin value to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetContentColor(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the color of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetDataType(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the data type and unit type of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetTextStyleId(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the text style of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetTextStyleId(System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the text style of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="id"> Input text style</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetTextHeight(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the text height of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetRotation(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the rotation angle of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetRotation(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Sets the rotation angle of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="angle"> Input angle in radians</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetIsAutoScale(System.Int32,System.Int32,System.Int32)">
            <summary>This function returns the status of the mBlockAutoFit flag at the specified cell in the table. If this flag is true, the Table object automatically computes the scale and insertion point for the block content in order to fit it into the specified cell.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetIsAutoScale(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
This function returns the status of the autoFit flag at the specified cell in the table. If this flag is true, the Table object automatically computes the scale and insertion point for the block content in order to fit it into the specified cell.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="autoFit"> Input status of autofit flag</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetScale(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the scale of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetScale(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Sets the scale of the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="contentIndex"> Input content index. It should be more than or equal to 0 and less than the number of contents.</param>
            <param name="scale"> Input angle in radians</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetContentLayout(System.Int32,System.Int32)">
            <summary>Returns the content layout of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetMergeAllEnabled(System.Int32,System.Int32)">
            <summary>Returns true if the merge-all flag is enabled in a row or column, else false.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetMergeAllEnabled(System.Int32,System.Int32,System.Boolean)">
            <summary>
Enables the merge-all flag in a row or column.</summary>
            <param name="row"> Input zero-based row index</param>
            <param name="column"> Input zero-based column index</param>
            <param name="enable"> Input status of merge all for the cell</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetOverrides(System.Int32,System.Int32,System.Int32)">
            <summary>Read-only.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="contentIndex"> Input content index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetOverrides(System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellProperties)">
            <summary>Sets the override in cell, row, column, or content.</summary>
            <param name="row"> Input row index. This can be -1.</param>
            <param name="column"> Input column index. This can be -1.</param>
            <param name="contentIndex"> Input content index. This can be -1.</param>
            <param name="override"> Input override to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.RemoveAllOverrides(System.Int32,System.Int32)">
            <summary>Removes all the overrides in cell, row, or column.</summary>
            <param name="row"> Input row index. Insert the value -1 if you are only concerned with a column.</param>
            <param name="column"> Input column index. Insert the value -1 if you are only concerned with a row.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.IsLinked(System.Int32,System.Int32)">
            <summary>Checks if a cell is linked to a data source.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetDataLink(Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Gets the data links set in the specified range.</summary>
            <param name="range"> Input range to get the data links. If this is NULL it gets all the data links in the table.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetDataLink">
            <summary>Gets the data link if the cell is linked to a data source using data link.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetDataLink(System.Int32,System.Int32)">
            <summary>Returns the id of the data link if the specified cell is linked to a data source using a data link. Returns null id if the cell is not linked using a data link.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetDataLink(Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Sets the specified data link in a cell..</summary>
            <param name="range"> Input range to get the data links. If this is NULL it gets all the data links in the table.</param>
            <param name="dataLinkId"> Output reference to an array to receive the data link IDs.</param>
            <param name="bUpdate"> Input true if the data link is to be updated after setting it, false if not.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetDataLink(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Sets the specified data link in a cell..</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="dataLinkId"> Input the data link object</param>
            <param name="bUpdate"> Input true if the data link is to be updated after setting it, false if not.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetDataLinkRange(System.Int32,System.Int32)">
            <summary>Returns the data link range if the specified cell is part of a linked range. Returns invalid range if the specified cell is not part of a linked range. The specified cell can be any cell in a linked range.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.RemoveDataLink">
            <summary>Removes all the data links in the table.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.RemoveDataLink(System.Int32,System.Int32)">
            <summary>Removes the data link in the specified cell.</summary>
            <param name="row"> Input row index. Insert the value -1 if you are only concerned with a column.</param>
            <param name="column"> Input column index. Insert the value -1 if you are only concerned with a row.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetBreakHeight(System.Int32)">
            <summary>Returns the break height of the specified table when table breaking is enabled.</summary>
            <param name="index"> Input table index. It should be more than or equal to 0 and less than the number of multiple tables, when the table breaks.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBreakHeight(System.Int32,System.Double)">
            <summary>Sets the break height of the specified table when table breaking is enabled.</summary>
            <param name="index"> Input table index. It should be more than or equal to 0 and less than the number of multiple tables, when the table breaks.</param>
            <param name="height"> Input break height</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetBreakOffset(System.Int32)">
            <summary>Returns the table break offset of the table.</summary>
            <param name="index"> Input table index. It should be more than or equal to 0 and less than the number of multiple tables, when the table breaks.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBreakOffset(System.Int32,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets the table break offset of the table.</summary>
            <param name="index"> Input table index. It should be more than or equal to 0 and less than the number of multiple tables, when the table breaks.</param>
            <param name="offset"> Input offset value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.GetBreakSpacing">
            <summary>Returns the table break spacing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.SetBreakSpacing(System.Double)">
            <summary>Sets the table break spacing.</summary>
            <param name="spacing"> Input spacing</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CopyFrom(Autodesk.AutoCAD.DatabaseServices.Table,Autodesk.AutoCAD.DatabaseServices.TableCopyOptions,Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Copies content and format from source table. The table copy options can be passed to specify what to copy. The source and target range can be specified. If the source and target range does not match then it is copied to a new range depending on the table option value.</summary>
            <param name="source"> Input table source</param>
            <param name="options"> Input table copy options</param>
            <param name="sourceRange"> Input source cell range</param>
            <param name="targetRange"> Input target cell range</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CopyFrom(Autodesk.AutoCAD.DatabaseServices.LinkedTableData,Autodesk.AutoCAD.DatabaseServices.TableCopyOptions,Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Copies content and format from source table. The table copy options can be passed to specify what to copy. The source and target range can be specified. If the source and target range does not match then it is copied to a new range depending on the table option value.</summary>
            <param name="source"> Input source table</param>
            <param name="options"> Input copy option</param>
            <param name="sourceRange"> Input source cell range</param>
            <param name="targetRange"> Input target cell range</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.CopyFrom(Autodesk.AutoCAD.DatabaseServices.LinkedTableData,Autodesk.AutoCAD.DatabaseServices.TableCopyOptions)">
            <summary>Copies content and format from source table. The table copy options can be passed to specify what to copy.</summary>
            <param name="source"> Input source table</param>
            <param name="options"> Input copy option</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Table.Fill(Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.TableFillOptions)">
            <summary>Fills or clears cells in rows or columns by copying or generating series.</summary>
            <param name="fillRange"> Input Autodesk.AutoCAD.DatabaseServices.CellRange object. Range to be filled. This shouldn't overlap the source range except when this range is to be cleared instead of filled in which case this range should be contained fully in source range.</param>
            <param name="sourceRange"> Input Autodesk.AutoCAD.DatabaseServices.CellRange object. Source range to copy or use as pattern. This can be set to invalid range if the fill range is to be cleared.</param>
            <param name="options"> Input table copy options</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.TableStyle">
            <summary>Returns the object ID of the TableStyle referenced by the table object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.Direction">
            <summary>Returns the unit horizontal direction vector for the table in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.NumRows">
            <summary>Returns a non-negative integer representing the number of rows in the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.NumColumns">
            <summary>Returns a non-negative integer representing the number of columns in the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.Width">
            <summary>Returns the total width for the  table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.Height">
            <summary>Returns the total height of the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.MinimumTableWidth">
            <summary>Returns the minimum total width for  the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.MinimumTableHeight">
            <summary>Returns the minimum total height for  the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.HorizontalCellMargin">
            <summary>Returns the horizontal cell margin for the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.VerticalCellMargin">
            <summary>Returns the vertical cell margin for the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.FlowDirection">
            <summary>Returns the direction that the table follows from its start to its finish.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.IsTitleSuppressed">
            <summary>Returns true if the title row of the table is suppressed, or false if it is not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.TableStyleName">
            <summary>Returns the name of the table style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.IsHeaderSuppressed">
            <summary>Returns true if the header row of the table is suppressed, or false if it is not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.SubSelection">
            <summary>Returns range of cells in the subselection set. Returns invalid range if there are no subselection cells.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.HasSubSelection">
            <summary>Returns true if the table has a  subselection set. Otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.BreakEnabled">
            <summary>Returns true if break feature is enabled in the cell.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.BreakFlowDirection">
            <summary>Returns the table break flow direction of the table. The break flow direction determines the positioning of the tables when the table break is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Table.BreakOptions">
            <summary>Returns the table break option.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Cell">
            <summary>
This class represents table cells.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CellRange.Equals(System.Object)">
            <summary>Returns true if the two CellRange objects match.</summary>
            <param name="pRange"> Input range to check against.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CellRange.GetHashCode">
            <summary>Returns a hash code for the specific cell.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Cell.Row">
            <summary>Returns the number of rows.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Cell.Column">
            <summary>Returns the number of columns.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.TopRow">
            <summary>Returns the index of the top row.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.LeftColumn">
            <summary>Returns the index of the left column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.BottomRow">
            <summary>Returns the index of the bottom row.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.RightColumn">
            <summary>Returns the index of the right column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.TopLeft">
            <summary>Returns the Cell in the top left.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CellRange.BottomRight">
            <summary>Returns the Cell from the bottom row.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableHitTestInfo">
            <summary>
This class encapsulates the data returned in the output parameters of the Table.hitTest() ObjectARX function. It performs a hit test for the specified point and viewing direction.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableHitTestInfo.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableHitTestInfo.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input culture format</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableHitTestInfo.Row">
            <summary>Returns column index of the selected cell.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableHitTestInfo.Column">
            <summary>Returns column index of the selected cell.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableHitTestInfo.Type">
            <summary>Returns the type of table hit test performed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableHitTestType">
            <summary>
This enumeration lists the possible results of a Table hit test.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DataType">
            <summary>
This .NET class wraps the DataType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GridPropertyParameter">
            <summary>
This .NET class wraps the AcGridProp ObjectARX struct, which stores grid line properties..</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GridProperties">
            <summary>
This .NET class wraps the AcDb::GridProperty ObjectARX enum. These values describe the grid lines of a table.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GridLineStyle">
            <summary>
This .NET class wraps the AcDb::GridLineStyle ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Visibility">
            <summary>
This .NET class wraps the AcDb::Visibility ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FlowDirection">
            <summary>
This .NET class wraps the AcDbMText::FlowDirection ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellAlignment">
            <summary>
This .NET class wraps the CellAlignment ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RowType">
            <summary>
This .NET enum wraps the AcDb::RowType ObjectARX enum. This value represents all row types for a table.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks">
            <summary>
This .NET class wraps the CellEdgeMasks ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GridLineType">
            <summary>
This .NET class wraps the AcDb::GridLineType ObjectARX enum. These values describe the grid lines of a table.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableStyleOverride">
            <summary>
This .NET class wraps the AcDbTable::TableStyleOverrides ObjectARX class. It enumerates the table style overrides for a table object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableCellType">
            <summary>
This enumeration defines the types of cells in a table.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellOption">
            <summary>
This .NET class wraps the CellOption ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RotationAngle">
            <summary>
This .NET class wraps the AcDb::RotationAngle ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ParseOption">
            <summary>
This .NET class wraps the AcValue::ParseOption ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SelectType">
            <summary>
This .NET class wraps the AcDb::SelectType ObjectARX class. It gives the selection type for a table cell.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption">
            <summary>
This .NET class wraps the AcDb::TableIteratorOption ObjectARX class. It gives the table iterator options.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellStates">
            <summary>
This .NET class wraps the CellState ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellContentTypes">
            <summary>
This .NET class wraps the CellContentType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellMargins">
            <summary>
This .NET class wraps the CellMargins ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellContentLayout">
            <summary>
This .NET class wraps the CellContentLayout ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellProperties">
            <summary>
This .NET class wraps the CellProperty ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableBreakFlowDirection">
            <summary>
This .NET class wraps the AcDb::TableBreakFlowDirection ObjectARX class. It gives the table breaking flow direction options.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableBreakOptions">
            <summary>
This .NET class wraps the AcDb::TableBreakOptions ObjectARX class. It gives the table break options.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableCopyOptions">
            <summary>
This .NET enum wraps AcDb::TableCopyOption ObjectARX enum. It gives the table copy options.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LinkedTableData">
            <summary>
This .NET class wraps the AcDbLinkedTableData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetEnumerator(Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption)">
            <summary>Returns an enumerator iterator.</summary>
            <param name="option"> Input iterator option.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetSize(System.Int32,System.Int32)">
            <summary>Resizes the table.</summary>
            <param name="numRows"> Input new row size.</param>
            <param name="numCols"> Input new column size.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetColumnName(System.Int32)">
            <summary>This function gets the name of the column at the specified column index.</summary>
            <param name="index"> Input column index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetColumnName(System.Int32,System.String)">
            <summary>Gets the columns name.</summary>
            <param name="index"> Input zero based index of the column</param>
            <param name="name"> Input column name to set. This can be an empty string.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.AppendColumn(System.Int32)">
            <summary>Appends one or more columns. Returns the starting index of the appended columns.</summary>
            <param name="columnsNumber"> Input number of columns to append</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.InsertColumn(System.Int32,System.Int32)">
            <summary>Inserts one or more columns at the specified index.</summary>
            <param name="index"> Input index at which to insert the new columns</param>
            <param name="columnsNumber"> Input number of columns to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.DeleteColumn(System.Int32,System.Int32)">
            <summary>Deletes one or more columns.</summary>
            <param name="index"> Input starting index of the columns to delete</param>
            <param name="columnsNumberToDelete"> Input number of columns to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.AppendRow(System.Int32)">
            <summary>Appends one or more rows. Returns the starting index of the appended row.</summary>
            <param name="rowsNumber"> Input number of rows to append</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.InsertRow(System.Int32,System.Int32)">
            <summary>Inserts one or more rows at the specified index.</summary>
            <param name="index"> Input index at which to insert the new rows.</param>
            <param name="rowsNumber"> Input number of rows to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.DeleteRow(System.Int32,System.Int32)">
            <summary>Deletes one or more rows.</summary>
            <param name="index"> Input starting index of the rows to delete</param>
            <param name="rowsNumberToDelete"> Input number of rows to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.DeleteContent(System.Int32,System.Int32)">
            <summary>Deletes all the contents in a cell.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetContentTypes(System.Int32,System.Int32)">
            <summary>Gets the content type of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.IsContentEditable(System.Int32,System.Int32)">
            <summary>Checks if the content of the specified cell can be modified.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetCellState(System.Int32,System.Int32)">
            <summary>Gets the cell state of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetCellState(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellStates)">
            <summary>Sets the cell state.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Cell state to set. This will replace all the bits of the current state.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.DataType(System.Int32,System.Int32)">
            <summary>Gets the data type of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.UnitType(System.Int32,System.Int32)">
            <summary>Gets the unit type of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetDataFormat(System.Int32,System.Int32)">
            <summary>Gets the data format at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetDataFormat(System.Int32,System.Int32,System.String)">
            <summary>Sets the data format of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="format"> Input data format to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetValue(System.Int32,System.Int32)">
            <summary>Gets the value of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>Sets the value of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Input value to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetFieldId(System.Int32,System.Int32)">
            <summary>Returns the id of the field if the first content is a field; returns null id if there is no field.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetFieldId(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the id of the field as the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Input field id to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetBlockTableRecordId(System.Int32,System.Int32)">
            <summary>Returns the id of the block table record if the first content is a block; returns null id if the first content is not a block.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetBlockTableRecordId(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the id of the block table record as the content at the specified content index.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Input attribute value to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetBlockAttributeValue(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Gets the block attribute value if the first content is a block with attributes.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="attributeDefinitionId"> Input object ID of the AttributeDefinition object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetBlockAttributeValue(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.String)">
            <summary>Sets the block attribute value if the first content is a block with attributes.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="attributeDefinitionId"> Input object ID of the AttributeDefinition object</param>
            <param name="value"> Input attribute value to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetToolTip(System.Int32,System.Int32)">
            <summary>Gets the tooltip string for cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetToolTip(System.Int32,System.Int32,System.String)">
            <summary>Sets the tooltip string for cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
            <param name="value"> Input tool tip string to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetCustomData(System.Int32,System.Int32,System.String)">
            <summary>Gets the custom data value set in cell, row, or column as key-value pairs.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
            <param name="key"> Input key to retrieve the custom data</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetCustomData(System.Int32,System.Int32,System.String,System.Object)">
            <summary>Sets the custom data value set in cell, row, or column as key-value pairs.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
            <param name="key"> Input key to use for the custom data</param>
            <param name="value"> Input custom data to set. This can be NULL. If it is NULL it deletes the custom data.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.IsLinked(System.Int32,System.Int32)">
            <summary>Checks if a cell is linked to a data source.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetDataLink(Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Gets the datalinks set in the specified range.</summary>
            <param name="range"> Input range to get the data links. If this is NULL it gets all the data links in the table</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetDataLink">
            <summary>Returns a collection of all the data links.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.GetDataLink(System.Int32,System.Int32)">
            <summary>Gets the id of the data link if the specified cell is linked to a data source using a data link. Returns null id if the cell is not linked using a data link.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetDataLink(Autodesk.AutoCAD.DatabaseServices.CellRange,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Sets the specified data link in a cell range..</summary>
            <param name="range"> Range of cells to link to external source.</param>
            <param name="dataLinkId"> Id of the data link to set</param>
            <param name="bUpdate"> Input true if the data link has is to be updated after setting it, false if not</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.SetDataLink(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Sets the specified data link in a cell..</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="dataLinkId"> Input id of the data link to set</param>
            <param name="bUpdate"> Input true if the data link is to be updated after setting it, false if not.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.NumberOfColumns">
            <summary>Accesses the number of columns.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinkedTableData.NumberOfRows">
            <summary>Accesses the number of rows.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableFillOptions">
            <summary>
This .NET enum wraps AcDb::TableFillOption ObjectARX enum. It gives the table fill options.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FormattedTableData">
            <summary>
This .NET class wraps the AcDbFormattedTableData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.IsFormatEditable(System.Int32,System.Int32)">
            <summary>This function checks the cell state to determine if a cell format can be modified. Applications should use this function to determine if a cell is editable instead of calling cellState directly and checking the state since the semantics of an editable cell may change as new states are added.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetRotation(System.Int32,System.Int32)">
            <summary>Returns the rotation angle of the first content in radians.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.SetRotation(System.Int32,System.Int32,System.Double)">
            <summary>Sets the rotation angle of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Input angle in radians</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetScale(System.Int32,System.Int32)">
            <summary>Returns the scale of the first content in radians.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.SetScale(System.Int32,System.Int32,System.Double)">
            <summary>Sets the scale of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Input scale</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetAlignment(System.Int32,System.Int32)">
            <summary>Returns the alignment of the first content in radians.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetContentColor(System.Int32,System.Int32)">
            <summary>Returns the color of the first content in radians.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetBackgroundColor(System.Int32,System.Int32)">
            <summary>Returns the background color of cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetTextStyle(System.Int32,System.Int32)">
            <summary>Returns the text style of the first content in radians.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.SetTextStyle(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the text style of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Input text style</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetTextHeight(System.Int32,System.Int32)">
            <summary>Returns the text height of the first content in radians.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.SetTextHeight(System.Int32,System.Int32,System.Double)">
            <summary>Sets the text height of the first content.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="value"> Input text height</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetMargin(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellMargins)">
            <summary>Returns the margin of cell, row, or column.</summary>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
            <param name="margin"> Input margin type to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.SetMargin(System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellMargins,System.Double)">
            <summary>Sets the margin of cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
            <param name="margin"> Input margin type to set. Multiple margin types can be combined using OR.</param>
            <param name="value"> Input margin value to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetOverride(System.Int32,System.Int32,System.Int32)">
            <summary>Returns the override of cell, row, column, or content.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
            <param name="content"> Input content index. This can be -1. See remarks.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.SetOverride(System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.DatabaseServices.CellProperties)">
            <summary>Sets the override in cell, row, column, or content.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
            <param name="content"> Input content index. This can be -1. See remarks.</param>
            <param name="cellProperty"> Input override to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.RemoveAllOverrides(System.Int32,System.Int32)">
            <summary>Removes all the overrides in cell, row, or column.</summary>
            <param name="row"> Input row index. This can be -1. See remarks.</param>
            <param name="column"> Input column index. This can be -1. See remarks.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.Merge(Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Merges the cells in the range.</summary>
            <param name="range"> Input cell range to merge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.Unmerge(Autodesk.AutoCAD.DatabaseServices.CellRange)">
            <summary>Unmerges the cells in the range. The specified range can be a cell range, row range, or column range.</summary>
            <param name="range"> Input cell range to unmerge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.IsMerged(System.Int32,System.Int32)">
            <summary>Returns true if the specified cell is part of a merge range; false if not.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FormattedTableData.GetMergeRange(System.Int32,System.Int32)">
            <summary>Returns merge range. The merge range will be invalid if the cell is not part of a merge range.</summary>
            <param name="row"> Input row index. It should be more than or equal to 0 and less than the number of rows.</param>
            <param name="column"> Input column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry">
            <summary>
This lightweight class represents an entry in a DatabaseServices.DBDictionary object. It contains the key and object ID of the entry, but does not contain the entry itself.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry.#ctor(System.String,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This constructor creates a new object with the provided key and value.</summary>
            <param name="key"> Original key</param>
            <param name="value"> Original object ID value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input System.IFormatProvider object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry.Key">
            <summary>Accesses the Key property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry.Value">
            <summary>Accesses the Value property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator">
            <summary>
This .NET class wraps the AcDbDictionaryIterator ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator.MoveNext">
            <summary>This function attempts to advance the iterator one entry in the dictionary. If another entry is found, it returns true; otherwise, it returns false.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator.Reset">
            <summary>Resets the iterating position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator.Entry">
            <summary>Accesses the Entry property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator.Current">
            <summary>Accesses the current iterated position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator.Key">
            <summary>Accesses the Key value for the iterated entry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator.Value">
            <summary>Accesses the value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBDictionary">
            <summary>
This .NET class wraps the AcDbDictionary ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.GetAt(System.String)">
            <summary>This function searches the dictionary for an entry with key entryName and, if found, returns its object ID.</summary>
            <param name="entryName"> String representing the entry's search key name to look for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.NameAt(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function searches the dictionary for an entry with object ID objId and returns the search key name of the dictionary entry.</summary>
            <param name="objId"> Object ID to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.Contains(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if the object specified is in the dictionary.</summary>
            <param name="objId"> Object to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.Contains(System.String)">
            <summary>Returns true if the object specified is in the dictionary.</summary>
            <param name="entryName"> Name to search by</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.Remove(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function removes an entry specified by its object ID in objId from the dictionary.</summary>
            <param name="objId"> Object ID of the object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.Remove(System.String)">
            <summary>This function removes and entry specified by its 'key' from the dictionary.</summary>
            <param name="key"> String representing the entry's key (or name)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.SetName(System.String,System.String)">
            <summary>This function renames the entry specified by oldName to the new name specified by newName.</summary>
            <param name="oldName"> String representing the entry's old key string name</param>
            <param name="newName"> String representing the entry's new key string name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.GetEnumerator">
            <summary>This function returns a new enumerator.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBDictionary.CopyTo(Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry[],System.Int32)">
            <summary>Copies objects in array to this object, starting from index.</summary>
            <param name="array"> Array to receive data from</param>
            <param name="index"> Index to begin at</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBDictionary.TreatElementsAsHard">
            <summary>Accesses whether elements are treated hard or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBDictionary.MergeStyle">
            <summary>Accesses the merge style property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBDictionary.Count">
            <summary>Accesses the number of items in the dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBDictionary.IncludingErased">
            <summary>Accesses the including erased property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DictionaryWithDefaultDictionary">
            <summary>
This .NET class wraps the AcDbDictionaryWithDefault ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DictionaryWithDefaultDictionary.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DictionaryWithDefaultDictionary.DefaultId">
            <summary>Accesses the object ID that is the default entry for the dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DictionaryWithDefaultDictionary.ObjectBirthVersion">
            <summary>Accesses the DwgVersion and MaintenanceReleaseVersion in effect when the DictionaryWithDefault object's class was first introduced.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DimStyleTable">
            <summary>
This .NET class wraps the AcDbDimStyleTable ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DimArrowFlag">
            <summary>
This .NET class wraps the AcDb::DimArrowFlags ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Dictionary">
            <summary>
This .NET class wraps the AcRxDictionary ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.At(System.Int32)">
            <summary>Returns an object at the id or NULL if the id was not found in the dictionary.</summary>
            <param name="id"> Input dictionary entry ID of the object to retrieve.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.At(System.String)">
            <summary>Returns an object at the key or NULL if the key was not found in the dictionary.</summary>
            <param name="key"> Input lookup key string to search for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.AtPut(System.Int32,Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>Puts value into the dictionary at index id. This function returns a pointer to the Object that was at this index prior to this call. It returns NULL if the dictionary was set up to delete its entries.</summary>
            <param name="id"> Input dictionary entry ID at which to put value.</param>
            <param name="value"> Input object to add to the dictionary.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.AtPut(System.String,Autodesk.AutoCAD.Runtime.RXObject,System.Int32&)">
            <summary>Puts value into the dictionary with key as the lookup key and returns the new entry's dictionary ID in retId for future searches for this object using retId instead of the key. Returns a pointer to the Object with lookup key prior to this call. It returns NULL if there was nothing at this key or if the dictionary was set up to delete its entries.</summary>
            <param name="key"> Input lookup key string to use.</param>
            <param name="value"> Input object to add to the dictionary.</param>
            <param name="retId"> Output dictionary entry ID for the newly entered value.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.AtPut(System.String,Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>Puts value into the dictionary with key as the lookup key.</summary>
            <param name="key"> Input lookup key string to use.</param>
            <param name="value"> Input item to add to the dictionary.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.ResetKey(System.Int32,System.String)">
            <summary>Makes a copy of the newKey string and sets it to be the lookup key for the entry at index id.</summary>
            <param name="id"> Input dictionary entry ID at which to put value.</param>
            <param name="newKey"> Input new lookup key string to use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.ResetKey(System.String,System.String)">
            <summary>Makes a copy of the newKey string and sets it to be the lookup key for the entry that currently has the lookup key, oldKey.</summary>
            <param name="oldKey"> Input lookup key string to be found and changed.</param>
            <param name="newKey"> Input new lookup key string to use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.AtKeyAndIdPut(System.String,System.Int32,Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>Adds value to the dictionary with an existing id. newKey is not used to index into the dictionary.</summary>
            <param name="newKey"> Input lookup key string to use.</param>
            <param name="id"> Input dictionary entry ID at which to put value.</param>
            <param name="value"> Input object to add to the dictionary.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.Remove(System.Int32)">
            <summary>Removes the dictionary entry at index id. id must be greater than 0.</summary>
            <param name="id"> Input dictionary entry ID of the entry to remove.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.Remove(System.String)">
            <summary>Removes the dictionary entry with lookup key, key.</summary>
            <param name="key"> Input lookup key string for entry to be removed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.Contains(System.Int32)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="id"> Input dictionary entry ID.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.Contains(System.String)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="key"> Input key to check for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.IdAt(System.String)">
            <summary>Returns the dictionary ID for the entry indexed by key. If key is not found, 0 is returned.</summary>
            <param name="key"> Input lookup key string to search for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.KeyAt(System.Int32)">
            <summary>Returns a pointer to the lookup key string for the entry indexed by id. id must be greater than 0.</summary>
            <param name="id"> Input dictionary entry ID to search for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Dictionary.GetEnumerator">
            <summary>Returns an enumerator object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Dictionary.DeletesObjects">
            <summary>Returns true if the dictionary calls delete on the contained Object pointers dictionary is deleted.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Dictionary.IsCaseSensitive">
            <summary>Returns true or false depending on the value of the "ignoreCase" flag passed to the Kernel.newAcRxDictionary() function. It is intended for use by client code to check the state of an Dictionary in the same way that you call deletesObjects() and isSorted() to check other state data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Dictionary.IsSorted">
            <summary>Returns true if the dictionary is sorted.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Dictionary.Count">
            <summary>The number of pointers to the Object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.Filter">
            <summary>
This .NET class wraps the AcDbFilter ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.Filter.IndexClass">
            <summary>Accesses the class descriptor for the Index for this filter.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Group">
            <summary>
This .NET class wraps the AcDbGroup ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.#ctor(System.String,System.Boolean)">
            <summary>
Initializes the group object to use a copy of the description string as the description. If selectable == true, then when any entity within the group is selected, all entities in the group are selected. If selectable == false, then entities within the group are treated as individuals during the selection process..</summary>
            <param name="description"> Input null terminated string describing the group</param>
            <param name="selectable"> Input Boolean value indicating whether the group is selectable or not</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.#ctor">
            <summary>Default constructor. Initializes the group description string to NULL, Selectable to true, and the entities list to empty.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetAnonymous">
            <summary>This method sets the group to be anonymous. The group's current name will be replaced by an automatically generated anonymous group name.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Append(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This function appends the objects whose objectIds are in the ids collection to the group.</summary>
            <param name="ids"> Input objectId collection containing the objectIds of the objects to be appended</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Append(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function appends the object identified by id to the group.</summary>
            <param name="id"> Input objectId of the object to be appended to group</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Prepend(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This function prepends the objects whose objectIds are in the ids collection to the group.</summary>
            <param name="ids"> Input objectId collection containing the objectIds of the objects to be prepended</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Prepend(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function prepends the object identified by id to the group.</summary>
            <param name="id"> Input objectId of the object to be prepended to group</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.InsertAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Inserts the objects whose objectIds are in the ids collection into the group just after the entry at index. The indices are zero based. Hence the first element in the group will have an index of 0.</summary>
            <param name="index"> Input insertion index</param>
            <param name="ids"> Input objectId collection containing objects to be inserted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.InsertAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Inserts the object specified by id into the group just after the entry at the index. The indices are zero based. Hence the first element in the group will have an index of 0.</summary>
            <param name="index"> Input insertion index</param>
            <param name="id"> Input objectId of the object to be inserted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Remove(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Removes from the group, all objects whose object IDs are in the ids collection.</summary>
            <param name="ids"> Input array of objectIds of objects to be removed from the group</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Remove(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Removes from the group, the object whose object ID is id.</summary>
            <param name="id"> Input objectId of the object to be removed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.RemoveAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Removes, from the group, the objects whose object IDs are in the ids collection. All objects must be in the group and be at index locations equal to or higher than index.</summary>
            <param name="index"> Input starting index of the objects to be removed</param>
            <param name="ids"> Input objectId array of objects to be removed after start index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.RemoveAt(System.Int32)">
            <summary>Removes from the group, the object at the index index.</summary>
            <param name="index"> Input index of the object to be removed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Replace(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function replaces the oldId entity with the newId entity in the group.</summary>
            <param name="oldId"> Input objectId of the object to be removed from the group</param>
            <param name="newId"> Input objectId of the object to be added to the group in place of oldId</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Transfer(System.Int32,System.Int32,System.Int32)">
            <summary>Starting with the item at index fromIndex and going upwards in index values, this function transfers numItems from the index fromIndex to the index toIndex.</summary>
            <param name="fromIndex"> Input start index to transfer from</param>
            <param name="toIndex"> Input start index to transfer to</param>
            <param name="numItems"> Input number of items to transfer</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Clear">
            <summary>This methods resets or clears the contents of a group. After this method is called the group contains no elements. All other settings in the group remain unchanged (for example, name, description, colorIndex, etc.).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Has(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This method returns true if entity is present in the group or false if entity is not part of the group.</summary>
            <param name="entity"> Input the entity being looked up</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.GetAllEntityIds">
            <summary>Returns an array with the objectIds of the entities in the group.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.GetIndex(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns the index of the object identified by id.</summary>
            <param name="id"> Input objectId of the object whose index is being queried</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.Reverse">
            <summary>This method reverses the indices of all the objects in the group. The first object in the group will become the last object in the group, and so on.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetColorIndex(System.Int32)">
            <summary>All the entities in the group will be set to the color specified by color.</summary>
            <param name="color"> Input AutoCAD color index to be set for entities in the group (color index must be in the range 0 to 256)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetLayer(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets all entities in the group to use the LayerTableRecord with objectId value.</summary>
            <param name="value"> Input objectId of the layer to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetLayer(System.String)">
            <summary>Sets the LayerTableRecord with name value to be the layer for all entities in the group. If the layer specified by value exists, the entities will be modified to reference that layer. If the layer does not exist, a layer of name value is created before modifying the entities.</summary>
            <param name="value"> Input null terminated string that is the name of the new layer</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetLinetype(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the LinetypeTableRecord with objectId value to be the line type for all entities in the group.</summary>
            <param name="value"> Input objectId of the line type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetLinetype(System.String)">
            <summary>Sets the LinetypeTableRecord with name value to be the line type for all entities in the group.</summary>
            <param name="value"> Input objectId null terminated string that is the name of the new line type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetLinetypeScale(System.Double)">
            <summary>Sets the line type scale to value for all entities in the group.</summary>
            <param name="value"> Input new value for the line type scale</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetVisibility(System.Boolean)">
            <summary>
Sets the visibility to value for all entities in the group.</summary>
            <param name="value"> Input enum value for visibility</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Group.SetHighlight(System.Boolean)">
            <summary>
If newVal == true, then all entities in the group will be highlighted. If newVal == false, then all entities in the group will be unhighlighted.</summary>
            <param name="value"> Input Boolean indicating whether to highlight or not</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Group.Description">
            <summary>Accesses the group description string Conditions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Group.Selectable">
            <summary>Assesses true if the entire group is selected and manipulated as one unit.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Group.Name">
            <summary>Accesses the name string for the group.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Group.IsNotAccessible">
            <summary>Assesses true if the group is marked as inaccessible.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Group.IsAnonymous">
            <summary>Assesses true if the group is an anonymous group.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Group.NumEntities">
            <summary>Accesses the number of entities in the group.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.Index">
            <summary>
This .NET class wraps the AcDbIndex ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.Index.RebuildFull(Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData)">
            <summary>This function completely rebuilds the index from the entities in the associated block table record. Implementation is needed at the concrete class. The concrete class should supermessage the base class.</summary>
            <param name="indexData"> Input IndexUpdateData object for use during the index rebuild</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.Index.ObjectBeingIndexedId">
            <summary>Accesses Index objects are associated with Block Table Records, and indirectly owned by them. This function returns the parent block table record ID. This method has a concrete implementation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.Index.LastUpdatedAt">
            <summary>Accesses the TDUPDATE value of the Database when the index was last updated. This is particularly useful when using index objects in saved drawings. For example, if the TDUPDATE value is not equal to the LastUpdatedAt timestamp, the index is stale. This has a concrete implementation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.Index.LastUpdatedAtU">
            <summary>Accesses the Universal time that the index was last updated.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.Index.IsUptoDate">
            <summary>Accesses information in addition to TDUPDATE to verify the up-to-date status. This can be used to verify the validity within a session (as opposed to the TDUPDATE value being compared to LastUpdatedAt). This has a concrete implementation.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData">
            <summary>
This .NET class wraps the AcDbIndexUpdateData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData.AddId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method does not check to see if the ObjectId corresponds to the same database as the one whose indexes are being updated.</summary>
            <param name="id"> Object ID for which mapping data or flag data will be added later</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData.SetIdFlags(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Byte)">
            <summary>Sets the ID flags.</summary>
            <param name="id"> Object ID that flags is associated with</param>
            <param name="flags"> 8-bit flag value associated with id</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData.SetIdData(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.IntPtr)">
            <summary>Sets the ID data.</summary>
            <param name="id"> Object ID that data is associated with</param>
            <param name="data"> 32-bit data value associated with id</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData.SetIdData(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32)">
            <summary>Sets the ID data.</summary>
            <param name="id"> Object ID that data is associated with</param>
            <param name="data"> 32-bit data value associated with id</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData.GetIdData(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns the 32-bit data associated with id.</summary>
            <param name="id"> Object ID that data is associated with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData.GetIdDataPtr(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns the 32-bit data value associated with id.</summary>
            <param name="id"> Object ID that data is associated with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData.GetIdFlags(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns the 8-bit flag value associated with id.</summary>
            <param name="id"> Object ID that flags is associated with</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator">
            <summary>
This .NET class wraps the AcDbFilteredBlockIterator ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.Start">
            <summary>Initiates iteration.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.Seek(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The Seek() method is only provided to implement legacy behavior.</summary>
            <param name="id"> ObjectId to seek to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.Accepts(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if the id is accepted (that is, if it can be output).</summary>
            <param name="id"> Object ID that is being composed, typically output of a previous iterator's Accepts() method or Id property</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.AddToBuffer(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method adds the Id to an internal buffer maintained by an index iterator. This method can be expected to return true only if the BuffersForComposition property returns true.</summary>
            <param name="id"> Object ID that is being composed, typically output of a previous iterator's Accepts() method or Id property</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.Next">
            <summary>Accesses the cursor and returns the next ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.Id">
            <summary>Accesses the ObjectId at the current iterator position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.EstimatedHitFraction">
            <summary>Used to prioritize the order in which FilteredBlockIterator objects will be used during a block traversal. If a concrete implementation cannot estimate, it should return 1.0. Returning 0.0 will force the iterator to be the first one used for the traversal. Returning 1.0 will force it to be the last iterator used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator.BuffersForComposition">
            <summary>During use by CompositeFilteredBlockIterator, the way multiple index/filter pairs are handled is through allocating corresponding FilteredBlockIterator objects, and prioritizing their use through the EstimatedHitFraction property. As a result, only the first index iterator does a 'true' index traversal. The remaining are queried for acceptance or rejection of individual Ids through the Accepts() method in most cases.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialIndex">
            <summary>
This .NET class wraps the AcDbSpatialIndex ObjectARX class. This class is an index implementation especially for the spatial index.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialIndex.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.LayerIndex">
            <summary>
This .NET class wraps the AcDbLayerIndex ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.LayerIndex.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.LayerIndex.Compute(Autodesk.AutoCAD.DatabaseServices.LayerTable,Autodesk.AutoCAD.DatabaseServices.BlockTableRecord)">
            <summary>This function uses the layer table pointed to by pLT and the block table record pointed to by pBTR to compute the appropriate filter information.</summary>
            <param name="pLT"> Input layer table of the Database</param>
            <param name="record"> Input block table record for which the filter should be generated</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayerStateMasks">
            <summary>
This .NET class wraps the AcDbLayerStateManager::LayerStateMask ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CustomScale">
            <summary>
This class encapsulates the numerator and denominator values that define a custom print scale.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.#ctor(System.Double,System.Double)">
            <summary>Constructor.</summary>
            <param name="numerator"> Input numerator value</param>
            <param name="denominator"> Input denominator value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input System.IFormatProvider object definition.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.CustomScale)">
            <summary>This method calls the IsEqualTo(CustomScale a, Tolerance tolerance) overload, with tolerance set to Global.</summary>
            <param name="a"> Input scale to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.CustomScale,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method compares this CustomScale object to a. It returns a value that indicates whether the difference between the two falls within the range of tolerance.</summary>
            <param name="a"> Input custom scale to compare</param>
            <param name="tolerance"> Input tolerance range</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.op_Inequality(Autodesk.AutoCAD.DatabaseServices.CustomScale,Autodesk.AutoCAD.DatabaseServices.CustomScale)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Input left operand</param>
            <param name="b"> Input right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.op_Equality(Autodesk.AutoCAD.DatabaseServices.CustomScale,Autodesk.AutoCAD.DatabaseServices.CustomScale)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Input left operand</param>
            <param name="b"> Input right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CustomScale.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomScale.Numerator">
            <summary>Returns the Numerator property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CustomScale.Denominator">
            <summary>Returns the Denominator property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotSettings">
            <summary>
This .NET class wraps the AcDbPlotSettings ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettings.#ctor(System.Boolean)">
            <summary>
This constructor allows you to set whether the new plot setup is a model space type (modelType == true) or a paperspace (layout) type (modelType == false).</summary>
            <param name="modelType"> Input Boolean that determines the plot setup type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettings.AddToPlotSettingsDictionary(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>This method adds plot settings to the dictionary.</summary>
            <param name="toWhichDatabase"> Input database to which to add plot settings object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettings.SetShadePlot(Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the plot settings for shaded or rendered plotting.</summary>
            <param name="type"> Input type of the shade plot object</param>
            <param name="shadePlotId"> Input object ID of the VisualStyle or RenderSettings object to be used as the shade plot object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotSettingsName">
            <summary>Accesses the current name of your plot settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotConfigurationName">
            <summary>Accesses a PC3 file containing the "how to plot" information.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotPaperMargins">
            <summary>Accesses the printable area of the configured paper. The values returned are in millimeters, regardless of the units selected by the user. The values are in physical media coordinates, so they are not affected by the current scale of the drawing. This function does not take into account plots that may be rotated or mirrored.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotPaperSize">
            <summary>Accesses the width and height of the configured paper. This is defined as the entire physical paper area including the unprintable area.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.CanonicalMediaName">
            <summary>Accesses the locale-independent name of the currently configured paper. For the localized version of the media name, use LocaleMediaName.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotOrigin">
            <summary>Accesses the plot origin offset that is applied inside of the paper margins.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotPaperUnits">
            <summary>Accesses the units used for plotting in the enumeration PlotPaperUnits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotViewportBorders">
            <summary>Accesses the floating model space viewport borders are plotted. Note that the viewport borders are always displayed on screen during layout mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotPlotStyles">
            <summary>Indicates whether plot styles are plotted (as opposed to just displayed).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.ShowPlotStyles">
            <summary>Assesses whether the object style is displayed during layout mode. This setting does not affect the plotting of pen styles.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotRotation">
            <summary>Accesses the rotation of the plot on the paper.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotCentered">
            <summary>Assesses whether the plot will be centered. If true, the paper margins are automatically computed to position the plot in the center of the sheet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotHidden">
            <summary>Assesses whether or not the objects in paperspace are processed through the hidden line algorithm. Note that this doesn't affect objects inside of floating model space viewports. A separate control, specified per viewport, controls hidden line removal within those viewports.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.ShadePlot">
            <summary>Accesses the type of shade plot specified in the plot settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.ShadePlotResLevel">
            <summary>Accesses the shade plot resolution level of the current PlotSettings object. This setting specifies the resolution level at which shaded and rendered viewports will plot.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.ShadePlotCustomDpi">
            <summary>Accesses the shade plot custom dpi of the current PlotSettings object. This setting specifies the user-defined resolution at which shaded and rendered viewports will plot. This setting should be used only if the shade plot resolution level is set to ShadePlotResLevel.Custom.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotType">
            <summary>Accesses the portion of paperspace to output to the media.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotWindowArea">
            <summary>Accesses the portion of the layout to plot. The arguments specify the two points in paperspace positioned on the output media.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotViewName">
            <summary>Accesses a named view that in turn specifies what portion of the layout to plot.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.UseStandardScale">
            <summary>Assesses whether the layout is currently using the StdScaleType property to calculate the current plot scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.CustomPrintScale">
            <summary>Accesses the custom scale, a ratio of paperspace units to media units. The CustomPrintScale property stores the current scale (actually the numerator and denominator) for the plot settings for both "computed/standard" scales and "custom" scales. It always reflects the scale that will be used to plot.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.CurrentStyleSheet">
            <summary>Accesses the name of the configured plot style table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.StdScaleType">
            <summary>Accesses the standard scale as a value of the enumerated type StdScaleType.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.StdScale">
            <summary>Accesses the standard scale value as a floating point scale. Each enumerated value in the enum StdScaleType maps to a single floating point number. This method allows an application to retrieve a standard scale without having to do a table lookup to compute the scale value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.ScaleLineweights">
            <summary>Assesses whether lineweights will be scaled proportionately with the plot scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PrintLineweights">
            <summary>Assesses whether lineweights will get plotted.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.DrawViewportsFirst">
            <summary>Assesses whether the plotting system will plot the objects in paperspace first (if it returns false), or last (if it returns true). This is relative to the floating model space viewports.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.ModelType">
            <summary>Assesses whether a named plot setup is a model space type or a paperspace (layout) type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.ShadePlotId">
            <summary>Accesses the ObjectId of the VisualStyle  or RenderSettings object referenced by this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotWireframe">
            <summary>Assesses whether or not the viewport will plot as vector output based on the viewport's current shade plot settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettings.PlotAsRaster">
            <summary>Assesses whether or not the viewport will plot as a raster based on the viewport's current shade plot settings.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit">
            <summary>
This .NET class wraps the AcDbPlotSettings::PlotPaperUnits ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotRotation">
            <summary>
This .NET class wraps the AcDb::PlotRotation ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType">
            <summary>
This .NET class wraps the AcDbPlotSettings::ShadePlotType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel">
            <summary>
This .NET class wraps the AcDbPlotSettings::ShadePlotResLevel ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotType">
            <summary>
This .NET class wraps the PlotType ObjectARX class. It specifies the type of plot generated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.StdScaleType">
            <summary>
This .NET enum wraps AcDbPlotSettings::stdScaleType> ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Layout">
            <summary>
This .NET class wraps the AcDbLayout ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Layout.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Layout.Initialize">
            <summary>This method will do the behind the scenes work to establish a Paper Space viewport for the layout. This allows a layout to be set up and made ready for other viewports and entities to be put into the layout as well as to set various layout properties.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Layout.AddToLayoutDictionary(Autodesk.AutoCAD.DatabaseServices.Database,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method adds the layout to the specified database's layout dictionary, and specifies the block table record to use.</summary>
            <param name="toWhichDatabase"> Input database to which to add the layout</param>
            <param name="blockTableRecordId"> Input block table record to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Layout.GetViewports">
            <summary>This function returns a collection of ObjectIds of all the Viewports that exist in the Layout's paperspace. The first ID in the list will be the paperspace viewport. If the list returned is empty, then this Layout has never been switched to (activated). The list is updated each time a layout is activated, and kept up-to-date while that layout is active (whenever viewports are added or deleted).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.BlockTableRecordId">
            <summary>Accesses the Layout's associated BlockTableRecord. Corresponding methods in BlockTableRecord implement a forward pointer to the Layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.LayoutName">
            <summary>Accesses the user-friendly layout name that is displayed in the tab control.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.TabOrder">
            <summary>Accesses the tab order field, which controls the order in which the layouts are displayed in the tab control that is docked to the bottom of the viewport. The tab order should be unique and sequential for each layout in the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.TabSelected">
            <summary>Accesses the layout tab is included in the selection set for operations that affect multiple tabs. The user can perform multiple selection via the user interface using shift-click.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.AnnoAllVisible">
            <summary>Accesses current ANNOALLVISIBLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.Limits">
            <summary>Accesses the current limits set in the layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.Extents">
            <summary>Accesses the current extents  setting of the layout. This value may not be the actual extents of the geometry in the layout, it is just the value last saved in the layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Layout.Thumbnail">
            <summary>Accesses the thumbnail argument to point to a newly-allocated buffer that contains this layout's thumbnail bitmap.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LinetypeTable">
            <summary>
This .NET class wraps the AcDbLinetypeTable ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord">
            <summary>
This .NET class wraps the AcDbLinetypeTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.DashLengthAt(System.Int32)">
            <summary>This function returns the length (in AutoCAD drawing units--the dash will appear this length when the linetype scale is 1.0) of the index'th dash in the LinetypeTableRecord.</summary>
            <param name="index"> Input index (0-based) of dash to get length of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetDashLengthAt(System.Int32,System.Double)">
            <summary>This function sets value to be the length (in AutoCAD drawing units--the dash will appear this length when the linetype scale is 1.0) of the index'th dash in the LinetypeTableRecord.</summary>
            <param name="index"> Input index (0-based) of dash to set</param>
            <param name="value"> Input length value for the dash</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.ShapeStyleAt(System.Int32)">
            <summary>This function returns the ObjectId of the TextStyleTableRecord of the shape (or textStyle if it's a text string instead of a shape) at position index in the LinetypeTableRecord. If there is no shape or text at index, then Null is returned.</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetShapeStyleAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function sets the LinetypeTableRecord to use value as the ObjectId of the TextStyleTableRecord for the shape (or textStyle if it's a text string instead of a shape) at position index. If there is to be no shape or text at index, then value should be Null.</summary>
            <param name="index"> Input index at which to set the shape (or text string) scale</param>
            <param name="id"> Input scale factor to be applied to the shape (or text string)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.ShapeNumberAt(System.Int32)">
            <summary>This function returns the shape number of the shape at position index in the LinetypeTableRecord. If there is no shape at index, then 0 is returned.</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetShapeNumberAt(System.Int32,System.Int32)">
            <summary>This function sets the index'th dash to embed the shape identified by shapeNumber (the shape's shapeNumber from its shape file). If no shape is to be used at index, then shapeNumber should be 0.</summary>
            <param name="index"> Input index at which to set the shape</param>
            <param name="shapeNumber"> Input shape identification number of the shape to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.ShapeOffsetAt(System.Int32)">
            <summary>This function returns an Vector2d object whose X and Y coordinates represent the X and Y offsets of the shape (or text string) at position index in the LinetypeTableRecord. If there is no shape at index, then the X and Y components of the returned vector will be 0.0.</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetShapeOffsetAt(System.Int32,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>This function sets the LinetypeTableRecord to use the X and Y coordinates of offset as the X and Y offsets for the shape (or text string) at position index. If there is to be no shape at index, then the X and Y components of offset should be 0.0.</summary>
            <param name="index"> Input index at which to set the shape (or text string) offset</param>
            <param name="offset"> Input vector whose X and Y values are the WCS X and Y offsets for the shape</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.ShapeScaleAt(System.Int32)">
            <summary>This functions return the scale factor of the shape (or text string) at position index in the LinetypeTableRecord. If there is no shape at index, then 1.0 is returned.</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetShapeScaleAt(System.Int32,System.Double)">
            <summary>This function sets the LinetypeTableRecord to use scale as the scale of the shape at position index. If there is to be no shape at index, then scale should be 1.0.</summary>
            <param name="index"> Input index at which to set the shape (or text string) scale</param>
            <param name="scale"> Input scale factor to be applied to the shape</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.ShapeIsUcsOrientedAt(System.Int32)">
            <summary>This function returns true if the shape (or text string) at position index in the LinetypeTableRecord has the UcsOriented bit (bit 1) set in its shape flags otherwise it returns false.</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetShapeIsUcsOrientedAt(System.Int32,System.Boolean)">
            <summary>
This function sets the UcsOriented bit (bit 1) for the shape (or text string) at position index in the LinetypeTableRecord. If IsUcsOriented is true, then the bit is set and the shape will orient itself relative to the current UCS when displayed. If IsUcsOriented is false, then the shape will orient itself relative to the line it's embedded within..</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
            <param name="isOriented"> Input Boolean indicating whether or not the shape is to be oriented relative to the current UCS</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.ShapeRotationAt(System.Int32)">
            <summary>This function returns of the rotation angle (in radians) of the shape (or text string) at position index in the LinetypeTableRecord. If the isUcsOriented bit is set in the LinetypeTableRecord, then the rotation angle is relative to the current UCS, otherwise it's relative to the line's direction. Positive angles are counter-clockwise when looking down the normal of the plane containing the text (or the UCS normal if isUcsOriented) If there is no shape at index, then 0 is returned.</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetShapeRotationAt(System.Int32,System.Double)">
            <summary>This function sets the rotation angle (in radians) of the shape (or text string) at position index in the LinetypeTableRecord. If the isUcsOriented bit is set in the LinetypeTableRecord, then the rotation angle is relative to the current UCS. Otherwise it's relative to the line's direction. Positive angles are counter-clockwise when looking down the normal of the plane containing the text (or the UCS normal if isUcsOriented).</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
            <param name="rotation"> Input rotation angle for the shape (or text string)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.TextAt(System.Int32)">
            <summary>This function returns with text pointing to the text string at position index in the LinetypeTableRecord.</summary>
            <param name="index"> Input index (0-based) of shape (or text string) to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.SetTextAt(System.Int32,System.String)">
            <summary>This function sets the LinetypeTableRecord to use a copy of the string pointed to by text as the text string at position index.</summary>
            <param name="index"> Input index at which to set the text string</param>
            <param name="value"> Input pointer to the text to use at index</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.Comments">
            <summary>Accesses the string used by the LinetypeTableRecord to describe the linetype in the same simple ASCII form as you would find in the linetype definition file (in a description field).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.AsciiDescription">
            <summary>This function is obsolete and will be eliminated in a future release of ObjectARX. Please use Comments instead.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.PatternLength">
            <summary>Accesses the length (in AutoCAD drawing units--the pattern will appear this length when the linetype scale is 1.0) of the pattern in the LinetypeTableRecord. The pattern length is the total length of all dashes (including pen up spaces). Embedded shapes or text strings do not add to the pattern length because they are overlaid and do not interrupt the actual dash pattern.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.NumDashes">
            <summary>Accesses the number of dashes in the LinetypeTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord.IsScaledToFit">
            <summary>Accesses the alignment type for the LinetypeTableRecord. If ScaledToFit is true, the alignment wll be "scaled to fit" (equivalent to an 'S' in the alignment field of the linetype definition). If ScaledToFit is false, the alignment will not be "scaled to fit" (equivalent to an 'A' in the alignment field of the linetype definition).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LongTransactionType">
            <summary>
This wraps the ObjectARX AcDb::LongTransactionType class</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialMap">
            <summary>
This .NET class wraps the AcGiMaterialMap ObjectARX class. It defines material component maps. Maps are described by dimension, source, format, and mapping properties.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.op_Equality(Autodesk.AutoCAD.GraphicsInterface.MaterialMap,Autodesk.AutoCAD.GraphicsInterface.MaterialMap)">
            <summary>Returns true if lhs equals rhs.</summary>
            <param name="lhs"> Left operand</param>
            <param name="rhs"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.MaterialMap,Autodesk.AutoCAD.GraphicsInterface.MaterialMap)">
            <summary>Returns true if lhs does not equal rhs.</summary>
            <param name="lhs"> Left operand</param>
            <param name="rhs"> Right operand</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.Source">
            <summary>Gets the data source of the material map; one of the MaterialMap.Source> enumerators.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.Texture">
            <summary>Returns the address of the MaterialTexture object contained in this map. Returns null if no texture has been set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.BlendFactor">
            <summary>Gets the blend factor for the image map, a value between 0.0 and 1.0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.Filter">
            <summary>Accesses the map filter value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.Mapper">
            <summary>Gets the mapper (mapping function) associated with this map.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialMap.SourceFileName">
            <summary>This property has been marked with the System.Obsolete attribute, which should alert developers with a warning at compile-time.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Source">
            <summary>
This .NET class wraps the AcGiMaterialMap::Source ObjectARX class. This enumeration provides values that describe the source of an MaterialMap object's image data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialTexture">
            <summary>
This .NET class wraps the AcGiMaterialTexture ObjectARX class. This the abstract Base class for all material textures.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialTexture.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MapFilter">
            <summary>
Represents the map filter types.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MlineStyleElement">
            <summary>
This class encapsulates the color, offset, and linetype ID values that define an element in the ACAD_MLINESTYLE dictionary.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElement.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElement.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input culture specific format.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyleElement.Offset">
            <summary>Accesses the offset value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyleElement.Color">
            <summary>Accesses the color property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyleElement.LinetypeId">
            <summary>Accesses the line type ID.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection">
            <summary>
This collection class provides a container for MlineStyleElement objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection.Add(Autodesk.AutoCAD.DatabaseServices.MlineStyleElement,System.Boolean)">
            <summary>
Adds a new element to the collection..</summary>
            <param name="element"> Input element to add</param>
            <param name="checkIfReferenced"> Input Boolean indicating whether to check if the style is referenced</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection.RemoveAt(System.Int32)">
            <summary>Removes an object from the collection at the specified index.</summary>
            <param name="index"> Index of item to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.MlineStyleElement[],System.Int32)">
            <summary>Copies objects in array starting from index to this collection.</summary>
            <param name="array"> Target array.</param>
            <param name="index"> The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection.Count">
            <summary>Accesses the number of elements in the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MlineStyle">
            <summary>
This .NET class wraps the AcDbMlineStyle ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyle.#ctor">
            <summary>No initialization done in this constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyle.Reset">
            <summary>Resets the MlineStyle information.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyle.Set(Autodesk.AutoCAD.DatabaseServices.MlineStyle,System.Boolean)">
            <summary>
Copies the information from source into the MlineStyle..</summary>
            <param name="source"> Input MlineStyle to copy from</param>
            <param name="checkIfReferenced"> Input Boolean indicating whether to check if the style is referenced</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.Description">
            <summary>Accesses the description string for the MlineStyle object. The description string is not used by AutoCAD--it is provided as a place to store some descriptive text about the MlineStyle. The description string shows up in the "Description" edit box of the MlineStyle dialog in AutoCAD. The description string can be up to MSTYLE_DESCRIPTION_LENGTH in length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.Name">
            <summary>Accesses the name string in the MlineStyle. The name string can be up to MSTYLE_NAME_LENGTH in length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.ShowMiters">
            <summary>Accesses if the MlineStyle is set to show miterlines in the mline joints.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.StartSquareCap">
            <summary>Accesses if the MlineStyle is set to use square startcaps.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.StartRoundCap">
            <summary>Accesses if the MlineStyle is set to use round startcaps.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.StartInnerArcs">
            <summary>Accesses if the MlineStyle is set to show inner arcs at the mline starts.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.EndSquareCap">
            <summary>Accesses if the MlineStyle is set to use square endcaps.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.EndRoundCap">
            <summary>Accesses if the MlineStyle is set to use round endcaps.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.EndInnerArcs">
            <summary>Accesses if the MlineStyle is set to show inner arcs at the mline ends.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.FillColor">
            <summary>Accesses a Color object representing the fill color for the MlineStyle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.Filled">
            <summary>Accesses if the MlineStyle has fill set to "on" (that is, mlines referencing the MlineStyle will be filled).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.StartAngle">
            <summary>Accesses the angle (in radians) to which the start of Mlines using this MlineStyle will be "cut." An angle of pi/2 radians is perpendicular to the mline's direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.EndAngle">
            <summary>Accesses the angle (in radians) to which the end of mlines using this MlineStyle will be "cut." The default value for the end angle is pi/2 radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyle.Elements">
            <summary>Accesses the elements in use.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollectionEnumerator">
            <summary>
This class enumerates the contents of MlineStyleElementCollection objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollectionEnumerator.#ctor(Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection)">
            <summary>Constructs a new enumeration based on an existing collection.</summary>
            <param name="col"> Input collection to generate from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollectionEnumerator.MoveNext">
            <summary>This method moves the collection pointer to the next object, or to the end of the collection if it is currently positioned at the final collection object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollectionEnumerator.Reset">
            <summary>This method moves the collection pointer to the beginning of the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollectionEnumerator.Current">
            <summary>Accesses the current enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlaceHolder">
            <summary>
This .NET class wraps the AcDbPlaceHolder ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlaceHolder.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ProxyObject">
            <summary>
This .NET class wraps the AcDbProxyObject ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ProxyObject.GetReferences">
            <summary>This function appends to the ids collection all reference objectIds in the data of the custom object contained in the proxy.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ProxyObject.ResurrectMeNow(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>If id represents a proxy object, and the application that defines the class of the object within the proxy is currently loaded, then this function resurrects the proxy by replacing it with the object it contains.</summary>
            <param name="id"> Input object ID of object to be resurrected</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyObject.ProxyFlags">
            <summary>Accesses the proxy edit flags bit settings for the class of the custom object contained in the proxy.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyObject.OriginalClassName">
            <summary>Accesses the class name of the custom object stored in the proxy.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyObject.OriginalDxfName">
            <summary>Accesses the DXF name of the custom object stored in the proxy.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyObject.ApplicationDescription">
            <summary>Accesses the string that represents the application description of the class stored within the proxy object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection">
            <summary>
This class provides a container for Autodesk.AutoCAD.DatabaseServices.DBObjectReference objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection.Add(Autodesk.AutoCAD.DatabaseServices.DBObjectReference)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Input object to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection.IndexOf(Autodesk.AutoCAD.DatabaseServices.DBObjectReference)">
            <summary>Returns the zero-based index of the collection item that matches value.</summary>
            <param name="value"> Item to retrieve the index of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection.Insert(System.Int32,Autodesk.AutoCAD.DatabaseServices.DBObjectReference)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Index to insert at</param>
            <param name="value"> Item to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection.Remove(Autodesk.AutoCAD.DatabaseServices.DBObjectReference)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Item to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection.Contains(Autodesk.AutoCAD.DatabaseServices.DBObjectReference)">
            <summary>Returns a Boolean indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Object to look for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.DBObjectReference[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Array to copy from</param>
            <param name="index"> Zero-based index to start copying at</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RegAppTable">
            <summary>
This .NET class wraps the AcDbRegAppTable ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RegAppTableRecord">
            <summary>
This .NET class wraps the AcDbRegAppTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RegAppTableRecord.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable">
            <summary>
This .NET class wraps the AcDbSortentsTable ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.GetSortHandle(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Given an input object ID, this function returns the Handle that indicates the draw order. Entities with lesser handle values are drawn before/behind entities with higher handle values. This handle, sometimes called its "draw order sort key," may have nothing to do with the object ID, and may no longer even exist in the database. Its numerical value is what is of use, not the object it points to.</summary>
            <param name="id"> Input object ID</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.MoveToBottom(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Places all the entities specified in the input object ID array at the beginning of the draw order. The entities being moved retain their relative draw order.</summary>
            <param name="collection"> Collection of object IDs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.MoveToTop(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Places all the entities specified in the input object ID array at the ending of the draw order. The entities being moved retain their relative draw order.</summary>
            <param name="collection"> Collection of object IDs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.MoveBelow(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Places all the entities specified in the input object ID array below the specified target entity. The entities being moved retain their relative draw order.</summary>
            <param name="collection"> Collection of object IDs</param>
            <param name="target"> Target entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.MoveAbove(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Places all the entities specified in the input object ID array above the specified target entity. The entities being moved retain their relative draw order.</summary>
            <param name="collection"> Collection of object IDs</param>
            <param name="target"> Target entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.SwapOrder(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Swaps the draw order positions of the entities.</summary>
            <param name="id1"> Object ID of first entity</param>
            <param name="id2"> Object ID of second entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.FirstEntityIsDrawnBeforeSecond(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns true if first is drawn before second.</summary>
            <param name="first"> Input first object ID</param>
            <param name="second"> Input second object ID</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.GetFullDrawOrder(System.Byte)">
            <summary>SYstem.</summary>
            <param name="honorSortEntitiesMask"> Input indicating whether to test the host database's $SORTENTS variable</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.GetRelativeDrawOrder(System.Byte)">
            <summary>Rearranges the object IDs in the input array into their current relative draw order.</summary>
            <param name="honorSortEntitiesMask"> Input indicating whether to test the host database's $SORTENTS variable</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.SetRelativeDrawOrder(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Takes the object IDs in the input collection and moves them in their current associated draw order slots so that they are drawn in the specified order. If you wish to move or consolidate the draw order slots of these object IDs, use the appropriate movexxx() member function to do so, either before or after calling this member.</summary>
            <param name="collection"> Collection of object IDs</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DrawOrderTable.BlockId">
            <summary>Accesses the object ID for the associated block table record.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextStyleTable">
            <summary>
This .NET class wraps the AcDbTextStyleTable ObjectARX class. This class is the symbol table for TextStyleTableRecords which represent text styles.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord">
            <summary>
This .NET class wraps the AcDbTextStyleTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.IsShapeFile">
            <summary>This returns true when the text font file is interpreted as a shape record, otherwise it returns false when it is interpreted as a text record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.IsVertical">
            <summary>Returns true if and only if text drawn with this text style is drawn vertically.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.TextSize">
            <summary>Returns the default text size for text drawn with this textStyle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.XScale">
            <summary>This property returns the width factor (also referred to as the relative X-scale factor) for the TextStyleTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.ObliquingAngle">
            <summary>Returns the obliquing angle for the TextStyleTableRecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.FlagBits">
            <summary>Returns the textStyleflagBits value. Only the second and third bits are used. If the second bit is set it indicates that the text is drawn backward (that is, mirrored in X). If the third bit is set it indicates that the text is drawn upside down (that is, mirrored in Y).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.PriorSize">
            <summary>Returns the text height used for the last text created using this Text Style. This value is updated automatically by AutoCAD after the creation of any text object that references this TextStyleTableRecord. If the textSize value for this textStyle is 0, then the priorSize value is used by AutoCAD as the default text height for the next text created using this Text Style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.FileName">
            <summary>Returns with file name pointing to a copy of the name of the font file for this text style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.BigFontFileName">
            <summary>Returns with string, file name, pointing to the name of the big font file for this text style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord.Font">
            <summary>Returns the font definition data from the text style record. The returned values are the typeface, the bold and italics style attributes, the character set, and the pitch and family attributes.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UcsTable">
            <summary>
This .NET class wraps the AcDbUCSTable ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UcsTableRecord">
            <summary>
This .NET class wraps the AcDbUCSTableRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UcsTableRecord.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UcsTableRecord.Origin">
            <summary>Accesses the origin of the table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UcsTableRecord.XAxis">
            <summary>Accesses the X-axis of the table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UcsTableRecord.YAxis">
            <summary>Accesses the Y-axis of the table record.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ViewTable">
            <summary>
This .NET class wraps the AcDbViewTable ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ViewportTable">
            <summary>
This .NET class wraps the AcDbViewportTable ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.RemoveCurrent">
            <summary>Allows callers to delete an item from the AcDbXrecord without having to get/set the whole chain. More efficient in terms of amount of data that needs to be copied and also does partial undo. After calling removeResbuf, AcDbXrecordIterator::getCurResbuf will return the first item after the deleted item. You must call AcDbXrecordIterator::done() to determine if the last item was removed.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.InsertAtCurrent(Autodesk.AutoCAD.DatabaseServices.ResultBuffer)">
            <summary>Allows callers to insert one or more resbufs into the AcDbXrecord without having to get/set the whole chain. More efficient in terms of amount of data that needs to be copied and also does partial undo. After calling insertRbChain, AcDbXrecordIterator::getCurResbuf will return the first item inserted.</summary>
            <param name="data"> Input first result buffer (not its address) in a linked list of result buffer that contain the data for the xrecord.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.MoveNext">
            <summary>This is MoveNext, a member of class XrecordEnumerator.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.Reset">
            <summary>This is Reset, a member of class XrecordEnumerator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.CurrentTypeCode">
            <summary>This is CurrentTypeCode, a member of class XrecordEnumerator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.IEnumeratorCurrent">
            <summary>This is IEnumeratorCurrent, a member of class XrecordEnumerator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator.Current">
            <summary>Allows callers to modify the resbuf chain inside the AcDbXrecord without having to get/set the whole chain. More efficient in terms of amount of data that needs to be copied and also does partial undo. After calling modifyCurResbuf, AcDbXrecordIterator::getCurResbuf will return the new value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Xrecord">
            <summary>
This .NET class wraps the AcDbXrecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Xrecord.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Xrecord.Append(Autodesk.AutoCAD.DatabaseServices.ResultBuffer)">
            <summary>Allows custom applications to add to the Xrecord without getting the existing data, appending to the end of resbuf chain and setting the data back into the xrecord. appendRbChain is more efficient when it comes to undo recording.</summary>
            <param name="data"> Input first result buffer (not its address) in a linked list of result buffer that contain the data for the xrecord.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Xrecord.GetEnumerator">
            <summary>This is GetEnumerator, a member of class Xrecord.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Xrecord.IEnumerableTypedValueGetEnumerator">
            <summary>This is IEnumerableTypedValueGetEnumerator, a member of class Xrecord.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Xrecord.IEnumerableGetEnumerator">
            <summary>This is IEnumerableGetEnumerator, a member of class Xrecord.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Xrecord.Data">
            <summary>Accesses the XRecord data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Xrecord.XlateReferences">
            <summary>Returns a Boolean indicating whether references are to be translated.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Xrecord.MergeStyle">
            <summary>Sets the merge style for insert operations.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.CommonDraw">
            <summary>
This .NET class wraps the AcGiCommonDraw ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.Deviation(Autodesk.AutoCAD.GraphicsInterface.DeviationType,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the recommended maximum tessellation deviation of the type specified by deviationType.</summary>
            <param name="deviationType"> Input desired deviation type.</param>
            <param name="pointOnCurve"> Input point locating curve or surface to be tessellated.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.RegenType">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.RegenAbort">
            <summary>Provides a means to find out if an immediate termination of the graphics regeneration is requested by the system. If the return value is false, then all is well. But, if the return value is true, then an immediate clean up and return should be accomplished.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.SubEntityTraits">
            <summary>Returns the SubEntityTraits object. The object gives the user control of, and access to, the attribute (color, layer, linetype, etc.) settings of the current geometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.RawGeometry">
            <summary>Returns the current geometry class as an Geometry. The pointer is guaranteed to be not NULL. This function allows routines to function in both a worldDraw context and a viewportDraw context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.Context">
            <summary>Returns the controlling context. The pointer is guaranteed to be not NULL.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.IsDragging">
            <summary>Returns true if the entity is currently being dragged; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.CommonDraw.NumberOfIsolines">
            <summary>Returns the suggested number of isolines to use to represent the entity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.RegenType">
            <summary>
This .NET enum wraps the AcGiRegenType ObjectARX enum. It describes the types of elaboration that can occur on regeneration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Geometry">
            <summary>
This .NET class wraps the AcGiGeometry ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushModelTransform(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This function pushes a new transform onto the transform stack. The transform is the result of multiplying matrix by the existing transform. This allows you to easily handle an entity coordinate system. When you have finished with the transform, you must call PopModelTransform() to leave the pipe in the same state as before.</summary>
            <param name="matrix"> Input input matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushModelTransform(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function pushes a new transform onto the transform stack. It generates the input matrix using the arbitrary axis algorithm and the supplied vector.</summary>
            <param name="normal"> Input normal vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PopModelTransform">
            <summary>The method must be called to restore the model transform after a call to PushModelTransform().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushPositionTransform(Autodesk.AutoCAD.GraphicsInterface.PositionBehavior,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method places the position transform behavior onto the current transform stack. It then returns the resulting matrix.</summary>
            <param name="behavior"> Input transform behavior</param>
            <param name="offset"> Input position coordinate</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushPositionTransform(Autodesk.AutoCAD.GraphicsInterface.PositionBehavior,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method places the position transform behavior onto the current transform stack. It then returns the resulting matrix.</summary>
            <param name="behavior"> Input transform behavior</param>
            <param name="offset"> Input position coordinate</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushScaleTransform(Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method places scale transform behavior onto the current transform stack. It then returns the resulting matrix.</summary>
            <param name="behavior"> Input scale transformation behavior</param>
            <param name="extents"> Input new scale values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushScaleTransform(Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method places scale transform behavior onto the current transform stack. It then returns the resulting matrix.</summary>
            <param name="behavior"> Input scale transformation behavior</param>
            <param name="extents"> Input new scale values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushOrientationTransform(Autodesk.AutoCAD.GraphicsInterface.OrientationBehavior)">
            <summary>This method places the orientation transform behavior onto the current transform stack. It then returns the resulting matrix.</summary>
            <param name="behavior"> Input orientation transform behavior to push</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Circle(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Displays a circle primitive that is defined by the three points--firstPoint, secondPoint, and thirdPoint--which all lie on the circle.</summary>
            <param name="firstPoint"> Input first point on circle</param>
            <param name="secondPoint"> Input second point on circle</param>
            <param name="thirdPoint"> Input third point on circle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Circle(Autodesk.AutoCAD.Geometry.Point3d,System.Double,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Displays a circle primitive with center at center and a radius of radius. The circle is on the plane defined by the normal vector normal and the point center.</summary>
            <param name="center"> Input center point for the circle.</param>
            <param name="radius"> Input radius for the circle.</param>
            <param name="normal"> Input normal vector for plane to contain the circle.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.CircularArc(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.GraphicsInterface.ArcType)">
            <summary>Displays an arc primitive defined by the three points: start, point, and endingPoint.</summary>
            <param name="start"> Input start point of arc</param>
            <param name="point"> Input point on arc</param>
            <param name="endingPoint"> Input endpoint of arc</param>
            <param name="arcType"> Input type of arc to display</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.CircularArc(Autodesk.AutoCAD.Geometry.Point3d,System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,Autodesk.AutoCAD.GraphicsInterface.ArcType)">
            <summary>Displays an arc primitive defined by the arc's center of curvature center, the radius of curvature radius, the containment plane's normal vector normal, the vector from the center of curvature to the arc start point startVector, the angle that the arc spans sweepAngle, and the arc type arcType.</summary>
            <param name="center"> Input center point for arc's center of curvature.</param>
            <param name="radius"> Input arc's radius of curvature.</param>
            <param name="normal"> Input normal vector for plane to contain arc.</param>
            <param name="startVector"> Input vector defining the direction the arc start point is from the arc's center of curvature.</param>
            <param name="sweepAngle"> Input angle (in radians) that encompasses the arc.</param>
            <param name="arcType"> Input type of arc to display.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Polyline(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,System.IntPtr)">
            <summary>Allows the caller to specify sequential sub-entity markers for the segments of the polyline. If subEntityMarker 'n' is greater than zero then the segments of the polyline will be assigned markers beginning with 'n' incrementing by 1 for each segment.</summary>
            <param name="points"> Input number of vertex points in polyline (minimum of two)</param>
            <param name="normal"> Input normal vector</param>
            <param name="subEntityMarker"> Input sub-entity marker for first segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PolyPolyline(Autodesk.AutoCAD.GraphicsInterface.PolylineCollection)">
            <summary>This .NET method wraps the ObjectARX method AcGiGeometry::polyPolyline().</summary>
            <param name="polylineCollection"> Input a PolylineCollection object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Polygon(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>A return value of false (that is, 0) indicates that the primitive has been successfully stored in the graphics database. A return value of true indicates that the operation has been terminated and the application wants to get control back as soon as possible.</summary>
            <param name="points"> Input number of vertex points in polyline (minimum of two)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Mesh(System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.GraphicsInterface.EdgeData,Autodesk.AutoCAD.GraphicsInterface.FaceData,Autodesk.AutoCAD.GraphicsInterface.VertexData,System.Boolean)">
            <summary>edgeData points to an EdgeData object that contains arrays of color, layer, visibility, line type, and selection marker settings for the edges. Each of the arrays in the EdgeData object pointed to must either be NULL or must have (row - 1) x column + row x (column -1) elements..</summary>
            <param name="rows"> Input number of rows in mesh</param>
            <param name="columns"> Input number of columns in mesh</param>
            <param name="points"> Input array of vertex points (must be rows x columns points)</param>
            <param name="edgeData"> Input to an existing EdgeData object</param>
            <param name="faceData"> Input to an existing FaceData object</param>
            <param name="vertexData"> Input to an existing VertexData object</param>
            <param name="bAutoGenerateNormals"> Input Boolean to indicate whether the display system should automatically generate normals for vertices and faces if they are not passed in through vertexData and faceData.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Shell(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection,Autodesk.AutoCAD.GraphicsInterface.EdgeData,Autodesk.AutoCAD.GraphicsInterface.FaceData,Autodesk.AutoCAD.GraphicsInterface.VertexData,System.Boolean)">
            <summary>edgeData points to an EdgeData object that contains arrays of color, layer, visibility, line type, and selection marker settings for the edges. Each of the arrays in the EdgeData object pointed to must either be NULL or must have the same number of elements as the number of edges..</summary>
            <param name="points"> Input array of vertex points</param>
            <param name="faces"> Input collection of integers</param>
            <param name="edgeData"> Input to an existing EdgeData object</param>
            <param name="faceData"> Input to an existing FaceData object</param>
            <param name="vertexData"> Input to an existing VertexData object</param>
            <param name="bAutoGenerateNormals"> Input Boolean to indicate whether the display system should automatically generate normals for vertices and faces if they are not passed in through vertexData and faceData</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Text(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.String,System.Boolean,Autodesk.AutoCAD.GraphicsInterface.TextStyle)">
            <summary>
This function uses an TextStyle object to determine the font, size, etc. to use for the text..</summary>
            <param name="position"> Input start or insertion point for the text</param>
            <param name="normal"> Input normal for the plane to contain the text</param>
            <param name="direction"> Input direction the text will go</param>
            <param name="message"> Input text string to display</param>
            <param name="raw"> Input informing AutoCAD whether to interpret escape codes.</param>
            <param name="textStyle"> Input existing text style</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Text(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.String)">
            <summary>This method uses the current TextStyle when generating the text graphics primitive. When worldDraw() is first entered, the TextStyle is set to the STANDARD text style that's built into the acad.exe file (not the STANDARD text style in the drawing).</summary>
            <param name="position"> Input start or insertion point for the text</param>
            <param name="normal"> Input normal for the plane to contain the text</param>
            <param name="direction"> Input direction the text will go</param>
            <param name="height"> Input text height</param>
            <param name="width"> Input text width</param>
            <param name="oblique"> Input text obliquing angle</param>
            <param name="message"> Input text string to display</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Xline(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>An xline passing point1 and point2 is displayed.</summary>
            <param name="point1"> Input point on an xline</param>
            <param name="point2"> Input second point on an xline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Ray(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Displays a ray that starts at point1 and passes through point2.</summary>
            <param name="point1"> Input starting point of ray</param>
            <param name="point2"> Input another point (different from starting point) on the ray</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Draw(Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>Instructs the graphics system to regenerate value as a component of this object.</summary>
            <param name="value"> Input Drawable to be rendered</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PushClipBoundary(Autodesk.AutoCAD.GraphicsInterface.ClipBoundary)">
            <summary>Block references use clip boundaries to clip their contents. This method pushes a new boundary onto the stack, possibly affecting the display of subsequent primitives until it is removed using PopClipBoundary().</summary>
            <param name="boundary"> Input clip boundary</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.PopClipBoundary">
            <summary>Removes the top most clip boundary from the stack. This method may only be called following a successful PushClipBoundary() call from within the WorldDraw or ViewportDraw of a drawable.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.WorldLine(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Draws a line between the two points startPoint and endPoint. The points must be in world coordinates.</summary>
            <param name="startPoint"> Input start point of the worldline</param>
            <param name="endPoint"> Input second point on the worldline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Image(Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method uses the basic transparent image parameters provided to determine where and what size image to paint. It will stretch the image if its size is not equal to specified size.</summary>
            <param name="imageSource"> Input transparent image</param>
            <param name="position"> Input start or insertion point for the image, in display coordinates</param>
            <param name="u"> Input the width of destination rectangle</param>
            <param name="v"> Input the height of destination rectangle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.RowOfDots(System.Int32,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method draws a row of dots.</summary>
            <param name="count"> Input the number of dots</param>
            <param name="start"> Input the start point for the row of dots</param>
            <param name="step"> Input the step among the row of dots</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.EllipticalArc(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Double,System.Double,Autodesk.AutoCAD.GraphicsInterface.ArcType)">
            <summary>This method draws an elliptical arc or full ellipse, filled or unfilled.</summary>
            <param name="center"> Input the center point</param>
            <param name="normal"> Input the normal vector</param>
            <param name="majorAxisLength"> Input major axis length</param>
            <param name="minorAxisLength"> Input minor axis length</param>
            <param name="startDegreeInRads"> Input the start degree in radius</param>
            <param name="endDegreeInRads"> Input the end degree in radius</param>
            <param name="tiltDegreeInRads"> Input the tilt degree in radius</param>
            <param name="arcType"> Input the arc type. See AcGiArcType for the types that can be specified.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Polypoint(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3dCollection,Autodesk.AutoCAD.Geometry.IntPtrCollection)">
            <summary>This is just like a polyline except it is an array of points.</summary>
            <param name="points"> Input number of vertex points</param>
            <param name="normals"> Input normal vectors</param>
            <param name="subentityMarkers"> Input sub-entity markers to be applied per point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.OwnerDraw(Autodesk.AutoCAD.GraphicsInterface.GdiDrawObject,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>The method draws a GDI owner draw object.</summary>
            <param name="gdiDrawObject"> Input GDI owner draw object.</param>
            <param name="position"> Input start or insertion point for the GDI owner draw object.</param>
            <param name="u"> Input orientation and magnitude of width.</param>
            <param name="v"> Input orientation and magnitude of height.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Geometry.Edge(Autodesk.AutoCAD.Geometry.Curve2dCollection)">
            <summary>This is Edge, a member of class Geometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Geometry.ModelToWorldTransform">
            <summary>This gets the net block insert transform; that is, the model-to-world coordinate transform. The main purpose of the BLOCK entity is to transform an entity--whether to stretch, rotate, or move it.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Geometry.WorldToModelTransform">
            <summary>Gets the inverse of the net block insert transform. This can transform an entity's world coordinate representation back into the original model coordinates.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DeviationType">
            <summary>
This .NET class wraps the AcGiDeviationType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Fill">
            <summary>
This is class Autodesk.AutoCAD.GraphicsInterface.Fill.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Fill.#ctor">
            <summary>This is Fill, a member of class Fill.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.HatchPattern">
            <summary>
This is class Autodesk.AutoCAD.GraphicsInterface.HatchPattern.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.HatchPattern.#ctor(Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition[])">
            <summary>This is HatchPattern, a member of class HatchPattern.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.HatchPattern.PatternLines">
            <summary>This is PatternLines, a member of class HatchPattern.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.GradientFill">
            <summary>
This is class Autodesk.AutoCAD.GraphicsInterface.GradientFill.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientFill.GradientAngle">
            <summary>This is GradientAngle, a member of class GradientFill.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientFill.GradientShift">
            <summary>This is GradientShift, a member of class GradientFill.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientFill.IsAdjustAspect">
            <summary>This is IsAdjustAspect, a member of class GradientFill.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientFill.GradientColors">
            <summary>This is GradientColors, a member of class GradientFill.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GradientFill.Type">
            <summary>This is Type, a member of class GradientFill.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.GradientType">
            <summary>
This is record Autodesk.AutoCAD.GraphicsInterface.GradientType.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.FillType">
            <summary>
This .NET enum wraps the AcGiFillType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ShadowFlags">
            <summary>
This .NET class wraps the ShadowFlags ObjectARX class. This is an enumeration of valid bitmasks for the current shadow display property for the drawing, as set by the Database.Cshadow property.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Linetype">
            <summary>
This .NET class wraps the AcGiEdgeStyle::Linetype ObjectARX class. It describes an enumeration representing the types of line patterns that can be displayed to represent an edge.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.SelectionFlags">
            <summary>
This .NET enum is a wrapper for AcGiSubEntityTraits::SelectionFlags.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation">
            <summary>
This .NET class wraps the AcGiLightAttenuation ObjectARX class. This is a container class for light attenuation properties.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.SetLimits(System.Double,System.Double)">
            <summary>Sets the distance (a range) from the light source where emitted light affects the model.</summary>
            <param name="startLimit"> Input distance from the light source where light begins to affect to model; objects closer than this are not affected by the light</param>
            <param name="endLimit"> Input distance from the light source beyond which the light has no effect</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.GetHashCode">
            <summary>Read / Write.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.AttenuationType">
            <summary>Returns the attenuation type for the light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.UseLimits">
            <summary>Returns true if start and end limit are being used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.StartLimit">
            <summary>Returns the distance from the light source where light begins to affect the model; objects closer than this are not affected by the light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.LightAttenuation.EndLimit">
            <summary>Returns the distance from the light source beyond which the light has no effect.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.AttenuationType">
            <summary>
This .NET class wraps the AttenuationType ObjectARX class. AttenuationType gives the type of attenuation, or decay, for this light. This only applies to point and spot lights. Distant lights always have no attenuation.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.SkyParameters">
            <summary>
This .NET class wraps the AcGiSkyParameters ObjectARX class. This is a container class for all sky-related sun properties.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.#ctor">
            <summary>Default constructor. Initializes members to reasonable default values.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.op_Equality(Autodesk.AutoCAD.GraphicsInterface.SkyParameters,Autodesk.AutoCAD.GraphicsInterface.SkyParameters)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.SkyParameters,Autodesk.AutoCAD.GraphicsInterface.SkyParameters)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.Illumination">
            <summary>Returns true if skylight illumination is computed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.AerialPerspective">
            <summary>Returns true if aerial perspective is applied.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.IntensityFactor">
            <summary>Returns the intensity factor which determines the level of non-physical modulation of skylight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.Haze">
            <summary>Returns the turbidity or atmosphere value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.HorizonHeight">
            <summary>Returns the world-space height of the horizon plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.HorizonBlur">
            <summary>Returns the amount of blurring between ground plane and sky.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.VisibilityDistance">
            <summary>Returns the distance at which 10% haze occlusion results. Must be a non-negative value. The default value is 10000.0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.DiskScale">
            <summary>Returns the scale of the sun disk (1.0 = correct size).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.GlowIntensity">
            <summary>Returns the intensity of the sun glow.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.DiskIntensity">
            <summary>Returns the intensity of the sun disk.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.SolarDiskSamples">
            <summary>Returns the number of samples to take on the solar disk. The valid range is between 0 and 1000. The default value is 8.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.GroundColor">
            <summary>Returns the color of the ground plane. Color supports all color models within AutoCAD, including color book colors.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.NightColor">
            <summary>Returns the color of the night sky. Color supports all color models within AutoCAD, including color book colors.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.SunDirection">
            <summary>Returns the directional vector of the sun's light rays.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.RedBlueShift">
            <summary>Returns the red-blue shift on the sky. This provides control on the "redness" of the sky. The default of 0.0 is physically accurate. A minimum value of -1.0 will produce an extremely blue sky, whereas the maximum value of 1.0 will produce an extremely red sky.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.SkyParameters.Saturation">
            <summary>The the sky's saturation level. The minimum value of 0.0 will produce an extreme of black and white whereas the maximum value of 2.0 will produce highly boosted saturation.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters">
            <summary>
This .NET class wraps the AcGiShadowParameters ObjectARX class. This is a container class for all shadow related light properties.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ShadowsOn">
            <summary>Returns Boolean indicating whether or not this light casts shadows.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ShadowType">
            <summary>Returns the method used to calculate shadows cast by this light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ShadowMapSize">
            <summary>Returns the shadow map size. The returned value should be one of: 64, 128, 256, 512, 1024, 2048, or 4096.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ShadowMapSoftness">
            <summary>Returns the softness (or fuzziness) of the edge of the shadow. This value represents the number of pixels at the edge of the shadow that are blended into the underlying image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ShadowSamples">
            <summary>Returns the number of shadow rays to shoot for the light. This controls the softness of sampled shadows.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ShapeVisibility">
            <summary>True if the light shape is visible in the rendering.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ExtendedLightShape">
            <summary>Returns the shape of the extended light source.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ExtendedLightLength">
            <summary>Returns the length of the extended light source.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ExtendedLightWidth">
            <summary>Returns the width of the extended light source.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ShadowParameters.ExtendedLightRadius">
            <summary>Returns the radius of the extended light source.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ShadowType">
            <summary>
This .NET enum wraps the AcGiShadowParameters::ShadowType ObjectARX enum. It gives the method used to calculate shadows.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape">
            <summary>
This .NET class wraps the AcGiShadowParameters2::ExtendedLightShape ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ExteriorDaylightMode">
            <summary>
This .NET enum wraps the AcGiToneOperatorParameters::ExteriorDaylightMode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters">
            <summary>
Container class for all photographic exposure parameters.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.#ctor">
            <summary>This is PhotographicExposureParameters, a member of class PhotographicExposureParameters.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.Equals(System.Object)">
            <summary>This .NET method wraps the ObjectARX method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.CopyFrom(Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>This .NET method wraps the ObjectARX method. Copies member data from source object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.op_Equality(Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters,Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters)">
            <summary>This .NET method wraps the ObjectARX method. Compares and determines if two entities are equal to each other.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters,Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters)">
            <summary>This .NET method wraps the ObjectARX method. This is the comparison operator for this class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.Exposure">
            <summary>Gets Exposure for photographic exposure parameters.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.WhitePoint">
            <summary>Gets White Point for photographic exposure parameters.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters.WhiteColor">
            <summary>Calculates and returns a RGB approximation of the White Point (using CIE 1964 10 degree).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits">
            <summary>
This .NET class wraps the AcGiNonEntityTraits ObjectARX class. The NonEntityTraits class implements empty DrawableTraits and AcGiSubEntityTraits interfaces to allow non-entity drawables, such as materials, to elaborate their unique properties through DrawableTraits.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.SetupForEntity(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This call initializes the entire SubEntityTraits and DrawableTraits from the entity. This is more efficient than setting each property individually. The default implementation of Entity.SetAttributes() uses this method.</summary>
            <param name="entity"> Input entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.SetSelectionMarker(System.IntPtr)">
            <summary>Sets the SubEntityTraits object to use markerId as the graphics marker for all graphics primitives drawn until the next call to this function, or the end of the WorldDraw() or ViewportDraw() execution.</summary>
            <param name="markerId"> Input non-zero integer to use as graphics system marker</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.AddLight(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Drawables that emit light can add one (or more) "lights" to the model. A unique object id must be used for each light, though an object may pass in it's own object Id.</summary>
            <param name="lightId"> Input the added light.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.SetHighlightProperty(Autodesk.AutoCAD.GraphicsInterface.DrawableTraits.HighlightProperty,System.Object)">
            <summary>This is SetHighlightProperty, a member of class NonEntityTraits.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.GetHighlightProperty(Autodesk.AutoCAD.GraphicsInterface.DrawableTraits.HighlightProperty)">
            <summary>This is GetHighlightProperty, a member of class NonEntityTraits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.Color">
            <summary>Returns the AutoCAD color index value currently set within the SubEntityTraits object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.TrueColor">
            <summary>Returns color through EntityColor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.Layer">
            <summary>Returns the objectId of the layerTableRecord that is currently set in the SubEntityTraits object to be used to draw graphics primitives on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.LineType">
            <summary>Returns the objectId of the linetypeTableRecord that is currently set in the SubEntityTraits object to be used to when drawing graphics primitives.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.FillType">
            <summary>Returns the FillType currently set in the SubEntityTraits object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.LineWeight">
            <summary>Returns the lineweight as defined by the enum LineWeight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.LineTypeScale">
            <summary>The scaling factor of linetype can be varied by this trait. A value of 1.0 is the standard scaling, 2.0 will cause the linetype dashes to be twice as long and a value of 0.5 will reduce them to half their normal length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.Thickness">
            <summary>Thickness is an extrusion in WCS units along the positive Z axis. The extrusion vector is calculated as (Z*dthickness) * modelTransform. It only affects selected primitives: as pline, polyline, arc, circle and shx text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.PlotStyleDescriptor">
            <summary>Returns PlotStyleDescriptor property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.Material">
            <summary>Returns the database ID of the current material assignment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.Mapper">
            <summary>Returns a pointer to the active mapper definition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.Sectionable">
            <summary>Returns true if the graphics primitives drawn with this object will participate in sectioning. Returns false if the graphics primitives will not be affected by sectioning operations.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.VisualStyle">
            <summary>Returns the object ID of the visual style in the subentity traits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.DrawFlags">
            <summary>Returns the current draw flags value. The default is kNoDrawFlags.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.ShadowFlags">
            <summary>Returns the current shadow flags value, as specified by the last valid call to SetShadowFlags().The default is ShadowsCastAndReceive.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.SelectionOnlyGeometry">
            <summary>Returns if the following geometry is only intended for selection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.Fill">
            <summary>This is Fill, a member of class NonEntityTraits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.LinePattern">
            <summary>This is LinePattern, a member of class NonEntityTraits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits.SelectionFlags">
            <summary>This is SelectionFlags, a member of class NonEntityTraits.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ColorRGB">
            <summary>
This .NET class wraps the AcGiColorRGB ObjectARX class. It's a Color class for storing the color with a red, green, and blue component in double-precision format.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ColorRGB.#ctor(System.Double,System.Double,System.Double)">
            <summary>Creates an RGB color with color components red, green, and blue correspondingly.</summary>
            <param name="red"> The red component.</param>
            <param name="green"> The green component.</param>
            <param name="blue"> The blue component.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ColorRGB.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ColorRGB.Red">
            <summary>Accesses the red value from 0 to 255.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ColorRGB.Green">
            <summary>Accesses the green value from 0 to 255.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ColorRGB.Blue">
            <summary>Accesses the blue value from 0 to 255.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA">
            <summary>
This .NET class wraps the AcGiColorRGBA ObjectARX class. It's a Color class for storing the color with a red, green, and blue components, with alpha shading, in double-precision format.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates an RGB color with color components red, green, blue, and alpha-shading component alpha correspondingly.</summary>
            <param name="red"> Input color red component</param>
            <param name="green"> Input color green component</param>
            <param name="blue"> Input color blue component</param>
            <param name="alpha"> Input alpha-shading component</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA.#ctor(System.Double,System.Double,System.Double)">
            <summary>Creates an RGB color with color components red, green, and blue components correspondingly.</summary>
            <param name="red"> Input color red component</param>
            <param name="green"> Input color green component</param>
            <param name="blue"> Input color blue component</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA.Red">
            <summary>Accesses the red value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA.Green">
            <summary>Accesses the green value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA.Blue">
            <summary>Accesses the blue value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ColorRGBA.Alpha">
            <summary>Accesses the alpha-shading value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.WebFileType">
            <summary>
This .NET class wraps the AcGiWebLightTraits::WebFileType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.WebSymmetry">
            <summary>
This .NET class wraps the AcGiWebLightTraits::WebSymmetry ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DefaultLightingType">
            <summary>
This .NET enum wraps the AcGiViewportTraits::DefaultLightingType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialColor">
            <summary>
This .NET class wraps the AcGiMaterialColor ObjectARX class. It defines material component colors by color method and color value.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialColor.#ctor">
            <summary>Default constructor. Initialized to inherit color with blend factor of 1.0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialColor.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialColor.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialColor.Method">
            <summary>Returns the current color method Inherit or Override.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialColor.Factor">
            <summary>Returns the current scale factor. A scale factor of 0.0 indicates black. A scale factor of 1.0 indicates that the colors are left unchanged.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialColor.Color">
            <summary>Returns the current color value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Method">
            <summary>
This .NET enum wraps the AcGiMaterialColor::Method ObjectARX enum. It provides values that define the color method used by setMethod() and Method().</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.LayerFilterCollection">
            <summary>
This .NET class wraps the AcArray<AcLyLayerFilter*> ObjectARX class. It represents a collection of LayerFilter objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterCollection.Add(Autodesk.AutoCAD.LayerManager.LayerFilter)">
            <summary>Adds the object represented by value to this collection.</summary>
            <param name="value"> Input object to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterCollection.Remove(Autodesk.AutoCAD.LayerManager.LayerFilter)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Input object to be removed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterCollection.Contains(Autodesk.AutoCAD.LayerManager.LayerFilter)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Input Autodesk.AutoCAD.LayerManager.LayerFilter object that matches to this collection object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterCollection.CopyTo(Autodesk.AutoCAD.LayerManager.LayerFilter[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Input the target array.</param>
            <param name="index"> Input the zero-based index from which the array object will be copied.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilterCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.RelationalExpression">
            <summary>
This .NET class wraps the AcLyRelExpr ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.RelationalExpression.Variable">
            <summary>Returns the name of the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.RelationalExpression.Constant">
            <summary>Returns a constant.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.AndExpression">
            <summary>
This .NET class wraps the AcLyAndExpr ObjectARX class. AndExpr represents a term of the form a AND b AND c and so on.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.AndExpression.GetRelationalExpressions">
            <summary>Returns relational expressions that are joined by AND.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.LayerFilterDisplayImages">
            <summary>
This class encapsulates the information returned by the AcLyLayerFilter.getImages() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerFilterDisplayImages.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>This constructor initializes default values.</summary>
            <param name="imageListHandle"> Input.</param>
            <param name="imageIndex"> Input.</param>
            <param name="selectedImageIndex"> Input.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilterDisplayImages.ImageListHandle">
            <summary>Upon successful return this is set to the handle of the image list that contains the normal and selected image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilterDisplayImages.ImageIndex">
            <summary>Zero-based index of the normal image in the image list.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerFilterDisplayImages.SelectedImageIndex">
            <summary>Zero-based index of the selected image in the image list.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.LayerCollection">
            <summary>
This .NET class wraps the AcArray<AcDbObjectId> ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerCollection.Add(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Adds the object represented by value to this collection.</summary>
            <param name="value"> Input object to add.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerCollection.Remove(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Input object to be removed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerCollection.Contains(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Input object to be matched with this object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.ObjectId[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Input the target array.</param>
            <param name="index"> Input the zero-based index from which the array objects will be copied.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.LayerManager.LayerGroup">
            <summary>
This .NET class wraps the AcLyLayerGroup ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.LayerManager.LayerGroup.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.LayerManager.LayerGroup.LayerIds">
            <summary>Read-only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBText">
            <summary>
This .NET class wraps the AcDbText ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBText.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBText.CorrectSpelling">
            <summary>This function runs the spell checker on the text to correct any spelling errors. The spell checker is an AutoCAD-specific function, so this method may not be implemented for other database library uses.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBText.AdjustAlignment(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Normally when a text entity is closed, the text's position and alignment points are adjusted according to the text's justification settings and the text style. But, if the text entity is embedded in another entity, it will never be closed in which case it won't automatically be adjusted. Or, if the text is added to a transaction before it's first close(), and the graphics are flushed to the screen before the outermost transaction ends, the text will be displayed before the automatic adjustment takes place.</summary>
            <param name="alternateDatabaseToUse"> Database to be used if the text entity is not in a database (this argument is ignored if the text entity is in a database)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBText.ConvertFieldToText">
            <summary>If the text contains fields, this function converts them to text and removes the fields. It does not evaluate the fields before converting them.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.Position">
            <summary>Accesses the insertion point of the text in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.AlignmentPoint">
            <summary>Accesses the alignment point of the text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.IsDefaultAlignment">
            <summary>Returns true if the text is in a default alignment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.Normal">
            <summary>Accesses the normal vector of the plane containing the text. The normal vector is in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.Thickness">
            <summary>Accesses the thickness of the text. The thickness is the text's dimension along its normal vector direction (sometimes called the extrusion direction).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.Oblique">
            <summary>Accesses the oblique angle (in radians) of the text. The obliquing angle is the angle from the text's vertical; that is, the top of the text "slants" relative to the bottom, the same as the slope in this italic text. Positive angles slant characters forward at their tops. Negative angles have 2pi added to them to convert them to their positive equivalent.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.Rotation">
            <summary>Accesses the rotation angle of the text. The rotation angle is relative to the X axis of the text's OCS, with positive angles going counterclockwise when looking down the Z axis towards the origin. The OCS X axis is determined by using the text's normal, the WCS Z axis, and the arbitrary axis algorithm.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.Height">
            <summary>Accesses the height of the text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.WidthFactor">
            <summary>Accesses the width factor (also referred to as the relative X-scale factor) for the text. The width factor is applied to the text's width to allow the width to be adjusted independently of the height. For example, if the width factor value is 0.8, then the text is drawn with a width that is 80% of its normal "unadjusted" width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.TextString">
            <summary>Accesses the null-terminated text string used by the Text object. The text string can be up to 256 bytes long (not including the null terminator). The application calling this function is responsible for releasing the memory used by the returned string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.TextStyleName">
            <summary>Accesses the name of the text style used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.IsMirroredInX">
            <summary>Accesses whether the text is mirrored in the X direction (that is, it appears backward in the horizontal direction). Set to false if it is not mirrored.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.IsMirroredInY">
            <summary>Accesses whether the text is mirrored in the Y direction (that is, it appears upside down). Set to false if it is not mirrored.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.HorizontalMode">
            <summary>Accesses the horizontal mode of the text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.VerticalMode">
            <summary>Accesses the vertical mode of the text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBText.Justify">
            <summary>Accesses the justification point(s) of the text.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode">
            <summary>
This .NET enum wraps the AcDb::TextHorzMode ObjectARX enum. This enum gives the horizontal mode of the text.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextVerticalMode">
            <summary>
This .NET class wraps the AcDb::TextVertMode ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AttachmentPoint">
            <summary>
This .NET class wraps the AttachmentPoint ObjectARX enum. It represents the attachment point positions of an MText object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RasterImageDef">
            <summary>
This .NET class wraps the AcDbRasterImageDef ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.LocateActivePath">
            <summary>Returns the path name of the actual file being currently used to define the image. Requires that the RasterImageDef be open for reading.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.Embed">
            <summary>This function is currently unimplemented, but may appear in a future release.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.Load">
            <summary>This function enables "lazy loading" of the image pixel data from the source image file (specified by RasterImageDef.SourceFileName) into an ATIL object. Requires that the RasterImageDef be open for writing. Triggers notification that causes all dependent RasterImage entities to be redrawn.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.Unload(System.Boolean)">
            <summary>
Immediately unloads the image data in RasImageDef from the Image Engine's working memory, but does not delete the RasImageDef itself. Triggers notification that causes all dependent RasterImage entities are redrawn as frames only. Requires that the RasterImageDef be open for writing..</summary>
            <param name="modifyDatabase"> Input Boolean indicating whether or not to do undo recording</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.GetEntityCount(System.Boolean&)">
            <summary>
Returns the number of RasterImage entities in the current drawing that are dependent upon this object for display graphics. If locked is non-zero, then this function will set the value to true if any dependent entities reside on locked layers.</summary>
            <param name="locked"> Input locked value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.UpdateEntities">
            <summary>Causes all the RasterImage entities in the current drawing that are dependent upon this object to be redrawn when this object is next closed. This function requires that the image definition be open for writing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.ImageCopy(System.Boolean)">
            <summary>
Creates a copy of the image data, and returns a pointer to it..</summary>
            <param name="forceImageLoad"> Input Boolean indicating whether to load the image if it is not currently loaded</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.OpenImage">
            <summary>Returns the associated image data object for writing. (See ATIL documentation for information about the Atil.Image class.) Each call to OpenImage must eventually be followed by a call to RasterImageDef.CloseImage().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.CloseImage">
            <summary>Closes the associated image data object, and updates any changes to the image instances in AutoCAD.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.SetImage(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
Directly specifies an in-memory Atil.Image or a custom Atil.FileReadDescriptor to be used. Either image or fileDescription can be null, but not both. Copies of the Atil.Image and Atil.FileReadDescriptor are retained by the RasterImageDef, so the caller's copy of these objects may be deleted at any time..</summary>
            <param name="image"> Input NULL or pointer to valid Atil::Image object</param>
            <param name="fileDescription"> Input NULL or pointer to valid Atil::FileReadDescriptor object</param>
            <param name="modifyDatabase"> Input Boolean indicating whether to do undo recording</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.CreateImageDictionary(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Call this function to create a new image dictionary if the function RasterImageDef.GetImageDictionary returns 0, indicating that no image dictionary exists.</summary>
            <param name="database"> Input AutoCAD database in which to create the dictionary</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.GetImageDictionary(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the object ID of the image dictionary in the specified drawing database or 0 if the dictionary was not found.</summary>
            <param name="database"> Input AutoCAD database in which to find the dictionary</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.SuggestName(Autodesk.AutoCAD.DatabaseServices.DBDictionary,System.String)">
            <summary>Operates on the original image file name to produce a string as similar as possible to the original file name, but suitable for use in the image dictionary.</summary>
            <param name="imageDictionary"> Input pointer to the (previously opened for reading) image dictionary within which this name must be unique</param>
            <param name="newImagePathName"> Input pointer to a string containing the source image file or path name</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.SourceFileName">
            <summary>Accesses the path name of the externally referenced image file name. This file name is saved in the DWG file with the object. Requires that the RasterImageDef be open for reading.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.ActiveFileName">
            <summary>Accesses the path name of the actual file being currently used to define the image. Requires that the RasterImageDef be open for reading.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.SearchForActivePath">
            <summary>This searches the local drives and network for a valid image file that matches the source file name that is saved in the drawing file. This mechanism allows image files to be located differently on machines that are used for editing or viewing the same drawing file. Users can set up project search paths that contain directories in which image and xref files may be contained.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.IsEmbedded">
            <summary>Assesses if the image is embedded in the drawing file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.IsLoaded">
            <summary>Assesses if the image is loaded.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.Size">
            <summary>Accesses the raw image size in pixels.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.Organization">
            <summary>Accesses the pixel organization scheme of the source image file. Requires that the image be loaded to work properly. If the image is not loaded, the value RGBA is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.ColorDepth">
            <summary>Accesses the number of bits per pixel for the source image data. Possible values are 1, 8, 24, or 32.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.FileType">
            <summary>Accesses the type of image file, such as BMP for a Windows bitmap.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.ResolutionMMPerPixel">
            <summary>Accesses the default physical size of a single image pixel in millimeters. If the image has no default resolution, then this function returns pixel height and width values equal to 1/width of image in pixels.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.ResolutionUnits">
            <summary>Accesses the units in which the image resolution was specified in the source image file. If the image file doesn't contain resolution information, then a value of None is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.FileDescCopy">
            <summary>Accesses a copy to this object's Atil.FileReadDescriptor member. If this object does not have a valid Atil.FileReadDescriptor, null is returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.UndoStoreSize">
            <summary>Accesses the current value of the Undo store size.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImageDef.ImageModified">
            <summary>Accesses the state of the internal "image data modified" flag, which is true if the image has been modified.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ImageOrg">
            <summary>
This .NET enum wraps the AcGiImageOrg ObjectARX enum. It gives the pixel organization scheme of the source image file.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Unit">
            <summary>
This .NET class wraps the AcDbRasterImageDef::Units ObjectARX class. It gives the real-world unit representing one AutoCAD drawing unit.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RasterVariables">
            <summary>
This .NET class wraps the AcDbRasterVariables ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterVariables.#ctor">
            <summary>Constructs an RasterVariables object and initializes itself to default values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterVariables.ImageFrame">
            <summary>Accesses the current image frame visibility setting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterVariables.ImageQuality">
            <summary>Accesses the current image display quality setting. The Image Quality setting allows users to trade display speed for displayed image quality. In draft mode, fast low-quality image resampling and processing algorithms are used. In high quality mode, more computationally intensive algorithms are used, which usually generate more accurate and visually pleasing output.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterVariables.UserScale">
            <summary>Accesses the real-world unit representing one AutoCAD drawing unit.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FrameSetting">
            <summary>
This .NET class wraps the AcDbRasterVariables::FrameSettings ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ImageQuality">
            <summary>
This .NET class wraps the AcDbRasterVariables::ImageQuality ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterVolume">
            <summary>
This class encapsulates the data required to describe a spatial filter's volume. Properties of this class correlate to the arguments used by the SpatialFilter.getVolume ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterVolume.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructor.</summary>
            <param name="fromPoint"> Input the transformed clip boundary "from" point</param>
            <param name="toPoint"> Input the transformed clip boundary "to" point</param>
            <param name="upDir"> Input the transformed clip boundary normal vector</param>
            <param name="viewField"> Input the transformed clip boundary's view field vector</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterVolume.FromPoint">
            <summary>Accesses the transformed clip boundary "from" point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterVolume.ToPoint">
            <summary>Accesses the transformed clip boundary "to" point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterVolume.UpDirection">
            <summary>Accesses the transformed clip boundary normal vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterVolume.ViewField">
            <summary>Accesses the transformed clip boundary's view field vector.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition">
            <summary>
This class encapsulates the data required to define a spatial filter. Properties of this class correlate to the arguments used by the SpatialFilter.setDefinition and AcDbSpatialFilter.getDefinition ObjectARX functions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
This is the constructor for the SpatialFilterDefinition object.</summary>
            <param name="pts"> Input boundary definition. If the number of points is 2, they are diagonal points of a rectangle. Otherwise, they are vertices of a polygon. The polygon should be non self intersecting.</param>
            <param name="normal"> Input positive extrusion direction vector</param>
            <param name="elevation"> Input elevation; along with the normal, this will define an ECS in which the polygon points are defined</param>
            <param name="frontClip"> Input front clip distance in the positive extrusion direction</param>
            <param name="backClip"> Input back clip distance in the negative extrusion direction</param>
            <param name="enabled"> Input Boolean to make the clip volume effective, or alternatively, be all of 3D space</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition.GetPoints">
            <summary>Returns the points that define the boundary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition.Normal">
            <summary>Accesses the positive extrusion direction vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition.Elevation">
            <summary>Accesses the elevation; along with the normal, this will define an ECS in which the polygon points are defined.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition.FrontClip">
            <summary>Accesses the front clip distance in the positive extrusion direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition.BackClip">
            <summary>Accesses the back clip distance in the negative extrusion direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition.Enabled">
            <summary>Assesses if to make the clip volume effective, or alternatively, be all of 3D space.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.StandardScaleType">
            <summary>
This .NET class wraps the AcDbPlotSettings::stdScaleType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ShadePlotType">
            <summary>
This .NET class wraps the AcDbViewport::ShadePlotType ObjectARX class. This enumerated type defines the shade plot mode of the current viewport. This mode specifies how the current viewport will plot.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Curve">
            <summary>
This .NET class wraps the AcDbCurve ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetPointAtParameter(System.Double)">
            <summary>This function determines the point on the curve that corresponds to value, and returns the point.</summary>
            <param name="value"> Input parameter on the curve at which the point is desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetParameterAtPoint(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This function determines the parameter of the curve at point and returns the parameter.</summary>
            <param name="point"> Input point (in WCS coordinates) on the curve at which the parameter is desired Returns the parameter of the curve at point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetDistanceAtParameter(System.Double)">
            <summary>Returns the distance.</summary>
            <param name="value"> Input the object representing the parameter.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetParameterAtDistance(System.Double)">
            <summary>This function determines the parameter of the curve at the location that is a distance of dist along the curve from the curve start.</summary>
            <param name="dist"> Input distance along the curve from the beginning of the curve to the location for the desired parameter.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetDistAtPoint(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the distance to the point.</summary>
            <param name="point"> Input the object representing the point.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetPointAtDist(System.Double)">
            <summary>This function determines the point on the curve that is a distance of value along the curve from the curve start, and returns the point.</summary>
            <param name="value"> Input distance along the curve from the beginning of the curve to the location of the desired point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetFirstDerivative(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the first derivative.</summary>
            <param name="point"> Input the derivative value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetFirstDerivative(System.Double)">
            <summary>Returns the first derivative of the vector.</summary>
            <param name="value"> Input the derivative value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetSecondDerivative(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the second derivative.</summary>
            <param name="point"> Input the derivative value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetSecondDerivative(System.Double)">
            <summary>Returns the second derivative.</summary>
            <param name="value"> Input the derivative value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Boolean)">
            <summary>
This function finds the point on the curve that is nearest to givenPoint and returns the result.</summary>
            <param name="givenPoint"> Input the point (in WCS coordinates) for which to find nearest point on curve</param>
            <param name="direction"> Input the normal vector (in WCS coordinates) for plane to project onto</param>
            <param name="extend"> Input whether or not to extend curve in search for nearest point.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,System.Boolean)">
            <summary>
This function projects the curve onto the plane defined by givenPoint. Returns the point (in WCS coordinates) on the curve that is nearest to givenPoint.</summary>
            <param name="givenPoint"> Input the point (in WCS coordinates) for which to find nearest point on curve</param>
            <param name="extend"> Input whether or not to extend curve in search for nearest point.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetOrthoProjectedCurve(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This function creates a new curve entity that is the result of projecting the curve along the given plane.</summary>
            <param name="planeToProjectOn"> Input plane onto which the curve is to be projected</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetProjectedCurve(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This function creates a new curve entity that is the result of projecting the curve parallel to projectionDirection onto the planeToProjectOn and returns it.</summary>
            <param name="planeToProjectOn"> Input plane onto which the curve is to be projected</param>
            <param name="projectionDirection"> Input direction (in WCS coordinates) of the projection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetOffsetCurves(System.Double)">
            <summary>Returns the a collection of the offset curves.</summary>
            <param name="offsetDist"> Input the distance to offset the curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetOffsetCurvesGivenPlaneNormal(Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Returns a collection of the offset curves.</summary>
            <param name="normal"> Input the normal vector for plane in which to offset</param>
            <param name="offsetDist"> Input distance to offset the curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetSplitCurves(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This function creates one or more entities that are all subcurves of the original. The points collection must contain the points on the curve that are used as the start or end points of the newly created subcurves.</summary>
            <param name="points"> Input collection of parameters on the curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetSplitCurves(Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>This function creates one or more entities that are all subcurves of the original. The points collection must contain the points on the curve that are used as the start or end points of the newly created subcurves.</summary>
            <param name="value"> Input collection of points (in WCS coordinates) on the curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.Extend(System.Boolean,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>
This function extends the curve to the point specified.</summary>
            <param name="extendStart"> Input whether to extend the curve's start or end .</param>
            <param name="toPoint"> Input the new start or end point of the curve.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.Extend(System.Double)">
            <summary>This function extends the beginning or end of the curve to the new point determined by the newParameter value.</summary>
            <param name="newParameter"> Input the new start or end parameter on the curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.ReverseCurve">
            <summary>This function reverses the parameterization of the curve: The start becomes the end and visa versa.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetGeCurve">
            <summary>This is GetGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.GetGeCurve(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This is GetGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.CreateFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This is CreateFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.CreateFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This is CreateFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.CreateFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This is CreateFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.CreateFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This is CreateFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.SetFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This is SetFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.SetFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This is SetFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.SetFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This is SetFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Curve.SetFromGeCurve(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This is SetFromGeCurve, a member of class Curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.Closed">
            <summary>Returns true if the curve is closed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.IsPeriodic">
            <summary>Returns true if the curve is periodic.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.StartParam">
            <summary>Returns the parameter of the start of the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.EndParam">
            <summary>Accesses the parameter of the endpoint of the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.StartPoint">
            <summary>Returns the starting point of the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.EndPoint">
            <summary>Accesses the end point (in WCS coordinates) of the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.Spline">
            <summary>Returns pointing to a spline approximation of the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Curve.Area">
            <summary>Accesses the area of the curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Spline">
            <summary>
This class implements the AutoCAD SPLINE entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.KnotParameterizationEnum,System.Int32,System.Double)">
            <summary>This wraps AcDbSpline::AcDbSpline() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,System.Boolean,Autodesk.AutoCAD.Geometry.KnotParameterizationEnum,System.Int32,System.Double)">
            <summary>
Creates a spline that attempts to fit a curve to the array of points within the tolerance fitTolerance..</summary>
            <param name="fitPoints"> Array of points (in WCS coordinates) through which to fit the curve.</param>
            <param name="isPeriodic"> Indicate whether or not a periodic spline fitting the array of points is created.</param>
            <param name="knotParam"> Knot parameterization defining the knot values .</param>
            <param name="degree"> Degree of the spline to be created (in the range 1 to 11)</param>
            <param name="fitTolerance"> Tolerance to which the spline should approximate fitPoints.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.KnotParameterizationEnum,System.Int32,System.Double)">
            <summary>This wraps AcDbSpline::AcDbSpline() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double)">
            <summary>This constructor creates a spline initialized to be an elliptical arc.</summary>
            <param name="center"> Center point (in WCS coordinates) of the elliptical arc</param>
            <param name="unitNormal"> Vector (in WCS coordinates) representing the normal to the elliptical arc</param>
            <param name="majorAxis"> Major axis vector (in WCS coordinates) of the elliptical arc, measured from the ellipse center point to the ellipse start point</param>
            <param name="radiusRatio"> Ratio of minor or major axis length</param>
            <param name="startAngle"> Angle (in radians) of start point of elliptical arc</param>
            <param name="endAngle"> Angle (in radians) of end point of elliptical arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Int32,System.Double)">
            <summary>Creates a spline that attempts to fit an order degree curve to the array of points within the tolerance fitTolerance. A fitTolerance of 0 will cause the curve to be interpolated precisely through all the points in the points array. The curve order may be in the range 2 to 26.</summary>
            <param name="point"> Array of points (in WCS coordinates) through which to fit the curve</param>
            <param name="startTangent"> Specifies the tangent at the start of the curve</param>
            <param name="endTangent"> Specifies the tangent at the end of the curve</param>
            <param name="order"> Order of the spline to be created (in the range 2 to 26)</param>
            <param name="fitTolerance"> Tolerance to which the spline should approximate fitPoints</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,System.Int32,System.Double)">
            <summary>Creates a spline that attempts to fit an order degree curve to the array of points within the tolerance fitTolerance. A fitTolerance of 0 causes the curve to be interpolated precisely through all the points in the points array. The curve order may be in the range 2 to 26.</summary>
            <param name="point"> Array of points (in WCS coordinates) through which to fit the curve</param>
            <param name="order"> Order of the spline to be created (in the range 2 to 26)</param>
            <param name="fitTolerance"> Tolerance to which the spline should approximate fitPoints</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.#ctor">
            <summary>Default constructor. Initializes to line segment between (0,0,0) and (1,0,0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ElevateDegree(System.Int32)">
            <summary>Increases the degree (which is the same as the order -1) of the spline to newDegree. Once incremented it cannot be decremented. The valid range is between (current degree) and 25.</summary>
            <param name="newDegree"> Input new spline degree value (in the range (existing degree) to 25)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.GetControlPointAt(System.Int32)">
            <summary>Returns the value of the control point at position index in the list of control points. If index is negative or more than the number of control points in the spline, then point at index is set to the last control point.</summary>
            <param name="index"> Input index (0 based) of point to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.SetControlPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets point (in WCS coordinates) to be the control point at the index position in the control points list replacing the point value that was previously at index position.</summary>
            <param name="index"> Input index (0 based) of control point to replace</param>
            <param name="point"> Input new control point (in WCS coordinates)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.GetFitPointAt(System.Int32)">
            <summary>Returns the value of the fit point at position index.</summary>
            <param name="index"> Input index (0 based) value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.SetFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets point (in WCS coordinates) to be the fit point at the index position in the fit points list (replacing the point value previously at index) and then refits the spline.</summary>
            <param name="index"> Input index (0 based) of fit point to replace</param>
            <param name="point"> Input new fit point (in WCS coordinates)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.InsertFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Adds point to the list of fit points and refits the spline. point is added at the index position in the fit points list. If index is negative, then point is added at the beginning of the spline. If index is greater than the number of fit points in the spline, then point is added at the end of the spline.</summary>
            <param name="index"> Input index (0 based) where new fit point is to be inserted</param>
            <param name="point"> Input new fit point (in WCS coordinates)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.RemoveFitPointAt(System.Int32)">
            <summary>Removes the fit point at index in the list of fit points of the spline and refits the spline. There must be at least three fit points in the spline for this function to succeed.</summary>
            <param name="index"> Index (0 based) of fit point to be removed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.PurgeFitData">
            <summary>Purges the fit data if the spline is a fitted spline. Once the fit data has been removed, the spline uses its control point or NURBS data.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.UpdateFitData">
            <summary>Updates the fit data of the spline. If the spline's fit tolerance == 0, then the spline is refitted; otherwise the fit data is purged (in which case the control point or NURBS data will be used by the spline).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.WeightAt(System.Int32)">
            <summary>Returns the weight of the control point at index.</summary>
            <param name="index"> Input index (0 based) of control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.SetWeightAt(System.Int32,System.Double)">
            <summary>Changes the weight of the point at the index location in the control points array to weight. If the spline is not a rational spline, then it is converted to a rational spline.</summary>
            <param name="index"> Input index (0 based) of control point at which to change the weight</param>
            <param name="weight"> Input new weight value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.InsertKnot(System.Double)">
            <summary>Inserts a new knot into the spline at the location on the spline defined by value. The value must be within the spline's parameter range.</summary>
            <param name="value"> Input parameter where knot is to be added</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ToPolyline(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method..</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ToPolyline(System.Boolean,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ToPolyline(System.UInt32)">
            <summary>Generates a polyline to approximate a spline.</summary>
            <param name="numOfVertices"> Target number of vertices. The resulting polyline will have vertices no more than this value.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ToPolyline">
            <summary>Generates a polyline to approximate a spline.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ToPolylineWithPrecision(System.Int32,System.Boolean,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method..</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ToPolylineWithPrecision(System.Int32)">
            <summary>Generates a polyline to approximate a spline.</summary>
            <param name="precision"> Target precision</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.InsertControlPointAt(System.Double,Autodesk.AutoCAD.Geometry.Point3d,System.Double)">
            <summary>This wraps the ObjectARX AcDbSpline::insertControlPointAt() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.RemoveControlPointAt(System.Int32)">
            <summary>This wraps the ObjectARX AcDbSpline::removeControlPointAt() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.Rebuild(System.Int32,System.Int32)">
            <summary>This wraps the ObjectARX AcDbSpline::rebuild() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Spline.ModifyPositionAndTangent(System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Adjusts the location and tangent of a point on the spline curve with the given parameter. The local control points are adjusted accordingly. If deriv is null, only the location of the point is adjusted.</summary>
            <param name="param"> Parameter</param>
            <param name="point"> Specify the new location of the point on the spline curve</param>
            <param name="deriv"> Specify the tangent vector</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.IsNull">
            <summary>Returns true if this Spline  object does not have an gelib object within it.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.IsRational">
            <summary>Returns true if and only if the  spline is rational.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.Degree">
            <summary>Returns the degree of the spline's  polynomial representation. The value is in the range 1 to 25.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.NumControlPoints">
            <summary>Returns the number of control points  in the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.NumFitPoints">
            <summary>Returns the number of fit points associated with  the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.FitTolerance">
            <summary>Returns the tolerance value used for curve fitting. This is the maximum distance (in drawing units) that the spline curve is allowed to deviate from the fit points.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.StartFitTangent">
            <summary>Returns the  start point of tangent vector in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.EndFitTangent">
            <summary>Returns the start point and end point tangent vectors in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.HasFitData">
            <summary>Returns true if and only if the spline  has fit data associated with it.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.FitData">
            <summary>Returns all the fit points (in WCS coordinates), fit tolerance, and, if tangents exist, the start and end tangents of the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.NurbsData">
            <summary>Replaces any existing spline data with the data passed in via NurbsData parameters.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.IsPlanar">
            <summary>Returns true if the object lies  completely within a plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Spline.Type">
            <summary>This wraps AcDbSpline::type() and AcDbSpline::setType() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Ray">
            <summary>
This .NET class wraps the AcDbRay ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Ray.#ctor">
            <summary>The default constructor. A Ray object is constructed with a basepoint of (0,0,0) and a direction of (0,0,1).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ray.BasePoint">
            <summary>Accesses the base point of the ray.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ray.UnitDir">
            <summary>Accesses the unit direction vector of the ray.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ray.SecondPoint">
            <summary>Accesses the second alignment point.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Line">
            <summary>
This .NET class wraps the AcDbLine ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Line.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This constructor initializes the line object to use pointer1 as the start point, and pointer2 as the endpoint. Both points must be in WCS coordinates.</summary>
            <param name="pointer1"> Input line start point (WCS coordinates)</param>
            <param name="pointer2"> Input line end point (WCS coordinates)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Line.#ctor">
            <summary>Default constructor. Initializes the normal vector to (0,0,1), the start and end points to (0,0,0), and the thickness to 0.0. All coordinates are WCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Line.StartPoint">
            <summary>Accesses the line's start point in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Line.EndPoint">
            <summary>Accesses the line's endpoint in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Line.Thickness">
            <summary>Accesses the line's thickness value. The thickness is the line's dimension along its normal vector direction (sometimes called the extrusion direction).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Line.Normal">
            <summary>Accesses the line's unit normal vector in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Line.Delta">
            <summary>Accesses the vector formed by start and end points of the line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Line.Angle">
            <summary>Accesses the angle of the line expressed in radians relative to the world coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Line.Length">
            <summary>Accesses the length of the line.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Circle">
            <summary>
This .NET class wraps the AcDbCircle ObjectARX class. The Circle class represents the circle entity within AutoCAD.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Circle.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Constructs a specific circle.</summary>
            <param name="center"> Input center location</param>
            <param name="normal"> Input normal vector</param>
            <param name="radius"> Input radius length</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Circle.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Circle.Center">
            <summary>Accesses the center point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Circle.Radius">
            <summary>.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Circle.Thickness">
            <summary>Accesses the thickness of the circumference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Circle.Normal">
            <summary>Accesses a vector which is at a normal to the center.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Circle.Circumference">
            <summary>Accesses the circumference of the circle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Circle.Diameter">
            <summary>Accesses the diameter of the circle.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Dimension">
            <summary>
This .NET class wraps the AcDbDimension ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.ResetTextDefinedSize">
            <summary>Sets dimension text defined width and defined height to zero.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.SetDimstyleData(Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord)">
            <summary>This function copies the dimension variable information in the DimStyleTableRecord identified by style into the database on which this method is called, making those dimension variable values current for the database. The DimStyleTableRecord with object ID style does not have to reside in the database on which this method is called.</summary>
            <param name="style"> Input object ID of DimStyleTableRecord from which to copy dimension variable information</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.GetDimstyleData">
            <summary>This function copies the dimstyle information from the DimStyleTableRecord referenced by the current dimension. After copying the data, any dimension variable overrides currently applied to the dimension will be copied into the returned table record.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.RecomputeDimensionBlock(System.Boolean)">
            <summary>
This function updates the block table record the dimension references to match any changes made to the dimension since the last time the block table record was updated..</summary>
            <param name="forceUpdate"> Boolean indicating whether or not to force an update on screen</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.GenerateLayout">
            <summary>This function will update the dimension according to the current dimension style. It works similar to the Dim, Update subcommand. It computes dimension geometry, including extension lines, dimension lines, dimension arcs, dimension text, arrowheads from given definition points and dimension style. The generated dimension geometry are maintained internally by member data "mGeom" which is a list of in-memory Entity pointers. This API function does not generate the dimension block.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.RemoveTextField">
            <summary>If this object contains a text field, this function removes it from the extension dictionary and deletes the field object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.FieldToMText(Autodesk.AutoCAD.DatabaseServices.MText)">
            <summary>If this object contains a text field, this function copies the field and adds the copy to dimMText.</summary>
            <param name="dimMText"> MText object to which the new field will be attached</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.FieldFromMText(Autodesk.AutoCAD.DatabaseServices.MText)">
            <summary>If dimMText contains a text field, this function copies that field and adds the copy to this object.</summary>
            <param name="dimMText"> The MText object from which the text field is copied</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Dimension.FormatMeasurement(System.Double,System.String)">
            <summary>This method gives you access to the dimension classes' text assembly and formatting logic. You pass in a double corresponding to the desired measurement and get back a string suitable for building MText objects. That MText content string reflects the dimension's dimstyle settings for prefixes, suffixes, units, precision, alternate units, tolerances, text style, and so on. This dimension text string gets combined with DIMPOST, DIMAPOST, and the alternate and primary measurements in the final dimension text.</summary>
            <param name="measurement"> Input measurement value.</param>
            <param name="dimensionText"> Input alternate value.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtxt">
            <summary>Accesses the current DIMTXT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtzin">
            <summary>Accesses the current DIMTZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimupt">
            <summary>Accesses the current DIMUPT value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimzin">
            <summary>Accesses the current DIMZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimapost">
            <summary>Accesses the current DIMAPOST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimpost">
            <summary>Accesses the character string that is the current DIMPOST value for the datatbase.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimblk">
            <summary>Accesses the current DIMBLK value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimblk1">
            <summary>Accesses the current DIMBLK1 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimblk2">
            <summary>Accesses the current DIMBLK2 value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.TextDefinedSize">
            <summary>Specifies the dimension text defined width and defined height from MText in dimension block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.TextPosition">
            <summary>Accesses the text position of the text (which is itself an MText object with middle-center justification).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.UsingDefaultTextPosition">
            <summary>Returns true if the text is in the default position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Normal">
            <summary>Accesses the unit normal vector (in WCS coordinates) for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Elevation">
            <summary>Accesses the dimension's elevation value. Elevation defines the distance from WCS origin to the plane on which the dimension lies.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.DimensionText">
            <summary>Accesses the user-supplied dimension annotation text string (including any multiline text formatting characters).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.TextRotation">
            <summary>Accesses the rotation angle (in radians) of to the horizontal axis used by the text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.DimensionStyle">
            <summary>Accesses the object ID of the DimStyleTableRecord referenced by the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.TextAttachment">
            <summary>Accesses the attachment point value for the text of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.TextLineSpacingStyle">
            <summary>Accesses the line spacing style for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.TextLineSpacingFactor">
            <summary>Accesses the line spacing factor (a value between 0.25 and 4.00).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.HorizontalRotation">
            <summary>Accesses the horizontal rotation value (in radians) of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.DimBlockId">
            <summary>Accesses the object ID of the BlockTableRecord containing the entities that this dimension displays.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.DimBlockPosition">
            <summary>Accesses the relative position point of the block referenced by the dimension (in WCS coordinates).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Measurement">
            <summary>Accesses the current measurement value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.DynamicDimension">
            <summary>Assesses if the dimension is dynamic.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimadec">
            <summary>Accesses the current DIMADEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimalt">
            <summary>Accesses the current DIMALT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimaltd">
            <summary>Accesses the current DIMALTD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimaltf">
            <summary>Accesses the current DIMALTF value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimaltrnd">
            <summary>Accesses the current DIMALTRND value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimalttd">
            <summary>Accesses the current DIMALTTD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimalttz">
            <summary>Accesses the current DIMALTTZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimaltu">
            <summary>Accesses the current DIMALTU value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimaltz">
            <summary>Accesses the current DIMALTZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimarcsym">
            <summary>Accesses the arc length placement value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimasz">
            <summary>Accesses the current DIMASZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimatfit">
            <summary>Accesses the current DIMATFIT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimaunit">
            <summary>Accesses the current DIMAUNIT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimazin">
            <summary>Accesses the current DIMAZIN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimcen">
            <summary>Accesses the current DIMCEN value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimclrd">
            <summary>Accesses the current DIMCLRD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimclre">
            <summary>Accesses the current DIMCLRE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimclrt">
            <summary>Accesses the current DIMCLRT value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimdec">
            <summary>Accesses the current DIMDEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimdle">
            <summary>Accesses the current DIMDLE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimdli">
            <summary>Accesses the current DIMDLI value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimdsep">
            <summary>Accesses the current DIMDSEP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimexe">
            <summary>Accesses the current DIMEXE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimexo">
            <summary>Accesses the current DIMEXO value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimfrac">
            <summary>Accesses the current DIMFRAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.DimfxlenOn">
            <summary>Accesses a value that indicates whether the fixed extension lines are on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimfxlen">
            <summary>Accesses the fixed extension lines value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimgap">
            <summary>Accesses the current DIMGAP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimjogang">
            <summary>Accesses the current large radial angle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimjust">
            <summary>Accesses the current DIMJUST value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimldrblk">
            <summary>Accesses the object ID of the block reference specified by the current DIMLDRBLK value of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimlfac">
            <summary>Accesses the current DIMLFAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimlim">
            <summary>Accesses the current DIMLIM value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimltex1">
            <summary>Accesses the object ID of the linetype of extension line 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimltex2">
            <summary>Accesses the object ID of the linetype of extension line 2.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimltype">
            <summary>Accesses the dimension linetype.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimlunit">
            <summary>Accesses the current DIMLUNIT value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimlwd">
            <summary>Accesses the current DIMLWD value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimlwe">
            <summary>Accesses the current DIMLWE value for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Prefix">
            <summary>Specifies the dimension value prefix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Suffix">
            <summary>Specifies the dimension value suffix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.SuppressAngularLeadingZeros">
            <summary>Specifies the suppression of leading zeros in dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.SuppressAngularTrailingZeros">
            <summary>Specifies the suppression of trailing zeros in dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.SuppressLeadingZeros">
            <summary>Specifies the suppression of leading zeros in dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.SuppressTrailingZeros">
            <summary>Specifies the suppression of leading zeros in dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.SuppressZeroFeet">
            <summary>Specifies the suppression of a zero foot measurement in dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.SuppressZeroInches">
            <summary>Specifies the suppression of a zero inch measurement in dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AlternatePrefix">
            <summary>Specifies a prefix for the alternate dimension measurement for all dimension types except angular.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AlternateSuffix">
            <summary>Specifies a suffix for the alternate dimension measurement for all dimension types except angular.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltSuppressLeadingZeros">
            <summary>Specifies the suppression of leading zeros in alternate dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltSuppressTrailingZeros">
            <summary>Specifies the suppression of trailing zeros in alternate dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltSuppressZeroFeet">
            <summary>Specifies the suppression of a zero foot measurement in alternate dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltSuppressZeroInches">
            <summary>Specifies the suppression of a zero inch measurement in alternate dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltToleranceSuppressLeadingZeros">
            <summary>Specifies the suppression of leading zeros in alternate dimension values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltToleranceSuppressTrailingZeros">
            <summary>Specifies the suppression of trailing zeros in alternate tolerance values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltToleranceSuppressZeroFeet">
            <summary>Specifies the suppression of a zero foot measurement in alternate tolerance values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.AltToleranceSuppressZeroInches">
            <summary>Specifies the suppression of a zero inch measurement in alternate tolerance values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.ToleranceSuppressLeadingZeros">
            <summary>Specifies the suppression of leading zeroes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.ToleranceSuppressTrailingZeros">
            <summary>Specifies the suppression of trailing zeroes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.ToleranceSuppressZeroFeet">
            <summary>Specifies the suppression of a zero feet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.ToleranceSuppressZeroInches">
            <summary>Specifies the suppression of a zero inches.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.CenterMarkType">
            <summary>Specifies the type of center mark for radial and diameter dimensions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.CenterMarkSize">
            <summary>Specifies the size of the center mark for radial and diameter dimensions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.DimensionStyleName">
            <summary>Specifies name of associated dimension style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimrnd">
            <summary>Accesses the current DIMRND value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimsah">
            <summary>Accesses current DIMSAH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimscale">
            <summary>Accesses the current DIMSCALE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimsd1">
            <summary>Accesses the current DIMSD1 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimsd2">
            <summary>Accesses the current DIMSD2 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimse1">
            <summary>Accesses the current DIMSD1 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimse2">
            <summary>Accesses the current DIMSD2 value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimsoxd">
            <summary>Accesses the current DIMSOXD value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtad">
            <summary>Accesses the current DIMTAD value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtdec">
            <summary>Accesses the current DIMTDEC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtfac">
            <summary>Accesses the current DIMTFAC value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtfill">
            <summary>Accesses the dimension background color state, which can be one of the following values:.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtfillclr">
            <summary>Accesses the current dimension background color (if dimtfill is set to 1).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtih">
            <summary>Accesses the current DIMTIH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtix">
            <summary>Accesses the current DIMTIX value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtm">
            <summary>Accesses the current DIMTM value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtmove">
            <summary>Accesses the current DIMTMOVE value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtofl">
            <summary>Accesses the current DIMTOFL value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtoh">
            <summary>Accesses the current DIMTOH value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtol">
            <summary>Accesses the current DIMTOL value for the database. The value of false is 0. The value of true is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtolj">
            <summary>Accesses the current DIMTOLJ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtp">
            <summary>Accesses the current DIMTP value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtsz">
            <summary>Accesses the current DIMTSZ value for the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Dimension.Dimtvp">
            <summary>Accesses the current DIMTVP value for the database.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LineSpacingStyle">
            <summary>
This .NET class wraps the AcDb::LineSpacingStyle ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MText">
            <summary>
This .NET class wraps the AcDbMText ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.#ctor">
            <summary>The constructor creates a default, empty object. The default values are:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.SetContentsRtf(System.String)">
            <summary>This method sets the contents of the MText object from the RTF-encoded text string pointed to by unnamed. RTF codes are translated to MText codes. Fonts, colors, tabs, and indents are preserved. Bullets and numbered lists are mapped to hanging paragraphs using the implied setting for tabs and indents.</summary>
            <param name="value"> Input RTF-encoded string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.CorrectSpelling">
            <summary>This function is intended to be used internally, and requires that additional speller initialization be performed before calling. It cannot be used from within ObjectARX applications.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.GetBoundingPoints">
            <summary>Appends 4 points to the collection as follows:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.ExplodeFragments(Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallback)">
            <summary>This .NET method wraps the AcDbMText.explodeFragments() ObjectARX function by calling the ExplodeFragments(MTextFragmentCallback enumerator, Object userData, WorldDraw context) method with both userData and context set to null.</summary>
            <param name="enumerator"> Input fragment elaboration callback function</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.ExplodeFragments(Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallback,System.Object)">
            <summary>This .NET method wraps the AcDbMText.explodeFragments() ObjectARX function by calling the ExplodeFragments(MTextFragmentCallback enumerator, Object userData, WorldDraw context) method with context set to null.</summary>
            <param name="enumerator"> Input fragment elaboration callback function</param>
            <param name="userData"> Input user data</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.ExplodeFragments(Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallback,System.Object,Autodesk.AutoCAD.GraphicsInterface.WorldDraw)">
            <summary>This function runs through the MText object's text string breaking it up into fragments, calling the fragment elaboration function enumerator for each fragment. The WorldDraw object of context is used.</summary>
            <param name="enumerator"> Input fragment elaboration callback function</param>
            <param name="userData"> Input user data</param>
            <param name="context"> Input WorldDraw object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.ConvertFieldToText">
            <summary>If the contents of MText contains fields, this function converts them to text and removes the fields. It does not evaluate the fields before converting them.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.SetDynamicColumns(System.Double,System.Double,System.Boolean)">
            <summary>
Sets column type to DynamicColumns with specified width, gutter, and auto height setting.</summary>
            <param name="width"> Input new column width</param>
            <param name="gutter"> Input new column gutter</param>
            <param name="auto_height"> Input new auto-height setting</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.SetStaticColumns(System.Double,System.Double,System.Int32)">
            <summary>Sets column type to StaticColumns with specified width, gutter, and number of columns.</summary>
            <param name="width"> Input new column width</param>
            <param name="gutter"> Input new column gutter</param>
            <param name="count"> Input new auto-height setting</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.SetColumnHeight(System.Int32,System.Double)">
            <summary>Sets the height of the specified column.</summary>
            <param name="index"> The column's height to set</param>
            <param name="height"> Column height</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MText.GetColumnHeight(System.Int32)">
            <summary>Gets the height of the specified column.</summary>
            <param name="index"> The column's height to get</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Location">
            <summary>Accesses the insertion point of the MText object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Normal">
            <summary>Accesses the unit normal vector of the MText object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Direction">
            <summary>Accesses a Vector3d (in WCS) representing the X axis ("horizontal") for the text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Rotation">
            <summary>Accesses the angle between the X axis of the OCS for the normal vector of the current AutoCAD editor's UCS and the projection of the MText object's direction vector onto the plane of the AutoCAD editor's current UCS. The rotation value is in radians, with positive angles as counterclockwise when looking down the UCS normal towards the UCS origin.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Width">
            <summary>Accesses the maximum width setting used by the MText object for word wrap formatting. It is possible that none of the lines resulting from word wrap formatting will reach this width value. Words which exceed this width value will not be broken, but will extend beyond the given width. The MText.ActualWidth member function returns the actual width of the text, regardless of the maximum width setting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Ascent">
            <summary>Accesses the height of the maximum ascender for the first line of the text. This value can be used with the Text.Descent function to help align multiple MText objects in a table or grid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Descent">
            <summary>Accesses the height of the maximum descender for the last line of the text. This value can be used with the MText.Ascent property to help align multiple MText objects in a table or grid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.TextStyleId">
            <summary>Accesses the objectId of the textStyle currently referenced by the MText object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.TextStyleName">
            <summary>Accesses the name of the current text style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.TextHeight">
            <summary>Accesses the nominal text height of the MText object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Attachment">
            <summary>Accesses a value describing the attachment point for the MText object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.FlowDirection">
            <summary>Accesses the direction that the text string follows from its start to its finish.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Contents">
            <summary>Accesses the character contents of the MText object. Formatting data used for word wrap calculations is removed before the string is copied.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ContentsRTF">
            <summary>Returns an RTF encoded string that is a translated version of the contents of the AcDbMText object. MText codes are translated to RTF codes. Fonts, colors, tabs, and indents are preserved. The conversion uses 24 as the default point size. That is, text with no height override will have a point size of 24 and text with a height override will have a point size of the height override multiplied by 24. The caller is responsible for freeing the memory used by the returned string (preferrably by using acutDelString().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Text">
            <summary>Accesses the MText contents with formatting removed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ActualHeight">
            <summary>Accesses the overall height of the bounding rectangle that surrounds the formatted text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ActualWidth">
            <summary>Accesses the overall width of the bounding rectangle that surrounds the formatted text. Note that this value may be different from the value returned by MText.Width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.NonBreakSpace">
            <summary>Accesses the string "~". This function can be used in place of the string constant "~" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "~" indicates a nonbreaking space.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.OverlineOn">
            <summary>Accesses the string "O". This function can be used in place of the string constant "O" in order to make your code more understandable. When used in the string that's returned from Text.Contents, the "O" indicates overline on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.OverlineOff">
            <summary>Accesses the string "o". This function can be used in place of the string constant "o" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "o" indicates overline off.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.UnderlineOn">
            <summary>Accesses the string "L". This function can be used in place of the string constant "L" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "L" indicates underline on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.UnderlineOff">
            <summary>Accesses the string "l". This function can be used in place of the string constant "l" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "l" indicates underline off.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.StrikethroughOn">
            <summary>Gets the mtext strike-through turning on string. This wraps the AcDbMText::strikethroughOn().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.StrikethroughOff">
            <summary>Gets the mtext strike-through turning off string. This wraps the AcDbMText::strikethroughOn().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ColorChange">
            <summary>Accesses the string "C". This function can be used in place of the string constant "C" in order to make your code more understandable. When used in the string that's returned from MText.contents, the "C" indicates a color change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.FontChange">
            <summary>Accesses the string "F". This function can be used in place of the string constant "F" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "F" indicates a font change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.HeightChange">
            <summary>Accesses the string "H". This function can be used in place of the string constant "H" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "H" indicates a height change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.WidthChange">
            <summary>Accesses the string "W", which indicates a width change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ObliqueChange">
            <summary>Accesses the string "Q". This function can be used in place of the string constant "Q" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "Q" indicates an oblique change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.TrackChange">
            <summary>Accesses the string "T". This function can be used in place of the string constant "T" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "T" indicates a tracking change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.LineBreak">
            <summary>Accesses the string "p". This function can be used in place of the string constant "p" in order to make your code more understandable. When used in a string that is returned from MText.Contents, the "p" indicates a line break.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ParagraphBreak">
            <summary>Accesses the string "P". This function can be used in place of the string constant "P" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "P" indicates a paragraph break.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.StackStart">
            <summary>Accesses the string "S". This function can be used in place of the string constant "S" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "S" indicates a stack start.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.AlignChange">
            <summary>Accesses the string "A". This function can be used in place of the string constant "A" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "A" indicates an alignment change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.BlockBegin">
            <summary>Accesses the string "{". This function can be used in place of the string constant "{" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "{" indicates a block beginning.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.BlockEnd">
            <summary>Accesses the string "}". This function can be used in place of the string constant "}" in order to make your code more understandable. When used in the string that's returned from MText.Contents, the "}" indicates a block ending.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.LineSpacingStyle">
            <summary>Accesses the line spacing style, either AtLeast (the line spacing is a minimum value) or Exactly (the line spacing is absolute). See LineSpacingStyle for more information and examples.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.LineSpacingFactor">
            <summary>Accesses the line spacing factor (a value between 0.25 and 4.00). See LineSpacingStyle for more information and examples.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.BackgroundFill">
            <summary>Assesses whether background fill is on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.BackgroundFillColor">
            <summary>Accesses the current background fill color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.BackgroundScaleFactor">
            <summary>Read-only Accesses.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.BackgroundTransparency">
            <summary>Accesses the background fill transparency.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.UseBackgroundColor">
            <summary>Accesses if background color is in use for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ShowBorders">
            <summary>Gets the flag controlling mtext border's visibility.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.LineSpaceDistance">
            <summary>Accesses the spacing between lines of text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ColumnType">
            <summary>Accesses the column type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ColumnCount">
            <summary>Accesses the number of columns.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ColumnAutoHeight">
            <summary>Accesses the auto height setting, which specifies whether dynamic columns use the MText height or a per-column user-defined height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ColumnWidth">
            <summary>Accesses the width of each column.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ColumnGutterWidth">
            <summary>Accesses the column gutter width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.ColumnFlowReversed">
            <summary>Accesses the flow reversed setting, which determines how columns are added.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MText.Height">
            <summary>Accesses the height value of the font.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DimensionCenterMarkType">
            <summary>
Describes the type of dimension center mark.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RadialDimension">
            <summary>
This .NET class wraps the AcDbRadialDimension ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RadialDimension.#ctor">
            <summary>Default constructor. Initializes the center and chord points to (0,0,0), and the leader length to 0.0. In addition, all the initializations of the default constructor for Dimension, Entity, etc. are performed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimension.LeaderLength">
            <summary>Accesses the leader length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimension.Center">
            <summary>Accesses the center point (in WCS coordinates) of the curve being dimensioned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimension.ChordPoint">
            <summary>Accesses the point (in WCS coordinates) where the dimension line intersects the curve being dimensioned.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RotatedDimension">
            <summary>
This class wraps the AcDbRotatedDimension ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RotatedDimension.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RotatedDimension.XLine1Point">
            <summary>Accesses the dimension to use (in WCS coordinates) as the definition point that's used as the start point for the first extension line of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RotatedDimension.XLine2Point">
            <summary>Accesses the definition point (in WCS coordinates) that's used as the start point for the second extension line of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RotatedDimension.DimLinePoint">
            <summary>Accesses the definition point (in WCS coordinates) that specifies where the dimension line will be (that is, this point will be somewhere on the dimension line).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RotatedDimension.Oblique">
            <summary>Accesses the extension line obliquing angle (in radians) for the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RotatedDimension.Rotation">
            <summary>Accesses the dimension's rotation angle in radians.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Point3AngularDimension">
            <summary>
This .NET class wraps the AcDb3PointAngularDimension ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Point3AngularDimension.#ctor">
            <summary>Default constructor. Initializes the arc point angle center point and extension lines 1 & 2 start points all to (0,0,0). In addition, all the initializations of the default constructor for Dimension, Entity, and others, are performed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Point3AngularDimension.ArcPoint">
            <summary>Accesses This function returns the dimension definition point (in WCS coordinates) that is used to determine the location of the arc of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Point3AngularDimension.XLine1Point">
            <summary>Accesses the.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Point3AngularDimension.XLine2Point">
            <summary>Accesses the dimension definition point (in WCS coordinates) that is used for the start point of the second extension line of the dimension. This point and the dimension's center point (which is located at the angle's vertex) define one side of the angle being dimensioned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Point3AngularDimension.CenterPoint">
            <summary>Accesses the dimension definition point (in WCS coordinates) that is located at the vertex of the angle being dimensioned.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Polyline3d">
            <summary>
This .NET class wraps the AcDb3dPolyline ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline3d.#ctor">
            <summary>Default constructor. Constructs an open polyline with the type initialized to SimplePoly.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline3d.Straighten">
            <summary>This function removes all spline and curve-fit vertices from the polyline or mesh and sets all remaining vertices to be simple vertices. This operation performs the same modification as the PEDIT command "Decurve" option.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline3d.SplineFit">
            <summary>This function removes any existing spline or curve-fit vertices, converts all remaining vertices to spline-control vertices, and generates a new set of spline-fit vertices. The resultant polyline or mesh is spline fit through the new set of vertices. This operation performs the same modification as the PEDIT command "Spline fit" option.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline3d.AppendVertex(Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d)">
            <summary>This function appends the PolylineVertex3d object pointed to by vertexToAppend to the vertex list of the polyline and establishes the polyline as the vertex's owner. In addition, if the polyline is resident within an Database, the vertex will be added to the same database. If the polyline is not database-resident, when it is added to a database the vertex will be added as well.</summary>
            <param name="vertexToAppend"> Input pointer to the vertex to add to the polyline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline3d.InsertVertexAt(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d)">
            <summary>This function inserts the PolylineVertex3d object pointed to by newVertex into the vertex list of the polyline just after the PolylineVertex3d object pointed to by indexVertexId and establishes the polyline as the vertex's owner. In addition, if the polyline is database-resident, then when it is added to a database, the vertex will be added as well.</summary>
            <param name="indexVertexId"> Input vertex in polyline after which the new vertex is to be inserted</param>
            <param name="newVertex"> Input vertex to be inserted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline3d.InsertVertexAt(Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d,Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d)">
            <summary>This function inserts the PolylineVertex3d object pointed to by newVertex into the vertex list of the polyline just after the PolylineVertex3d object with objectId indexVertId, establishes the polyline as the vertex's owner, and adds the vertex to the Database that contains the polyline (the polyline must be database-resident for this function to succeed).</summary>
            <param name="indexVertex"> Input objectId of the vertex in the polyline after which the new vertex is to be inserted</param>
            <param name="newVertex"> Input vertex to be inserted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline3d.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline3d.Closed">
            <summary>Assesses if the polyline to be closed. A line segment will be drawn between the last vertex and the first vertex to form a closed polygon.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline3d.PolyType">
            <summary>Accesses the Poly3dType, which indicates the spline-fit type for this 3D polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline3d.Length">
            <summary>Accesses the total length of the polyline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Poly3dType">
            <summary>
This .NET class wraps the AcDb::Poly3dType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d">
            <summary>
This .NET class wraps the AcDb3dPolylineVertex ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs an PolylineVertex3d that uses position as the position point. The vertex type is initialized to SimpleVertex.</summary>
            <param name="param0"> Input WCS position point for the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d.#ctor">
            <summary>Default constructor. Initializes the position to (0,0,0) and the vertex type to SimpleVertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d.VertexType">
            <summary>Accesses the the Vertex3dType of this vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d.Position">
            <summary>Accesses the WCS point value of this vertex.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2">
            <summary>
This .NET class wraps the AcDb2LineAngularDimension ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2.#ctor">
            <summary>Default constructor. Initializes the arc point and the extension line 1 & 2 start and end points all to (0,0,0). In addition, all the initializations of the default constructor for Dimension, Entity, etc., are performed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2.ArcPoint">
            <summary>Accesses the dimension definition point (in WCS coordinates) that is used to determine the location of the arc of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2.XLine1Start">
            <summary>Accesses the dimension definition point (in WCS coordinates) that is used for the start point of the first extension line of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2.XLine1End">
            <summary>Accesses the dimension definition point (in WCS coordinates) that is used for the end point of the first extension line of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2.XLine2Start">
            <summary>Accesses the dimension definition point (in WCS coordinates) that is used for the start point of the second extension line of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2.XLine2End">
            <summary>Accesses the dimension definition point (in WCS coordinates) that is used for the end point of the second extension line of the dimension.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Polyline2d">
            <summary>
This .NET class wraps the AcDb2dPolyline ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.#ctor">
            <summary>Default constructor. Constructs an open polyline with linetype generation off and initializes the start and end widths to 0.0, the bulge to 0.0, the elevation to 0.0, the type to SimplePoly, the normal to (0,0,1), and the thickness to 0.0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.Straighten">
            <summary>This function removes all spline and curve-fit vertices from the polyline and sets all remaining vertices to be simple vertices. This operation performs the same modification as the PEDIT command "Decurve" option.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.SplineFit">
            <summary>This function removes any existing spline or curve-fit vertices, converts all remaining vertices to spline-control vertices, and generates a new set of spline-fit vertices. The resultant polyline is spline fit through the new set of vertices. This operation performs the same modification as the PEDIT command "Spline fit" option.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.CurveFit">
            <summary>This function creates a smooth curve consisting of pairs of arcs joining each pair of vertices. The curve passes through all the vertices of the polyline and uses any tangent direction specified by the individual vertices. This operation performs the same modification as the PEDIT command "Fit" option.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.NonDBAppendVertex(Autodesk.AutoCAD.DatabaseServices.Vertex2d)">
            <summary>This function appends the Vertex2d object to the vertex list of the polyline, establishes the polyline as the vertex's owner. The polyline must not be database-resident.</summary>
            <param name="vertexToAppend"> Input the vertex to add to the polyline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.AppendVertex(Autodesk.AutoCAD.DatabaseServices.Vertex2d)">
            <summary>This function appends the Vertex2d object to the vertex list of the polyline, establishes the polyline as the vertex's owner, and adds the vertex the Database that contains the polyline (the polyline must be database-resident for this function to succeed). It returns the object ID of the appended vertex.</summary>
            <param name="vertexToAppend"> Input the vertex to add to the polyline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.InsertVertexAt(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.Vertex2d)">
            <summary>This function inserts the Vertex2d object pointed to by newVertex into the vertex list of the polyline just after indexVertex.</summary>
            <param name="newVertex"> Input vertex to be inserted</param>
            <param name="indexVertex"> Input vertex in polyline after which the new vertex is to be inserted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.InsertVertexAt(Autodesk.AutoCAD.DatabaseServices.Vertex2d,Autodesk.AutoCAD.DatabaseServices.Vertex2d)">
            <summary>This function inserts the Vertex2d object pointed to by newVertex into the vertex list of the polyline just after the Vertex2d object with objectId vertexId, establishes the polyline as the vertex's owner, and adds the vertex to the Database that contains the polyline (the polyline must be database-resident for this function to succeed).</summary>
            <param name="newVertex"> Input pointer to vertex to be inserted</param>
            <param name="vertexId"> Input objectId of the vertex in the polyline after which the new vertex is to be inserted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline2d.VertexPosition(Autodesk.AutoCAD.DatabaseServices.Vertex2d)">
            <summary>This function returns the WCS coordinate position value of vert. This function uses the X and Y coordinates from the vertex along with the Z coordinate from the polyline and applies the polyline's OCS-to-WCS transformation to produce the WCS position value. This function will work with vertex objects that are not owned by the polyline. The position returned will be as though the vertex was owned by the polyline.</summary>
            <param name="vertex"> Input vertex object to get the WCS coordinate for</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.PolyType">
            <summary>Accesses the Poly2dType, which indicates the curve/spline-fit type for this polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.Closed">
            <summary>Assesses if the polyline is to be closed (a line segment will be drawn between the last vertex and the first vertex to form a closed polygon).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.DefaultStartWidth">
            <summary>Accesses the default polyline segment starting width value for the polyline. This value is used as the default start width for all vertices within the polyline. So, for DXFOUT, vertices that have this start width will not write the value out. For DXFIN, vertices that do not have a DXF group code 40 value will use the polyline's default start width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.DefaultEndWidth">
            <summary>Accesses the default polyline segment ending width value for the polyline. This value is used as the default end width for all vertices within the polyline. So, for DXFOUT, vertices that have this end width will not write the value out. For DXFIN, vertices that do not have a DXF group code 41 value will use the polyline's default end width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.Thickness">
            <summary>Accesses the thickness for the polyline. The vector direction is sometimes called the extrusion direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.Normal">
            <summary>Accesses the normal vector of the plane containing the polyline. The normal vector is in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.Elevation">
            <summary>Accesses the elevation of the polyline. The elevation is the OCS Z axis value of the polyline (that is, the shortest distance from the WCS origin to the plane containing the polyline).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.LinetypeGenerationOn">
            <summary>Assesses if linetype generation is turned on for the polyline. When linetype generation is on, the linetype pattern used by the polyline is generated continuously across all vertices rather than starting over at each vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.ConstantWidth">
            <summary>Accesses the width of the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline2d.Length">
            <summary>Accesses the total length of the polyline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Poly2dType">
            <summary>
This .NET class wraps the AcDb::Poly2dType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Vertex2d">
            <summary>
This .NET class wraps the AcDb2dVertex ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Vertex2d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Constructor.</summary>
            <param name="position"> Input Autodesk.AutoCAD.Geometry.Point3d object.</param>
            <param name="bulge"> Input System.Double object.</param>
            <param name="startWidth"> Input System.Double object.</param>
            <param name="endWidth"> Input System.Double object.</param>
            <param name="tangent"> Input System.Double object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Vertex2d.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Vertex2d.VertexType">
            <summary>Returns the .Vertex2dType of this vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Vertex2d.Position">
            <summary>Returns the position value of the vertex. The position point value must be in OCS coordinates (the OCS of the polyline containing the vertex), not WCS. The Z coordinate is kept in the owning 2dPolyline only for historical purposes. To find the WCS position of the vertex use AcDb2dPolyline.vertexPosition(), which takes a pointer to the vertex as an argument. To get the OCS Z coordinate, use the owning polyline’s AcDb2dPolyline.elevation() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Vertex2d.StartWidth">
            <summary>Returns the start width for the vertex. The start width is used as the width at this vertex for the polyline segment from this vertex to the next vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Vertex2d.EndWidth">
            <summary>Returns the end width for the vertex. The end width is used as the width at the end of the polyline segment from this vertex to the next vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Vertex2d.Bulge">
            <summary>Returns the vertex’s bulge value. The bulge is the tangent of 1/4 of the included angle for the arc between the selected vertex and the next vertex in the polyline’s vertex list. A negative bulge value indicates that the arc goes clockwise from the selected vertex to the next vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Vertex2d.TangentUsed">
            <summary>Checks whether the curve-fit tangent direction is in use by this vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Vertex2d.Tangent">
            <summary>Returns the curve-fit tangent direction for the vertex. This is the angle (in radians) between the OCS X axis for the polyline containing the vertex and the tangent direction vector.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Vertex">
            <summary>
This .NET class wraps the AcDbVertex ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Vertex2dType">
            <summary>
This .NET enum wraps the AcDb::Vertex2dType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Vertex3dType">
            <summary>
This .NET class wraps the AcDb::Vertex3dType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Surface">
            <summary>
This .Net class wraps the ObjectARX class AcDbSurface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.ImprintEntity(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Overloads for the Surface.ImprintEntity method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateSectionObjects(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::createSectionObjects Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.SliceByPlane(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::sliceByPlane Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.ChamferEdges(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.DatabaseServices.SubentityId,System.Double,System.Double,System.Boolean)">
            <summary>
This wraps AcDbSurface::chamferEdges() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.ChamferEdges(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.DatabaseServices.SubentityId,System.Double,System.Double)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::chamferEdges Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.FilletEdges(Autodesk.AutoCAD.DatabaseServices.SubentityId[],System.Double,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::filletEdges() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.FilletEdges(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::filletEdges Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.GetSubentityColor(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::getSubentColor Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.SetSubentityMaterial(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::setSubentMaterial Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.GetSubentityMaterial(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::getSubentMaterial Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.SetSubentityMaterialMapper(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.GraphicsInterface.Mapper)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::setSubentMaterialMapper Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.GetSubentityMaterialMapper(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSurface::getSubentMaterialMapper Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.ProjectOnToSurface(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This wraps the ObjectARX AcDbSurface::projectOnToSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.RayTest(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,Autodesk.AutoCAD.DatabaseServices.SubentityId[]&,Autodesk.AutoCAD.Geometry.DoubleCollection&)">
            <summary>This wraps the ObjectARX AcDbSurface::rayTest() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.ConvertToNurbSurface">
            <summary>This wraps the ObjectARX AcDbSurface::convertToNurbSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateExtrudedSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.SweepOptions)">
            <summary>This wraps: AcDbSurface::createExtrudedSurface (edSurface) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateExtrudedSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.SweepOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createExtrudedSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateRevolvedSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.DatabaseServices.Profile3d,System.Boolean,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.RevolveOptions)">
            <summary>
This wraps the ObjectARX AcDbSurface::createRevolvedSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateRevolvedSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.DatabaseServices.Profile3d,System.Boolean,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.RevolveOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createRevolvedSurface( ) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateRevolvedSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.RevolveOptions)">
            <summary>This wraps the ObjectARX AcDbSurface::createRevolvedSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateRevolvedSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.RevolveOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createRevolvedSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateSweptSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.DatabaseServices.SweepOptions)">
            <summary>This wraps the ObjectARX AcDbSurface:: createSweptSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateSweptSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.DatabaseServices.Profile3d,Autodesk.AutoCAD.DatabaseServices.SweepOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createSweptSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateLoftedSurface(Autodesk.AutoCAD.DatabaseServices.LoftProfile[],Autodesk.AutoCAD.DatabaseServices.LoftProfile[],Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.LoftOptions)">
            <summary>This wraps the ObjectARX AcDbLoftedSurface::createLoftedSurface ( ) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateLoftedSurface(Autodesk.AutoCAD.DatabaseServices.LoftProfile[],Autodesk.AutoCAD.DatabaseServices.LoftProfile[],Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.LoftOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbLoftedSurface::createLoftedSurface ( ) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateNetworkSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d[],Autodesk.AutoCAD.DatabaseServices.Profile3d[])">
            <summary>This wraps the ObjectARX AcDbSurface:: createNetworkSurface () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateNetworkSurface(Autodesk.AutoCAD.DatabaseServices.Profile3d[],Autodesk.AutoCAD.DatabaseServices.Profile3d[],System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createNetworkSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreatePatchSurface(Autodesk.AutoCAD.DatabaseServices.PathRef,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,System.Int32,System.Double)">
            <summary>This wrap ObjectARX AcDbSurface::createPatchSurface () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreatePatchSurface(Autodesk.AutoCAD.DatabaseServices.PathRef,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,System.Int32,System.Double,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createPatchSurface () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateBlendSurface(Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.BlendOptions)">
            <summary>This wraps the ObjectARX AcDbSurface::createBlendSurface () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateBlendSurface(Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.BlendOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createBlendSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateOffsetSurface(Autodesk.AutoCAD.DatabaseServices.Entity,System.Double)">
            <summary>This wraps the ObjectARX AcDbSurface::createOffsetSurface () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Surface.CreateOffsetSurface(Autodesk.AutoCAD.DatabaseServices.Entity,System.Double,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbSurface::createOffsetSurface () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Surface.CreationActionBodyId">
            <summary>This wraps the ObjectARX AcDbSurface::creationActionBodyId() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Surface.ModificationActionBodyIds">
            <summary>This wraps the ObjectARX AcDbSurface::modificationActionBodyIds() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Surface.UIsoLineDensity">
            <summary>This wraps the ObjectARXAcDbSurface::setUIsolineDensity() and AcDbSurface::uIsolineDensity() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Surface.WireframeType">
            <summary>This wraps the ObjectARX AcDbSurface::getWireframeType() and AcDbSurface::setWireframeType() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Surface.Perimeter">
            <summary>This wraps the ObjectARX AcDbSurface::getPerimeter() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Surface.UsesGraphicsCache">
            <summary>This property is a wrapper for the AcDbSurface::usesGraphicsCache() method which is used by AutoCAD to determine whether or not to use cached graphics for the surface. If the method returns true, then cached graphics will be used. Only database resident entities can use graphics caching, so this method is not called for entities not in an AcDbDatabase.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Solid3d">
            <summary></summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateBox(System.Double,System.Double,System.Double)">
            <summary>This method is used for creating a box solid primitive with centroid at world origin. The length, width, and height axes of the box are aligned with the WCS X, Y, and Z axes, respectively.</summary>
            <param name="lengthAlongX"> Input value for length of the box</param>
            <param name="lengthAlongY"> Input value for width of the box</param>
            <param name="lengthAlongZ"> Input value for height of the box</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateFrustum(System.Double,System.Double,System.Double,System.Double)">
            <summary>This method is used for creating a cylinder or cone with the world origin being centered about its diameter and positioned at half of the height. If radiusAlongX and radiusAlongY are the same and topRadius is zero, then a normal circular cone is created. If radiusAlongX and radiusAlongY are not the same and topRadius is zero, then an elliptical cone is created. Otherwise, based on radiusAlongX and radiusAlongY values, a circular or elliptical tapered cylinder is created. If radiusAlongX and topRadius are the same, then a cylinder is created. Otherwise, a cone is created. radiusAlongY determines whether the created cone or cylinder is circular or elliptical, based on whether radiusAlongY is equal to radiusAlongX or not. The base of the frustum lies in the WCS X-Y plane. The direction from the base of the frustum to the top will be in the direction of the positive WCS Z axis.</summary>
            <param name="height"> Input height for the frustum</param>
            <param name="radiusAlongX"> Input radius for the frustum in X direction</param>
            <param name="radiusAlongY"> Input radius for the frustum in Y direction</param>
            <param name="topRadius"> Input radius for top end of the frustum</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateSphere(System.Double)">
            <summary>This method is used for creating a sphere with centroid at world origin and radius radius.</summary>
            <param name="radius"> Input radius for the sphere</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateTorus(System.Double,System.Double)">
            <summary>This method is used for creating a torus with centroid at the WCS origin and using the WCS Z axis as the axis of rotational symmetry for the torus.</summary>
            <param name="majorRadius"> Input major radius for the torus</param>
            <param name="minorRadius"> Input minor radius for the torus</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateWedge(System.Double,System.Double,System.Double)">
            <summary>This method is used for creating a wedge solid with center at the WCS origin. The length, width, and height of the wedge are aligned with the WCS’s X, Y, and Z axes, respectively.</summary>
            <param name="lengthAlongX"> Input length for the wedge</param>
            <param name="lengthAlongY"> Input width for the wedge</param>
            <param name="lengthAlongZ"> Input height for the wedge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreatePyramid(System.Double,System.Int32,System.Double,System.Double)">
            <summary>This method is used for creating a pyramid with the world origin being centered about its base and positioned at half of the height. If radius and topRadius are the same, then a prism is created. Otherwise, a pyramid is created. The base of the pyramid lies in the WCS X-Y plane. The direction from the base of the pyramid to the top will be in the direction of the positive WCS Z axis.</summary>
            <param name="height"> Input height for pyramid</param>
            <param name="sides"> Input number of sides for pyramid</param>
            <param name="radius"> Input radius for inscribed circle of bottom polygon</param>
            <param name="topRadius"> Input radius for inscribed circle of top polygon</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.Extrude(Autodesk.AutoCAD.DatabaseServices.Region,System.Double,System.Double)">
            <summary>Creates a solid by extruding region, a distance of height with a taper angle of taper. The extrusion direction is along the normal of the region if the height is positive. taper should be between half pi and -half pi. If the absolute value of taper < 1e-6, then the taper angle is set to 0.</summary>
            <param name="region"> Input a region object</param>
            <param name="height"> Input height for extrusion</param>
            <param name="taperAngle"> Input taper angle in radians</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ExtrudeAlongPath(Autodesk.AutoCAD.DatabaseServices.Region,Autodesk.AutoCAD.DatabaseServices.Curve,System.Double)">
            <summary>Creates a solid by extruding region along the path curve. path must be an Line, AcDbArc, AcDbCircle, Ellipse, AcDbSpline, AcDb2dPolyline, or a non-spline fit 3dPolyline. path should not have self-intersections and, preferably, should not have high curvature areas. If one of the endpoints of the path is not on the plane of the region, then the path will be moved to make this true.</summary>
            <param name="region"> Input a region object</param>
            <param name="path"> Input a curve object to extrude along</param>
            <param name="taperAngle"> Input extrusion taper angle in radians</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.Revolve(Autodesk.AutoCAD.DatabaseServices.Region,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Creates a solid by revolving region around the axis defined by the projection of the line from axisPoint to axisPoint+axisDir onto the plane containing region. Therefore, the rotation axis will always be coplanar with region. The region is revolved angleOfRevolution radians around the rotation axis. Positive angles result in a clockwise rotation, when looking in the direction of the projection of axisDir onto the plane containing region (that is, right-hand rule). Angles of revolution more than 2 pi are treated as 2 pi. The rotation axis must not pass through region.</summary>
            <param name="region"> Input region object to be revolved</param>
            <param name="axisPoint"> Input point on the line to be projected to create the axis of revolution</param>
            <param name="axisDir"> Input vector representing the direction of the line to be projected to create the axis of revolution</param>
            <param name="angleOfRevolution"> Input angle of revolution in radians</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateRevolvedSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.RevolveOptions)">
            <summary>Create revolved solid by revolving an entity or face.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateRevolvedSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.RevolveOptions)">
            <summary>Create revolved solid by revolving an entity or face.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateSweptSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SweepOptions)">
            <summary>Create swept solid by sweeping an entity or face along a path.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateSweptSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SweepOptions)">
            <summary>Create swept solid by sweeping an entity or face along a path.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateExtrudedSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,System.Double,Autodesk.AutoCAD.DatabaseServices.SweepOptions)">
            <summary>Creates an extruded solid by extruding an entity or face.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateExtrudedSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.SweepOptions)">
            <summary>Creates an extruded solid by extruding an entity or face.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateExtrudedSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.SweepOptions)">
            <summary>Creates an extruded solid by extruding an entity or face.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateLoftedSolid(Autodesk.AutoCAD.DatabaseServices.LoftProfile[],Autodesk.AutoCAD.DatabaseServices.LoftProfile[],Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.LoftOptions)">
            <summary>This wraps the ObjectARX AcDb3dSolid::createLoftedSolid () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateLoftedSolid(Autodesk.AutoCAD.DatabaseServices.Entity[],Autodesk.AutoCAD.DatabaseServices.Entity[],Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.LoftOptions)">
            <summary>This .NET method wraps the ObjectARX method AcDb3dSolid::createLoftedSolid.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CheckInterference(Autodesk.AutoCAD.DatabaseServices.Solid3d)">
            <summary>Checks whether this solid interferes with otherSolid.</summary>
            <param name="otherSolid"> Input pointer for other solid</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.GetSection(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This function creates an Region entity that represents the intersection of plane with the solid, and returns the region that represents the section.</summary>
            <param name="plane"> Input plane to use as the section cutting plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.StlOut(System.String,System.Boolean)">
            <summary>
Writes out a Stereo Lithography (STL) representation of this solid to a file with the name fileName..</summary>
            <param name="fileName"> Input file name</param>
            <param name="asciiFormat"> Input Boolean indicating file format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.BooleanOperation(Autodesk.AutoCAD.DatabaseServices.BooleanOperationType,Autodesk.AutoCAD.DatabaseServices.Solid3d)">
            <summary>Performs Boolean operation between this solid and Solid. Possible operation types are:.</summary>
            <param name="operation"> Input type of Boolean operation</param>
            <param name="solid"> Input the other solid with which to carry out the Boolean operation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.Slice(Autodesk.AutoCAD.Geometry.Plane,System.Boolean)">
            <summary>
Slices the solid with plane and sets the solid to be the portion on the positive normal side plane.</summary>
            <param name="plane"> Input plane to be used for slicing the solid</param>
            <param name="negativeHalfToo"> Input flag to indicate whether the other side of the solid is to be generated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.Slice(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Slices the solid with plane and sets the solid to be the portion on the positive normal side plane.</summary>
            <param name="plane"> Input plane to be used for slicing the solid</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CopyEdge(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This method copies the specified edge as an AutoCAD entity, which can be an Line, AcDbCircle, AcDbArc, Ellipse, or AcDbSpline. The properties of the resulting entity (color, layer, linetype, lineweight) are set from the corresponding current document settings. The calling application is responsible for the resulting entity (either appending it to a database or deleting it when it is no longer needed).</summary>
            <param name="subEntityId"> Input subentity ID of an edge in the Solid3d</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CopyFace(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This method copies the specified face as an AutoCAD entity, which can be an Region if the face is planar, or otherwise will be an Body. The properties of the resulting entity (color, layer, linetype, lineweight) are set from the corresponding current document settings. The calling application is responsible for the resulting entity (either appending it to a database or deleting it when it is no longer needed).</summary>
            <param name="subEntityId"> Input subentity ID of a face in the Solid3d</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ExtrudeFaces(Autodesk.AutoCAD.DatabaseServices.SubentityId[],System.Double,System.Double)">
            <summary>This method extrudes faces of a solid by a distance of height with a taper angle of taper. The extrusion direction is along the normal of each face if the height is positive or in the opposite direction if the height is negative. If the absolute value of taper < 1e-6, then a taper angle of 0.0 will be used for the extrusion.</summary>
            <param name="subentityIds"> Input array of subentity IDs of faces to be extruded; these faces must be planar</param>
            <param name="height"> Input extrusion distance to be applied to the specified faces. Use a positive value to extrude in the direction of the face normals, which point outward from the solid. Use a negative value to extrude faces into the solid.</param>
            <param name="taper"> Input angle of tapering to be applied to the extrusion; the tapering is relative to the axis formed from the center of each face in the direction of the face normal when a positive height is used or in the opposite direction when a negative height is used; this value should be between half pi and half pi</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ExtrudeFacesAlongPath(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.DatabaseServices.Curve)">
            <summary>This method extrudes the given faces along the given path curve entity, which must be an Line, AcDbArc, Circle, AcDbEllipse, AcDbSpline, AcDb2dPolyline, or a non-spline fit 3dPolyline. The path should not have self-intersections and, preferably, should not have high curvature areas. If one of the end points of the path is not on the plane of the region, then the path will be moved to make this true.</summary>
            <param name="subentityIds"> Input array of subentity IDs of faces to be extruded; these faces must be planar</param>
            <param name="path"> Input a curve object to extrude along</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ImprintEntity(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This method intersects the given entity with the solid and imprints their intersection graph onto the solid. If a closed loop of new edges is created, a new face is made. An open loop of edges can be added as a spur to an existing loop on a face or as a slit in the face. The given entity must be a kind of Curve, Solid3d, Body, Region, Trace, bSolid, or Face.</summary>
            <param name="entity"> Input entity to be imprinted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CleanBody">
            <summary>Removes all edges and faces not necessary to support the topology of the solid.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.OffsetBody(System.Double)">
            <summary>This method offsets all faces of the solid by the given distance. Faces with surfaces that cannot be offset are removed and the solid is healed, if possible. Note that this operation can produce an invalid solid in some cases. The function will check for an invalid solid result if the SOLIDCHECK system variable is set to 1.</summary>
            <param name="offsetDistance"> Input distance to offset each face</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.OffsetFaces(Autodesk.AutoCAD.DatabaseServices.SubentityId[],System.Double)">
            <summary>Offsets the given faces of the solid by the given distance. Faces with surfaces that cannot be offset are removed and the solid is healed, if possible. Note that this operation can produce an invalid solid in some cases. The function will check for an invalid solid result if the SOLIDCHECK system variable is set to 1.</summary>
            <param name="subentityIds"> Input array of subentity IDs of faces to be offset</param>
            <param name="offsetDistance"> Input distance to offset each face</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.RemoveFaces(Autodesk.AutoCAD.DatabaseServices.SubentityId[])">
            <summary>This method removes the given faces, growing the adjacent faces to fill the gaps. Note that the gap filling can fill if there is no solution using adjacent faces only.</summary>
            <param name="subentityIds"> Input array of subentity IDs of faces to be removed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.SeparateBody">
            <summary>This method separates the solid into a list of solids representing the additional disjoint volumes. This solid is reduced to a solid with one volume. The calling application is responsible for the resulting entities (either appending them to a database or deleting them when they are no longer needed). When the calling application closes this Solid3d, the resulting solid will be committed to the database. So, if the other solids are not appended to the database, you will lose some data.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ShellBody(Autodesk.AutoCAD.DatabaseServices.SubentityId[],System.Double)">
            <summary>Changes the solid into a thin-walled solid shell with the faces offset to the outside of the solid when given positive offset distances, and to the inside when given negative distances.</summary>
            <param name="subentityIds"> Input array of subentity IDs of faces to be removed from the shell</param>
            <param name="offsetDistance"> Input distance to offset each face</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.TaperFaces(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Tapers the given faces of the solid about the given base point and supplied draft vector by a given draft angle. The base point and draft vector define a draft plane about which faces are tapered. Any face lying in the draft plane will not be modified.</summary>
            <param name="subentityIds"> Input array of subentity IDs of faces to be tapered</param>
            <param name="basePoint"> Input origin of the draft plane</param>
            <param name="draftVector"> Input draft direction vector</param>
            <param name="draftAngle"> Input draft angle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.TransformFaces(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Transforms the given faces of the solid by applying the transformation matrix to rotate and or move the faces.</summary>
            <param name="subentityIds"> Input array of subentity IDs of faces to be transformed</param>
            <param name="matrix"> Input rotation and/or translation matrix to be applied to the faces</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.GetSubentityColor(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Retrieves the color of the specified subentity.</summary>
            <param name="subEntityId"> Input subentity Id</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.SetSubentityMaterial(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function sets a material on a specified subentity. You can remove a previously assigned material by providing a null objectId for the materialId parameter.</summary>
            <param name="subEntityId"> Input subentity Id</param>
            <param name="materialId"> Input object Id of the material</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.GetSubentityMaterial(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This function returns the material of the specified subentity.</summary>
            <param name="subEntityId"> Input subentity Id</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.SetSubentityMaterialMapper(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.GraphicsInterface.Mapper)">
            <summary>This function sets an explicit material mapper on the specified subentity. You can remove the explicit mapper assignment by providing Mapper.kIdentity for the mapper parameter.</summary>
            <param name="subEntityId"> Input subentity ID</param>
            <param name="mapper"> Input a Mapper object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.GetSubentityMaterialMapper(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Retrieves the material mapper for the specified subentity.</summary>
            <param name="subEntityId"> Input subenttity Id</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ConvertToBrepAtSubentPaths(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This method is used to convert individual history items from a parameterized type such as a box to a simple boundary-representation without its parameter or type information.</summary>
            <param name="paths"> Input array of references to history items</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ChamferEdges(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.DatabaseServices.SubentityId,System.Double,System.Double)">
            <summary>Creates chamfers at the edges of a solid.</summary>
            <param name="subentityIds"> Input object ids of edges at which the chamfer will be applied</param>
            <param name="baseSubentityId"> Input object id of the base face where the chamfer will be applied</param>
            <param name="baseDist"> Input chamfer distance on the base face</param>
            <param name="otherDist"> Input chamfer distance on the other faces</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.FilletEdges(Autodesk.AutoCAD.DatabaseServices.SubentityId[],Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>This method creates rounded fillets the edges of a solid.</summary>
            <param name="subentityIds"> Input object ids of the edges where the fillet will be applied</param>
            <param name="radius"> Input radius at the corresponding edge</param>
            <param name="startSetback"> Input start setback at the corresponding edge</param>
            <param name="endSetback"> Input end setback at the corresponding edge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.CreateSculptedSolid(Autodesk.AutoCAD.DatabaseServices.Entity[],Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This wraps the ObjectARX AcDb3dSolid::createSculptedSolid() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3d.ProjectOnToSolid(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This wraps the ObjectARX AcDb3dSolid::projectOnToSolid() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3d.Area">
            <summary>Returns the area set to the surface area  of the solid. The area will be in square drawing units.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3d.MassProperties">
            <summary>Returns the MassProperties property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3d.IsNull">
            <summary>Returns true if the solid does not have a ShapeManager object within itself.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3d.NumChanges">
            <summary>Returns the number of changes that have  occurred to this solid since it was first created.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3d.RecordHistory">
            <summary>Returns whether the solid will record operations supported by solid history.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3d.ShowHistory">
            <summary>Returns whether items in the history should be drawn when the sysvar SHOWHIST is 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3d.UsesGraphicsCache">
            <summary>This property is a wrapper for the AcDb3dSolid::usesGraphicsCache() method which is used by AutoCAD to determine whether or not to use cached graphics for the region. If the method returns true, then cached graphics will be used. Only database resident entities can use graphics caching, so this method is not called for entities not in an AcDbDatabase.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.NurbSurface">
            <summary>
This wraps the ObjectARX AcDbNurbSurface class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.KnotCollection)">
            <summary>
This wraps the ObjectARX AcDbNurbSurface::AcDbNurbSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.#ctor">
            <summary>This wraps the ObjectARX AcDbNurbSurface::AcDbNurbSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.Set(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.KnotCollection)">
            <summary>
This wraps the ObjectARX AcDbNurbSurface::set () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.SetControlPoints(System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::setControlPoints() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.GetControlPointAt(System.Int32,System.Int32)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getControlPointAt() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.SetControlPointAt(System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::setControlPointAt() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.GetWeight(System.Int32,System.Int32)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getWeight() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.SetWeight(System.Int32,System.Int32,System.Double)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::setWeight() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.Evaluate(System.Double,System.Double,System.Int32,Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Vector3dCollection&)">
            <summary>This wraps the ObjectARX evaluate(double u, double v, int derivDegree, AcGePoint3d&amp; point, AcGeVector3dArray&amp; derivatives) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.Evaluate(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Vector3d&,Autodesk.AutoCAD.Geometry.Vector3d&,Autodesk.AutoCAD.Geometry.Vector3d&,Autodesk.AutoCAD.Geometry.Vector3d&,Autodesk.AutoCAD.Geometry.Vector3d&)">
            <summary>This wraps the ObjectARX evaluate(double u, double v, AcGePoint3d&amp; pos, AcGeVector3d&amp; uDeriv, AcGeVector3d&amp; vDeriv, AcGeVector3d&amp; uuDeriv, AcGeVector3d&amp; uvDeriv, AcGeVector3d&amp; vvDeriv) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.Evaluate(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Vector3d&,Autodesk.AutoCAD.Geometry.Vector3d&)">
            <summary>This wraps the ObjectARX evaluate(double u, double v, AcGePoint3d&amp; pos, AcGeVector3d&amp; uDeriv, AcGeVector3d&amp; vDeriv) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.Evaluate(System.Double,System.Double)">
            <summary>This wraps the ObjectARX evaluate(double u, double v, AcGePoint3d&amp; pos) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.IsPlanar(Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Vector3d&)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::isPlanar() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.IsPointOnSurface(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::isPointOnSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.GetNormal(System.Double,System.Double)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getNormal() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.GetIsolineAtU(System.Double)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getIsolineAtU() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.GetIsolineAtV(System.Double)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getIsolineAtV() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.InsertKnotAtU(System.Double)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::InsertKnotAtU() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.InsertKnotAtV(System.Double)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::InsertKnotAtV() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.InsertControlPointsAtU(System.Double,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::InsertControlPointsAtU() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.InsertControlPointsAtV(System.Double,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::InsertControlPointsAtV() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.RemoveControlPointsAtU(System.Int32)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::RemoveControlPointsAtU() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.RemoveControlPointsAtV(System.Int32)">
            <summary>This wraps the ObjectARXAcDbNurbSurface::RemoveControlPointsAtV() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.Rebuild(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbNurbSurface::rebuild() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.Rebuild(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::rebuild() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.ModifyPosition(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::modifyPositionAndTangent() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.ModifyPositionAndTangent(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::modifyPositionAndTangent() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbSurface.GetParameterOfPoint(Autodesk.AutoCAD.Geometry.Point3d,System.Double&,System.Double&)">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getParameterOfPoint() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.ControlPoints">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getControlPoints() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.NumberOfControlPointsInU">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getNumberOfControlPointsInU() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.NumberOfControlPointsInV">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getNumberOfControlPointsInV() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.UKnots">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getUKnots() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.VKnots">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getVKnots() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.NumberOfKnotsInU">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getNumberOfKnotsInU() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.NumberOfKnotsInV">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getNumberOfKnotsInV() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.DegreeInU">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getDegreeInU() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.DegreeInV">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getDegreeInV() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.IsClosedInU">
            <summary>This wraps AcDbNurbSurface::isClosedInU() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.IsClosedInV">
            <summary>This wraps the ObjectARX AcDbNurbSurface::isClosedInV() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.IsPeriodicInU">
            <summary>This wraps the ObjectARX AcDbNurbSurface::isPeriodicInU() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.IsPeriodicInV">
            <summary>This wraps the ObjectARXAcDbNurbSurface::isPeriodicInV() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.PeriodInU">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getPeriodInU() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.PeriodInV">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getPeriodInV() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.IsRational">
            <summary>This wraps the ObjectARX AcDbNurbSurface::isRational() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.NumberOfSpansInU">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getNormal() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbSurface.NumberOfSpansInV">
            <summary>This wraps the ObjectARX AcDbNurbSurface::getIsolineAtU() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface">
            <summary>
This class represents an extruded surface entity. It provides methods to create and manipulate ASM surfaces.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface.SweepEntity">
            <summary>Accesses the sweep entity used to create the extruded surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface.SweepProfile">
            <summary>This wraps the ObjectARX AcDbExtrudedSurface::sweepProfile() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface.SweepVec">
            <summary>Accesses the sweep vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface.Height">
            <summary>Accesses the extrusion height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface.SweepOptions">
            <summary>Accesses the options used to create this extruded surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface.TaperAngle">
            <summary>Accesses the angle of taper in radians.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Profile3d">
            <summary>
This wraps the ObjectARX AcDb3dProfile class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.#ctor(Autodesk.AutoCAD.DatabaseServices.Profile3d)">
            <summary>This wraps the ObjectARX AcDb3dProfile::AcDb3dProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.#ctor(Autodesk.AutoCAD.DatabaseServices.VertexRef)">
            <summary>This wraps the ObjectARX AcDb3dProfile::AcDb3dProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.#ctor(Autodesk.AutoCAD.DatabaseServices.PathRef)">
            <summary>This wraps the ObjectARX AcDb3dProfile::AcDb3dProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>This wraps the ObjectARX AcDb3dProfile::AcDb3dProfile() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.#ctor(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This wraps the ObjectARX AcDb3dProfile::AcDb3dProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.#ctor">
            <summary>This wraps the ObjectARX AcDb3dProfile::AcDb3dProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.ConvertProfile(Autodesk.AutoCAD.DatabaseServices.PathRef[])">
            <summary>This wraps the ObjectARX AcDb3dProfile::convertProfile() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Profile3d.CopyFrom(Autodesk.AutoCAD.DatabaseServices.Profile3d)">
            <summary>This wraps the ObjectARX AcDb3dProfile::operator =() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.Entity">
            <summary>This wraps the ObjectARX AcDb3dProfile::entity() and AcDb3dProfile::set() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.ProfilePathRef">
            <summary>This wraps the ObjectARX AcDb3dProfile::getPathRef() and AcDb3dProfile::set() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.ProfileVertexRef">
            <summary>This wraps the ObjectARX AcDb3dProfile::getVertexRef() and AcDb3dProfile::set() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.IsClosed">
            <summary>This wraps the ObjectARX AcDb3dProfile::isClosed () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.IsPlanar">
            <summary>This wraps the ObjectARX AcDb3dProfile::isPlanar () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.IsSubent">
            <summary>This wraps the ObjectARX AcDb3dProfile::isSubent () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.IsFace">
            <summary>This wraps the ObjectARXAcDb3dProfile::isFace () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.IsEdge">
            <summary>This wraps the ObjectARX AcDb3dProfile::isEdge () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Profile3d.IsValid">
            <summary>This wraps the ObjectARX AcDb3dProfile::isValid () method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface">
            <summary>
This .NET class wraps the AcDbRevolvedSurface ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.RevolveEntity">
            <summary>Accesses the entity which is being revolved.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.RevolveProfile">
            <summary>This wraps the ObjectARX AcDbRevolvedSurface::revolveProfile() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.AxisPoint">
            <summary>Accesses the axis point around which the entity will be revolved.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.AxisDirection">
            <summary>Accesses the axis direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.RevolveAngle">
            <summary>Accesses the angle of revolution, in radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.StartAngle">
            <summary>Accesses the starting angle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolvedSurface.RevolveOptions">
            <summary>Accesses the revolve options for this surface.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RevolveOptions">
            <summary>
This .NET class wraps the AcDbRevolveOptions ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptions.#ctor(Autodesk.AutoCAD.DatabaseServices.RevolveOptions)">
            <summary>Copy constructor.</summary>
            <param name="opts"> Input object to be copied.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptions.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptions.Clone">
            <summary>Clones the object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptions.CheckRevolveCurve(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Boolean)">
            <summary>
Checks whether the entity is valid for revolve operation. This function is called by CreateRevolvedSurface() and CreateRevolvedSolid(), so it is not necessary for an application to call this function.</summary>
            <param name="axisPnt"> Input point on axis of revolution</param>
            <param name="axisDir"> Input direction of axis of revolution</param>
            <param name="displayErrorMessages"> Input Boolean value indicating whether to display error messages</param>
            <param name="unnamed"> Input the curve or region to be revolved</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptions.DraftAngle">
            <summary>Accesses the draft angle in radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptions.TwistAngle">
            <summary>Accesses the angle by which the profile will be twisted as it revolves around the axis in radians. The default value of this option is 0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptions.CloseToAxis">
            <summary>Accesses the close to axis option. If this option is set for an open profile, then the ends of the profile will be extended to the axis of revolution before revolving. The default value of this option is false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SweptSurface">
            <summary>
This .NET class wraps the AcDbSweptSurface ObjectARX class. This class represents a swept surface entity. It provides methods to create and manipulate ASM surfaces</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SweptSurface.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.SweepEntity">
            <summary>Returns the  sweep entity that describes this surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.PathEntity">
            <summary>Returns the sweep path of this surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.SweepProfile">
            <summary>This wraps the ObjectARX AcDbSweptSurface::sweepProfile() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.PathProfile">
            <summary>This wraps the ObjectARXAcDbSweptSurface::pathProfile() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.PathLength">
            <summary>Returns the length of the path curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.SweepOptions">
            <summary>Returns the sweep options associated with this surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.Bank">
            <summary>The sweep face or curve will be banked along the sweep path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.ProfileRotation">
            <summary>Specifies angle sweep of profile  object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.ScaleAlongPath">
            <summary>Specifies scaling of profile object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SweptSurface.TwistAlongPath">
            <summary>Specifies rotation of profile object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LoftProfile">
            <summary>
This wraps the ObjectARX AcDbLoftProfile class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftProfile.#ctor(Autodesk.AutoCAD.DatabaseServices.LoftProfile)">
            <summary>This wraps the ObjectARX AcDbLoftProfile::AcDbLoftProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftProfile.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This wraps the ObjectARXAcDbLoftProfile::AcDbLoftProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftProfile.#ctor(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>This wraps the ObjectARX AcDbLoftProfile::AcDbLoftProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftProfile.#ctor(Autodesk.AutoCAD.DatabaseServices.PathRef)">
            <summary>This wraps the ObjectARX AcDbLoftProfile::AcDbLoftProfile ( const AcDbPathRef&amp; pathRef) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftProfile.#ctor">
            <summary>This wraps the ObjectARX AcDbLoftProfile::AcDbLoftProfile () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftProfile.CopyFrom(Autodesk.AutoCAD.DatabaseServices.Profile3d)">
            <summary>This wraps the ObjectARX AcDbLoftProfile::operator = () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftProfile.CopyFrom(Autodesk.AutoCAD.DatabaseServices.LoftProfile)">
            <summary>This wraps the ObjectARX AcDbLoftProfile::operator = () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftProfile.Continuity">
            <summary>This wraps the ObjectARX AcDbLoftProfile::continuity() and AcDbLoftProfile::setContinuity() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftProfile.Magnitude">
            <summary>This wraps the ObjectARX AcDbLoftProfile::magnitude() and AcDbLoftProfile::setMagnitude() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LoftOptions">
            <summary>
This .NET class wraps the AcDbLoftOptions ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptions.#ctor(Autodesk.AutoCAD.DatabaseServices.LoftOptions)">
            <summary>Copy constructor.</summary>
            <param name="opts"> Input object to be copied into 'this'</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptions.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptions.Clone">
            <summary>Returns a copy of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptions.CheckLoftCurves(Autodesk.AutoCAD.DatabaseServices.Entity[],Autodesk.AutoCAD.DatabaseServices.Entity[],Autodesk.AutoCAD.DatabaseServices.Entity,System.Boolean)">
            <summary>
Checks whether cross section curves and guide/path curves are valid for the lofting operation. This function is called by CreateLoftedSurface() and CreateLoftedSolid(), so it is not necessary for an application to call this function. This function combines calls to CheckCrossSectionCurves(), CheckGuideCurves(), and CheckPathCurve() into a single function.</summary>
            <param name="crossSectionCurves"> Input list of cross-section curves</param>
            <param name="guideCurves"> Input list of guide curves</param>
            <param name="pPathCurve"> Input pointer to path curve or null</param>
            <param name="displayErrorMessages"> Input Boolean whether or not to display error messages</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptions.CheckCrossSectionCurves(Autodesk.AutoCAD.DatabaseServices.Entity[],System.Boolean)">
            <summary>
Checks whether cross section curves are valid for the lofting operation. This function is called by CreateLoftedSurface() and CreateLoftedSolid(), so it is not necessary for an application to call this function.</summary>
            <param name="crossSectionCurves"> Input list of cross-section curves</param>
            <param name="displayErrorMessages"> Input Boolean whether or not to display error messages</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptions.CheckGuideCurves(Autodesk.AutoCAD.DatabaseServices.Entity[],System.Boolean)">
            <summary>
Checks whether guide curves are valid for lofting operation. This function is called by CreateLoftedSurface() and CreateLoftedSolid(), so it is not necessary for an application to call this function.</summary>
            <param name="guideCurves"> Input list of guide curves</param>
            <param name="displayErrorMessages"> Input Boolean whether or not to display error messages</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptions.CheckPathCurve(Autodesk.AutoCAD.DatabaseServices.Entity,System.Boolean)">
            <summary>
This function checks for valid combinations of options.</summary>
            <param name="pathCurve"> Input path curve</param>
            <param name="displayErrorMessages"> Input Boolean whether or not to display error messages</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.DraftStart">
            <summary>Accesses the start draft angle in radians. This is the surface take-off direction at the first cross section. The default value of this option is 0, which indicates that no draft angle is defined and the system will compute the optimum angle at the first cross section.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.DraftEnd">
            <summary>Accesses the end draft angle in radians. This is the surface take-off direction at the last cross section. The default value of this option is 0, which indicates that no draft angle is defined and the system will compute the optimum angle at the last cross section.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.DraftStartMag">
            <summary>Accesses the start draft magnitude. Controls the magnitude of the surface tangent vector at the first cross-section. The default value of this option is 0, which means that the system will compute the optimum magnitude.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.DraftEndMag">
            <summary>Accesses the end draft magnitude. Controls the magnitude of the surface tangent vector at the last cross-section. The default value of this option is 0, which means that the system will compute the optimum magnitude.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.ArcLengthParam">
            <summary>Accesses the arc length  parametrization.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.NoTwist">
            <summary>Accesses the value of the noTwist option. This option can be used to minimize the amount of twist in the resulting surface or solid when the cross-sections are all closed. The default value of this option is true. If this option is set then the start point of each closed cross-section is aligned with the other cross-sections to minimize twist.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.AlignDirection">
            <summary>Accesses the value of the AlignDirection option. This option can be used to orient each of the cross sections so that the normal vector of each cross section points towards the next cross section. The default value of this option is true. If the cross sections are not all oriented in the same direction, then this option should be used to avoid creating a twisted or self-intersecting surface or solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.Simplify">
            <summary>Accesses the value of the simplify option. If this option is set, then simple surface types (plane, cylinder, cone, sphere, or torus) will be created whenever all of the cross sections lie on such a surface. Otherwise a general surface type will be created. The default value of this option is true.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.Closed">
            <summary>.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.Ruled">
            <summary>Accesses the value of the ruled option. If this option is set then a ruled surface will be created between each pair of cross sections rather than a single smooth surface. This will result in a much coarser object. The default value of this option is false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.VirtualGuide">
            <summary>Accesses the state of the virtual guide option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptions.NormalOption">
            <summary>Accesses the plane normal option. See LoftOptionsNormalOption for a description of possible values. The default value of this option is NoNormal.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PathRef">
            <summary>
This wraps the ObjectARX AcDbPathRef class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PathRef.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This wraps the ObjectARX AcDbPathRef::AcDbPathRef () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PathRef.#ctor(Autodesk.AutoCAD.DatabaseServices.EdgeRef[])">
            <summary>This wraps the ObjectARX AcDbPathRef::AcDbPathRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PathRef.#ctor">
            <summary>This wraps the ObjectARX AcDbPathRef::AcDbPathRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PathRef.GetEntityArray(System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbPathRef::getEntityArray() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PathRef.IsEqualTo(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This wraps the ObjectARX AcDbPathRef::isEqualTo() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PathRef.IsReferencePath">
            <summary>This wraps the ObjectARX AcDbPathRef::isReferencePath() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PathRef.EdgeRefs">
            <summary>This wraps the ObjectARX AcDbPathRef::edgeRefs() and AcDbPathRef::setEdgeRefs() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlendOptions">
            <summary>
The wraps the ObjectARX AcDbBlendOptions class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlendOptions.#ctor">
            <summary>This wraps the ObjectARX AcDbBlendOptions::AcDbBlendOptions() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptions.Simplify">
            <summary>This wraps the ObjectARX AcDbBlendOptions::simplify() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptions.Solid">
            <summary>This wraps the ObjectARX AcDbBlendOptions::solid() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptions.Quality">
            <summary>This wraps the ObjectARX AcDbBlendOptions::quality() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptions.CoplanarPoint">
            <summary>This wraps the ObjectARX AcDbBlendOptions::coplanarPoint() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptions.CoplanarDirection">
            <summary>This wraps the ObjectARX AcDbBlendOptions::coplanarDirection () method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptions.DriveMode">
            <summary>This wraps the ObjectARX AcDbBlendOptions::driveMode () method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FilletTrimMode">
            <summary>
This wraps the ObjectARX AcDb::FilletTrimMode enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties">
            <summary>
This class encapsulates the data returned by the 3dSolid.getMassProp()ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.#ctor(System.Int32)">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.Volume">
            <summary>Returns the volume of the solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.Centroid">
            <summary>Returns the centroid of the solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.MomentsOfIntertia">
            <summary>Returns the X,  Y, and Z moments of inertia of the solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.ProductsOfIntertia">
            <summary>Returns the X,  Y, and Z products of inertia of the solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.PrincipalMoments">
            <summary>Returns the  X, Y, and Z principal moments of the solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.RadiiOfGyration">
            <summary>Returns the  X, Y, and Z radii of gyration of the solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties.Extents">
            <summary>Returns  the extents (bounding box) of the solid.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Region">
            <summary>
This .NET class wraps the AcDbRegion ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Region.#ctor">
            <summary>Default constructor. Initializes the change count to 0 and IsNull to true.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Region.CreateFromCurves(Autodesk.AutoCAD.DatabaseServices.DBObjectCollection)">
            <summary>This static member function creates a set of Region objects from the closed loops represented by the curves contained in the curveSegments collection. The newly created region objects are returned in the regions array.</summary>
            <param name="curveSegments"> Input collection to curve entities used to define the region's perimeter(s)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Region.AreaProperties(Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Vector3d&,Autodesk.AutoCAD.Geometry.Vector3d&)">
            <summary>This function calculates the area properties of the Region. All of the values in the returned RegionAreaProperties struct are in the coordinate system specified by origin, xAxis, and yAxis (which must be in WCS coordinates). The function validates the origin, xAxis, and yAxis parameters to ensure that the axes are of unit length and are perpendicular to each other, and that the axes and origin lie in the same plane as the Region.</summary>
            <param name="origin"> Input point (in WCS coords) for origin of the coordinate system to usefor evaluation.</param>
            <param name="xAxis"> Input X axis (in WCS coords) of the coordinate system to use forevaluation.</param>
            <param name="yAxis"> Input Y axis (in WCS coords) of the coordinate system to use forevaluation.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Region.BooleanOperation(Autodesk.AutoCAD.DatabaseServices.BooleanOperationType,Autodesk.AutoCAD.DatabaseServices.Region)">
            <summary>Performs Boolean operation between this region and otherRegion.</summary>
            <param name="operation"> Input type of Boolean operation.</param>
            <param name="otherRegion"> Input pointer to another region to perform the Boolean operation</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Region.Perimeter">
            <summary>Accesses the perimeter length (in drawing units) of the region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Region.Area">
            <summary>Accesses the surface area of the region. The area is in square drawing units.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Region.IsNull">
            <summary>Assesses if the region has no ShapeManager object within itself.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Region.Normal">
            <summary>Accesses the normal vector of the region. Normal is in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Region.NumChanges">
            <summary>Accesses the number of changes that have occurred to this region since it was first created.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Region.UsesGraphicsCache">
            <summary>This property is a wrapper for the AcDbRegion::usesGraphicsCache() method which is used by AutoCAD to determine whether or not to use cached graphics for the region. If the method returns true, then cached graphics will be used. Only database resident entities can use graphics caching, so this method is not called for entities not in an AcDbDatabase.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BooleanOperationType">
            <summary>
This .NET class wraps the AcDb::BoolOperType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AlignedDimension">
            <summary>
This .NET class wraps the AcDbAlignedDimension ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AlignedDimension.#ctor">
            <summary>Default constructor. Initializes the dimension line definition point and extension line 1 and 2 start points all to (0,0,0), and the obliquing angle to 0.0. In addition, all the initializations of the default constructor for Dimension, Entity, and others, are performed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AlignedDimension.XLine1Point">
            <summary>Accesses the definition point (in WCS coordinates) that is used as the start point for the first extension line of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AlignedDimension.XLine2Point">
            <summary>Accesses the definition point (in WCS coordinates) that is used as the start point for the second extension line of the dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AlignedDimension.DimLinePoint">
            <summary>Accesses the definition point (in WCS coordinates) that specifies where the dimension line will be. This point will be somewhere on the dimension line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AlignedDimension.Oblique">
            <summary>Accesses the extension line obliquing angle (in radians) for the dimension.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Arc">
            <summary>
This .NET class wraps the AcDbArc ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Arc.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double)">
            <summary>This constructor creates an arc using the values passed in. center must be in WCS coordinates. The arc is initialized with a thickness of 0.0.</summary>
            <param name="center"> Input the center point of the arc.</param>
            <param name="normal"> Input the normal vector of the plane containing the arc.</param>
            <param name="radius"> Input the radius of the arc.</param>
            <param name="startAngle"> Input the starting angle of the arc.</param>
            <param name="endAngle"> Input the ending angle of the arc.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Arc.#ctor(Autodesk.AutoCAD.Geometry.Point3d,System.Double,System.Double,System.Double)">
            <summary>This constructor creates an arc using the values passed in. center must be in WCS coordinates. The arc is initialized with a normal of (0,0,1) and a thickness of 0.0.</summary>
            <param name="center"> Input the center point of the arc.</param>
            <param name="radius"> Input the radius of the arc.</param>
            <param name="startAngle"> Input the starting angle of the arc.</param>
            <param name="endAngle"> Input the ending angle of the arc.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Arc.#ctor">
            <summary>Default constructor. Initializes the normal to (0,0,1), the center point to (0,0,0), the radius, start, and end angles to 0.0. The radius needs to be changed to a non-zero value before closing the arc for the first time. The center point and normal must be in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.Center">
            <summary>Accesses the center to be the center point for the arc; it must be in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.Radius">
            <summary>Accesses the radius of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.StartAngle">
            <summary>Accesses the the start angle of the arc, which must be in radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.EndAngle">
            <summary>Accesses the end angle of the arc, which must be in radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.Thickness">
            <summary>Accesses the arc’s thickness.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.Normal">
            <summary>Accesses the normal vector of the plane containing the arc. normal must be in WCS coordinates and must be non-zero length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.Length">
            <summary>Accesses the length of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Arc.TotalAngle">
            <summary>Accesses the angle sweep of the arc segment.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition">
            <summary>
This .NET class wraps the AcDbAttributeDefinition ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.#ctor">
            <summary>Default constructor. Initializes the field length to 0, the flags to 0 (that is, non-constant, visible, not preset, and not verifiable), and the tag to 0. In addition, all the initializations for a default new DBText object take place.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.UpdateMTextAttributeDefinition">
            <summary>Updates the internal MText entity from the basic AttributeDefinition properties.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.Prompt">
            <summary>Accesses the prompt string for the AttributeDefinition. When the BockTableRecord containing the AttributeDefinition is inserted and an AttributeReference object is created using the AttributeDefinition as the template, the prompt string is displayed to ask the user to input a text string for the AttributeReference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.Tag">
            <summary>Accesses the tag string, which is the identifier you see on screen to represent the AttributeDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.Invisible">
            <summary>Accesses the visibility flag of the AttributeDefinition. If invisible is true, then the AttributeDefinition object is set to be invisible.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.Constant">
            <summary>Accesses the constant flag of the AttributeDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.Verifiable">
            <summary>Accesses the verifiable flag of the AttributeDefinition. If true, then the AttributeDefinition object is set to be verifiable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.Preset">
            <summary>Accesses the preset flag of the AttributeDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.FieldLength">
            <summary>Accesses the attribute’s field length value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.LockPositionInBlock">
            <summary>Accesses the lock position property of the AttributeDefinition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.IsMTextAttributeDefinition">
            <summary>Tells whether the attribute definition is a multi-line attribute definition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AttributeDefinition.MTextAttributeDefinition">
            <summary>Accesses the internal MText entity, to replace or modify it.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockBegin">
            <summary>
This .NET class wraps the AcDbBlockBegin ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockBegin.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockEnd">
            <summary>
This .NET class wraps the AcDbBlockEnd ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockEnd.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MInsertBlock">
            <summary>
This .NET class wraps the AcDbMInsertBlock ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MInsertBlock.#ctor">
            <summary>Default constructor. Initializes the number of rows and columns to 0 and the row and column spacing to 0.0. In addition, the default constructor initialization for the BlockReference parent class takes place.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MInsertBlock.Columns">
            <summary>Accesses the number of columns of the BlockTableRecord image that will be displayed by the MInsertBlock object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MInsertBlock.Rows">
            <summary>Accesses the number of rows of the BlockTableRecord image that will be displayed by the MInsertBlock object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MInsertBlock.ColumnSpacing">
            <summary>Accesses the spacing between the columns of the BlockTableRecord image that will be displayed by the MInsert object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MInsertBlock.RowSpacing">
            <summary>Accesses the spacing between the rows of the BlockTableRecord image that will be displayed by the MInsert object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Body">
            <summary>
This .NET class wraps the AcDbBody ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Body.#ctor">
            <summary>Default constructor. Initializes the change count to 0 and IsNull to true.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Body.AcisOut(System.String,Autodesk.AutoCAD.DatabaseServices.DBObjectCollection)">
            <summary>This method writes out all the entities in to the fileName file. The collection may contain any kind of entity, but only objects of the classes Region, Solid3d, Body, or classes derived from these, are written out to the file. The file generated is an ASCII ACIS SAT format file.</summary>
            <param name="fileName"> Input the file name to write data to.</param>
            <param name="entitiesOutToFile"> Input a collection containing all the Entity objects that are to be written out to the file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Body.AcisIn(System.String)">
            <summary>This method reads in all the ACIS entities from the fileName ASCII ACIS SAT file. It then creates Line, Circle, Arc, Ellipse, Spline, Region, Solid3d, or Body objects for each one as appropriate, and adds them to the returned collection.</summary>
            <param name="fileName"> Input the file name of ASCII ACIS SAT file to be read in.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Body.IsNull">
            <summary>Returns true if this Body has no ShapeManager object within it.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Body.UsesGraphicsCache">
            <summary>This property is a wrapper for the AcDbBody::usesGraphicsCache() method which is used by AutoCAD to determine whether or not to use cached graphics for the region. If the method returns true, then cached graphics will be used. Only database resident entities can use graphics caching, so this method is not called for entities not in an AcDbDatabase.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Body.NumChanges">
            <summary>Returns the number of changes that have occurred to this Body since it was first created.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DiametricDimension">
            <summary>
This .NET class wraps the AcDbDiametricDimension ObjectARX class. It represents the diameter dimension type in AutoCAD.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DiametricDimension.#ctor">
            <summary>Default constructor. Initializes the chord points to (0,0,0), and the leader length to 0.0. In addition, all the initializations of the default constructor for Dimension, Entity, and others are performed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DiametricDimension.LeaderLength">
            <summary>Accesses the table name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DiametricDimension.ChordPoint">
            <summary>Accesses the point (in WCS coordinates) where the dimension line intersects the curve being dimensioned and extends outside the curve, if the text is outside the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DiametricDimension.FarChordPoint">
            <summary>Accesses the far chord point (in WCS coordinates) of the curve being dimensioned. This is the point on the curve that is diametrically opposite the point where the dimension line extends outside the curve, if the text is outside the curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Ellipse">
            <summary>
This .NET class wraps the AcDbEllipse ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Ellipse.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double)">
            <summary>This constructor is used to create an Ellipse using the values passed in. The center, unitNormal and majorAxis are used to calculate the start point. The majorAxis vector represents half the major axis of the ellipse (that is, from the center point to the start point of the ellipse) and is the zero angle for startAngle and endAngle. Positive angles are counter-clockwise when looking down the normal vector (that is, right-hand rule). A startAngle of 0 and endAngle of 2pi will produce a closed Ellipse.</summary>
            <param name="center"> Input center of the ellipse</param>
            <param name="unitNormal"> Input vector specifying normal, which determines the plane of the ellipse</param>
            <param name="majorAxis"> Input vector which represents 1/2 the major axis of the ellipse</param>
            <param name="radiusRatio"> Input ratio of the major radius to the minor radius</param>
            <param name="startAngle"> Input start angle of the ellipse in radians</param>
            <param name="endAngle"> Input end angle of the ellipse in radians</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Ellipse.#ctor">
            <summary>Default constructor. Initializes to circle of radius 1 in XY plane with center (0,0,0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Ellipse.GetParameterAtAngle(System.Double)">
            <summary>Returns the first period parameter value at angle (in radians). The parameter value is in the range 0 to 2pi.</summary>
            <param name="angle"> Input angle (in radians) at which the parameter is desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Ellipse.GetAngleAtParameter(System.Double)">
            <summary>This function returns the first period equivalent of the angle at the value location on the ellipse. The returned angle will be in the range -pi to pi.</summary>
            <param name="value"> Input parameter to evaluate</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Ellipse.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double)">
            <summary>This function sets the properties of the ellipse to the values specified in the arguments.</summary>
            <param name="center"> Input center point (in WCS coordinates) for the ellipse</param>
            <param name="unitNormal"> Input normal vector (in WCS coordinates) which defines the plane in which the ellipse lies</param>
            <param name="majorAxis"> Input major axis (in WCS coordinates) for the ellipse</param>
            <param name="radiusRatio"> Input desired ratio of the major radius to the minor radius</param>
            <param name="startAngle"> Input start angle (in radians) for the ellipse</param>
            <param name="endAngle"> Input end angle (in radians) for the ellipse</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.Center">
            <summary>Accesses the center point of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.Normal">
            <summary>Accesses the vector normal to this ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.MajorAxis">
            <summary>Accesses the major axis of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.MinorAxis">
            <summary>Accesses the major radius of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.RadiusRatio">
            <summary>Accesses the ratio of the ellipse's major radius to its minor radius. The value will be in the range 1e-6 to 1.0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.StartAngle">
            <summary>Accesses the first period equivalent of the start angle (in radians) of the ellipse. The angle will be in the range -pi to pi.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.EndAngle">
            <summary>Accesses the end angle of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.StartParam">
            <summary>Accesses the new start parameter.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.EndParam">
            <summary>Accesses the end parameter of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.IsNull">
            <summary>Assesses if this Ellipse has no gelib object within itself.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.MajorRadius">
            <summary>Accesses the major radius of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ellipse.MinorRadius">
            <summary>Accesses the minor radius of the ellipse.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Face">
            <summary>
This .NET class wraps the AcDbFace ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Face.#ctor">
            <summary>Default constructor. Initializes the visibility flag to 0 (that is, all edges are visible). In addition, standard Entity initialization occurs. The corner points are not explicitly initialized, so any initialization that may occur for them is compiler dependent.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Face.GetVertexAt(System.Int16)">
            <summary>This function uses the value argument to return the WCS value of the vertex.</summary>
            <param name="value"> Input vertex index number (must be 1 through 4)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Face.SetVertexAt(System.Int16,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This function sets the vertex specified by vertexIndex to use the position value vertexPosition, which must be in WCS coordinates.</summary>
            <param name="vertexIndex"> Input vertex index number (must be 1 through 4)</param>
            <param name="vertexPosition"> Input vertex position (in WCS coordinates)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Face.IsEdgeVisibleAt(System.Int16)">
            <summary>Returns true if the edge of the vertex specified is visible.</summary>
            <param name="vertexIndex"> Input vertex index number (must be 1 through 4)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Face.MakeEdgeVisibleAt(System.Int16)">
            <summary>This function sets the edge that starts at the vertex specified by vertexIndex to be visible.</summary>
            <param name="vertexIndex"> Input vertex index number of starting vertex for edge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Face.MakeEdgeInvisibleAt(System.Int16)">
            <summary>This function sets the edge that starts at the vertex specified by vertexIndex to be invisible.</summary>
            <param name="vertexIndex"> Input vertex index number of starting vertex for edge</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FaceRecord">
            <summary>
This .NET class wraps the AcDbFaceRecord ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRecord.#ctor(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>This constructor initializes the FaceRecord to use the mesh vertices specified by the indices vertex0 through vertex3 as the four corner points of the face. The vertex indices start with 1. Negative index numbers can be used to indicate that the edge that starts at that vertex is to be invisible.</summary>
            <param name="vertex0"> Input index number of first vertex for the face</param>
            <param name="vertex1"> Input index number of second vertex for the face</param>
            <param name="vertex2"> Input index number of third vertex for the face</param>
            <param name="vertex3"> Input index number of fourth vertex for the face</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRecord.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRecord.GetVertexAt(System.Int16)">
            <summary>This function returns the index number PolyFaceMesh vertex used as the faceIndex corner of the face. Face corner indices start with 0, so faceIndex must be 0, 1, 2, or 3. PolyFaceMesh vertex indices start with 1, and will be negative if the edge is invisible or positive if the edge is visible.</summary>
            <param name="faceIndex"> Input face corner index number (must be 0 through 3)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRecord.SetVertexAt(System.Int16,System.Int16)">
            <summary>This function sets the FaceRecord so that the PolyFaceMesh vertex list index number vertexIndex is used as the vertex index for the faceIndex corner of the face. Face corner indices start with 0, so faceIndex must be 0, 1, 2, or 3. PolyFaceMesh vertex indices start with 1, so vertexIndex must be greater than or equal to 1.</summary>
            <param name="faceIndex"> Input face corner index number (must be 0 - 3)</param>
            <param name="vertexIndex"> Input index of vertex in PolyFaceMesh's vertex list that is to be used for this face corner</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRecord.IsEdgeVisibleAt(System.Int16)">
            <summary>This function uses the visible argument to return the visibility value for the edge that starts with the face corner specified by faceIndex. A visibility value of truer indicates that the edge is visible. Face corner indices start with 0, so faceIndex must be 0, 1, 2, or 3.</summary>
            <param name="faceIndex"> Input face corner index number (must be 0 through 3)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRecord.MakeEdgeVisibleAt(System.Int16)">
            <summary>This function sets the edge that starts at the corner specified by faceIndex to be visible. Face corner indices start with 0, so faceIndex must be 0, 1, 2, or 3.</summary>
            <param name="faceIndex"> Input index number of starting corner for edge (must be 0 - 3)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRecord.MakeEdgeInvisibleAt(System.Int16)">
            <summary>This function sets the edge that starts at the corner specified by faceIndex to be invisible. Face corner indices start with 0, so faceIndex must be 0, 1, 2, or 3.</summary>
            <param name="faceIndex"> Input index number of starting corner for edge (must be 0 - 3)</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame">
            <summary>
This .NET class wraps the AcDbFcf ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.#ctor(System.String,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructor which sets values for various properties.</summary>
            <param name="codes"> Input text string containing the codes to specify the feature control symbols and the tolerance for this object. If this value is Null, this is just like calling the default constructor.</param>
            <param name="insertionPoint"> Input Insertion point (WCS) of this Fcf object</param>
            <param name="normalVector"> Input Normal vector (WCS) of the plane containing this Fcf object
: Input X-direction vector (WCS) of this Fcf</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.SetOrientation(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets norm to be the Fcf plane normal and dir to be the X-direction for the Fcf. Both values are specified in WCS coordinates. dirmust be perpendicular to norm.</summary>
            <param name="norm"> Input vector (in WCS) to be used to define the new plane that will contain the Fcf</param>
            <param name="dir"> Input X-Direction vector (WCS) for the Fcf</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.GetBoundingPoints">
            <summary>This function returns all the consecutive distinct corner points of the Fcf object. Used in order, these points could be used to define a pline that overlays the border of the complete Fcf object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.GetBoundingPolyline">
            <summary>This function returns a Point3dCollection as follows:.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.SetDimstyleData(Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord)">
            <summary>Sets a new dimension variable as determiend by style.</summary>
            <param name="style"> Input objectId of the desired DimensionStyle to be used by the Fcf</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.GetDimstyleData">
            <summary>This function copies and returns the DimStyle information from the DimensionStyleTableRecord referenced by this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Text">
            <summary>Accesses the text to be the text string used by the Fcf.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Location">
            <summary>Accesses the insertion point (in WCS) of the Fcf object. The "insertion" point for an Fcf is the middle of the left edge of its first line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Normal">
            <summary>Accesses the unit normal vector (in WCS) of the plane containing the Fcf object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Direction">
            <summary>Accesses the X-direction vector (in WCS) for the object. The X-direction vector determines the direction that the object goes away from its "location" point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.DimensionStyle">
            <summary>Accesses the objectId of the object's DimensionStyle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Dimclrd">
            <summary>Accesses the current DIMCLRD value for the feature control frame. If the value is overridden for this dimension, then that value is returned. See the System Variables section of the AutoCAD Command Reference manual for information on DIMCLRD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Dimclrt">
            <summary>Accesses the current DIMCLRT value for the feature control frame. If the value is overridden for this dimension, then that value is returned. See the System Variables section of the AutoCAD Command Reference manual for information on DIMCLRT.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Dimgap">
            <summary>Accesses the current DIMGAP value for the feature control frame. If the value is overridden for this feature control frame, then that value is returned. See the System Variables section of the AutoCAD Command Reference for information on DIMGAP.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Dimscale">
            <summary>Accesses the current DIMSCALE value for the feature control frame. If the value is overridden for this dimension, then that value is returned. See the System Variables section of the AutoCAD Command Reference manual for information on DIMSCALE.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Dimtxsty">
            <summary>Accesses the objectId of the textStyle specified by the current DIMTXSTY value of the feature control frame. If the value is overridden for this dimension, then that value is returned. See the System Variables section of the AutoCAD Command Reference manual for information on DIMTXSTY.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.Dimtxt">
            <summary>Accesses the current DIMTXT value for the feature control frame. If the value is overridden for this dimension, then that value is returned. See the System Variables section of the AutoCAD Command Reference manual for information on DIMTXT.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.DimensionStyleName">
            <summary>Accesses the associated dimension style name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.TextStyleId">
            <summary>Accesses the text style ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame.TextStyleName">
            <summary>Accesses the text style name.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Rectangle3d">
            <summary>
This .NET class loosely wraps the CRectangle3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Rectangle3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a new rectangle.</summary>
            <param name="upperLeft"> Input upper left point</param>
            <param name="upperRight"> Input upper right point</param>
            <param name="lowerLeft"> Input lower left point</param>
            <param name="lowerRight"> Input lower right point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Rectangle3d.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Rectangle3d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Input culture-specific format.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Rectangle3d.UpperLeft">
            <summary>Accesses the upper left point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Rectangle3d.UpperRight">
            <summary>Accesses the upper right point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Rectangle3d.LowerLeft">
            <summary>Accesses the lower left point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Rectangle3d.LowerRight">
            <summary>Accesses the lower right point.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Ole2Frame">
            <summary>
This .NET class wraps the AcDbOle2Frame ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.#ctor">
            <summary>Default constructor. Objects constructed with this constructor must call OleObject to establish a valid OLE object to be used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.Location">
            <summary>Accesses the WCS point that corresponds to the lower-left corner of the OLE display rectangle of the Ole2Frame object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.Position3d">
            <summary>Accesses the world coordinate system coordinates of the four corners of OLE object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.Position2d">
            <summary>Accesses the coordinates of the four corners of OLE object in the GDI coordinates of the current viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.UserType">
            <summary>Accesses the user type string (for example "Paintbrush Bitmap") of the MFC object used by this Ole2Frame object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.Type">
            <summary>Accesses the OLE object's type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.IsLinked">
            <summary>Assesses if the frame is linked.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.LinkName">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.LinkPath">
            <summary>Accesses the path and file name to which the object is linked.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.OutputQuality">
            <summary>Accesses the current output quality assigned to this Ole2Frame object. Output quality affects the color depth and resolution at which the OLE object is plotted.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.AutoOutputQuality">
            <summary>Accesses the whether the plot quality setting is Automatically Select in the Properties palette.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.Rotation">
            <summary>Accesses the rotation value, which users may change to any angle using the Properties window or the ROTATE command. The angle is returned in degrees.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.WcsWidth">
            <summary>Accesses the actual width of the OLE object expressed in AutoCAD world coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.WcsHeight">
            <summary>Accesses the actual height of the OLE object expressed in AutoCAD world coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.ScaleWidth">
            <summary>Accesses the scale width, which represents the current object scale relative to the original scale from the default text size to the AutoCAD units scale. This is expressed as a percentage of the original scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.ScaleHeight">
            <summary>Accesses the scale height, which represents the current object scale relative to the original scale from the default text size to the AutoCAD units scale. This is expressed as a percentage of the original scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.LockAspect">
            <summary>Accesses the lock aspect ratio property, which affects the behavior of the OLE object when its size is changed. If the lock aspect ratio property is true, and a new value is entered for the object's width, height, scale width, or scale height, both the width and the height change uniformly.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Ole2Frame.OleObject">
            <summary>Accesses the MFC object currently used by the Ole2Frame object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BulgeVertex">
            <summary>
This class contains a bulge value and the 2D coordinates of the associated vertex.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertex.#ctor(Autodesk.AutoCAD.Geometry.Point2d,System.Double)">
            <summary>Default constructor.</summary>
            <param name="point"> Input the 2D coordinates of the new vertex.</param>
            <param name="bulge"> Input the new bulge value.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BulgeVertex.Vertex">
            <summary>Accesses the vertex property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BulgeVertex.Bulge">
            <summary>Accesses the bulge property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection">
            <summary>
This collection provides a container for Autodesk.AutoCAD.DatabaseServices.BulgeVertex objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection.Add(Autodesk.AutoCAD.DatabaseServices.BulgeVertex)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Input the object to add.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection.IndexOf(Autodesk.AutoCAD.DatabaseServices.BulgeVertex)">
            <summary>Returns the index of the collection item that possesses value.</summary>
            <param name="value"> Input the object to check.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection.Insert(System.Int32,Autodesk.AutoCAD.DatabaseServices.BulgeVertex)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Input the index to insert at.</param>
            <param name="value"> Input the object to insert.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection.Remove(Autodesk.AutoCAD.DatabaseServices.BulgeVertex)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Input the object to remove.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection.Contains(Autodesk.AutoCAD.DatabaseServices.BulgeVertex)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Input the object to check for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.BulgeVertex[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Input the object to copy from.</param>
            <param name="index"> Input the index to begin copying.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PatternDefinition">
            <summary>
This class encapsulates the data returned by the Hatch.getPatternDefinitionAt() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PatternDefinition.#ctor(System.Double,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>Constructs a new object.</summary>
            <param name="patternAngle"> Input pattern angle</param>
            <param name="basePoint"> Input base coordinates</param>
            <param name="offsetVector"> Input offset coordinates</param>
            <param name="dashOffsets"> Input dash offsets</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PatternDefinition.GetDashes">
            <summary>Returns a collection of values that specify the dashes in the pattern definition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PatternDefinition.Angle">
            <summary>Accesses the pattern angle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PatternDefinition.BaseX">
            <summary>Accesses the baseX coordinate.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PatternDefinition.BaseY">
            <summary>Accesses the baseY coordinate.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PatternDefinition.OffsetX">
            <summary>Accesses the offsetX coordinate.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PatternDefinition.OffsetY">
            <summary>Accesses the offsetY coordinate.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HatchLoop">
            <summary>
This class encapsulates data for defining a hatch boundary loop. See the Hatch.appendLoop(Adesk.Int32 loopType, const Point2dArray vertices, const AcGeDoubleArray bulges) ObjectARX function documentation for information on this data and its use</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HatchLoop.#ctor(Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes)">
            <summary>Constructs a new HatchLoop object with a boundary loop (polyline) appended to the hatch entity.</summary>
            <param name="loopType"> Input type of loop</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HatchLoop.IsPolyline">
            <summary>Assesses true if the hatch loop is a polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HatchLoop.LoopType">
            <summary>Accesses the type of loop.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HatchLoop.Polyline">
            <summary>Accesses the polylines in the hatch loop.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HatchLoop.Curves">
            <summary>Accesses the curves in the hatch loop.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Curve2dCollection">
            <summary>
This class represents a collection of Curve2d objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.GetEnumerator">
            <summary>Returns an enumerator for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.RemoveAt(System.Int32)">
            <summary>This function removes the item at the given index if one exists.</summary>
            <param name="index"> Input index of object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.CopyTo(Autodesk.AutoCAD.Geometry.Curve2d[],System.Int32)">
            <summary>Copies the elements of this collection into the provided array starting at the given index.</summary>
            <param name="array"> Input array to copy to</param>
            <param name="index"> Input index to begin copying at</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.Insert(System.Int32,Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>Inserts value in to the collection, at the index specified by index.</summary>
            <param name="index"> Input index to insert at</param>
            <param name="value"> Input value to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.Remove(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>This function removes value from the collection if it exists.</summary>
            <param name="value"> Input object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.Contains(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>Returns a Boolean indicating whether value is contained in this collection.</summary>
            <param name="value"> Input object to check for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.IndexOf(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>Finds the index of an item in the collection.</summary>
            <param name="value"> Input object to get the index of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2dCollection.Add(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>Adds a curve to this collection.</summary>
            <param name="value"> Input curve to add</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2dCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2dCollection.IsFixedSize">
            <summary>Returns true if Curve2dCollection has fixed size; otherwise false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2dCollection.IsReadOnly">
            <summary>Returns true if Curve2dCollection is read-only; otherwise false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes">
            <summary>
This .NET class wraps the AcDbHatch::HatchLoopType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GradientColor">
            <summary>
This class is a container for the gradient colors used by the Hatch object</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GradientColor.#ctor(Autodesk.AutoCAD.Colors.Color,System.Single)">
            <summary>Constructor.</summary>
            <param name="color"> Input color making up the parameters</param>
            <param name="value"> Input float representing the interpolation values defining the gradient</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Hatch">
            <summary>
This .NET class wraps the Hatch ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.#ctor">
            <summary>This is the default constructor for the hatch entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.LoopTypeAt(System.Int32)">
            <summary>This function returns the loop type of a selected hatch boundary loop from the hatch entity.</summary>
            <param name="loopIndex"> Input index of the selected loop</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.GetLoopAt(System.Int32)">
            <summary>This function gets the loop definition data (polyline) of a selected hatch boundary loop from the hatch entity. loopIndex specifies the index of the selected loop.</summary>
            <param name="loopIndex"> Input index of selected loop</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.AppendLoop(Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes,Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection)">
            <summary>It is a wrapper for method AcDbHatch::appendLoop(Adesk::Int32, AcGePoint2dArray&amp;, AcGeDoubleArray&amp;).</summary>
            <param name="loopType"> Input type of loop.</param>
            <param name="vertexCollection"> Input set of point 2d.</param>
            <param name="bulgeCollection"> Input set of double values.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.AppendLoop(Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes,Autodesk.AutoCAD.Geometry.Curve2dCollection,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>It is a wrapper for method AcDbHatch::appendLoop(Adesk::Int32, AcGeVoidPointerArray&amp;, AcGeIntArray&amp;).</summary>
            <param name="loopType"> Input loop type.</param>
            <param name="edgePtrCollection"> Input set of curve 2d.</param>
            <param name="edgeTypeCollection"> Input set of enumerated edge types.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.AppendLoop(Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This function appends a new boundary loop (path or polyline) to the hatch entity. loopType specifies the type for the loop, which is an enum number of Default or External. dbObjIds is a set of object IDs of Entitys that make up the boundary loop. The object IDs will be maintained if the hatch entity is an associative.</summary>
            <param name="loopType"> Input loop type</param>
            <param name="dbObjIds"> Input set of object IDs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.AppendLoop(Autodesk.AutoCAD.DatabaseServices.HatchLoop)">
            <summary>This function appends a new boundary loop (polyline) to the hatch entity.</summary>
            <param name="hatchLoop"> Input type of loop</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.InsertLoopAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>This function inserts a new boundary loop (path or polyline) to the hatch entity. loopIndex specifies the index at which the loop will be inserted into the hatch boundary loop list. loopType specifies the type for the loop. dbObjIds is a set of object IDs of Entities that make up the boundary loop. The object IDs will be maintained if the hatch entity is associative.</summary>
            <param name="loopIndex"> Input index for the selected loop</param>
            <param name="loopType"> Input loop type</param>
            <param name="dbObjIds"> Input set of object IDs</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.InsertLoopAt(System.Int32,Autodesk.AutoCAD.DatabaseServices.HatchLoop)">
            <summary>This function inserts a new boundary loop (path or polyline) to the hatch entity. loopIndex specifies the index at which the loop will be inserted into the hatch boundary loop list. hatchLoop specifies the type for the loop.</summary>
            <param name="loopIndex"> Input index for the selected loop</param>
            <param name="hatchLoop"> Input loop type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.RemoveLoopAt(System.Int32)">
            <summary>This function removes a loop and its data from the hatch entity.</summary>
            <param name="loopIndex"> Input index for the selected loop</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.GetAssociatedObjectIdsAt(System.Int32)">
            <summary>This function gets the object IDs of the source boundary geometries associative to the selected loop.</summary>
            <param name="loopIndex"> Input index for the selected loop</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.GetAssociatedObjectIds">
            <summary>This function gets all the object IDs of the source boundary geometries associative to the hatch entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.RemoveAssociatedObjectIds">
            <summary>This function removes all the object IDs of the source boundary geometries associative to the hatch entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.GetGradientColors">
            <summary>This method returns the colors and interpolation values describing how the gradient fill definition will be applied.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.SetGradientColors(Autodesk.AutoCAD.DatabaseServices.GradientColor[])">
            <summary>This method provides the mechanism for defining the colors to be applied to the gradient definition. In the simplest case, the color definition consists of the starting and ending color. The start color maps to colors[0] and the stop color maps to colors[count-1]. The current implementation supports only a count value of 2. The Hatch object makes a copy of the arrays provided as arguments.</summary>
            <param name="value"> Input array of floats representing the interpolation values defining the gradient</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.EvaluateGradientColorAt(System.Single)">
            <summary>This method provides a way to evaluate the interpolated color that the current gradient definition and colors will produce at a specified location along the gradient. Returns the color of the current gradient evaluated at the location value. The point of evaluation is indicated by the argument value.</summary>
            <param name="value"> Input normalized value, [0.0...1.0], at which to evaluate the gradient color</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.GetPatternDefinitionAt(System.Int32)">
            <summary>This function gets the pattern definition line data from the hatch entity at the selected pattern line.</summary>
            <param name="index"> Input pattern index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.EvaluateHatch(System.Boolean)">
            <summary>
This function evaluates the hatch lines or solid fill for the hatch entity using the specified hatch pattern. For regular hatch patterns, except for solid, this function performs intersection calculations between pattern definition lines and hatch boundary curves to form hatch lines. For a solid fill hatch pattern, this function performs triangulation of the hatch area and fills in the triangular meshes with the given color..</summary>
            <param name="underEstimateNumLines"> If true, underestimates the count before deciding to abort. That is, if Hatch::EvaluateHatch(true) is used, the function will abort if the count is in excess of 100,000.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.GetHatchLinesData">
            <summary>void Hatch.GetHatchLineDataAt(int index, Point2d* startPoint, Point2d* endPoint) { *startPoint = new Point2d(); *endPoint = new Point2d(); Interop.Check(GetImpObj()->getHatchLineDataAt(index,*(*startPoint)->GetImpObj(),*(*endPoint)->GetImpObj()));.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Hatch.GetHatchLineDataAt(System.Int32)">
            <summary>This function gets the hatch line data from the hatch entity.</summary>
            <param name="index"> Input number at which the hatch line data will be returned</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.Elevation">
            <summary>Accesses the elevation for the hatch entity. Elevation defines the distance from the WCS origin to the hatch plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.Normal">
            <summary>Accesses the normal vector of the hatch entity. The normal vector is expressed in WCS and normalized to unit length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.BackgroundColor">
            <summary>Gets and sets the background color information for the hatch entity within an instance of Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.NumberOfLoops">
            <summary>Accesses the total number of boundary loops contained in the hatch entity. Boundary loops define the area to be hatched.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.Associative">
            <summary>Accesses true or false depending on whether this hatch entity is associative with its source boundary geometries. The source boundary geometries must be AutoCAD database-resident entities such as Line, Arc, etc. Using an associative hatch provides automatic re-calculation of the hatch lines when you modify the source boundary geometries.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.HatchObjectType">
            <summary>Accesses the current state of the gradient object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.IsGradient">
            <summary>Assesses if the Hatch object is a gradient.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.IsHatch">
            <summary>Assesses if the Hatch object is a hatched pattern as opposed to a solid or gradient fill pattern.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.IsSolidFill">
            <summary>Assesses if the hatch object is configured for solid fill.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.GradientType">
            <summary>Accesses an enumerator specifying the type of the gradient pattern.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.GradientName">
            <summary>Accesses the name of the current gradient.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.GradientAngle">
            <summary>Accesses the angle, in radians, at which the current gradient definition is applied.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.GradientOneColorMode">
            <summary>Assesses whether the gradient hatch is transitioning from a start to a stop color (two-color) or from a color to an adjusted luminance version of the same color (one-color). In the latter case, the full luminance version is the "tint" and the zero luminance version is the "shade.".</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.ShadeTintValue">
            <summary>Accesses the one-color tint shade (luminance) value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.GradientShift">
            <summary>Accesses the current interpolation value between the gradient definition's default and shifted values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.PatternType">
            <summary>Accesses an enumerated pattern type of either UserDefined, PreDefined, or CustomDefined for the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.PatternName">
            <summary>Accesses the pattern name of the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.PatternAngle">
            <summary>Accesses the pattern angle (in radians) of the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.PatternSpace">
            <summary>Accesses the pattern space of the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.PatternScale">
            <summary>Accesses the pattern scale of the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.PatternDouble">
            <summary>Accesses the value of double pattern flag for the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.NumberOfPatternDefinitions">
            <summary>Accesses the total number of pattern definition lines contained in the pattern of the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.HatchStyle">
            <summary>Accesses the hatch style of the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.NumberOfHatchLines">
            <summary>Accesses the total number of hatch lines contained in the hatch entity. The hatch lines are calculated by the function EvaluateHatch().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.Area">
            <summary>Accesses the area of the hatch entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Hatch.Origin">
            <summary>Accesses the origin point for the hatch pattern of this hatch entity. The returned point is expressed in WCS coordinates.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HatchObjectType">
            <summary>
This .NET class wraps the AcDbHatch::HatchObjectType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GradientPatternType">
            <summary>
This .NET class wraps the AcDbHatch::GradientPatternType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HatchPatternType">
            <summary>
This .NET class wraps the AcDbHatch::HatchPatternType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HatchStyle">
            <summary>
This .NET class wraps the AcDbHatch::HatchStyle ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Line2dCollection">
            <summary>
This class provides a container for Autodesk.AutoCAD.Geometry.Line2d objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.Add(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Input value to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.Contains(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Input value to check for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.IndexOf(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Returns the 0-based index of the collection item that matches value.</summary>
            <param name="value"> Input value to retrieve index of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.Insert(System.Int32,Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Input index to insert at</param>
            <param name="value"> Input item to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.Remove(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Input value to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.CopyTo(Autodesk.AutoCAD.Geometry.Line2d[],System.Int32)">
            <summary>Copies objects in array to this collection starting from index.</summary>
            <param name="array"> Input array to copy to</param>
            <param name="index"> Input index to begin copying from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Input index of value to be removed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Line2dCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Line2dCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Image">
            <summary>
This .NET class wraps the AcDbImage ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RasterImage">
            <summary>
This .NET class wraps the AcDbRasterImage ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.#ctor">
            <summary>The constructor for this class is declared protected, so it cannot be accessed directly by most other applications.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.AssociateRasterDef(Autodesk.AutoCAD.DatabaseServices.RasterImageDef)">
            <summary>Associates the raster image def with this object.</summary>
            <param name="definition"> Input raster image def</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.EnableReactors(System.Boolean)">
            <summary>
Assesses if reactors ought to be enabled or not.</summary>
            <param name="enable"> Input boolean switch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.ImageSize(System.Boolean)">
            <summary>
the raw image size in pixels. (The image size is also available directly from the RasterImageDef object.).</summary>
            <param name="getCachedValue"> Input Boolean indicating whether the cached should be used</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.SetClipBoundaryToWholeImage">
            <summary>Sets the clip boundary to coincide with the image borders. Any existing clip boundary is deleted.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.SetClipBoundary(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Specifies a polygonal clip boundary. The clip boundary must be closed, the last point being identical to the first point. The value of type must match the shape of the points in the array.</summary>
            <param name="size"> Input vector of boundary</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.GetClipBoundary">
            <summary>Returns a collection of clip boundary vertices in image pixel coordinates. Invert the PixelToModelTransform matrix to convert these to model coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RasterImage.GetVertices">
            <summary>Returns the image frame vertices to it. These points represent either the four corners of the image, or if the image is clipped, the vertices of a polygonal clip boundary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.ImageDefId">
            <summary>Accesses the objectId of an image entity's image definition object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.ReactorId">
            <summary>Accesses the objectId of an image entity's reactor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Orientation">
            <summary>Accesses the position and orientation of an image entity. These vectors lie along the outer edge of the unclipped image. The clipped image may be smaller than the rectangle specified by these vectors.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Scale">
            <summary>Accesses the effective XY scale factor for this image entity, expressed as image size in user units (as inserted and scaled into model space) divided by the original image size (derived from the image resolution specified in the image file.).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.ClipBoundaryType">
            <summary>Accesses the current clip boundary type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.IsClipped">
            <summary>Assesses if the image is clipped.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.PixelToModelTransform">
            <summary>Accesses an affine transformation from image source pixels to model coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.DisplayOptions">
            <summary>Accesses the image display options.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Brightness">
            <summary>Accesses the current brightness value of the image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Contrast">
            <summary>Accesses the current contrast value of the image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Fade">
            <summary>Accesses the current fade value of the image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Height">
            <summary>Accesses the height of the raster image in drawing units.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.ImageHeight">
            <summary>Accesses the image's height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.ImageWidth">
            <summary>Accesses the image's width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Name">
            <summary>Accesses the name of the image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Path">
            <summary>Accesses the filename of the image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Position">
            <summary>Accesses the insertion point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Rotation">
            <summary>Accesses the rotation in radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.ShowImage">
            <summary>Accesses the show parameter of the display options.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.ImageTransparency">
            <summary>Assesses if the image is transparent or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RasterImage.Width">
            <summary>Accesses the width of the raster image.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ClipBoundaryType">
            <summary>
This .NET class wraps the AcDbRasterImage::ClipBoundaryType ObjectARX ebum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ImageDisplayOptions">
            <summary>
This .NET class wraps the AcDbRasterImage::ImageDisplayOpt ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBPoint">
            <summary>
This .NET class wraps the AcDbPoint ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBPoint.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a point that uses position for its position value. The normal is initialized to (0,0,1) (in WCS coordinates), the OCS rotation to 0, and the thickness to 0.</summary>
            <param name="position"> Input position (in WCS coordinates) for the point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBPoint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBPoint.Position">
            <summary>Accesses the points position value in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBPoint.Thickness">
            <summary>Accesses the point's thickness value. The thickness is the point's dimension along its normal vector direction (sometimes called the extrusion direction).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBPoint.Normal">
            <summary>Accesses unit normal vector for the point in WCS coordinates. The normal is used as the extrusion direction when the point has non-zero thickness. The normal also determines the plane used to display the point when PDMODE is set to display the point as something other than a ".".</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBPoint.EcsRotation">
            <summary>Accesses the angle (in radians) between the OCS (formerly ECS) X axis for the point (based on the point's normal vector) and the X axis that will be used when displaying the point. This is used when PDMODE is set to display the point as something other than a ".".</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh">
            <summary>
This .NET class wraps the AcDbPolyFaceMesh ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh.#ctor">
            <summary>Default constructor. Initializes the face and vertex counts to 0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh.AppendVertex(Autodesk.AutoCAD.DatabaseServices.PolyFaceMeshVertex)">
            <summary>This function appends the PolyFaceMeshVertex object pointed to by vertexToAppend to the end of the vertex list of the PolyFaceMesh, establishes the PolyFaceMesh as the vertex's owner, and adds the vertex to the database that contains the PolyFaceMesh (the PolyFaceMesh must be database-resident for this function to succeed).</summary>
            <param name="vertexToAppend"> Input vertex to append to mesh</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh.AppendFaceRecord(Autodesk.AutoCAD.DatabaseServices.FaceRecord)">
            <summary>This function appends the FaceRecord pointed to by toAppend to the end of the facelist of the PolyFaceMesh, establishes the PolyFaceMesh object as the FaceRecord's owner, and adds the FaceRecord to the database that contains the PolyFaceMesh (the PolyFaceMesh must be database-resident for this function to succeed).</summary>
            <param name="toAppend"> Input FaceRecord to append to the mesh</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh.NumVertices">
            <summary>Accesses the number of point coordinate vertices in the vertex list of the PolyFaceMesh. This count does not include the FaceRecords in the vertex list.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh.NumFaces">
            <summary>Accesses the number of faces in the PolyFaceMesh. For PolyFaceMeshes created via the ObjectARX API, this value will accurately reflect the number of FaceRecords that have been appended to the PolyFaceMesh. For PolyFaceMeshes created via the AutoCAD PFACE command, it is possible for this value to be lower than the number of FaceRecords owned by the PolyFaceMesh.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PolyFaceMeshVertex">
            <summary>
This .NET class wraps the AcDbPolyFaceMeshVertex ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolyFaceMeshVertex.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs an PolyFaceMeshVertex that uses position as the position point. The vertex type is initialized to SimpleVertex.</summary>
            <param name="position"> Input WCS position point for the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolyFaceMeshVertex.#ctor">
            <summary>Default constructor. Initializes the position to (0,0,0) and the vertex type to SimpleVertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolyFaceMeshVertex.Position">
            <summary>Accesses the WCS point value of this vertex.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PolygonMesh">
            <summary>
This .NET class wraps the AcDbPolygonMesh ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.#ctor">
            <summary>Default constructor. Initializes the polyline flag to 16 (indicating a PolygonMesh open in both M and N directions). Initializes to 0 the MeshType, vertices in M direction, vertices in N direction, Smooth surface density in M direction, and Smooth surface density in N direction.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.MakeMClosed">
            <summary>This function sets the PolygonMesh to be closed in the M direction. This means that the mesh will be treated as continuous from the last row on to the first row.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.MakeMOpen">
            <summary>This function sets the PolygonMesh to be open in the M direction. This means that the mesh will be discontinuous between the last row and the first row.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.MakeNClosed">
            <summary>This function sets the PolygonMesh to be closed in the N direction. This means that the mesh will be treated as continuous from the last column on to the first column.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.MakeNOpen">
            <summary>This function sets the PolygonMesh to be open in the N direction. This means that the mesh will be discontinuous between the last column and the first column.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.Straighten">
            <summary>This function removes all spline-fit vertices and restores the original control point polygon mesh. This operation performs the same modification as the PEDIT command "Desmooth" option.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.SurfaceFit">
            <summary>This function will fit a smooth surface to a control point mesh defined by vertices of this polygonal mesh. This operation performs the same modification as the PEDIT command "Smooth surface" option.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.AppendVertex(Autodesk.AutoCAD.DatabaseServices.PolygonMeshVertex)">
            <summary>This function appends the PolygonMeshVertex object pointed to by toAppend to the vertex list of the PolygonMesh, establishes the PolygonMesh as the vertex's owner, and adds the vertex to the database that contains the PolygonMesh (the PolygonMesh must be database-resident for this function to succeed).</summary>
            <param name="toAppend"> Input vertex to append to mesh</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.PolyMeshType">
            <summary>Accesses the PolyMeshType of the PolygonMesh.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.MSize">
            <summary>Accesses the vertex count in the M direction. This is the number of vertices that will be used to make up an M row in the PolygonMesh if the PolyMeshType is SimpleMesh. For any other PolyMeshType, the M surface density value will be used as the row size.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.NSize">
            <summary>Accesses the vertex count in the N direction. This is the number of vertices that will be used to make up an N column in the PolygonMesh if the PolyMeshType is SimpleMesh. For any other PolyMeshType, the N surface density value will be used as the column size.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.IsMClosed">
            <summary>Assesses if the PolygonMesh is closed in the M direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.IsNClosed">
            <summary>Assesses if the PolygonMesh is closed in the N direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.MSurfaceDensity">
            <summary>Accesses the surface density in the M direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMesh.NSurfaceDensity">
            <summary>Accesses the surface density in the N direction. The N surface density is the number of vertices in the N direction after a surface fit operation is performed. This value is used in place of the N size value if the PolyMeshType is anything other than SimpleMesh.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PolyMeshType">
            <summary>
This .NET class wraps the AcDb::PolyMeshType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PolygonMeshVertex">
            <summary>
This .NET class wraps the AcDbPolygonMeshVertex ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMeshVertex.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a PolygonMeshVertex that uses position as the position point. The vertex type is initialized to SimpleVertex.</summary>
            <param name="point"> Input WCS position point for the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PolygonMeshVertex.#ctor">
            <summary>Default constructor. Initializes the position to (0,0,0) and the vertex type to SimpleVertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMeshVertex.VertexType">
            <summary>Accesses the Vertex3dType of this vertex.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PolygonMeshVertex.Position">
            <summary>Accesses the WCS point value of this vertex.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Leader">
            <summary>
This .NET class wraps the AcDbLeader ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.SetPlane(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Sets the plane that will contain the leader object. This leader's data members will be updated to reflect the change of plane. To do this, a transformation matrix will be created that will translate all points from the current plane's coordinate system to the new plane's coordinate system--a projection is not used.</summary>
            <param name="value"> Input desired plane within which the leader will reside</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.AppendVertex(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Appends vertex to the end of the vertex list for this leader. If vertex is not in the plane of the leader, then it will be projected parallel the leader's normal onto the leader's plane and the projection will be appended to the leader's vertex list. If the new vertex is too close to the one next to it (that is, within 1.e-10 for X, Y, and Z), the new vertex will not be appended.</summary>
            <param name="pointToAdd"> Input point (in WCS coordinates) to add to the vertex list</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.RemoveLastVertex">
            <summary>Removes the last vertex (the vertex at the annotation end) from the vertex list.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.VertexAt(System.Int32)">
            <summary>Returns the Point3d that is the vertex at the location index (0 based) in this leader's vertex array.</summary>
            <param name="value"> Input index number (0 based) of the vertex desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.SetVertexAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Resets the vertex at index to the point point projected (along the plane normal) onto the plane containing the leader. It doesn't reset the vertex if that would cause one of the segments to become zero length (within 1e-10).</summary>
            <param name="index"> Input index number (0 based) of the vertex to change</param>
            <param name="pointValue"> Input new point value (in WCS) to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.SetDimstyleData(Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord)">
            <summary>Sets the leader to use the DimensionStyle (and dim overrides associated with it) specified by style.</summary>
            <param name="style"> Input objectId of the desired DimensionStyle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.GetDimstyleData">
            <summary>This function returns the DimStyle information from the DimStyleTableRecord referenced by this object into the DimStyleTableRecord.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Leader.EvaluateLeader">
            <summary>Evaluate the relation of the leader to its associated annotation, and update the leader geometry if necessary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Normal">
            <summary>Accesses the unit normal that contains the leader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.NumVertices">
            <summary>Accesses the number of vertices in the leader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.FirstVertex">
            <summary>Accesses the leader's start point in WCS coordinates. This will be the start of the arrowhead if enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.LastVertex">
            <summary>Accesses the leader's last vertex in WCS coordinates. This is the vertex at the end where the annotation is attached.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.HasArrowHead">
            <summary>Assesses if arrowhead is currently enabled for this leader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.HasHookLine">
            <summary>Assesses if this leader has a hookline. The "hookline" is the small horizontal line at the end of the leader line just before the annotation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.IsSplined">
            <summary>Assesses if this leader is spline-fit.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.DimensionStyle">
            <summary>Accesses the objectId of the DimensionStyle object referenced by the leader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Annotation">
            <summary>Accesses the leader's annotation ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.AnnotationOffset">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.AnnoType">
            <summary>Accesses the leader's annotation type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.AnnoHeight">
            <summary>Accesses the annotation height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.AnnoWidth">
            <summary>Accesses the annotation width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimasz">
            <summary>Accesses the current DIMASZ value for the leader. If the value is overridden for this object, then that value is returned, otherwise the function will return the value from this dimension's dimension style. See the System Variables section of the AutoCAD Command Reference manual for information on DIMASZ.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimclrd">
            <summary>Accesses the current DIMCLRD value for the leader. If the value is overridden for this object, then that value is returned, otherwise the function will return the value from this dimension's dimension style. See the System Variables section of the AutoCAD Command Reference manual for information on DIMCLRD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimgap">
            <summary>Accesses the current DIMGAP value for the leader. If the value is overridden for this object, then that value is returned, otherwise the function will return the value from this dimension's dimension style. See the System Variables section of the AutoCAD Command Reference for information on DIMGAP.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimlwd">
            <summary>Accesses the current DIMLWD value for the leader. If the value is overridden for this object, then that value is returned, otherwise the function will return the value from this dimension's dimension style. See the System Variables section of the AutoCAD Command Reference for information on DIMLWD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimldrblk">
            <summary>Accesses the object ID of the block reference that is the current DIMLDRBLK value for the leader. If the value is overridden for this leader, then that value is returned; otherwise, the function will return the value from this leader's dimension style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimsah">
            <summary>Accesses the current DIMSAH value for the leader. If the value is overridden for this leader, then that value is returned; otherwise, the function will return the value from this leader's dimension style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimscale">
            <summary>Accesses the current DIMSCALE value for the leader. If the value is overridden for this object, then that value is returned, otherwise the function will return the value from this dimension's dimension style. See the System Variables section of the AutoCAD Command Reference for information on DIMSCALE.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimtad">
            <summary>Accesses the current DIMTAD value for the leader. If the value is overridden for this object, then that value is returned, otherwise the function will return the value from this dimension's dimension style. See the System Variables section of the AutoCAD Command Reference for information on DIMTAD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.Dimtxt">
            <summary>Accesses the current DIMTXT value for the leader. If the value is overridden for this leader, then that value is returned; otherwise, the function will return the value from this leader's dimension style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Leader.DimensionStyleName">
            <summary>Accesses the associated dimension style name.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AnnotationType">
            <summary>
This .NET class wraps the AcDbLeader::AnnoType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallbackStatus">
            <summary>
This enumeration is used to return the result of an MTextFragmentCallback callback function.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MTextFragment">
            <summary>
This .NET class wraps the AcDbMTextFragment ObjectARX struct.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MTextFragment.GetUnderLinePoints">
            <summary>This function returns an array of two points that define the underline for this object, if any is defined.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MTextFragment.GetOverLinePoints">
            <summary>This function returns an array of two points that define the overline for this object, if any is defined.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MTextFragment.GetStrikethroughPoints">
            <summary>This .NET method wraps the ObjectARX method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Location">
            <summary>Accesses the text insertion point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Normal">
            <summary>Accesses the normal vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Direction">
            <summary>Accesses the text flow direction vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Text">
            <summary>Accesses the text string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.ShxFont">
            <summary>Accesses the SHX font.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.BigFont">
            <summary>Accesses the bigfont text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Extents">
            <summary>Accesses the text extents. X-coord is the extents box width. Y-coord is the extents box height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.CapsHeight">
            <summary>Accesses the text height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.WidthFactor">
            <summary>Accesses the text width factor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.ObliqueAngle">
            <summary>Accesses the text oblique angle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.TrackingFactor">
            <summary>Accesses the text tracking factor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Color">
            <summary>Accesses the text color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.StackTop">
            <summary>Accesses if the text is top part of stacked text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.StackBottom">
            <summary>Assesses if the text is bottom part of stacked text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Underlined">
            <summary>Assesses if underlined is on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Overlined">
            <summary>Assesses if overlining is on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Strikethrough">
            <summary>This wraps the AcDbMTextFragment::strikePoints[2].</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.TrueTypeFont">
            <summary>Accesses the TrueType font.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Bold">
            <summary>Assesses if text is TrueType and bold.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MTextFragment.Italic">
            <summary>Assesses if the text is TrueType and italic.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ColumnType">
            <summary>
This .NET enum wraps the AcDbMText::ColumnType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Mline">
            <summary>
This .NET class wraps the Mline ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.#ctor">
            <summary>Default constructor does no explicit initialization of data members at all for the new Mline object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.AppendSegment(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Projects newVertex along the MLine object's normal vector onto the plane defined by the normal vector and the first vertex of the MLine object. The result of this projection is appended to the end of the MLine object's vertex list. This generates a new MLine object segment between the previously "last" vertex and the newly added vertex.</summary>
            <param name="newVertex"> Input new vertex point (in WCS) to be added</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.RemoveLastSegment(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Removes the last vertex in the MLine object's vertex array. The value of the new "last" vertex is then copied into lastVertex.</summary>
            <param name="lastVertex"> Returns filled in with the value of the vertex that becomes last when current last is removed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.MoveVertexAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes vertex in index position in the MLine object's vertex array (0 based) to use a value determined by projecting the newPosition point along the MLine object's normal vector onto the plane defined by the normal vector and the MLine object's first vertex.</summary>
            <param name="index"> Input index of vertex to move in the vertex array</param>
            <param name="newPosition"> Input new vertex value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.Element(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This function attempts to find which element of the MLine object contains the point pt. If an element is not found that directly contains the point and the MLine object is not closed, then the ends of the MLine object are "virtually" extended to see if pt lies in the path of any element.</summary>
            <param name="pt"> Input search point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.VertexAt(System.Int32)">
            <summary>Input index (0 based) of desired vertex.</summary>
            <param name="index"> Returns the value of the vertex at the index location (0 based) in the MLine object's vertex array.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Boolean,System.Boolean)">
            <summary>
In this function, givenPoint is projected along the normal vector onto the plane containing the MLine object. Then the resulting projected point is used to find the point on the MLine object that is closest. pointOnCurve is filled in with the closest point found. If extend == true, then the MLine object will be "virtually" extended to find the closest point. If excludeCaps == true, then any endcaps on the MLine object will be ignored.</summary>
            <param name="givenPoint"> Input point to find nearest point to</param>
            <param name="normal"> Input direction of projection</param>
            <param name="extend"> Input Boolean indicating if search should include "virtual" extension of Mline</param>
            <param name="excludeCaps"> Input Boolean indicating if endcaps should not be included in nearest point search</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Mline.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point3d,System.Boolean,System.Boolean)">
            <summary>
Finds the point on the MLine object that is closest to givenPoint and returns it. If extend == true, then the MLine object will be "virtually" extended to find the closest point. If excludeCaps == true, then any endcaps on the MLine object will be ignored.</summary>
            <param name="givenPoint"> Input point to find nearest point to</param>
            <param name="extend"> Input Boolean indicating if search should include "virtual" extension of Mline</param>
            <param name="excludeCaps"> Input Boolean indicating if endcaps should not be included in nearest point search</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.Style">
            <summary>Accesses the objectId of the MlineStyle currently used by the MLine object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.Justification">
            <summary>Accesses the justification for the MLine object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.Scale">
            <summary>Accesses the current scale value in use by the MLine object. The scale value controls the overall width of the MLine object. This scale doesn't affect linetype scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.Normal">
            <summary>Accesses the unit normal vector the MLine object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.IsClosed">
            <summary>Assesses if the MLine is closed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.SupressStartCaps">
            <summary>Assesses if startcaps are currently suppressed for the MLine object. Conditions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.SupressEndCaps">
            <summary>Assesses if endcaps are currently suppressed for the MLine object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Mline.NumberOfVertices">
            <summary>Accesses the number of vertices in the MLine object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MlineJustification">
            <summary>
This .NET class wraps the Mline::Justification ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Polyline">
            <summary>
This .NET class wraps the AcDbPolyline ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.#ctor(System.Int32)">
            <summary>The Polyline dynamically allocates memory when vertices are added. However, if you know the number of vertices to be added, memory can be allocated to the exact size by specifying the number of vertices in the constructor. Specifying a non-zero value for vertices doesn't mean that the polyline automatically has that many vertices. It means that memory has been allocated, ready to be loaded with vertex information. The memory allocated is unused until it gets filled by Polyline.AddVertexAt() calls.</summary>
            <param name="vertices"> Input number of vertices to allocate memory for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.ConvertFrom(Autodesk.AutoCAD.DatabaseServices.Entity,System.Boolean)">
            <summary>
This fills the Polyline with data from the Polyline2d pointed to by entity. entity must point to a SimplePoly or FitCurvePoly type of Polyline2d object in a database. This function should be called from an Polyline that is not yet database-resident..</summary>
            <param name="entity"> Input pointer to the Polyline2d to copy from</param>
            <param name="transferId"> Input Boolean indicating whether or not to do a HandOverTo between the Polyline2d and the Polyline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.ConvertTo(System.Boolean)">
            <summary>
This function creates an Polyline2d from the Polyline and returns the newly created Polyline2d..</summary>
            <param name="transferId"> Input Boolean indicating whether or not to do a handOverTo between the Polyline and the Polyline2d.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetPoint3dAt(System.Int32)">
            <summary>This function returns the 3D location of the vertex index in World Coordinates.</summary>
            <param name="value"> Input index (0 based) of the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetSegmentType(System.Int32)">
            <summary>This function returns the type of segment (SegType) that is headed by the vertex index.</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetLineSegment2dAt(System.Int32)">
            <summary>If the segment at vertex index is a line, then this functions returns a representative 2D copy of that segment in the polyline's own object coordinate system (OCS).</summary>
            <param name="index"> Input index (0 based) of the vertex for start of segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetArcSegment2dAt(System.Int32)">
            <summary>If the segment at vertex index is an arc, then this function will fill in arc with the 2D arc information (radius, center, and so on) from the polyline in the polyline's own OCS.</summary>
            <param name="index"> Input index (0 based) of the vertex for start of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetLineSegmentAt(System.Int32)">
            <summary>If the segment at vertex index is a line, then this functions returns a representative 3D copy of that segment in World Coordinates.</summary>
            <param name="index"> Input index (0 based) of the vertex for start of segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetArcSegmentAt(System.Int32)">
            <summary>If the segment at vertex index is an arc, then this function will fill in arc with the 3D arc information (radius, center, and so on) from the polyline in WCS.</summary>
            <param name="index"> Input index (0 based) of the vertex for start of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.OnSegmentAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d,System.Double)">
            <summary>This function determines whether or not pt2d (specified in the polyline's Entity Coordinate System) is on the segment of the polyline starting at vertex index . If pt2d is on the polyline's segment, then param is set to the location of the point on the segment. value will be in the parametric form of the segment type (in other words, linear or arc).</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
            <param name="pt2d"> Input point (in polyline OCS coords) to check at vertex index</param>
            <param name="value"> Output parameter of at vertex index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.AddVertexAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d,System.Double,System.Double,System.Double)">
            <summary>This function adds a vertex to the polyline. If index is 0, the vertex will become the first vertex of the polyline. If index is the value returned by Polyline.NumberOfVertices, then the vertex will become the last vertex of the polyline. Otherwise the vertex will be added just before the index vertex.</summary>
            <param name="index"> Input index (0 based) before which to insert the vertex</param>
            <param name="pt"> Input vertex location point</param>
            <param name="bulge"> Input bulge value for vertex</param>
            <param name="startWidth"> Input start width for vertex</param>
            <param name="endWidth"> Input end width for vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.RemoveVertexAt(System.Int32)">
            <summary>This function removes the vertex at index.</summary>
            <param name="index"> Input index (0 based) of the vertex to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetPoint2dAt(System.Int32)">
            <summary>This function returns the 2D location of the vertex index in the polyline's own object coordinate system (OCS).</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.SetPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This sets pt (in polyline OCS coordinates) to be the location of the index vertex.</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
            <param name="pt"> Input location for the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetBulgeAt(System.Int32)">
            <summary>This function gets the bulge factor value at the index vertex. The bulge factor is used to indicate how much of an arc segment is present at this vertex. The bulge factor is the tangent of one fourth the included angle for an arc segment, made negative if the arc goes clockwise from the start point to the endpoint. A bulge of 0 indicates a straight segment, and a bulge of 1 is a semicircle.</summary>
            <param name="index"> Input index (0 based) of the vertex for start of bulge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.SetBulgeAt(System.Int32,System.Double)">
            <summary>This function sets bulge to be the bulge value for the index vertex. This will determine the bulge for the polyline segment which follows the index vertex.</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
            <param name="bulge"> Input bulge value for the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetStartWidthAt(System.Int32)">
            <summary>This returns the star width.</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.GetEndWidthAt(System.Int32)">
            <summary>Returns the polyline segment ending width value for the polyline. This value is used as the default end width for all vertices within the polyline.</summary>
            <param name="index"> Input index (0 based) of the polyline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.SetStartWidthAt(System.Int32,System.Double)">
            <summary>This function sets the start width for vertex index.</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
            <param name="startWidth"> Input start width value for vertex index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.SetEndWidthAt(System.Int32,System.Double)">
            <summary>This function sets the end width for vertex index.</summary>
            <param name="index"> Input index (0 based) of the vertex</param>
            <param name="endWidth"> Input end width value for vertex index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.MinimizeMemory">
            <summary>This function optimizes the memory usage of the polyline. This process takes time and should not be used until all modifications in a session are complete.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.MaximizeMemory">
            <summary>This function "decompresses" any memory compression that may currently be used by the polyline. This enables faster access to the polyline for modification.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Polyline.Reset(System.Boolean,System.Int32)">
            <summary>
This function resets the polyline's vertex data..</summary>
            <param name="reuse"> Input Boolean indicating whether or not to retain some vertices</param>
            <param name="vertices"> Input number of vertices to retain</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.Closed">
            <summary>Accesses whether the polyline should be closed (that is, there is a segment drawn from the last vertex to the first) or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.Plinegen">
            <summary>If true, the polyline displays its linetype across vertices.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.Elevation">
            <summary>Accesses the distance of the polyline's plane from the WCS origin.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.Thickness">
            <summary>Accesses the thickness (extrusion depth or height) of the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.ConstantWidth">
            <summary>Accesses the polyline's constant width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.Normal">
            <summary>Accesses the normal (in WCS coordinates) to the plane containing the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.IsOnlyLines">
            <summary>Assesses if there are only lines in the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.NumberOfVertices">
            <summary>Accesses the number of vertices in the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.HasBulges">
            <summary>Assesses if the polyline has any bulge factors set for any of the segments. Bulge factor values are required for arc segments within the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.HasWidth">
            <summary>Assesses if the polyline has any width values set for any of the segments. Width values are required for varying width segments within the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Polyline.Length">
            <summary>Accesses the total length of the polyline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SegmentType">
            <summary>
This .NET class wraps the AcDbPolyline::SegType ObjectARX class. This enumeration identifies the different types of line segments that can make up a polyline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.LineSegment2d">
            <summary>
This .NET class wraps the AcGeLineSeg2d ObjectARX class. It represents a bounded line segment in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructs a line segment whose start point is point and whose endpoint is point+vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of line segment</param>
            <param name="vector"> Input vector between endpoint and start point of line segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs a line segment between point1 and point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input start point of line segment</param>
            <param name="point2"> Input end point of line segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.#ctor">
            <summary>Default constructor. Constructs a line segment between (0,0) and (1,0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.GetBisector">
            <summary>Sets the input line to the unbounded line that is perpendicular to the line segment and passes through its midpoint.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.BaryComb(System.Double)">
            <summary>Returns the point that is the weighted average of the start point and endpoint of the line segment. If blendCoefficient is 0, this function returns the start point of the line segment. If blendCoefficient is 1, this function returns the endpoint of the line segment. If blendCoefficient is 0.5, this function returns the midpoint of the line segment. If blendCoefficient is between 0 and 1, the returned point lies on the line segment. Otherwise the returned point does not lie on the line segment, but lies on the unbounded line that is coincident with the line segment.</summary>
            <param name="blendCoefficient"> Input any real number</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.GetSegmentLength(System.Double,System.Double)">
            <summary>This method calls LineSegment2d.GetSegmentLength(Double fromParameter, Double toParameter, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="fromParameter"> Input start point parameter</param>
            <param name="toParameter"> Input end point parameter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.GetSegmentLength(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the segment length based on the staring and ending point parameter.</summary>
            <param name="fromParameter"> Input start point parameter</param>
            <param name="toParameter"> Input end point parameter</param>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.Set(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Point2d,System.Double)">
            <summary>Changes the definition of the line segment so that the line segment passes through the input point and is tangent to the input curve. On input, parameter is assumed to contain an initial guess value to the parameter of the tangent point. The output parameter success is set to true if the line segment was computed successfully.</summary>
            <param name="curve"> Input any 2D curve</param>
            <param name="point"> Input any 2D point</param>
            <param name="parameter"> Input point on curve where line segment is tangent to curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.Set(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d,System.Double,System.Double)">
            <summary>Changes the definition of the line segment so that the line segment is tangent to the two input curves. On input, parameter1 and parameter2 are assumed to contain initial guess values to the parameters of the two tangent points. The output parameter success is set to true if the line segment was computed successfully.</summary>
            <param name="curve1"> Input any 2D curve</param>
            <param name="curve2"> Input any 2D curve</param>
            <param name="parameter1"> Input point on curve1 where line segment is tangent to curve</param>
            <param name="parameter2"> Input point on curve2 where line segment is tangent to curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Changes the definition of the line segment so that the start point is point1 and the endpoint is point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input start point of line segment</param>
            <param name="point2"> Input end point of line segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Changes the definition of the line segment so that the start point is point and the endpoint is point+vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of line segment</param>
            <param name="vector"> Input vector between endpoint and start point of line segment</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment2d.StartPoint">
            <summary>Returns the start point of the line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment2d.MidPoint">
            <summary>Returns the midpoint of the line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment2d.EndPoint">
            <summary>Returns the endpoint of the line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment2d.Length">
            <summary>Returns the length of the line segment (the distance between the start point and endpoint).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CircularArc2d">
            <summary>
This .NET class wraps the AcGeCircArc2d ObjectARX class. It represents both full circles and circular arcs in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d,System.Double,System.Boolean)">
            <summary>
Constructs an arc with the specified start and endpoints. If a line is drawn between startPoint and endPoint, then the distance between this line and the midpoint of the constructed arc is equal to the bulge distance. The direction of the constructed arc is always counterclockwise. startPoint must be different than endPoint. This constructor always constructs a bounded arc and cannot be used to construct a full circle. If bulgeFlag is false, then bulge is interpreted to be the maximum distance between the arc and the chord between the two input points. If bulgeFlag is false, then bulge is interpreted to be the tangent of 1/4 the included angle (tan(ang/4)), where ang is the angle of the arc segment between the two input points.</summary>
            <param name="startPoint"> Input start point of arc</param>
            <param name="endPoint"> Input endpoint of arc</param>
            <param name="bulge"> Input bulge distance</param>
            <param name="bulgeFlag"> Input how to interpret bulge distance for arc calculation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs an arc through three points. None of the three points may be coincident and they may not be colinear. This constructor always constructs a bounded arc and cannot be used to construct a full circle.</summary>
            <param name="startPoint"> Input start point of arc</param>
            <param name="point"> Input point on arc</param>
            <param name="endPoint"> Input endpoint of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,System.Double,System.Double,System.Double,Autodesk.AutoCAD.Geometry.Vector2d,System.Boolean)">
            <summary>
Constructs a circular arc with the specified center, radius, start angle, and end angle. Angles are measured by drawing a vector between a point on the arc and the center point and taking the angle between this vector and referenceVector. The last parameter specifies whether the angle is to be taken clockwise or counterclockwise. endAngle must be greater than startAngle. To construct a full circle, the difference between endAngle and startAngle should be 2 x Pi.</summary>
            <param name="center"> Input center of arc</param>
            <param name="radius"> Input radius of arc</param>
            <param name="startAngle"> Input angle of start point of arc</param>
            <param name="endAngle"> Input angle of endpoint of arc</param>
            <param name="referenceVector"> Input reference vector from which arc angles are measured</param>
            <param name="isClockWise"> Input direction of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,System.Double)">
            <summary>Constructs a full circle with the given center and radius. The radius must not be 0.</summary>
            <param name="center"> Input center of circle</param>
            <param name="radius"> Input radius of circle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.#ctor">
            <summary>Default constructor. Constructs a full circle with center (0,0) and radius 1.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.IntersectWith(Autodesk.AutoCAD.Geometry.CircularArc2d)">
            <summary>This method calls CircularArc2d.IntersectWith(CircularArc2d arc, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="arc"> Input any 2D arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.IntersectWith(Autodesk.AutoCAD.Geometry.CircularArc2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input arc intersects this arc within a specified tolerance.</summary>
            <param name="arc"> Input any 2D arc</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity2d)">
            <summary>This method calls CircularArc2d.IntersectWith(LinearEntity2d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 2D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input line intersects the arc within a specified tolerance value.</summary>
            <param name="line"> Input any 2D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.GetTangent(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls CircularArc2d.GetTangent(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input point on full circle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.GetTangent(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method calls CircularArc2d.GetTangent(Point2d point, Tolerance tolerance).</summary>
            <param name="point"> Input point on full circle</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.IsInside(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls CircularArc2d.IsInside(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.IsInside(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This function treats the arc as a full circle even if it is bounded, and determines if the input point lies inside the full circle.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.SetAngles(System.Double,System.Double)">
            <summary>Changes the start and end points of the arc to have the specified angles.</summary>
            <param name="startAngle"> Input start angle of arc</param>
            <param name="endAngle"> Input end angle of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.SetToComplement">
            <summary>Reverses the direction of the arc while keeping the same start and end points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.Set(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d,System.Double,System.Double,System.Double)">
            <summary>Changes the definition of the arc to be tangent to the three input curves.</summary>
            <param name="curve1"> Input any 2D curve</param>
            <param name="curve2"> Input any 2D curve</param>
            <param name="curve3"> Input any 2D curve</param>
            <param name="parameter1"> Input parameter value on curve1 where arc touches curve</param>
            <param name="parameter2"> Input parameter value on curve2 where arc touches curve</param>
            <param name="parameter3"> Input parameter value on curve3 where arc touches curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.Set(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d,System.Double,System.Double,System.Double)">
            <summary>Changes the definition of the arc to be tangent to the two input curves and have the specified radius.</summary>
            <param name="curve1"> Input any 2D curve</param>
            <param name="curve2"> Input any 2D curve</param>
            <param name="radius"> Input any 2D curve</param>
            <param name="parameter1"> Input parameter value on curve1 where arc touches curve</param>
            <param name="parameter2"> Input parameter value on curve2 where arc touches curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d,System.Double,System.Boolean)">
            <summary>
Changes the definition of the arc to have the specified start point, endpoint, and bulge distance. If a line is drawn between startPoint and endPoint, then the distance between this line and the midpoint of the arc are equal to the bulge distance. The direction of the arc is changed to counterclockwise regardless of its previous direction. startPoint must be different than endPoint. If bulgeFlag is true, then bulge is interpreted to be the maximum distance between the arc and the chord between the two input points. If bulgeFlag is false, then bulge is interpreted to be the tangent of ¼ the included angle (tan(ang/4)), where ang is the angle of the arc segment between the two input points.</summary>
            <param name="startPoint"> Input start point of arc</param>
            <param name="endPoint"> Input end point of arc</param>
            <param name="bulge"> Input bulge distance</param>
            <param name="bulgeFlag"> Input how to interpret bulge distance for arc calculation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Changes the definition of the arc to have the specified start and end points and pass through point. None of the three points may be coincident and they may not be collinear.</summary>
            <param name="startPoint"> Input start point</param>
            <param name="point"> Input point</param>
            <param name="endPoint"> Input end point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.Set(Autodesk.AutoCAD.Geometry.Point2d,System.Double,System.Double,System.Double,Autodesk.AutoCAD.Geometry.Vector2d,System.Boolean)">
            <summary>
Changes the definition of the arc to have the specified center, radius, start angle, and end angle. Angles are measured by drawing a vector between a point on the arc and the center point and taking the angle between this vector and referenceVector. The last parameter specifies whether the angle is to be taken clockwise or counterclockwise. angle2 must be greater than angle1. To construct a full circle, the difference between angle2 and angle1 should be 2 x Pi.</summary>
            <param name="center"> Input center of circle</param>
            <param name="radius"> Input radius of circle</param>
            <param name="angle1"> Input angle of start point of arc</param>
            <param name="angle2"> Input angle of endpoint of arc</param>
            <param name="referenceVector"> Input reference vector from which arc angles are measured</param>
            <param name="isClockWise"> Input direction of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc2d.Set(Autodesk.AutoCAD.Geometry.Point2d,System.Double)">
            <summary>Changes the definition of the arc to have the specified center and radius.</summary>
            <param name="center"> Input center of circle</param>
            <param name="radius"> Input radius of circle</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.Center">
            <summary>Returns the center point of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.Radius">
            <summary>Returns the radius of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.StartAngle">
            <summary>Angle of the start point of the arc with respect to the reference vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.EndAngle">
            <summary>Angle of the endpoint of the arc with respect to the reference vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.IsClockWise">
            <summary>Returns whether arc is oriented in a clockwise direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.ReferenceVector">
            <summary>Changes the reference vector of the arc to the specified vector. Since the start and end angles of the arc are measured with respect to the reference vector, this function has the effect of rotating the arc about its center point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.StartPoint">
            <summary>Starting point of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc2d.EndPoint">
            <summary>End point of the arc.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.LineSegment3d">
            <summary>
This .NET class wraps the AcGeLineSeg3d ObjectARX class. It represents a bounded line segment in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a line segment between point1 and point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input start point of line segment</param>
            <param name="point2"> Input end point of line segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs a line segment whose start point is point and whose endpoint is point+vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of line segment</param>
            <param name="vector"> Input vector between endpoint and start point of line segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.#ctor">
            <summary>Default constructor. Constructs a line segment between (0,0,0) and (1,0,0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.GetBisector">
            <summary>Sets the input plane to the unbounded plane that is perpendicular to the line segment and passes through its midpoint.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.BaryComb(System.Double)">
            <summary>Returns the point that is the weighted average of the start and end points of the line segment.</summary>
            <param name="blendCoefficient"> Input y real number</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.Set(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Point3d,System.Double)">
            <summary>Changes the definition of the line segment so that the line segment passes through the input point and is tangent to the input curve. The curve must be planar and the input point must lie on the plane of the curve. On input, parameter is assumed to contain an initial guess value to the parameter of the tangent point.</summary>
            <param name="curve"> Input any 3D curve</param>
            <param name="point"> Input any 3D point</param>
            <param name="parameter"> Input point on curve where line segment is tangent to curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.Set(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,System.Double,System.Double)">
            <summary>Changes the definition of the line segment so that the line segment is tangent to the two input curves. On input, parameter1 and parameter2 are assumed to contain initial guess values to the parameters of the two tangent points. The output parameter success is set to true if the line segment was computed successfully.</summary>
            <param name="curve1"> Input any 3D curve</param>
            <param name="curve2"> Input any 3D curve</param>
            <param name="parameter1"> Input point on curve1 where line segment is tangent to curve</param>
            <param name="parameter2"> Input point on curve2 where line segment is tangent to curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes the definition of the line segment so that the start point is point1 and the endpoint is point2. point1 and point2 must not be the same point.</summary>
            <param name="point1"> Input start point of line segment</param>
            <param name="point2"> Input end point of line segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LineSegment3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Changes the definition of the line segment so that the start point is point and the endpoint is point+vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of line segment</param>
            <param name="vector"> Input vector between endpoint and start point of line segment</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment3d.StartPoint">
            <summary>Returns the start point of the line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment3d.MidPoint">
            <summary>Returns the midpoint of the line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment3d.EndPoint">
            <summary>Returns the endpoint of the line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LineSegment3d.Length">
            <summary>Returns the length of the line segment (the distance between the start point and endpoint).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CircularArc3d">
            <summary>
This .NET class wraps the AcGeCircArc3d ObjectARX class. It represents both full circles and circular arcs in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs an arc through three points. None of the three points may be coincindent and they may not be colinear. This constructor always constructs a bounded arc and cannot be used to construct a full circle.</summary>
            <param name="startPoint"> Input start point of arc</param>
            <param name="endPoint"> Input endpoint of arc</param>
            <param name="pnt"> Input point on arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double)">
            <summary>Constructor.</summary>
            <param name="center"> Input Autodesk.AutoCAD.Geometry.Point3d object.</param>
            <param name="normal"> Input Autodesk.AutoCAD.Geometry.Vector3d object.</param>
            <param name="referenceVector"> Input Autodesk.AutoCAD.Geometry.Vector3d object.</param>
            <param name="radius"> Input.</param>
            <param name="startAngle"> Input.</param>
            <param name="endAngle"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Constructs a full circle with the given center, normal vector, and radius. The radius must not be 0. The constructed circle is oriented counterclockwise about the normal vector.</summary>
            <param name="center"> Input center of arc</param>
            <param name="normal"> Input normal vector of arc</param>
            <param name="radius"> Input radius of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.#ctor">
            <summary>Default constructor. Constructs a full circle in the XY plane (normal vector (0,0,1) with center (0,0,0) and radius 1.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.ClosestPointToPlane(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls CircularArc3d.ClosestPointToPlane(PlanarEntity plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.ClosestPointToPlane(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the point on this arc that is closest to the given plane.</summary>
            <param name="plane"> Input plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls CircularArc3d.IntersectWith(PlanarEntity plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input any plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input plane intersects this arc.</summary>
            <param name="plane"> Input any plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.CircularArc3d)">
            <summary>This method calls CircularArc3d.IntersectWith(CircularArc3d arc, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="arc"> Input any 3D arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.CircularArc3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input arc intersects this arc.</summary>
            <param name="arc"> Input any 3D arc</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls CircularArc3d.IntersectWith(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input line intersects the arc.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.ProjectedIntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls CircularArc3d.ProjectedIntersectWith(LinearEntity3d line, Vector3d projectionDirection, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="projectionDirection"> Input direction of projection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.ProjectedIntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the points on the arc and line that project into the same point when projected onto a plane whose normal is projectionDirection.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="projectionDirection"> Input direction of projection</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.GetTangent(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls CircularArc3d.GetTangent(Point3d pointValue, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="pointValue"> Input point on full circle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.GetTangent(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This function returns true if the input point lies on the full circle of the arc; otherwise, it returns false. If it returns true, line is set to the tangent line to the circle at the input point.</summary>
            <param name="pointValue"> Input point on full circle</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.GetPlane">
            <summary>Returns the infinite plane in which the arc lies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IsInside(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls CircularArc3d.IsInside(Point3d pointValue, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="pointValue"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.IsInside(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input point lies inside the arc. This function treats the arc as a full circle even if it is bounded, and determines if the input point lies inside the full circle. Returns a value of false if the point lies on or outside the circle, or does not lie on the same plane as the arc.</summary>
            <param name="pointValue"> Input any 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.SetAxes(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Changes the normal vector and reference vector of the arc to the specified vectors. The two input vectors must be perpendicular to each other.</summary>
            <param name="normal"> Input normal vector of arc</param>
            <param name="referenceVector"> Input reference vector of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.SetAngles(System.Double,System.Double)">
            <summary>Changes the start and end points of the arc to have the specified angles.</summary>
            <param name="startAngle"> Input start angle of arc</param>
            <param name="endAngle"> Input end angle of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.Set(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,System.Double,System.Double,System.Double)">
            <summary>Changes the definition of the arc to be tangent to the three input curves.</summary>
            <param name="curve1"> Input any 3D curve</param>
            <param name="curve2"> Input any 3D curve</param>
            <param name="curve3"> Input any 3D curve</param>
            <param name="param1"> Input parameter value on curve1 where arc touches curve</param>
            <param name="param2"> Input parameter value on curve2 where arc touches curve</param>
            <param name="param3"> Input parameter value on curve3 where arc touches curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.Set(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,System.Double,System.Double,System.Double)">
            <summary>Changes the definition of the arc to be tangent to the two input curves and have the specified radius. The two input curves must be coplanar.</summary>
            <param name="curve1"> Input any 3D curve</param>
            <param name="curve2"> Input any 3D curve</param>
            <param name="radius"> Input radius of arc</param>
            <param name="param1"> Input parameter value on curve1 where arc touches curve</param>
            <param name="param2"> Input parameter value on curve2 where arc touches curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes the definition of the arc to have the specified start and endpoints and pass through pointOnArc. None of the three points may be coincident and they may not be collinear.</summary>
            <param name="startPoint"> Input start point of arc</param>
            <param name="pointOnArc"> Input point on arc</param>
            <param name="endPoint"> Input endpoint of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double)">
            <summary>Changes the definition of the arc to have the specified center, normal vector, radius, start angle, and end angle. Angles are measured by drawing a vector between a point on the arc and the center point and taking the angle between this vector and referenceVector. The angle is measured in a counterclockwise direction about the normal vector. normal must be perpendicular to referenceVector and endAngle must be greater than startAngle. To construct a full circle, the difference between endAngle and startAngle should be 2 x Pi.</summary>
            <param name="center"> Input center of arc</param>
            <param name="normal"> Input normal vector of arc</param>
            <param name="referenceVector"> Input reference vector from which arc angles are measured</param>
            <param name="radius"> Input radius of arc</param>
            <param name="startAngle"> Input angle of start point of arc</param>
            <param name="endAngle"> Input angle of endpoint of arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CircularArc3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Changes the arc definition to be a full circle with the given center, normal vector, and radius. The radius must not be 0. The circle will be oriented counterclockwise about the normal vector.</summary>
            <param name="center"> Input center of arc</param>
            <param name="normal"> Input normal vector of arc</param>
            <param name="radius"> Input radius of arc</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.Center">
            <summary>Returns the center point of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.Normal">
            <summary>Returns the normal vector of the arc. The arc is oriented in a counterclockwise direction about this vector. This function always returns a unit vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.ReferenceVector">
            <summary>Returns the reference vector of the arc. The reference vector is the vector from which the start and end angles of the arc are measured. This vector is perpendicular to the normal vector. This function always returns a unit vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.Radius">
            <summary>Returns the radius of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.StartAngle">
            <summary>Angle of the start point of the arc with respect to the reference vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.EndAngle">
            <summary>Angle of the endpoint of the arc with respect to the reference vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.StartPoint">
            <summary>Start point of the arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CircularArc3d.EndPoint">
            <summary>Endpoint of the arc.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ProxyEntity">
            <summary>
This .NET class wraps the AcDbProxyEntity ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ProxyEntity.GetReferences">
            <summary>This function appends to the ids array all reference objectIds in the data of the custom entity contained in the proxy. The types array have the corresponding reference type DXF group code numbers for the objectIds in the ids array. For example, if the ids[3] element is a hard pointer ID, then types[3] will be HardPointerId (integer value 340).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyEntity.ProxyFlags">
            <summary>Accesses the.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyEntity.OriginalClassName">
            <summary>Accesses the string that is the C++ class name of the custom object stored in the proxy. NULL is returned, if the operation fails.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyEntity.OriginalDxfName">
            <summary>Accesses the string that is the DXF name of the custom entity stored in the proxy.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyEntity.ApplicationDescription">
            <summary>Accesses the string that represents the application description of the class stored within the proxy entity. This string is the last argument in the ACRX_DXF_DEFINE_MEMBERS macro used for the class of the entity contained in the proxy.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ProxyEntity.GraphicsMetafileType">
            <summary>Accesses the value indicating what kind of data is in the proxy's graphics metafile (if it has one).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GraphicsMetafileType">
            <summary>
This .NET class wraps the AcDbProxyEntity::GraphicsMetafileType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties">
            <summary>
This class encapsulates the data returned by the AcDbRegion::getAreaProp()ObjectARX function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.Perimeter">
            <summary>Returns the perimeter of the Region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.Area">
            <summary>Returns the area of the Region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.Centroid">
            <summary>Returns the centroid point of the Region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.MomentsOfInertia">
            <summary>Returns the moments of inertia of the Region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.ProductOfInertia">
            <summary>Returns the product of inertia of the Region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.PrincipalMoments">
            <summary>Returns the principal moments of the Region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.RadiiOfGyration">
            <summary>Returns the radii of gyration of the Region.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties.Extents">
            <summary>Returns the extents of the Region.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SequenceEnd">
            <summary>
This .NET class wraps the AcDbSequenceEnd ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SequenceEnd.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Shape">
            <summary>
This .NET class wraps the AcDbShape ObjectARX class. It represents the SHAPE entity within AutoCAD.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Shape.#ctor(Autodesk.AutoCAD.Geometry.Point3d,System.Double,System.Double,System.Double)">
            <summary>Constructor.</summary>
            <param name="position"> Input insertion point of the shape, in WCS coordinates</param>
            <param name="size"> Input height of the shape</param>
            <param name="rotation"> Input rotation of the shape</param>
            <param name="widthFactor"> Input width factor of the shape</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Shape.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.Position">
            <summary>Returns the insertion point of the shape in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.Size">
            <summary>Returns the height of the shape.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.Name">
            <summary>Returns the name of the shape. If no name has been set, then NULL is returned. The caller of this function is responsible for freeing the memory used by the returned string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.Rotation">
            <summary>Returns the rotation angle of the shape. The rotation angle is relative to the X axis of the shape's OCS with positive angles going counterclockwise when looking down the Z axis towards the origin. The OCS X axis is determined by using the shape's normal, the WCS Z axis, and the arbitrary axis algorithm.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.WidthFactor">
            <summary>Returns the width factor (sometimes referred to as the relative X-scale factor). The widthFactor is applied to the shape's width to allow the width to be adjusted independently of the height. For example, if the widthFactor value is 0.8, then the shape will be drawn with a width that is 80% of its normal "unadjusted" width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.Oblique">
            <summary>Returns the oblique angle of the shape. The obliquing angle is the angle of slant from the shape's vertical.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.Thickness">
            <summary>Returns the thickness of the shape. The thickness is the shape's dimension along its normal vector direction (sometimes called the extrusion direction).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.Normal">
            <summary>Returns the normal vector of the plane containing the shape. The normal vector is in WCS coordinates.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.ShapeNumber">
            <summary>Returns the number of the shape. A shape is stored as a reference to a font, and a character within that font. Essentially a shape is a single character of a special SHX font. This function sets the number of that character.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.StyleId">
            <summary>Returns the object ID of the font symbol table record containing this shape's SHX font.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Shape.ShapeIndex">
            <summary>Returns the object ID of the font symbol table record containing this shape's SHX font.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Solid">
            <summary>
This .Net class wraps AcDbSolid ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This constructor uses pointer1-pointer3 as the first three points for the solid and then uses pointer2 as the fourth point as well. All points must be in WCS coordinates. The normal vector is initialized to (0,0,1) and the thickness is set to 0.0.</summary>
            <param name="pointer1"> Input first point (in WCS) for solid</param>
            <param name="pointer2"> Input second point (in WCS) for solid</param>
            <param name="pointer3"> Input third point (in WCS) for solid</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This constructor uses pointer1-pointer4 as the four points for the solid. All points must be in WCS coordinates. The normal vector is initialized to (0,0,1) and the thickness is set to 0.0.</summary>
            <param name="pointer1"> Input first point (in WCS) for solid</param>
            <param name="pointer2"> Input second point (in WCS) for solid</param>
            <param name="pointer3"> Input third point (in WCS) for solid</param>
            <param name="pointer4"> Input fourth point (in WCS) for solid</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid.GetPointAt(System.Int16)">
            <summary>This function fills the output value of the desired point with the value of the point in the solid whose index is index. index can have a value of 0, 1, 2, or 3, depending on which point is desired (that is, 0 for the first point, 1 for the second point, etc.). If there are only three corners on the solid, then the points with indices 2 and 3 will have the same value. The returned point will be in WCS coordinates.</summary>
            <param name="index"> Input index (1-4) of the desired point in the solid</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Solid.SetPointAt(System.Int16,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This function sets the index'th point in the solid to the pointValue. index must be 0, 1, 2, or 3. pt must be in WCS coordinates.</summary>
            <param name="index"> Input index (1-4) of the point to set in the solid</param>
            <param name="pointValue"> Input point value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid.Thickness">
            <summary>Returns the thickness of the solid. The thickness is the shape's dimension along its normal vector direction (sometimes called the extrusion direction).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Solid.Normal">
            <summary>Returns the unit normal vector of the plane containing the solid.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Xline">
            <summary>
This .NET class wraps the AcDbXline ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Xline.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Xline.BasePoint">
            <summary>Returns the base point of the xline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Xline.UnitDir">
            <summary>Returns the unit direction vector of the xline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Xline.SecondPoint">
            <summary>Returns the second point of the xline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.KnotCollection">
            <summary>
Represents a collection of Knots.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.CopyTo(System.Double[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Input array to copy to</param>
            <param name="index"> Input index to begin copying at</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.Add(System.Double)">
            <summary>Adds the object represented by value to this collection.</summary>
            <param name="value"> Input value to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.Contains(System.Double)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Input value to check existence of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.Insert(System.Int32,System.Double)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Input index to insert at</param>
            <param name="value"> Input value to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Input index of item to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.GetDistinctKnots">
            <summary>Computes a sequence of all knot values from this collection without repetitions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.GetMultiplicityAt(System.Int32)">
            <summary>Returns knot multiplicity of the knot value specified by index i.</summary>
            <param name="i"> Input index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.GetInterval(System.Int32,System.Double,Autodesk.AutoCAD.Geometry.Interval&)">
            <summary>Returns the non-zero length intervals between knots.</summary>
            <param name="order"> Input order of a spline</param>
            <param name="parameter"> Input parameter</param>
            <param name="interval"> Output containing knot interval</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.IsOn(System.Double)">
            <summary>Returns true if knot is a knot value of this knot collection to its tolerance.</summary>
            <param name="knot"> Input value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.Reverse">
            <summary>Performs a linear transformation on the knot sequence so the first knot is mapped to the maximal value and vice versa.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.SetRange(System.Double,System.Double)">
            <summary>Sets the range of collection between lower and upper parameter.</summary>
            <param name="lower"> Input new lower knot</param>
            <param name="upper"> Input new upper knot</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.KnotCollection.Split(System.Double,System.Int32,System.Int32)">
            <summary>Splits knot sequence at the specified parameter value. The knot at the end of the first piece and at the beginning of the second piece is inserted or deleted to satisfy the input multiplicity values.</summary>
            <param name="parameter"> Input split parameter</param>
            <param name="multiplicityLast"> Input multiplicity of the last knot in the head fraction.</param>
            <param name="multiplicityFirst"> Input multiplicity of the first knot in the tail fraction</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.KnotCollection.Count">
            <summary>Returns the number of items in the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.KnotCollection.Tolerance">
            <summary>Returns the Tolerance property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.KnotCollection.StartParameter">
            <summary>Returns end parameter of the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.KnotCollection.EndParameter">
            <summary>Returns end parameter of the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.KnotCollection.NumberOfIntervals">
            <summary>Returns the number of interval associated with the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Interval">
            <summary>
This .NET class wraps the AcGeInterval ObjectARX class. It represents a finite or semi-infinite interval as the real axis whose bounds are defined with some given tolerance.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.#ctor(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Copy constructor.</summary>
            <param name="other"> Input the interval to be copied into this object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.#ctor(System.Boolean,System.Double,System.Double)">
            <summary>
Constructor that creates an interval with the upper bound equal to bound. If the value of the argument boundedBelow is true, then it sets the lower bound also to bound, otherwise the interval remains unbounded below. Sets the boundary tolerance to the value tolerance.</summary>
            <param name="boundedBelow"> Whether to set a lower bound or leave interval unbounded below</param>
            <param name="bound"> Upper or lower bound</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.#ctor(System.Double,System.Double,System.Double)">
            <summary>Constructor that creates the finite interval with the lower bound equal to lower and the upper bound equal to upper . The boundary tolerance is set to the value tolerance.</summary>
            <param name="lower"> Lower bound</param>
            <param name="upper"> Upper bound</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.#ctor(System.Double)">
            <summary>Constructor that creates the infinite (in both directions) interval and sets the boundary tolerance to the value tolerance.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.GetBounds">
            <summary>Returns lower and upper bounds of this interval. The bound has a meaningful value only if this interval is bounded in the corresponding direction.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.GetMerge(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>The output argument result returns the smallest interval that contains both this interval and the interval otherInterval.</summary>
            <param name="otherInterval"> Input interval with which to merge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.Subtract(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>The empty result is indicated by a return value of 0. If the result is a single interval, then it returns 1, and the result is in lInterval. If the result is two intervals, then it returns 2 with the left result in lInterval and the right result in rInterval. This occurs only if the other interval is entirely contained within this interval (without touching at the ends).</summary>
            <param name="otherInterval"> Input interval with which to merge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IntersectWith(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns true and the intersection of this interval and the interval otherInterval in the output argument result, if they are not disjoint up to the boundary tolerance. Returns false otherwise.</summary>
            <param name="otherInterval"> Input interval with which to merge</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsDisjoint(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns true, if this interval does not intersect the interval otherInterval is bounded within the boundary tolerance of this interval. Returns false otherwise.</summary>
            <param name="otherInterval"> Input terval against which to test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.Contains(System.Double)">
            <summary>Returns true if the value value belongs to this interval with the boundary tolerance of this interval. Returns false otherwise.</summary>
            <param name="value"> Input value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.Contains(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns true if the interval otherInterval belongs to this interval with the boundary tolerance of this interval. Returns false otherwise.</summary>
            <param name="otherInterval"> Input interval against which to test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsContinuousAtUpper(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns true if this interval is bounded above, the interval otherInterval is bounded below, and upper bound of this interval is equal to the lower bound of the otherInterval within the boundary tolerance of this interval. Returns false otherwise.</summary>
            <param name="otherInterval"> Input terval against which to test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsOverlapAtUpper(Autodesk.AutoCAD.Geometry.Interval,Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns true if this interval is bounded above, the interval otherInterval is bounded below, both of them are not singleton, their intersection is not empty and does not coincide with this interval, the upper bound of this interval is contained in otherInterval, and the lower bound of otherInterval is contained in this interval. In this case, the function returns the intersection interval in the output argument overlap. If these conditions are not met, the function returns false.</summary>
            <param name="otherInterval"> Input interval against which to test</param>
            <param name="overlap"> Output intersection interval, if true</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsEqualAtUpper(System.Double)">
            <summary>Returns true if this interval is bounded above and its upper bound is equal to the value within the boundary tolerance of this interval. Returns false otherwise.</summary>
            <param name="value"> Input value against which to test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsEqualAtUpper(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns true if both this interval and the interval otherInterval are either unbounded above or bounded above and their upper bounds are equal within the boundary tolerance of this interval. Returns false otherwise.</summary>
            <param name="otherInterval"> Input value against which to test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsEqualAtLower(System.Double)">
            <summary>Returns true if this interval is bounded below and its lower bound is equal to the value within the boundary tolerance of this interval. Returns false otherwise.</summary>
            <param name="value"> Input value against which to test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsEqualAtLower(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns true if both this interval and the interval otherInterval are either unbounded below or bounded below and their lower bounds are equal within the boundary tolerance of this interval. Returns true otherwise.</summary>
            <param name="otherInterval"> Input value against which to test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Interval.IsPeriodicallyOn(System.Double,System.Double&)">
            <summary>Returns true if there exists an integer N such that this interval contains the value val + N * period. Returns false otherwise.</summary>
            <param name="period"> Input period length</param>
            <param name="value"> Output System.Double object; Output value, if True</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.Unbounded">
            <summary>Interval unbounded in either one of two directions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.LowerBound">
            <summary>Returns the lower bound of this interval, which is meaningful only if this interval is bounded below.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.UpperBound">
            <summary>Returns the upper bound of this interval.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.Element">
            <summary>.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.Length">
            <summary>Returns the length of this interval if it is bounded and -1 otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.Tolerance">
            <summary>Returns the boundary tolerance of this interval. Returns the reference to this interval.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.IsBounded">
            <summary>Returns true if this interval is bounded in both directions. Returns false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.IsBoundedAbove">
            <summary>Returns true if this interval is bounded above. Returns false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.IsBoundedBelow">
            <summary>Returns true if this interval is bounded below. Returns false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.IsUnbounded">
            <summary>Returns true, if this interval is unbounded in either one of two directions. Returns false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Interval.IsSingleton">
            <summary>Returns true if this interval is bounded and the lower bound is equal to the upper bound within the boundary tolerance. Returns false otherwise.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FitData">
            <summary>
This class encapsulates the data returned by the Spline.getFitData() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FitData.GetFitPoints">
            <summary>Returns the fit points of the spline, in WCS coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FitData.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.FitData)">
            <summary>Compares this object to other and returns true if they are equal.</summary>
            <param name="other"> Object to compare with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FitData.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.FitData,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests other against this object for equivalency within the tolerance range specified by tolerance.</summary>
            <param name="other"> Object to compare with</param>
            <param name="tolerance"> Tolerance range</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FitData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Object to compare with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FitData.op_Inequality(Autodesk.AutoCAD.DatabaseServices.FitData,Autodesk.AutoCAD.DatabaseServices.FitData)">
            <summary>Returns true if a is not equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FitData.op_Equality(Autodesk.AutoCAD.DatabaseServices.FitData,Autodesk.AutoCAD.DatabaseServices.FitData)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FitData.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FitData.Degree">
            <summary>Accesses the degree of spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FitData.FitTolerance">
            <summary>Accesses the fit tolerance of spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FitData.TangentsExist">
            <summary>Assesses whether or not specific tangents exist at the endpoints.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FitData.StartTangent">
            <summary>Accesses the start tangent of spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FitData.EndTangent">
            <summary>Accesses the end tangent of spline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.KnotParameterizationEnum">
            <summary>
This wraps the ObjectARX KnotParameterization enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.NurbsData">
            <summary>
Replaces any existing spline data with the data passed in via NurbsData parameters.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.GetControlPoints">
            <summary>Returns a collection of the Spline object's control points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.GetKnots">
            <summary>Returns a collection of the Spline object's knot values.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.GetWeights">
            <summary>Returns a collection of the Spline object's control point weights.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.NurbsData)">
            <summary>Compares this object to other and returns true if they are equal.</summary>
            <param name="other"> Object to check against.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.NurbsData,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests other against this object for equivalency within the tolerance range specified by tolerance.</summary>
            <param name="other"> Object to check against.</param>
            <param name="tolerance"> Tolerance range</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Object to check against.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.op_Inequality(Autodesk.AutoCAD.DatabaseServices.NurbsData,Autodesk.AutoCAD.DatabaseServices.NurbsData)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.op_Equality(Autodesk.AutoCAD.DatabaseServices.NurbsData,Autodesk.AutoCAD.DatabaseServices.NurbsData)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NurbsData.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbsData.Degree">
            <summary>Accesses the degree of spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbsData.Rational">
            <summary>Assesses if the spline is rational.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbsData.Closed">
            <summary>Assesses if the spline is closed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbsData.Periodic">
            <summary>Assesses if the spline is periodic. A periodic spline is a spline with period T such that the point at parameter t + T is equal to the point at parameter t for any value of t.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbsData.ControlPointTolerance">
            <summary>Accesses the control points (in WCS coordinates) of the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.NurbsData.KnotTolerance">
            <summary>Accesses the knot value tolerance of spline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SplineType">
            <summary>
This wraps AcDbSpline::SplineType enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.OrientationType">
            <summary>
This .NET enum wraps the AcGiOrientationType ObjectARX enum. It gives the current orientation type for vertices. The orientation type indicates the direction the vertices in a mesh or shell appear to follow when viewed in order while looking down the normal axis towards any given vertex. Essentially the orientation type defines the normal's positive or negative direction at the vertices.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MapChannel">
            <summary>
This .NET class wraps the AcGiVertexData::MapChannel ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32">
            <summary>
This .NET struct wraps the AcGiPixelBGRA32 ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Constructor. Creates an RGB color with color components r, g, and b and alpha-shading component a correspondingly.</summary>
            <param name="blue"> Input color blue component</param>
            <param name="green"> Input color green component</param>
            <param name="red"> Input color red component</param>
            <param name="alpha"> Input color alpha-shading component</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.#ctor(System.UInt32)">
            <summary>Constructor. Creates an BRG color with color components blue, green, and red and alpha-shading component correspondingly.</summary>
            <param name="bgra"> Input color of component</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.#ctor">
            <summary>Default constructor. Components r, g and b will be set 0, and components alpha-shading will be set 255.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.init">
            <summary>Initializes the object by resetting all values to 0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.Red">
            <summary>Accesses the color value's red component.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.Green">
            <summary>Accesses the color value's green component.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.Blue">
            <summary>Accesses the color value's blue component.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32.Alpha">
            <summary>Accesses the color value's alpha-shading component.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32">
            <summary>
This .NET class wraps the AcGiImageBGRA32 ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32.#ctor(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Constructor which sets all the necessary values.</summary>
            <param name="width"> Input the image's width</param>
            <param name="height"> Input the image's height</param>
            <param name="imageData"> Input the image's buffer data</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32.Width">
            <summary>Accesses the image's width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32.Height">
            <summary>Accesses the image's height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32.Image">
            <summary>Accesses the image's buffer data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Polyline">
            <summary>
This .NET class wraps the ObjectARX AcGiPolyline Class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Polyline.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,System.IntPtr)">
            <summary>Constructor.</summary>
            <param name="pPoints"> A list of points</param>
            <param name="normal"> Input normal.</param>
            <param name="pBaseSubEntMarker"> Subentity marker for first segment.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.Polyline.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Polyline.Points">
            <summary>Accesses the list of points.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Polyline.Normal">
            <summary>Accesses the Normal.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.Polyline.BaseSubEntMarker">
            <summary>Accesses the subentity marker.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.PolylineCollection">
            <summary>
This .NET class wraps the ObjectARX AcGiPolyline Class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PolylineCollection.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PolylineCollection.Add(Autodesk.AutoCAD.GraphicsInterface.Polyline)">
            <summary>Adds a polyline.</summary>
            <param name="value"> Input the polyline object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PolylineCollection.RemoveAt(System.Int32)">
            <summary>Removes the polyline at the specified index.</summary>
            <param name="index"> Input the specified index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.PolylineCollection.Clear">
            <summary>Clears the ployline collection object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.PolylineCollection.Count">
            <summary>Accesses the count of polylines.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary">
            <summary>
This .NET class wraps the AcGiClipBoundary ObjectARX struct.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.GetAptPoints">
            <summary>Returns the m_aptPoints member of the underlying ClipBoundary struct.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.SetAptPoints(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Sets the m_aptPoints member of the underlying ClipBoundary struct.</summary>
            <param name="point"> Input point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.NormalVector">
            <summary>This is Z-Axis of the clip space expressed in the compound object's coordinate system. Often this will be Vector3d.ZAxis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.Point">
            <summary>This is the origin of the clip space expressed in the compound object's coordinate system. Often this will be Point3d.Origin.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.TransformToClipSpace">
            <summary>Sets the TransformToClipSpace property to value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.TransformInverseBlockRefXForm">
            <summary>This is the inverse of the transform that the compound object uses to transform its contents. For a block reference, this is based on the block insertion transform and the translation stored in the block table record.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.ClippingFront">
            <summary>If true, then a front clipping plane is active and FrontClipZ should contain a valid Z depth.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.ClippingBack">
            <summary>If true, then a front clipping plane is active and BackClipZ should contain a valid Z depth.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.FrontClipZ">
            <summary>Specifies the Z depth for the front clipping plane, if active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.BackClipZ">
            <summary>Accesses the Z depth for the back clipping plane, if active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ClipBoundary.DrawBoundary">
            <summary>If true, then the clipping boundary will be drawn to the display.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FindFileHint">
            <summary>
This .NET class wraps the AcDbHostApplicationServices::FindFileHint ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ModelerFlavor">
            <summary>
This .NET class wraps the AcDbHostApplicationServices::ModelerFlavor ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons">
            <summary>
This .NET class wraps the AcadApp::LoadReasons ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PasswordOptions">
            <summary>
This .NET class wraps the AcDbHostApplicationServices::PasswordOptions ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockTable">
            <summary>
This .NET class wraps the AcDbBlockTable ObjectARX class, which is the symbol table for BlockTableRecords, which represent block definitions within a drawing database.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockInsertionPointsEventArgs">
            <summary>
This class provides data for the BlockInsertionPoints event of the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockInsertionPointsEventArgs.BlockTableRecord">
            <summary>Accesses the BlockTableRecord property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockInsertionPointsEventArgs.InsertionPoints">
            <summary>Accesses the InsertionPoints property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlockInsertionPointsEventArgs.AlignmentVectors">
            <summary>Accesses the AlignmentVectors property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockTableRecordEnumerator">
            <summary>
This .NET class wraps the AcDbBlockTableRecordIterator ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlockTableRecordEnumerator.MoveNext">
            <summary>This function returns true if the enumerator has been positioned past either end of the block.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefStatus">
            <summary>
This .NET enum wraps the AcDb::XrefStatus ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockScaling">
            <summary>
This .NET class wraps the AcDbBlockTableRecord::BlockScaling ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent">
            <summary>
This class gives the diffuse component of the material.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.#ctor(Autodesk.AutoCAD.GraphicsInterface.MaterialColor,Autodesk.AutoCAD.GraphicsInterface.MaterialMap)">
            <summary>This constructor initializes the component's values.</summary>
            <param name="color"> Input material color</param>
            <param name="map"> Input material map</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.op_Equality(Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.Color">
            <summary>Returns the current diffuse color value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent.Map">
            <summary>Returns the diffuse component map.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent">
            <summary>
This class gives the specular component of the material.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.#ctor(Autodesk.AutoCAD.GraphicsInterface.MaterialColor,Autodesk.AutoCAD.GraphicsInterface.MaterialMap,System.Double)">
            <summary>This constructor initializes the material specular component.</summary>
            <param name="color"> Input material color</param>
            <param name="map"> Input material map</param>
            <param name="gloss"> Input gloss value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.op_Equality(Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.Color">
            <summary>Returns the specular color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.Map">
            <summary>Returns the specular map.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent.Gloss">
            <summary>Returns the Gloss factor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent">
            <summary>
This class gives the opacity component of the material.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.#ctor(System.Double,Autodesk.AutoCAD.GraphicsInterface.MaterialMap)">
            <summary>This constructor initializes the material opacity component.</summary>
            <param name="percentage"> Input opacity percentage</param>
            <param name="map"> Input material map</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.op_Equality(Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.Map">
            <summary>Returns material component maps. Maps are described by dimension, source, format, and mapping properties.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent.Percentage">
            <summary>Returns the opacity percentage.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent">
            <summary>
This class gives the refraction component of the material.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.#ctor(System.Double,Autodesk.AutoCAD.GraphicsInterface.MaterialMap)">
            <summary>This constructor initializes the material refraction component.</summary>
            <param name="index"> Input index of refraction</param>
            <param name="map"> Input material map</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.op_Equality(Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.Map">
            <summary>Returns the refraction map.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent.Index">
            <summary>Returns the index of refraction.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent">
            <summary>
This class stores to a pointer the material map for the normal map channel of the material, the method used to compute the normal map, and the channel strength.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.op_Equality(Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent,Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.Map">
            <summary>Returns the diffuse component map.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.Method">
            <summary>Stores to a pointer the material map for the normal map channel of the material, the method used to compute the normal map, and the channel strength.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent.Strength">
            <summary>Returns the strength of the normal map channel.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.NormalMapMethod">
            <summary>
This .NET enum wraps the AcGiMaterialTraits2::NormalMapMethod enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.IlluminationModel">
            <summary>
This .NET class wraps the IlluminationModel ObjectARX class. It specifies what illumination model is used in the advanced rendering process when dealing with materials.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ChannelFlags">
            <summary>
This .NET class wraps the ChannelFlags ObjectARX class. It's an enumeration of Material Channels in use.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Mode">
            <summary>
This .NET enum wraps the AcGiMaterialTraits::Mode ObjectARX enum. It is an enumeration of material modes.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.LuminanceMode">
            <summary>
This .NET class wraps the AcGiMaterialTraits2::luminanceMode ObjectARX class. It obtains the luminance mode of the material.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode">
            <summary>
This .NET enum wraps the AcGiMaterialTraits2::GlobalIlluminationMode ObjectARX enum. It indicates the global illumination mode to be set.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode">
            <summary>
This .NET enum wraps the AcGiMaterialTraits2::FinalGatherMode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Projection">
            <summary>
This .NET enum wraps the AcGiMapper::Projection ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.Tiling">
            <summary>
This .NET enum wraps the AcGiMapper::Tiling ObjectARX enum. This enumeration provides values that describe the tiling method of the mapper.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.AutoTransform">
            <summary>
This .NET class wraps the AcGiMapper.AutoTransform ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.RapidRTQuitCondition">
            <summary>
The enumeration to specify the quit condition. One is by render time, the other by render level.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.RapidRTLightingMode">
            <summary>
Lighting Mode.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType">
            <summary>
Filter Type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Curve2d">
            <summary>
This .NET class wraps the AcGeCurve2d ObjectARX class. It's an abstract base class for all 2D curves. Any class that is derived from this class represents a 2D curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetInterval">
            <summary>Returns the parametric range of the curve. The function evalPoint(double) always returns a point on this curve when called with a value within the returned interval.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.SetInterval(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Sets to domain of the curve as per value.</summary>
            <param name="value"> Input interval</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetReverseParameterCurve">
            <summary>Reverses the parametric direction of the curve. The point set of the curve is unchanged, but the direction of the curve is reversed.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>This method calls Curve2d.GetDistanceTo(Curve2d curve, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve"> Input any 2D curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the distance between the closest points between this curve and the input curve.</summary>
            <param name="curve"> Input any 2D curve</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Curve2d.GetDistanceTo(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetDistanceTo(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the distance between the input point and the closest point on this curve.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>This method calls Curve2d.GetClosestPointTo(Curve2d curve, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve"> Input any 2D curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the two closest points between this curve and the input curve.</summary>
            <param name="curve"> Input any 2D curve</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Curve2d.GetClosestPointTo(Point2d curve, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetClosestPointTo(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the closest point on this curve to the input point.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetNormalPoint(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Curve2d.GetNormalPoint(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetNormalPoint(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the point on the input curve whose normal passes through the input point.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsOn(System.Double)">
            <summary>This method calls Curve2d.IsOn(Double parameter, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="parameter"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsOn(System.Double,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if input parameter value is within valid parametric range of curve.</summary>
            <param name="parameter"> Input parameter value</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsOn(Autodesk.AutoCAD.Geometry.Point2d,System.Double&)">
            <summary>Determines if input point lies on curve.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="value"> Output parameter value of point if point lies on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsOn(Autodesk.AutoCAD.Geometry.Point2d,System.Double&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if point lies on curve.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="value"> Output parameter value of point if point lies on curve</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsOn(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Curve2d.IsOn(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsOn(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if input point lies on curve.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetParameterOf(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Curve2d.GetParameterOf(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input point on the curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetParameterOf(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the parameter value of point. This function assumes that point lies on the curve and does not verify this. If point does not lie on the curve, this function returns unpredictable results.</summary>
            <param name="point"> Input point on the curve</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetTrimmedOffset(System.Double,Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType)">
            <summary>This method calls Curve2d.GetTrimmedOffset(Double distance, OffsetCurveExtensionType extensionType, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="distance"> Input offset distance</param>
            <param name="extensionType"> Input determines how offset curve will be extended at points of C1 discontinuity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetTrimmedOffset(System.Double,Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns one or more offset curves that represent the trimmed offset of the curve.</summary>
            <param name="distance"> Input offset distance</param>
            <param name="extensionType"> Input determines how offset curve will be extended at points of C1 discontinuity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsClosed">
            <summary>This method calls Curve2d.IsClosed(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsClosed(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if start point and endpoint of curve are the same.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsPeriodic(System.Double&)">
            <summary>Determines if the curve is periodic. The curve is periodic if and only if it is closed and the two points EvaluatePoint(t) and EvaluatePoint(t+period) are always the same point for all values of t.</summary>
            <param name="period"> Input period of curve parameter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsLinear(Autodesk.AutoCAD.Geometry.Line2d&)">
            <summary>Determines if curve is linear. The line parameter contains meaningful data only if this function returns true.</summary>
            <param name="line"> Output line on which this curve lies if it is linear</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsLinear(Autodesk.AutoCAD.Geometry.Line2d&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if curve is linear. The line parameter contains meaningful data only if this function returns true.</summary>
            <param name="line"> Output line on which this curve lies if it is linear</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetLength(System.Double,System.Double)">
            <summary>This method calls Curve2d.GetLength(Double fromParameter, Double toParameter, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="fromParameter"> Input first parameter value</param>
            <param name="toParameter"> Input second parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetLength(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the arc length of the curve between the two parameter values.</summary>
            <param name="fromParameter"> Input first parameter value</param>
            <param name="toParameter"> Input second parameter value</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetParameterAtLength(System.Double,System.Double,System.Boolean)">
            <summary>
This method calls Curve2d.GetParameterAtLength(Double datumParameter, Double length, Boolean parameterDirection, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="datumParameter"> Input parameter value</param>
            <param name="length"> Input arc length</param>
            <param name="parameterDirection"> Input parameter direction</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetParameterAtLength(System.Double,System.Double,System.Boolean,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>
Returns the parameter value of the point whose arc length distance (from the point with parameter value datumParameter) is the input length. In other words, if.</summary>
            <param name="datumParameter"> Input parameter value</param>
            <param name="length"> Input arc length</param>
            <param name="parameterDirection"> Input parameter direction</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetArea(System.Double,System.Double)">
            <summary>This method calls Curve2d.GetArea(Double startParameter, Double endParameter, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="startParameter"> Input parameter value of interval start</param>
            <param name="endParameter"> Input parameter value of interval end (must be larger than startParameter)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetArea(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the area of the interval of the curve defined by startParameter and endParameter. Returns True if area was successfully computed to within the specified tolerance.</summary>
            <param name="startParameter"> Input parameter value of interval start</param>
            <param name="endParameter"> Input parameter value of interval end (must be larger than startParameter)</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsDegenerate(Autodesk.AutoCAD.Geometry.Entity2d&)">
            <summary>Determines if the curve is degenerate.</summary>
            <param name="result"> Output type of degenerate entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.IsDegenerate(Autodesk.AutoCAD.Geometry.Entity2d&,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the curve is degenerate with a tolerance.</summary>
            <param name="result"> Output type of degenerate entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetSplitCurves(System.Double)">
            <summary>Returns two segments that are obtained by splitting the curve at the input parameter value.</summary>
            <param name="value"> Input parameter value at which curve is to be split</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.Explode(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Explodes the curve into its individual components.</summary>
            <param name="interval"> Input interval of curve that is to be exploded</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetBoundBlockOf(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns the bounding box of the specified sub-interval of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
            <param name="range"> Input sub-interval of curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetOrthoBoundBlockOf(Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Returns the bounding box of the specified sub-interval of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
            <param name="range"> Input sub-interval of curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.EvaluatePoint(System.Double)">
            <summary>Returns the point on the curve that corresponds to the input parameter value.</summary>
            <param name="parameter"> Input parameter value at which curve is to be evaluated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetSamplePoints(System.Int32)">
            <summary>Returns the specified number of points on the curve. The points are equally spaced by parameter value. So if the interval of the curve [0,1] and numSample is 5, the parameter values of the returned points will be 0, 0.25, 0.5, 0.75, and 1.</summary>
            <param name="numSample"> Input number of points that are to be returned</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve2d.GetSamplePoints(System.Double,System.Double,System.Double)">
            <summary>Returns a list of points on the curve between fromParameter and toParameter. The line segment between any two consecutive points does not deviate by more than approxEps from the curve.</summary>
            <param name="fromParameter"> Input starting parameter</param>
            <param name="toParameter"> Input ending parameter</param>
            <param name="approxEps"> Input chord-height tolerance</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2d.BoundBlock">
            <summary>Returns the bounding box of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2d.OrthoBoundBlock">
            <summary>Returns the bounding box of the curve. The sides of the returned box are parallel to the coordinate axes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2d.HasStartPoint">
            <summary>Returns true if curve has a start point. A false means that the parametric interval of the curve does not have a lower bound.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2d.HasEndPoint">
            <summary>Returns true if the curve has an end point.A false means that the parametric interval of the curve does not have an upper bound.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2d.StartPoint">
            <summary>Returns the start point of the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve2d.EndPoint">
            <summary>Returns the end point of the curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.PositionBehavior">
            <summary>
This enum defines the position transform behavior of transient graphics.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior">
            <summary>
This enum defines the scale transform behavior of transient graphics.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.OrientationBehavior">
            <summary>
This enum defines the orientation transform behavior of transient graphics.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ArcType">
            <summary>
This .NET class wraps the AcGiArcType ObjectARX class. ArcType is the enumeration of type of arcs.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.TransparencyMode">
            <summary>
This enum defines the transparency mode to display the image with.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ImageSource">
            <summary>
This .NET enum wraps the AcGiViewportGeometry::ImageSource ObjectARX enum. It defines where images come from.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping">
            <summary>
This class encapsulates the data returned by the Viewport.getFrontAndBackClipValues() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.#ctor(System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>
Fills in the parameters with information about the existence and location of front and back display clipping planes. Clipping planes are always perpendicular to the camera target vector. When active, the geometry in front of the front clipping plane or in back of the back clipping plane is not displayed..</summary>
            <param name="clipFront"> Input Boolean indicating if front clip plane is active</param>
            <param name="clipBack"> Input Boolean indicating if back clip plane is active</param>
            <param name="front"> Input eye coordinate Z value of front clipping plane</param>
            <param name="back"> Input eye coordinate Z value of front clipping plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object with which to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.IsEqualTo(Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping)">
            <summary>This method calls FrontAndBackClipping.IsEqualTo(FrontAndBackClipping a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input object with which to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.IsEqualTo(Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests a for equality to this object by comparing the Front, Back, ClipFront, and ClipBack properties. Front and Back properties must match within the tolerance range specified by tolerance.</summary>
            <param name="a"> Input object with which to check against</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping,Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.op_Equality(Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping,Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.ClipFront">
            <summary>Returns the location of the front clipping plane as a world space distance from the camera target along the eye vector towards the camera position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.ClipBack">
            <summary>Returns the location of the back clipping plane as a world space distance from the camera target along the eye vector away from the camera position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.Front">
            <summary>Returns Front property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping.Back">
            <summary>Returns Back property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ProceduralTexture">
            <summary>
This .NET class wraps the AcGiProceduralTexture ObjectARX class. It serves as the base for various procedural material textures.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ProceduralTexture.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.WoodTexture">
            <summary>
This .NET class wraps the AcGiWoodTexture ObjectARX class. It's an ProceduralTexture derived class representing a "wood" procedural texture.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.Clone">
            <summary>Clones the WoodTexture object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.Set(Autodesk.AutoCAD.GraphicsInterface.WoodTexture)">
            <summary>Sets the realistic wood grain component of a material.</summary>
            <param name="value"> Input new texture value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.op_Equality(Autodesk.AutoCAD.GraphicsInterface.WoodTexture,Autodesk.AutoCAD.GraphicsInterface.WoodTexture)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.WoodTexture,Autodesk.AutoCAD.GraphicsInterface.WoodTexture)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.Color1">
            <summary>Returns the color property of the first wood grain.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.Color2">
            <summary>Returns the color property of the second wood grain.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.RadialNoise">
            <summary>Returns the radial noise level of the wood grain.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.AxialNoise">
            <summary>Returns the axial noise level of the wood grain.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.WoodTexture.GrainThickness">
            <summary>Returns the thickness of the wood grain.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture">
            <summary>
This .NET class wraps the AcGiMarbleTexture ObjectARX class. It represents a "marble" procedural texture.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.Clone">
            <summary>Clones the marble texture.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.Set(Autodesk.AutoCAD.GraphicsInterface.MarbleTexture)">
            <summary>Sets the MarbleTexture object.</summary>
            <param name="value"> Input existing marble texture</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.op_Equality(Autodesk.AutoCAD.GraphicsInterface.MarbleTexture,Autodesk.AutoCAD.GraphicsInterface.MarbleTexture)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.MarbleTexture,Autodesk.AutoCAD.GraphicsInterface.MarbleTexture)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.StoneColor">
            <summary>Returns the stone color value of the marble.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.VeinColor">
            <summary>Returns the vein color of the marble.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.VeinSpacing">
            <summary>Returns the spacing between veins of the marble.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.MarbleTexture.VeinWidth">
            <summary>Returns the width of veins of the marble.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.GenericTexture">
            <summary>
This .NET class wraps the AcGiGenericTexture ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.Clone">
            <summary>Creates a clone of the object and returns the clone. If the function is not successful in creating the clone, then NULL is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.Set(Autodesk.AutoCAD.GraphicsInterface.GenericTexture)">
            <summary>Sets the generic texture property from GenericTexture's generic collection parameters.</summary>
            <param name="value"> Input new value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.CopyFrom(Autodesk.AutoCAD.GraphicsInterface.GenericTexture)">
            <summary>Implemented for the Object protocol.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.op_Equality(Autodesk.AutoCAD.GraphicsInterface.GenericTexture,Autodesk.AutoCAD.GraphicsInterface.GenericTexture)">
            <summary>operator.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.GenericTexture,Autodesk.AutoCAD.GraphicsInterface.GenericTexture)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.GenericTexture.Definition">
            <summary>Assigns a new Variant value to this generic texture.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ImageTexture">
            <summary>
This .NET class wraps the AcGiImageTexture ObjectARX class. It's an abstract class representing an image based texture.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageTexture.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture">
            <summary>
This .NET class wraps the AcGiImageFileTexture ObjectARX class. It represents a file based image texture.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture.Clone">
            <summary>Creates a clone of the object and returns a pointer to the clone.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture.op_Equality(Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture,Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture)">
            <summary>operator.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture.op_Inequality(Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture,Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture.SourceFileName">
            <summary>Returns the file name of the image file in which the material texture is stored.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Entity2d">
            <summary>
This .NET class wraps the AcGeEntity2d ObjectARX class. This is an abstract base class for all point set classes. Any class that is derived from this class represents a set of points in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.Clone">
            <summary>Returns a copy of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Entity2d)">
            <summary>This method calls Entity2d.IsEqualTo(Entity2d entity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="entity"> Input entity to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Entity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two entities are equal to each other.</summary>
            <param name="entity"> Input entity to check against</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.TransformBy(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Transforms the entity by applying the input matrix.</summary>
            <param name="transform"> Input transformation matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.TranslateBy(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Translates the entity by the input vector.</summary>
            <param name="translateVector"> Input vector by which entity is to be translated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.RotateBy(System.Double,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Rotates the entity about the input point by the input angle.</summary>
            <param name="angle"> Input angle of rotation</param>
            <param name="point"> Input point about which to rotate</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.Mirror(Autodesk.AutoCAD.Geometry.Line2d)">
            <summary>Transforms the entity by mirroring it across the input line.</summary>
            <param name="line"> Input 2D mirror line</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.ScaleBy(System.Double,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Scales the entity about the input point by the input scale factor. Input scale factor must be greater than 0.</summary>
            <param name="scaleFactor"> Input amount by which entity is to be scaled</param>
            <param name="point"> Input point about which entity is to be scaled</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.IsOn(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls Entity2d.IsOn(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity2d.IsOn(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if point lies on entity; otherwise, returns false.</summary>
            <param name="point"> Input 2D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PointOnCurve2d">
            <summary>
This .NET class wraps the AcGePointOnCurve2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d,System.Double)">
            <summary>Constructs a point on the input curve at the specified parameter value.</summary>
            <param name="curve"> Input any 2D curve</param>
            <param name="parameter"> Input parameter value on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>Constructs a point on the input curve at the parameter value 0.0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.#ctor">
            <summary>Default constructor. Constructs a point on the curve Line2d.XAxis at the parameter value 0.0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.GetPointAtParameter(System.Double)">
            <summary>Returns the coordinates of the point on curve at the specified parameter value. This function resets the parameter value of the point on curve.</summary>
            <param name="parameter"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.GetPointOnCurve(Autodesk.AutoCAD.Geometry.Curve2d,System.Double)">
            <summary>Returns the curve on which the point lies.</summary>
            <param name="curve"> Input any 2D curve</param>
            <param name="parameter"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.GetDerivative(System.Int32,Autodesk.AutoCAD.Geometry.Curve2d,System.Double)">
            <summary>Returns the derivative of the specified order on the input curve at the specified parameter value. order must be greater than 0 and no larger than 2. This function resets the underlying curve and parameter value of the point on curve.</summary>
            <param name="order"> Input order of derivative</param>
            <param name="curve"> Input any 2D curve</param>
            <param name="parameter"> Input parameter value on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.GetDerivative(System.Int32,System.Double)">
            <summary>Returns the derivative of the specified order at the specified parameter value. order must be greater than 0 and no larger than 2. This function resets the parameter value of the point on curve.</summary>
            <param name="order"> Input order of derivative</param>
            <param name="parameter"> Input parameter value on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve2d.GetDerivative(System.Int32)">
            <summary>Returns the derivative of the specified order. order must be greater than 0 and no larger than 2.</summary>
            <param name="order"> Input order of derivative</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnCurve2d.Curve">
            <summary>Returns the curve on which the point lies.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnCurve2d.Parameter">
            <summary>Returns the parameter value of the point on curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnCurve2d.Point">
            <summary>Returns the coordinates of the point on curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType">
            <summary>
This enum gives the type of extension used in offset curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.BoundBlock2d">
            <summary>
This .NET class wraps the AcGeBoundBlock2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructs a parallelogram given a vertex and two sides.</summary>
            <param name="basePoint"> Input origin vertex a corner of the bounding area</param>
            <param name="direction1"> Input direction and size for first side of the bounding area</param>
            <param name="direction2"> Input direction and size for second side of the bounding area</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs a box contracted to a segment between two points.</summary>
            <param name="point1"> Input point 1</param>
            <param name="point2"> Input point 2</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.#ctor">
            <summary>Constructs a parallelogram contracted to the origin of the coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.GetMaximumPoint">
            <summary>Returns the maximum point of the coordinate belonging to a block.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.GetMinimumPoint">
            <summary>Returns the minimum point of the coordinate belonging to a block.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Sets the block as a parallelogram with given vertex and sides.</summary>
            <param name="basePoint"> Input origin vertex a corner of the bounding area</param>
            <param name="direction1"> Input direction and size for first side of the bounding area</param>
            <param name="direction2"> Input direction and size for second side of the bounding area</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Sets the block as a parallelogram contracted to a segment between two points.</summary>
            <param name="firstPoint"> Input first point</param>
            <param name="secondPoint"> Input second point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.Extend(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Extends the block to include the new point.</summary>
            <param name="point"> Input extension point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.Swell(System.Double)">
            <summary>Swells the block by moving the sides for the distance.</summary>
            <param name="distance"> Input distance to expand the block</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.Contains(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns true if the point belongs to the block. Returns false otherwise.</summary>
            <param name="point"> Input point to test whether the point belongs to the block</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock2d.IsDisjoint(Autodesk.AutoCAD.Geometry.BoundBlock2d)">
            <summary>Returns true if the input block does not intersect with this block. Returns false otherwise.</summary>
            <param name="block"> Input another Autodesk.AutoCAD.Geometry.BoundBlock2d object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock2d.BasePoint">
            <summary>Returns origin vertex, a corner of the bounding area.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock2d.Direction1">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock2d.Direction2">
            <summary>Returns direction and size for second side of the bounding area.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock2d.IsBox">
            <summary>Returns true if the block is a coordinate box. Returns false otherwise.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Transaction">
            <summary>
This .NET class wraps the AcTransaction ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Transaction.GetAllObjects">
            <summary>This function returns all the objects currently open in the transaction.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Transaction.Commit">
            <summary>This function commits the changes made in all the DBObjects opened during the Transaction, and then closes them.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Transaction.Abort">
            <summary>Aborts the transaction.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Transaction.AddNewlyCreatedDBObject(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>obj must point to an object that is newly created (that is, it has never been closed) and is already database resident (that is, it's been added to an Database so it has an objectId)..</summary>
            <param name="obj"> Input object to be added or removed</param>
            <param name="add"> Input Boolean indicating whether to add or remove the object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Transaction.TransactionManager">
            <summary>Accesses the associated transaction manager.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.OpenCloseTransaction">
            <summary>
This class may be used instead of the transaction class in certain scenarios.. It wraps the ObjectId.Open/Close functions, but makes it easier to correctly pair these functions by storing references to every object opened and automatically closing them.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OpenCloseTransaction.Commit">
            <summary>This function commits the changes made in all the DBObjects opened during the OpenCloseTransaction, and then closes them.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OpenCloseTransaction.Abort">
            <summary>Cancels the changes made in all the DBObject opened during the OpenCloseTransaction.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.OpenCloseTransaction.AddNewlyCreatedDBObject(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>obj must point to an object that is newly created (that is, it has never been closed) and is already database resident (that is, it's been added to an Database so it has an objectId)..</summary>
            <param name="obj"> Input object to be added or removed</param>
            <param name="add"> Input Boolean indicating whether to add or remove the object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.OpenCloseTransaction.TransactionManager">
            <summary>Accesses the associated transaction manager.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableStyle">
            <summary>
This .NET class wraps the AcDbTableStyle ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.TextStyle(System.String)">
            <summary>Returns the textstyle id of the specified cell style.</summary>
            <param name="styleName"> Input cell style</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.SetTextStyle(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.String)">
            <summary>Sets the text style for a cell style.</summary>
            <param name="id"> Input TextStyleTableRecord object ID</param>
            <param name="styleName"> Input cell style name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.SetTextStyle(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32)">
            <summary>This function sets the table object to use the TextStyleTableRecord specified by ID for the specified row types. Different row types can be OR'ed.</summary>
            <param name="id"> Input TextStyleTableRecord object ID</param>
            <param name="rowTypes"> Input row types</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.SetTextHeight(System.Double,System.Int32)">
            <summary>This function sets the text height for the specified row types. Different row types can be combined using the OR operator.</summary>
            <param name="height"> Input value indicating the new text height</param>
            <param name="rowTypes"> Input row types for which to set the text height</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.SetBackgroundColorNone(System.Boolean,System.Int32)">
            <summary>
This function enables or disables the background color for the specified row types. Different row types can be OR'd.</summary>
            <param name="value"> Input Boolean indicating whether to enable the background color for the specified row type</param>
            <param name="rowTypes"> Input row types for which to enable or disable the background color</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.SetGridVisibility(System.Boolean,System.Int32,System.Int32)">
            <summary>
This function sets the grid visibility for the specified grid line types and row types. Different grid line and row types can be OR'd.</summary>
            <param name="visible"> Input visibility value</param>
            <param name="gridLineTypes"> Input grid line types for which to set the visibility</param>
            <param name="rowTypes"> Input row types for which to set the visibility</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.PostTableStyleToDatabase(Autodesk.AutoCAD.DatabaseServices.Database,System.String)">
            <summary>Adds a table style to the specified database.</summary>
            <param name="databasePointer"> Input the database to which to add the table style</param>
            <param name="styleName"> Input name for the table style; must be a non-empty string that is less than 256 characters long and conforms to the requirements for Dictionary key strings</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.CellClass(System.String)">
            <summary>Returns the cell classification value for the specified cell style.</summary>
            <param name="styleName"> Input cell style name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.Margin(Autodesk.AutoCAD.DatabaseServices.CellMargins,System.String)">
            <summary>This .NET method wraps the ObjectARX method AcDbTableStyle::margin().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableStyle.SetMargin(Autodesk.AutoCAD.DatabaseServices.CellMargins,System.Double,System.String)">
            <summary>This .NET method wraps the ObjectARX method AcDbTableStyle::setMargin().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.Name">
            <summary>Accesses the name of the table style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.Description">
            <summary>Accesses the description of the table style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.BitFlags">
            <summary>Accesses an integer representing the operation bit SetFlowDirection flags set for the TableStyle object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.FlowDirection">
            <summary>Accesses the flow direction of the table.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.HorizontalCellMargin">
            <summary>Accesses the horizontal cell margin value used by the table style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.VerticalCellMargin">
            <summary>Accesses the vertical cell margin value used by the table style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.IsTitleSuppressed">
            <summary>Assesses if the title is suppressed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.IsHeaderSuppressed">
            <summary>Assesses if the header is suppressed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.Template">
            <summary>Accesses the ID of the Template object in the table style. If the table style does not contain a template, then the returned objectId will be set to NULL.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableStyle.CellStyles">
            <summary>Accesses the cell styles in the table style.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CellClass">
            <summary>
This .NET class wraps the CellClass ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.DynamicLinkerEventArgs">
            <summary>
Read-only</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.DynamicLinkerEventArgs.#ctor(System.String)">
            <summary>Constructs a new link to a file.</summary>
            <param name="fileName"> Input file name</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.DynamicLinkerEventArgs.FileName">
            <summary>Returns the FileName property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.SystemObjects">
            <summary>
This class provides access to the Class Dictionary, Service Dictionary, and Dynamic Linker system objects.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SystemObjects.ClassDictionary">
            <summary>Accesses the class dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SystemObjects.ServiceDictionary">
            <summary>Accesses the service dictionary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SystemObjects.DynamicLinker">
            <summary>Accesses the dynamic linker.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge">
            <summary>
This .NET class wraps the AcDbRadialDimensionLarge ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge.JogAngle">
            <summary>Accesses the jog angle used by the jogged radius dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge.Center">
            <summary>Accesses the center point of the arc dimensioned by the jogged radius dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge.ChordPoint">
            <summary>Accesses the chord point on the arc dimensioned by the jogged radius dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge.JogPoint">
            <summary>Accesses the jog point used by the jogged radius dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge.OverrideCenter">
            <summary>Accesses the overridden center point used by the jogged radius dimension.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ArcDimension">
            <summary>
This .NET class wraps the AcDbArcDimension ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ArcDimension.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,System.String,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The primary constructor.</summary>
            <param name="centerPoint"> Input the center of the arc being dimensioned</param>
            <param name="xLine1Point"> Input the first extension line end point</param>
            <param name="xLine2Point"> Input the second extension line end point</param>
            <param name="arcPoint"> Input the point on arc being dimensioned</param>
            <param name="dimensionText"> Input the dimension text to use instead of calculated value</param>
            <param name="dimensionStyle"> Input the dimension style object ID.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.ArcStartParam">
            <summary>Accesses the point through which the arc length dimension's dimension arc passes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.ArcEndParam">
            <summary>Accesses the parameter of the arc being dimensioned corresponding to the arc length dimension's second definition point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.ArcPoint">
            <summary>Accesses the point through which the arc length dimension's dimension arc passes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.CenterPoint">
            <summary>Accesses the center point of the arc dimensioned by the arc length dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.Leader1Point">
            <summary>Accesses the start point for the arc length dimension's extra leader, if drawn.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.Leader2Point">
            <summary>Accesses the end point for the arc length dimension's extra leader, if drawn.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.XLine1Point">
            <summary>Accesses the start point for the arc length dimension's first extension line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.XLine2Point">
            <summary>Accesses the start point for the arc length dimension's second extension line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.ArcSymbolType">
            <summary>Accesses the type of symbol to use in the arc length dimension's text string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.IsPartial">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ArcDimension.HasLeader">
            <summary>Determines whether the arc length dimension has an extra leader drawn to resolve ambiguity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionHitTestInfo">
            <summary>
This class is a container for the hit test information returned by DatabaseServices.Section.HitTest()> .</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionHitTestInfo.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionHitTestInfo.Index">
            <summary>Returns the zero-based index of the segment  on the section line, which passes near or through the hit point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionHitTestInfo.PtOnSegment">
            <summary>Returns the pointer  to receive the actual point on the section plane geometry, or null if this is not required.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionHitTestInfo.SubItem">
            <summary>Returns or null if this is not required.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionSubItem">
            <summary>
This .NET class wraps the AcDbSection::SubItem ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Section">
            <summary>
This .NET class wraps the AcDbSection ObjectARX class. It represents the section plane entity in AutoCAD.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructor.</summary>
            <param name="pts"> Input vertex points on the section line; should contain at least two points</param>
            <param name="verticalDir"> Input vector on the first segment's plane, normal to the section line</param>
            <param name="vecViewingDir"> Input vector specifying the viewing direction</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs a section plane using the specified points and vector.</summary>
            <param name="pts"> Input vertex points on the section line; should contain at least two points</param>
            <param name="verticalDir"> Input vector on the first segment's plane, normal to the section line</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.GetVertex(System.Int32)">
            <summary>Gets the position of the specified vertex.</summary>
            <param name="nIndex"> Input zero-based index of the vertex to be retrieved; should be less than the number of vertices</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.SetVertex(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets the position of the specified vertex.</summary>
            <param name="nIndex"> Input zero-based index of the vertex to set; should be less than the number of vertices</param>
            <param name="pt"> Input new position of the vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.AddVertex(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Inserts or adds a new vertex to the section plane. If nInsertAt is less than zero, or is equal to or more than the number of vertices, the new vertex will be added after the last vertex.</summary>
            <param name="nInsertAt"> Input index at which to add the new vertex</param>
            <param name="pt"> Input position of the new vertex</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.RemoveVertex(System.Int32)">
            <summary>Removes a vertex from the section plane. The first vertex cannot be removed.</summary>
            <param name="nIndex"> Input index of the vertex to remove</param>
            <param name="nHeightType"> Input one of the Height enum values</param>
            <param name="fHeight"> Input height</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.GetVertices(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This function returns all section plane vertices in the pts array.</summary>
            <param name="pts"> Output reference to receive vertices</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.Height(Autodesk.AutoCAD.DatabaseServices.SectionHeight)">
            <summary>Returns the height of the section plane above or below the section line. The returned height is the indicator height when the section plane type is either plane or boundary, since the cut extends infinitely in the vertical direction for these two types. The height of the cut is returned when the section plane type is volume.</summary>
            <param name="nHeightType"> Input one of the SectionHeight enum values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.SetHeight(Autodesk.AutoCAD.DatabaseServices.SectionHeight,System.Double)">
            <summary>Overloads for the Section.SetHeight method.</summary>
            <param name="nHeightType"> Input one of the Height enum val</param>
            <param name="fHeight"> Input height Sets the height of the section plane above or below the section line. The height is the indicator height when the section plane type is plane or boundary, since the cuts extends infinitely in the vertical direction for these two types.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.HitTest(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Performs a hit test on the section plane and returns the result.</summary>
            <param name="ptHit"> Input point to perform hit test</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.CreateJog(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Creates a jog in the section plane at the specified point.</summary>
            <param name="ptOnSection"> Input point on the section line at which to create the jog</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Section.GenerateSectionGeometry(Autodesk.AutoCAD.DatabaseServices.Entity,System.Array&,System.Array&,System.Array&,System.Array&,System.Array&)">
            <summary>This function generates 2D or 3D section geometry. Sectionable entities include 3dSolid, Surface, Body, and Region.</summary>
            <param name="pEnt"> Input sectionable entity</param>
            <param name="pIntFillEnts"> Return array containing intersection boundary geometry</param>
            <param name="pBackgroundEnts"> Return array containing intersection fill annotation geometry</param>
            <param name="pForegroundEnts"> Return array containing background geometry</param>
            <param name="pFurveTangencyEnts"> Return array containing foreground geometry</param>
            <param name="pCurveTangencyEnts"> Return array containing curve tangency geometry</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.State">
            <summary>Returns the state of this section object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.IsSlice">
            <summary>Specifies if a section object is a slice type. If it is, the state will be set as kBoundary and all jogs will be removed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.ThicknessDepth">
            <summary>Returns the thickness depth of a slice type section. Else it returns 0.0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.HasJogs">
            <summary>Returns if the section has jogs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.Name">
            <summary>Returns the name of the section plane. The name should not be blank and should be unique. It cannot contain the vertical bar, or pipe, character ("|").</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.ViewingDirection">
            <summary>Returns a unit vector that specifies the viewing direction of the section plane. The returned vector is perpendicular to the first segment's plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.VerticalDirection">
            <summary>Returns a unit vector specifying the vertical direction of the section plane. The returned vector is on first segment's plane, perpendicular to the section line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.Normal">
            <summary>Returns the normal  vector. The returned unit vector is perpendicular to the first segment of the section plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.IndicatorTransparency">
            <summary>Returns the transparency value for the section plane indicator. The transparency value is in the range 1 to 100.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.IndicatorFillColor">
            <summary>Returns the fill color of the section plane indicator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.NumVertices">
            <summary>Returns the number of vertices on the section line of the section plane. A valid section plane has a minimum of two vertices.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.Vertices">
            <summary>Returns the 3d vertices of the section plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.Boundary">
            <summary>Assesses the section plane that is bounded by the section line, two side lines, and a back line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.Settings">
            <summary>Returns  the setting property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.IsLiveSectionEnabled">
            <summary>Returns true if live sectioning is  enabled in the section plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.Elevation">
            <summary>Specifies elevation of the plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.TopPlane">
            <summary>Returns TopPlane property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.BottomPlane">
            <summary>Returns the BottomPlane property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Section.SectionPlaneOffset">
            <summary>Returns the section plane offset distance. The offset is the distance between the section plane and the parallel plane passing through WCS origin. If the section line has multiple segments, it is the plane of the first segment.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionState">
            <summary>
This .NET class wraps the AcDbSection::State ObjectARX class. It gives the type of section plane.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionHeight">
            <summary>
This .NET class wraps the AcDbSection::Height ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionSettings">
            <summary>
This .NET class wraps the AcDbSectionSettings ObjectARX class. This class stores section geometry settings.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSettings.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSettings.Reset">
            <summary>Resets the settings for the specified section type to defaults based on the section type nSecType whose settings are to be reset.</summary>
            <param name="nSecType"> Input section type to be reset</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionSettings.CurrentSectionType">
            <summary>Returns the current section type set in the section plane, expressed as an SectionSettings.SectionType enumerator.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionType">
            <summary>
This .NET enum wraps the AcDbSectionSettings::SectionType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionGeneration">
            <summary>
This .NET class wraps the AcDbSectionSettings::Generation ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionGeometry">
            <summary>
This .NET enum wraps the AcDbSectionSettings::Geometry ObjectARX enum. It gives options for section generation. This enum is used to get and set properties for generated section geometry.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionManager">
            <summary>
This .NET class wraps the AcDbSectionManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionManager.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionManager.GetSection(System.String)">
            <summary>Gets the section plane in the database by name.</summary>
            <param name="pszName"> Input name of the section plane to get</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionManager.GetEnumerator">
            <summary>Returns an enumerator for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionManager.GetUniqueSectionName(System.String)">
            <summary>Gets a unique section plane name.</summary>
            <param name="pszBaseName"> Input System.String object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionManager.LiveSection">
            <summary>Gets the currently enabled  live section plane in the database. Live sectioning is either enabled or disabled individually per section object. Live sectioning can be active for no more than one section object at a time.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionManager.NumSections">
            <summary>Returns the number of section planes  in the database.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayLayer">
            <summary>
This .NET class wraps the AcUnderlayLayer ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayLayer.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayLayer.Name">
            <summary>Returns the name of the underlay layer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayLayer.State">
            <summary>Returns the state of the underlay layer.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayLayerState">
            <summary>
State of underlay layer, whether it's enabled or disabled.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayLayerCollection">
            <summary>
This class provides a collection for UnderlayLayer objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayLayerCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.UnderlayLayer[],System.Int32)">
            <summary>Copies the underlay layers to the collection from the specified index.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayLayerCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayLayerCollection.Count">
            <summary>Returns the number of layers in the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayReference">
            <summary>
This .Net class wraps AcDbUnderlayReference ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.SetClipBoundary(Autodesk.AutoCAD.Geometry.Point2d[])">
            <summary>Sets the clip boundary of the underlay. The boundary is defined in model coordinates. (i.e. Given WCS points one must use the inverse of the transformation matrix return by Transform to obtain points that can be passed to this function.).</summary>
            <param name="points"> Input the clip boundary. An array describing a self intersecting polyline is not allowed. An array of two points is allowed and is treated as the minimum, maximum point of a rectangle.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.GetClipBoundary">
            <summary>Returns an array of points that specify the clip boundary of the underlay. The boundary is defined in model coordinates. You must use the transformation matrix returned by the transform()function to obtain WCS points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.GenerateClipBoundaryFromPline(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Generates the clip boundary from a polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Position">
            <summary>Returns the position of the underlay in WCS (or block space coordinates if the reference is part of a block).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.ScaleFactors">
            <summary>Returns the scale factors used to scale the underlay.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Rotation">
            <summary>Returns the rotation value around the axis defined by the point returned by position()> and the vector returned by normal().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Normal">
            <summary>Returns the normal of the underlay.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.DefinitionId">
            <summary>Returns the object ID of the UnderlayDefinition that this underlay references.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Transform">
            <summary>Gets the transformation matrix from the underlay coordinate system to the world coordinate system (or block space coordinates if the underlay is part of a block). the transformation is defined by position()>, normal(), and rotation().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.IsClipped">
            <summary>Returns a Boolean value indicating whether the clip boundary should be used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.IsOn">
            <summary>Returns a Boolean indicating whether the underlay content is shown.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Contrast">
            <summary>Returns the contrast value for the underlay ([0-100]).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Fade">
            <summary>Returns the fade value for the underlay ([0-100]).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Monochrome">
            <summary>Returns a Boolean value indicating whether the underlay content is shown in monochrome.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.UnderlayLayerCollection">
            <summary>Returns underlay layers from the database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.ContrastLowerLimit">
            <summary>Returns the lower limit of the legal  contrast values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.ContrastUpperLimit">
            <summary>Returns the upper limit of the legal  contrast values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.DefaultContrast">
            <summary>Returns the default contrast value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.FadeLowerLimit">
            <summary>Returns the lower limit of the legal  fade values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.FadeUpperLimit">
            <summary>Returns the upper limit of the legal  fade values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.DefaultFade">
            <summary>Returns the default fade value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.AdjustColorForBackground">
            <summary>Sets or returns a Boolean indicating whether the underlay content is adjusted for the current background color. Not all underlay types observe this setting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Height">
            <summary>Accesses the height of the underlay reference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Width">
            <summary>Accesses the width of the underlay reference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Name">
            <summary>Returns the name of the object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.NameOfSheet">
            <summary>Returns the sheet name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.Path">
            <summary>Returns the full path of the underlay.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayReference.IsClipInverted">
            <summary>Accesses the value of the inverted clip flag.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DwfReference">
            <summary>
This .NET class wraps the AcDbDwfReference ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwfReference.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DgnReference">
            <summary>
This .NET class wraps the AcDbDgnReference ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DgnReference.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PdfReference">
            <summary>
This .NET class wraps the ObjectARX class AcDbPdfReference.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PdfReference.#ctor">
            <summary>This is PdfReference, a member of class PdfReference.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition">
            <summary>
This .NET class wraps the AcDbUnderlayDefinition ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition.Load(System.String)">
            <summary>Attempts to load the file returned by the UnderlayDefinition.ActiveFileName property. If password is null but is necessary to open the file, this function will prompt the user.</summary>
            <param name="password"> Input optional password</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition.Unload">
            <summary>Unloads the underlay file. References will behave as if the file was never loaded.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition.SourceFileName">
            <summary>Returns a pointer to the internal data member that holds the name of the file that this underlay references. This name is in the form (relative or full path) that the user specified.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition.ActiveFileName">
            <summary>Returns the name of the file that this  underlay references. This name is always a full path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition.ItemName">
            <summary>Returns a pointer to the internal data member that holds the name of the underlay item that this underlay currently references.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition.UnderlayItem">
            <summary>Returns a pointer to the internal data member that holds the underlay item that this underlay currently references.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition.Loaded">
            <summary>Returns a Boolean value indicating whether  the underlay is currently loaded.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayItem">
            <summary>
This .NET class wraps the AcDbUnderlayItem ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayItem.Name">
            <summary>Returns the name for the item. The  returned name is unique within the file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayItem.Extents">
            <summary>Returns the item's extents in item-model coordinates. The UnderlayReference.Transform property provides the transformation matrix from item-model coordinates to block space coordinates. Block space coordinates usually are equal to WCS coordinates unless the UnderlayReference is part of a block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayItem.Units">
            <summary>Returns the units used by the item.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayItem.Thumbnail">
            <summary>Returns the preview bitmap for the item.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayItem.UsingPartialContent">
            <summary>Specifies whether or not the item is using  only some of the content of the sheet/model represented by the item.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DwfDefinition">
            <summary>
This .NET class wraps the AcDbDwfDefinition ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DwfDefinition.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DwfDefinition.isDWFx">
            <summary>Assesses if this is a DWFx file.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DgnDefinition">
            <summary>
This .NET class wraps the AcDbDgnDefinition ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DgnDefinition.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DgnDefinition.UseMasterUnits">
            <summary>Assesses whether the underlay uses master units in the DGN file when the DGN file is being translated to DWG for the underlay to use. If master units are not used, then subunits are used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DgnDefinition.XrefDepth">
            <summary>Accesses the xref depth value (if any) that the underlay uses. This depth value is used if the DWG file is exported as DGN. For DWG to DGN translation, DGN underlays become DGN xrefs and will be given this depth value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DgnDefinition.ShowRasterRef">
            <summary>Gets a boolean indicating whether raster images should be displayed in referenced (xref) DGN files.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DgnDefinition.SetShowRasterRef">
            <summary>Sets a boolean indicating whether raster images should be displayed in referenced DGN files.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PdfDefinition">
            <summary>
This .NET class wraps the ObjectARX class AcDbPdfDefinition.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PdfDefinition.#ctor">
            <summary>This is PdfDefinition, a member of class PdfDefinition.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MatchProperties">
            <summary>
This .NET class wraps the AcDbMatchProperties ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MatchProperties.CopyProperties(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.Entity,System.Int32)">
            <summary>This method is expected to copy any appropriate properties from sourceEntity to targetEntity. flag is a set of bit flags indicating which properties to copy over. The enumerated type provides some predefined bits for the flag argument. The flag argument is an int so that you can make use of the unused bits for your own purposes.</summary>
            <param name="sourceEntity"> Input entity from which properties will be copied</param>
            <param name="targetEntity"> Input entity to which properties will be copied</param>
            <param name="flag"> Input bit flags indicating which properties to copy</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.InterferenceProtocolExtension">
            <summary>
This .NET class wraps the AcDbInterferencePE ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.InterferenceProtocolExtension.CreateInterferenceObjects(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.Entity,System.Int32)">
            <summary>The implementer is expected to create new Entity instance(s), based on interference between the two provided entities, and append the new entities to the returned array. The caller will either post the new entities to the database or delete them.</summary>
            <param name="ent1"> Input entity 1</param>
            <param name="ent2"> Input entity 2</param>
            <param name="flags"> Input interference flags</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Helix">
            <summary>
This .NET class wraps the AcDbHelix ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Helix.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Helix.CreateHelix">
            <summary>This functions creates the helix geometry based on the values set in prior function calls. Without calling this function, no geometry will be visible on the screen.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Helix.GetAxisPoint">
            <summary>Returns the start point of the axis for the helix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Helix.SetAxisPoint(Autodesk.AutoCAD.Geometry.Point3d,System.Boolean)">
            <summary>
Sets the start point of the axis for the helix.</summary>
            <param name="axisPoint"> Input the 3D point where the axis starts</param>
            <param name="moveStartPoint"> Input Boolean indicating whether to relocate the start point by the same offset that the axis point moved</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.StartPoint">
            <summary>Accesses the start point of the helix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.AxisVector">
            <summary>Accesses the vector for the axis of the helix. The vector is always perpendicular to the line joining the start point and the axis point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.Height">
            <summary>Accesses the height of the helix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.BaseRadius">
            <summary>Accesses the base radius of the helix. This is always the distance between the start point and the axis point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.TopRadius">
            <summary>Accesses the top radius of the helix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.Turns">
            <summary>Accesses the number of turns (revolutions).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.TurnHeight">
            <summary>Accesses the turn height (distance between turns).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.Twist">
            <summary>Accesses the twist of the helix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.Constrain">
            <summary>Accesses the constrain property of the helix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.TurnSlope">
            <summary>Accesses the turn slope angle of the helix.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Helix.TotalLength">
            <summary>Accesses the total length of the helix.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainType">
            <summary>
This .NET class wraps the AcDbHelix::ConstrainType ObjectARX enum. A constraint is used to make a variable constant. When using the height constraint, changes to any other parameters will not change the height.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Scale2d">
            <summary>
This .Net class wraps AcGeScale2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.#ctor(System.Double[])">
            <summary>Constructs a scale from the first two parameters of an array.</summary>
            <param name="xy"> Input array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.#ctor(System.Double,System.Double)">
            <summary>Constructs scale transformation with scale factors.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.#ctor(System.Double)">
            <summary>Constructs the uniform scale transformation with scale factor factor.</summary>
            <param name="factor"> Input uniform scale factor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.PreMultiplyBy(Autodesk.AutoCAD.Geometry.Scale2d)">
            <summary>Sets this scale vector to the product of itself and the scale vector leftSide. Note that the multiplication of scale vectors is commutative.</summary>
            <param name="leftSide"> Input scale vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.PostMultiplyBy(Autodesk.AutoCAD.Geometry.Scale2d)">
            <summary>Sets this scale vector to the product of itself and the scale vector rightSide. Note that the multiplication of scale vectors is commutative.</summary>
            <param name="rightSide"> Input scale vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.MultiplyBy(System.Double)">
            <summary>Returns the scale vector that is the product of the input scale vector and input scale factor.</summary>
            <param name="factor"> Input scale factor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.Inverse">
            <summary>Returns the scale vector with the inverse scale factors.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.IsProportional">
            <summary>This method calls Scale2d.IsProportional(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.IsProportional(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the matrix of scaling corresponding to this scale vector isUniScaledOrtho(). Returns false otherwise.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.GetMatrix">
            <summary>Returns in the output parameter mat the matrix that corresponds to the same scaling transformations as the one determined by this scale vector.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.ExtractScale(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>The function returns scale vector with scale factors equal to the lengths of the vectors forming the columns of the matrix mat.</summary>
            <param name="mat"> Input matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.RemoveScale(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>For each index i is less than 2, this function sets the i-th scale factor of this scale vector to the length of the i-th column of the matrix mat considered as vector. If Determinant(mat) is not positive, then sx is negated. Then for each index i that is less than 2, the i-th column is divided by i-th scale factor.</summary>
            <param name="mat"> Input matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Scale2d)">
            <summary>This method calls Scale2d.IsEqualTo(Scale2d a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input scale vector to test equality for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.IsEqualTo(Autodesk.AutoCAD.Geometry.Scale2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if the matrix of scaling corresponding to this scale vector is equal to the matrix scaling corresponding to the scale vector a.</summary>
            <param name="a"> Input scale vector to test equality for</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.op_Inequality(Autodesk.AutoCAD.Geometry.Scale2d,Autodesk.AutoCAD.Geometry.Scale2d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.op_Equality(Autodesk.AutoCAD.Geometry.Scale2d,Autodesk.AutoCAD.Geometry.Scale2d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.op_Multiply(System.Double,Autodesk.AutoCAD.Geometry.Scale2d)">
            <summary>Multiplies factor and a.</summary>
            <param name="factor"> Left operand</param>
            <param name="a"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.op_Multiply(Autodesk.AutoCAD.Geometry.Scale2d,System.Double)">
            <summary>Multiplies a and factor.</summary>
            <param name="a"> Left operand</param>
            <param name="factor"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.op_Multiply(Autodesk.AutoCAD.Geometry.Scale2d,Autodesk.AutoCAD.Geometry.Scale2d)">
            <summary>Multiplies a and b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Scale2d.ToArray">
            <summary>This method returns an array containing the coordinates of this scale vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Scale2d.X">
            <summary>Returns the X direction scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Scale2d.Y">
            <summary>Returns the Y direction scale.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Background">
            <summary>
This .NET class wraps the AcDbBackground ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Background.GetBackgroundDictionaryId(Autodesk.AutoCAD.DatabaseServices.Database,System.Boolean)">
            <summary>
Given the database, this function opens the background dictionary. If the dictionary does not exist, it will be created if createIfNotPresent is true.</summary>
            <param name="database"> Input the database from which to retrieve the background dictionary</param>
            <param name="createIfNotPresent"> Input whether the function should create the background dictionary if it does not currently exists in the specified database</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SolidBackground">
            <summary>
This .NET class wraps the AcDbSolidBackground ObjectARX class. This class represents a solid background.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SolidBackground.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SolidBackground.Color">
            <summary>Access the solid.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GradientBackground">
            <summary>
This .NET class wraps the AcDbGradientBackground ObjectARX class. This class represents a gradient background.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GradientBackground.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GradientBackground.ColorTop">
            <summary>Accesses the current color value of the top portion of the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GradientBackground.ColorMiddle">
            <summary>Accesses the current color value of the middle portion of the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GradientBackground.ColorBottom">
            <summary>Accesses the current color value of the bottom portion of the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GradientBackground.Horizon">
            <summary>Accesses the horizon value indicating the percentage of unrotated height.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GradientBackground.Height">
            <summary>Accesses the height value representing a percentage of the second color in a three-color gradient. The start point of the second color is determined by the Horizon setting. If the value is 0, the result is a two-color gradient that uses the Top and Bottom colors.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GradientBackground.Rotation">
            <summary>Accesses the angle at which you can rotate a gradient background.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ImageBackground">
            <summary>
This .NET class wraps the AcDbImageBackground ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ImageBackground.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ImageBackground.ImageFileName">
            <summary>Accesses the image file name associated with this background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ImageBackground.FitToScreen">
            <summary>Accesses the value indicating if image background needs to be fit to the screen or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ImageBackground.MaintainAspectRatio">
            <summary>Accesses the value indicating the use of aspect ratio of the image file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ImageBackground.UseTiling">
            <summary>Accesses the image tiling property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ImageBackground.Offset">
            <summary>Accesses the image offset.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ImageBackground.Scale">
            <summary>Accesses the scale values.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground">
            <summary>
This .NET class wraps the AcDbGroundPlaneBackground ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground.ColorSkyZenith">
            <summary>Accesses the color at the sky zenith.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground.ColorSkyHorizon">
            <summary>Returns the color of the sky at the horizon.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground.ColorUndergroundHorizon">
            <summary>Accesses the underground horizon color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground.ColorUndergroundAzimuth">
            <summary>Accesses the underground azimuth color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground.ColorGroundPlaneNear">
            <summary>Accesses the near ground plane color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground.ColorGroundPlaneFar">
            <summary>Accesses the far ground plane color.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VisualStyle">
            <summary>
This .NET class wraps the AcGiVisualStyle ObjectARX class. This class defines a Visual Style - a collection of visual properties that can be applied to graphical entities.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.#ctor">
            <summary>Default constructor. Initializes members to reasonable default values.</summary>
            <param name="type"> Input the type of visual style to configure</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets the operation associated with a property.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty for which the operation is being set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use for the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Double,System.Double,System.Double,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets a color property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:FaceMonoColorEdgeIntersectionColorEdgeObscuredColorEdgeColorEdgeSilhouetteColor</param>
            <param name="red"> Input red color value to set. Valid value is from 0.0 to 1.0.</param>
            <param name="green"> Input green color value to set. Valid value is from 0.0 to 1.0.</param>
            <param name="blue"> Input blue color value to set. Valid value is from 0.0 to 1.0.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Double,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets a double property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:FaceOpacityFaceSpecularEdgeCreaseAngleEdgeOpacityDisplayBrightness</param>
            <param name="dVal"> Input double property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Boolean,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>
Sets a boolean property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:EdgeHidePrecision</param>
            <param name="bVal"> Input boolean property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Int32,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets an integer property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:FaceLightingModelFaceLightingQualityFaceColorModeFaceModifierEdgeModelEdgeStyleEdgeObscuredLinePatternEdgeIntersectionLinePatternEdgeModifierEdgeWidthEdgeOverhangEdgeJitterAmountEdgeSilhouetteWidthEdgeHaloGapEdgeIsolinesDisplayStyleDisplayShadowType</param>
            <param name="nVal"> Input integer property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Object,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets a property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set.</param>
            <param name="val"> Input Autodesk.AutoCAD.GraphicsInterface.Variant property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.GetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty)">
            <summary>Gets a property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to get from the visual style.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.Operation(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty)">
            <summary>Gets the operation associated with a property.</summary>
            <param name="prop"> The property whose operation is to be queried.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.GetPropertyType(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty)">
            <summary>Gets data type of the specified visual style property.</summary>
            <param name="prop"> Input enum Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.VisualStyle.Type">
            <summary>Accesses the visual style type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VisualStyleType">
            <summary>
This .NET class wraps the AcGiVisualStyle::Type ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties::Property.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation">
            <summary>
This .NET enum wraps the ObjectARX enum AcGiVisualStyleOperations::Operation.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VariantType">
            <summary>
This .NET class wraps the AcGiVariant::VariantType ObjectARX class. It describes the current type assigned to the Variant class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle">
            <summary>
This is a .NET wrapper for the AcDbVisualStyle ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.CopyTo(Autodesk.AutoCAD.GraphicsInterface.VisualStyle)">
            <summary>Copies the settings to another object.</summary>
            <param name="pDest"> Input visual style destination.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.CopyFrom(Autodesk.AutoCAD.GraphicsInterface.VisualStyle)">
            <summary>Copies the settings from another object.</summary>
            <param name="pSrc"> Input visual style source</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Double,System.Double,System.Double,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets a color property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:FaceMonoColorEdgeIntersectionColorEdgeObscuredColorEdgeColorEdgeSilhouetteColor</param>
            <param name="red"> Input red color value to set. Valid value is from 0.0 to 1.0.</param>
            <param name="green"> Input green color value to set. Valid value is from 0.0 to 1.0.</param>
            <param name="blue"> Input blue color value to set. Valid value is from 0.0 to 1.0.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Double,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets a double property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:FaceOpacityFaceSpecularEdgeCreaseAngleEdgeOpacityDisplayBrightness</param>
            <param name="dVal"> Input double property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Boolean,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>
Sets a boolean property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:EdgeHidePrecision</param>
            <param name="bVal"> Input boolean property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Int32,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets an integer property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set. Valid Property values for this method are:FaceLightingModelFaceLightingQualityFaceColorModeFaceModifierEdgeModelEdgeStyleEdgeObscuredLinePatternEdgeIntersectionLinePatternEdgeModifierEdgeWidthEdgeOverhangEdgeJitterAmountEdgeSilhouetteWidthEdgeHaloGapEdgeIsolinesDisplayStyleDisplayShadowType</param>
            <param name="nVal"> Input integer property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.SetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty,System.Object,Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation)">
            <summary>Sets a property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty to set.</param>
            <param name="val"> Input Autodesk.AutoCAD.GraphicsInterface.Variant property value to set.</param>
            <param name="op"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation to use when setting the property.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.GetTrait(Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty)">
            <summary>Gets a property of the visual style.</summary>
            <param name="prop"> Input Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty being queried.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.Description">
            <summary>Accesses the description of the visual style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.Type">
            <summary>Assesses the visual style type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBVisualStyle.InternalUseOnly">
            <summary>Assesses if the visual style is for internal use.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Light">
            <summary>
This .NET class wraps the AcDbLight ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Light.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Light.SetHotspotAndFalloff(System.Double,System.Double)">
            <summary>Sets the hotspot and falloff angles. The region between the hotspot and falloff angles is sometimes referred to as the rapid decay area.</summary>
            <param name="hotspot"> Input the hotspot cone angle, in radians. Defines the brightest part of the spot light beam. Must be smaller than or equal to the falloff.</param>
            <param name="falloff"> Input the falloff cone angle, in radians. Defines the full cone of light. This is also known as the field angle. Must be larger than the hotspot.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Light.ResultingColor">
            <summary>Gets the final color of the light. This is determined by a combination of the Lamp color and the Filter Color. This only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.LightType">
            <summary>Accesses the type of the light object. Possible values are: SpotLight, PointLight, and DistantLight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.IsOn">
            <summary>Accesses the Light on/off state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.IsPlottable">
            <summary>Accesses the plottable state of the light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.LightColor">
            <summary>Accesses the emitted color of the light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.Intensity">
            <summary>Accesses the light intensity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.Shadow">
            <summary>Accesses the shadow parameters: shadow type, mapsize, softness, on/off, area-sampled shadow parameters.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.Attenuation">
            <summary>Accesses the light attenuation type, use limits, start limits, and end limits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.Position">
            <summary>Accesses the position of the light source, in the coordinate space of the current context. (WCS).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.TargetLocation">
            <summary>Accesses the position of the light target location, in the coordinate space of the current context. (WCS).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.HotspotAngle">
            <summary>Accesses the hotspot angle of this spot light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.FalloffAngle">
            <summary>Accesses the falloff angle of this spot light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.Direction">
            <summary>Accesses the direction (vector) that the rays of a distant light travel.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.Name">
            <summary>Accesses the name of the light object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.AttenuationType">
            <summary>Accesses the type of attenuation, or decay, for this light. This only applies to point and spot lights. Distant lights always have no attenuation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.StartLimitOffset">
            <summary>Accesses the start limit shadow parameter.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.EndLimitOffset">
            <summary>Accesses the end limit parameter of light attenuation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.UseLimits">
            <summary>Controls the use of StartLimitOffset and EndLimitOffset properties.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.MapSize">
            <summary>Accesses the shadow map size. The returned value should be one of: 64, 128, 256, 512, 1024, 2048, or 4096.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.ShadowType">
            <summary>Accesses the shadow type currently in effect.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.Softness">
            <summary>Accesses the softness shadow parameter.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.PhysicalIntensityMethod">
            <summary>Accesses the physical intensity method of the light. This indicates how the physical intensity of the light is specified, either by peak intensity, flux, or illuminance. This only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.PhysicalIntensity">
            <summary>Accesses the physical intensity of the light. The units are based on the physical intensity method (i.e. candela if PeakIntensity, lumen if Flux, lux if Illuminance). This only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.IlluminanceDistance">
            <summary>Accesses the illuminance distance of the light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.LampColorType">
            <summary>Accesses the lamp color type of the light. This indicates how the lamp color of the light is specified, either as a Kelvin color temperature or a preset lamp color.It only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.LampColorTemp">
            <summary>Accesses the Kelvin color temperature of the light. This only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International), and lamp color type is Kelvin.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.LampColorPreset">
            <summary>Accesses the preset lamp color of the light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.LampColorRGB">
            <summary>Accesses the RGB value for the light's lamp color. This only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.WebFile">
            <summary>Accesses the path to the file containing the light's goniometric data (e.g. Illuminating Engineering Society or IES file). Only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.WebRotation">
            <summary>Accesses the rotation offset used to orient the goniometric data relative to the light orientation. This only applies if LIGHTINGUNITS is set to photometric lighting units (i.e. 1 for American or 2 for International).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Light.HasTarget">
            <summary>Assesses if the light display has a target grip.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PhysicalIntensityMethod">
            <summary>
This .NET class wraps the AcDbLight::PhysicalIntensityMethod ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LampColorType">
            <summary>
This .NET class wraps the AcDbLight::LampColorType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LampColorPreset">
            <summary>
This .NET class wraps the AcDbLight::LampColorPreset ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Sun">
            <summary>
This .NET class wraps the AcDbSun ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Sun.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.IsOn">
            <summary>Gets the Sun's on/off state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.Intensity">
            <summary>Returns the intensity of the Sun  object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.SunColor">
            <summary>Gets the Sun's color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.ShadowParameters">
            <summary>Returns the shadow parameters: shadow type, mapsize, softness, and on/off.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.SkyParameters">
            <summary>Provides access to sky parameters for this light.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.DateTime">
            <summary>Returns the date and the time for the Sun Angle Calculator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.IsDaylightSavingsOn">
            <summary>Gets the Daylight Savings On/Off option for the Sun Angle Calculator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.Azimuth">
            <summary>For internal use only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.Altitude">
            <summary>For internal use only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Sun.SunDirection">
            <summary>Returns the direction (vector) of the sunlight, from the sun to the model.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RenderSettings">
            <summary>
This .NET class wraps the AcDbRenderSettings ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RenderSettings.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.Name">
            <summary>Accesses the user-defined name of the render settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.Description">
            <summary>Accesses the description of the render settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.DisplayIndex">
            <summary>Accesses the display index of this render setting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.DiagnosticBackgroundEnabled">
            <summary>Assesses whether the diagnostic (checker) background is used for rendering.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.MaterialsEnabled">
            <summary>Assesses whether materials are used per-object. When false, all objects are rendered with the global material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.TextureSampling">
            <summary>Assesses whether sampling (filtering) of image textures is on or off.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.BackFacesEnabled">
            <summary>Assesses whether back-facing faces are rendered.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.ShadowsEnabled">
            <summary>Assesses whether shadows are rendered or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.PreviewImageFileName">
            <summary>Accesses the full path and file name of the preview image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderSettings.IsPredefined">
            <summary>Specifies if the settings are predefined or not.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment">
            <summary>
This .NET class wraps the AcDbRenderEnvironment ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.FogEnabled">
            <summary>Assesses whether a fog effect is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.FogBackgroundEnabled">
            <summary>Assesses whether the fog affects the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.FogColor">
            <summary>Accesses the color of the fog effect.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.FogDensity">
            <summary>Accesses the density of the fog effect.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.Distances">
            <summary>Accesses the near and far distances of the fog effect.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.EnvironmentImageEnabled">
            <summary>Assesses whether to use an image for the environment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderEnvironment.EnvironmentImageFileName">
            <summary>Accesses the full path and file name of the environment image.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.IBLBackground">
            <summary>
Image based lighting background.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.IBLBackground.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IBLBackground.Enable">
            <summary>Sets whether IBL is currently active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IBLBackground.IBLImageName">
            <summary>Gets the image used for IBL.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IBLBackground.Rotation">
            <summary>Gets the rotation value for the IBL image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IBLBackground.DisplayImage">
            <summary>Gets whether to display the IBL image as the background.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.IBLBackground.SecondaryBackground">
            <summary>Gets the background to display when DisplayImage is set to false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings">
            <summary>
Container for all properties relating to the rapid RT renderer. See the base class RenderSettings for more information.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.CopyFrom(Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings)">
            <summary>Copy all the render settings from an AcDbRapidRTRenderSettings object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.RenderTarget">
            <summary>Return the render target.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.RenderLevel">
            <summary>Returns the render level.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.RenderTime">
            <summary>Get the render time of the RapidRT render settings.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.LightingModel">
            <summary>Returns the lighting model.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.FilterType">
            <summary>Returns the filter type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.FilterWidth">
            <summary>Returns the filter width.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings.FilterHeight">
            <summary>Returns the filter height.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RapidRTRenderTarget">
            <summary>
This is record RapidRTRenderSettings::RenderTarget.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RenderGlobal">
            <summary>
This .NET class wraps the AcDbRenderGlobal ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RenderGlobal.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderGlobal.ProcedureAndDestination">
            <summary>Accesses the type of view content to render (the procedure) and the desired output target for rendering.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderGlobal.SaveEnabled">
            <summary>Assesses whether to save an image to disk after rendering.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderGlobal.SaveFileName">
            <summary>Accesses the full path and file name of the value returned by SaveEnabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderGlobal.Dimensions">
            <summary>Accesses the dimensions of the rendered image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderGlobal.PredefinedPresetsFirst">
            <summary>Assesses whether predefined (factory) presets appear before the user-defined presets in the user interface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RenderGlobal.HighInfoLevel">
            <summary>Assesses whether settings/statistics are shown in higher level of detail in the user interface.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren">
            <summary>
This class contains a field code plus its embedded or nested (child) fields. See the Field.getFieldCode() function in the ObjectARX Reference.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren.Add(System.Int32,Autodesk.AutoCAD.DatabaseServices.Field)">
            <summary>Adds the new child field field to the array of children at index i.</summary>
            <param name="i"> Index at which the new entry will be added to the array of children.</param>
            <param name="field"> New child field to add to the array of children at index i.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren.Dispose">
            <summary>This is Dispose, a member of class FieldCodeWithChildren.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren.FieldCode">
            <summary>Accesses the FieldCode property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren.Children">
            <summary>Accesses the Children property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags">
            <summary>
This .NET class wraps the AcDbField::FieldCodeFlag ObjectARX enum. It represents the field code flags.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldState">
            <summary>
This .NET enum wraps the AcDbField::State ObjectARX enum. These values specify the state of the field.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions">
            <summary>
This .NET enum wraps the AcDbField::EvalOption ObjectARX enum. These values specify the evaluation option for the field.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FieldFilingOptions">
            <summary>
This .NET enum wraps the AcDbField::FilingOption ObjectARX enum. This value specifies the filing option set by the field evaluators.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HyperLink">
            <summary>
This .NET class wraps the AcDbHyperlink ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLink.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLink.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="other"> Object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HyperLink.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HyperLink.Name">
            <summary>Accesses the hyperlink name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HyperLink.Description">
            <summary>Accesses the hyperlink description (or friendly name).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HyperLink.SubLocation">
            <summary>Accesses the hyperlink sublocation. A sublocation is a specific target name within the named hyperlink.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HyperLink.DisplayString">
            <summary>Accesses the hyperlink display string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HyperLink.IsOutermostContainer">
            <summary>Accesses the hyperlink is associated with the outermost container, and false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HyperLink.NestedLevel">
            <summary>Accesses the nesting level of the associated entity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LoftedSurface">
            <summary>
This .NET class wraps the AcDbLoftedSurface ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.GetGuideProfile(System.Int32)">
            <summary>Returns the guide profile at zero-based index. The returned object contains the guide entity and edge data if the profile is for an edge or set of edges. The caller is responsible for deleting the returned pointer.</summary>
            <param name="idx"> Input index of guide.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.GetCrossSectionProfile(System.Int32)">
            <summary>Returns the cross section profile at zero-based index. The returned object contains the cross section entity and edge data if the profile is for an edge or set of edges, and also contains the continuity and takeoff vector magnitude if idx references the first or last profile. The caller is responsible for deleting the returned pointer.</summary>
            <param name="idx"> Input index of cross section.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.CrossSections">
            <summary>Accesses the number of cross sections.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.GuideCurves">
            <summary>Accesses the Autodesk.AutoCAD.DatabaseServices.Entity[] guide curves.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.PathEntity">
            <summary>Gets the path curve of the surface, or null if no path profile was used to create the surface. If the path is for an edge or set of edges then the edge curve will be returned. The caller should not delete this pointer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.LoftOptions">
            <summary>Gets the loft options used to create this surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.SurfaceType">
            <summary>Gets the type of lofted surface: ordinary loft, blend, or network.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.Closed">
            <summary>Indicates whether the lofted surface is closed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.NumberOfCrossSections">
            <summary>Gets the number of cross sections for the surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.NumberOfGuideCurves">
            <summary>Gets the number of guides for the surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.CrossSectionProfiles">
            <summary>Gets the list of cross section profiles that were used to create the surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.GuideProfiles">
            <summary>Gets the list of guide profiles that were used to create the surface. The returned objects contain the guide entity and edge data if the profile is for an edge or set of edges. The caller is responsible for deleting all pointers in the output list.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.PathProfile">
            <summary>Gets the path profile that was used to create the surface, or null if no path was used. The returned object contains the guide entity and edge data if the profile is for an edge or set of edges.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.StartGuideCurveContinuity">
            <summary>Gets the continuity at the first guide. Input new continuity (must be 0, 1, or 2).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.StartCrossSectionContinuity">
            <summary>Gets the continuity at the first cross section. Sets the continuity at the first cross section and recreates the surface. Input new continuity (must be 0, 1, or 2).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.EndGuideCurveContinuity">
            <summary>Gets the continuity at the last guide. 0, 1, or 2 which corresponds to G0, G1, or G2.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.EndCrossSectionContinuity">
            <summary>Gets and set the continuity at the last cross section. 0, 1, or 2 which corresponds to G0, G1, or G2.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.StartGuideCurveMagnitude">
            <summary>Gets the magnitude of the surface takeoff vector at the first guide, magnitude of the surface takeoff vector at the first profile.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.StartCrossSectionMagnitude">
            <summary>Gets the magnitude of the surface takeoff vector at the first cross section, magnitude of the surface takeoff vector at the first profile.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.EndGuideCurveMagnitude">
            <summary>Gets and sets the magnitude of the surface takeoff vector at the last guide, magnitude of the surface takeoff vector at the first profile.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftedSurface.EndCrossSectionMagnitude">
            <summary>Gets and sets the magnitude of the surface takeoff vector at the last cross section, magnitude of the surface takeoff vector at the first profile.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlaneSurface">
            <summary>
This .NET class wraps the AcDbPlaneSurface ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlaneSurface.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlaneSurface.CreateFromRegion(Autodesk.AutoCAD.DatabaseServices.Region)">
            <summary>Creates a plane surface from region.</summary>
            <param name="region"> Input pointer to any Region object</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Material">
            <summary>
This .NET class wraps the AcDbMaterial ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Material.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Name">
            <summary>Accesses the material name string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Description">
            <summary>Accesses the material description string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Ambient">
            <summary>Accesses the ambient component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Diffuse">
            <summary>Accesses the diffuse component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Specular">
            <summary>Accesses the specular component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Reflection">
            <summary>Accesses the reflection component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Opacity">
            <summary>Accesses the opacity component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Bump">
            <summary>Accesses the bump component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Refraction">
            <summary>Accesses the refraction component of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Translucence">
            <summary>Accesses the translucence value of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.SelfIllumination">
            <summary>Accesses the self-illumination property of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Reflectivity">
            <summary>Accesses the refelectivity of the material. A higher value indicates a highly reflective material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.IlluminationModel">
            <summary>Accesses the illumination model set on this material. This model determines the type of shader used to render this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.ChannelFlags">
            <summary>Accesses the channel flags for this material. The flags indicate which textures are in use by this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Mode">
            <summary>Accesses the mode of this material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.ColorBleedScale">
            <summary>Accesses the color bleed scale value for the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.IndirectBumpScale">
            <summary>Accesses the indirect bump scale value for the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.ReflectanceScale">
            <summary>Accesses the reflectance scale value for the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.TransmittanceScale">
            <summary>Accesses the transmittance scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.TwoSided">
            <summary>Assesses if the material is two-sided.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.LuminanceMode">
            <summary>Accesses the luminance mode of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Luminance">
            <summary>Accesses the luminance value of the material.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.NormalMap">
            <summary>Accesses the material map for the normal map channel of the material, the method used to compute the normal map, and the channel strength.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.Anonymous">
            <summary>Accesses an indication that the material is "anonymous" in that it is intended for programmatic usage via API only, and should not be exposed through any user interface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.GlobalIllumination">
            <summary>Accesses the illumination mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Material.FinalGather">
            <summary>Accesses the final gathering mode.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableContent">
            <summary>
This .NET class wraps the AcDbTableContent ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableContent.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableContent.GetCellStyle(System.Int32,System.Int32)">
            <summary>Gets the cell style of cell, row, or column.</summary>
            <param name="row"> Input System.Int32 object; row index. This can be -1.</param>
            <param name="column"> Input System.Int32 object; column index. This can be -1.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableContent.SetCellStyle(System.Int32,System.Int32,System.String)">
            <summary>Sets the cell style of cell, row, or column.</summary>
            <param name="row"> Input System.Int32 object; row index. This can be -1.</param>
            <param name="column"> Input System.Int32 object; column index. This can be -1.</param>
            <param name="cellStyle"> Input System.String object; cell style to set. The cell style should exist in the table style set in this table.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableContent.GetRowHeight(System.Int32)">
            <summary>Returns the row height.</summary>
            <param name="row"> Input System.Int32 object; row index. It should be more than or equal to 0 and less than the number of rows.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableContent.SetRowHeight(System.Int32,System.Double)">
            <summary>Sets the row height.</summary>
            <param name="row"> Input System.Int32 object.</param>
            <param name="height"> Input System.Double object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableContent.GetColumnWidth(System.Int32)">
            <summary>Returns the column width.</summary>
            <param name="column"> Input System.Int32 object; column index. It should be more than or equal to 0 and less than the number of columns.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableContent.SetColumnWidth(System.Int32,System.Double)">
            <summary>Sets the column width.</summary>
            <param name="column"> Input System.Int32 object; column index. It should be more than or equal to 0 and less than the number of columns.</param>
            <param name="width"> Input System.Double object; column width to set</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TableContent.TableStyleId">
            <summary>Returns the table style id.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableTemplate">
            <summary>
This .NET class wraps the AcDbTableTemplate ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableTemplate.#ctor(Autodesk.AutoCAD.DatabaseServices.Table,Autodesk.AutoCAD.DatabaseServices.TableCopyOptions)">
            <summary>Copy constructor.</summary>
            <param name="table"> Input table from which to capture the template.</param>
            <param name="copyOption"> Input copy option specifying what to capture while capturing the template.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableTemplate.Capture(Autodesk.AutoCAD.DatabaseServices.Table,Autodesk.AutoCAD.DatabaseServices.TableCopyOptions)">
            <summary>Captures table template.</summary>
            <param name="table"> Input table from which to capture the template.</param>
            <param name="copyOption"> Input what to capture while capturing the template.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TableTemplate.CreateTable(Autodesk.AutoCAD.DatabaseServices.TableCopyOptions)">
            <summary>Creates a table template.</summary>
            <param name="copyOption"> Input Autodesk.AutoCAD.DatabaseServices.TableCopyOptions object specifying what to capture while capturing the template.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollectionEnumerator">
            <summary>
This .NET class wraps the AcDbObjectContextCollectionIterator ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollectionEnumerator.MoveNext">
            <summary>Positions the iterator to the next context in the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollectionEnumerator.Reset">
            <summary>Positions the iterator to the beginning of the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollectionEnumerator.Current">
            <summary>Accesses the current object the iterator is pointing to.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection">
            <summary>
This .NET class wraps the AcDbObjectContextCollection ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection.GetContext(System.String)">
            <summary>Gets a copy of a context with the specified name.</summary>
            <param name="contextName"> The name of the context to copy and return.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection.HasContext(System.String)">
            <summary>Determines whether a context with the specified name exists in the collection.</summary>
            <param name="contextName"> The name of the context to find.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection.AddContext(Autodesk.AutoCAD.DatabaseServices.ObjectContext)">
            <summary>Adds a copy of a context to the collection.</summary>
            <param name="ctxt"> The context to copy and add to the collection.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection.RemoveContext(System.String)">
            <summary>Removes a context from the collection.</summary>
            <param name="contextName"> The name of the context to remove from the collection.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection.Name">
            <summary>Accesses the name of the context collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection.CurrentContext">
            <summary>Accesses the current context for the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Wipeout">
            <summary>
This .NET class wraps the AcDbWipeout ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Wipeout.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Wipeout.SetFrom(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets a new wipeout from existing coordinates.</summary>
            <param name="points"> Data points for initialization</param>
            <param name="normal"> Normal vector for initialization</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Wipeout.HasFrame">
            <summary>Assesses if the wipeout has a frame.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle">
            <summary>
This .NET class wraps the AcDbMLeaderStyle ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.#ctor(Autodesk.AutoCAD.DatabaseServices.MLeaderStyle)">
            <summary>Copy constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.OverwritePropChanged">
            <summary>bool overwritePropChanged () const;.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.PostMLeaderStyleToDb(Autodesk.AutoCAD.DatabaseServices.Database,System.String)">
            <summary>ObjectId styleId postMLeaderStyleToDb (AcDbDatabase* pDb, const ACHAR* styleName);.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.ContentType">
            <summary>Accesses the content type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.DrawMLeaderOrderType">
            <summary>Accesses the type of MLeader drawing order.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.DrawLeaderOrderType">
            <summary>Accesses the type of leader drawing order.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.MaxLeaderSegmentsPoints">
            <summary>Accesses the max number of leader segment points. When -1, there is no limit to segment points number.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.FirstSegmentAngleConstraint">
            <summary>Accesses the angle constraint of the first segment of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.SecondSegmentAngleConstraint">
            <summary>Accesses the angle constraint of the second segment of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.LeaderLineType">
            <summary>Accesses the type of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.LeaderLineColor">
            <summary>Accesses the color of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.LeaderLineTypeId">
            <summary>Accesses the line type of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.LeaderLineWeight">
            <summary>Accesses the line weight of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.EnableLanding">
            <summary>Accesses whether landing of leader line is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.LandingGap">
            <summary>Accesses the gap between MText and the tail of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.EnableDogleg">
            <summary>Assesses if dog-leg leader lines are enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.DoglegLength">
            <summary>Accesses the length of dog-leg leader line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.ArrowSymbolId">
            <summary>Accesses the objectId of the arrow symbol.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.ArrowSize">
            <summary>Accesses the arrow size.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.DefaultMText">
            <summary>Accesses the default MText.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextStyleId">
            <summary>Accesses the objectId of text style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextAttachmentType">
            <summary>Two new values: AttachmentCenter and AttachmentLinedCenter.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextAngleType">
            <summary>Accesses the angle type of text with respect to the last leader line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextAlignmentType">
            <summary>Accesses the text alignment type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextAlignAlwaysLeft">
            <summary>Assesses true if the text is set to always align left.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextColor">
            <summary>Accesses the text color of MText.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextHeight">
            <summary>Accesses the text height of MText.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.EnableFrameText">
            <summary>Accesses whether or not the text frame is displayed around the MText.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.BlockId">
            <summary>Accesses the Id of the block table record referenced by MLeader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.BlockColor">
            <summary>Accesses the block color in block content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.BlockScale">
            <summary>Accesses the scale of the block referenced by MLeader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.EnableBlockScale">
            <summary>Assesses if the blockScale value is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.BlockRotation">
            <summary>Accesses the rotation of the block referenced by MLeader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.EnableBlockRotation">
            <summary>Assesses if the blockRotation value is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.BlockConnectionType">
            <summary>Accesses the block connection type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.Scale">
            <summary>Accesses the scale of MLeader created by this style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.BreakSize">
            <summary>Accesses the size of the gap used for breaking leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.Name">
            <summary>Accesses the name of the MLeader style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.TextAttachmentDirection">
            <summary>Accesses the value of the text attachment Direction of MText content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeaderStyle.ExtendLeaderToText">
            <summary>Gets and sets the value indicating whether horizontal leader lines are automatically extended to text.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ContentType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::ContentType ObjectARX enum. This enum describes the types of content type for MLeader.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DrawMLeaderOrderType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::DrawMLeaderOrderType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DrawLeaderOrderType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::DrawLeaderOrderType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AngleConstraint">
            <summary>
This .NET enum wraps the AcDbMLeaderStyle::SegmentAngleType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LeaderType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::LeaderType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextAttachmentType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::TextAttachmentType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LeaderDirectionType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::LeaderDirectionType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextAngleType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::TextAngleType ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextAlignmentType">
            <summary>
This .NET enum wraps the AcDbMLeaderStyle::TextAlignmentType ObjectARX enum. This enum describes the types of text alignment type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlockConnectionType">
            <summary>
This .NET class wraps the AcDbMLeaderStyle::BlockConnectionType ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextAttachmentDirection">
            <summary>
This .NET enum wraps the ObjectARX enum AcDbMLeaderStyle::TextAttachmentDirection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MLeader">
            <summary>
This .NET class wraps the AcDbMLeader ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetPlane">
            <summary>Return the WCS plane which the MLeader resides on.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetPlane(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Sets the plane that will contain the MLeader object. This leader's data members will be updated to reflect the change of plane. To do this, a transformation matrix will be created that will translate all points from the current plane's coordinate system to the new plane's coordinate system--a projection is not used.</summary>
            <param name="value"> Input desired plane within which the MLeader will reside.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetContentGeomExtents">
            <summary>Gets the extents of content in this MLeader object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.AddLeader">
            <summary>Adds a new leader cluster to this MLeader object. A leader cluster is made up by a dog-leg and some leader lines.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.RemoveLeader(System.Int32)">
            <summary>Removes the leader cluster with specified index.</summary>
            <param name="index"> Input the index of the leader to be removed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.AddLeaderLine(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Adds a new leader line to this MLeader object.</summary>
            <param name="point"> Input position of the first(head) vertex of the new leader line.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.AddLeaderLine(System.Int32)">
            <summary>Adds a leaderline to the leader cluster with specified index.</summary>
            <param name="leaderIndex"> Index of the leader cluster.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.RemoveLeaderLine(System.Int32)">
            <summary>Removes the leader line with specified index.</summary>
            <param name="leaderLineIndex"> Input the index of leader cluster.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.AddFirstVertex(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Inserts a vertex to the leader line with specified index as new leader head.</summary>
            <param name="leaderLineIndex"> Input index of the leader line.</param>
            <param name="point"> Input the vertex position.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.RemoveFirstVertex(System.Int32)">
            <summary>Removes the head of the leader line with specified index. The second vertex in this leader line becomes the new head.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetFirstVertex(System.Int32)">
            <summary>Gets head point of specified leader line.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetFirstVertex(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets the leader head with specified point.</summary>
            <param name="leaderLineIndex"> Input the leader line index.</param>
            <param name="point"> Input the point where the new leader head is on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.AddLastVertex(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Appends a vertex to the specified leader line as the new leader tail.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
            <param name="point"> Input the vertex position.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.RemoveLastVertex(System.Int32)">
            <summary>Removes the leader tail of specified leader line.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetLastVertex(System.Int32)">
            <summary>Gets the tail vertex position of specified leader line.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetLastVertex(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets leader tail with specified point.</summary>
            <param name="leaderLineIndex"> Input the leader line index.</param>
            <param name="point"> Input the point where the new leader tail is on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.VerticesCount(System.Int32)">
            <summary>Returns the number of vertices on a leader line.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetVertex(System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets the vertex with specified index in the leader line with a new position specified by point.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
            <param name="index"> Input the index of vertex.</param>
            <param name="point"> Input the new position of this vertex.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetVertex(System.Int32,System.Int32)">
            <summary>Gets position of the vertex with specified index in the leader line with a new position specified by point.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
            <param name="index"> Input index of the vertex.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetLeaderIndex(System.Int32)">
            <summary>Gets the index of leader cluster which the specified leader line is in.</summary>
            <param name="leaderLineIndex"> Input leader line index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetLeaderLineIndexes(System.Int32)">
            <summary>Gets the indexes of leaderlines of the specific leader.</summary>
            <param name="leaderIndex"> Input leader index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetDogleg(System.Int32,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets the dog-leg in the leader cluster specified by leaderIndex with vector.</summary>
            <param name="leaderIndex"> Input leader index.</param>
            <param name="vector"> Input the vector represents the new length and new direction of dog-leg.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetDogleg(System.Int32)">
            <summary>Gets the dog-leg in the leader cluster specified by leaderIndex.</summary>
            <param name="leaderIndex"> Input leader index.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetDoglegLength(System.Int32,System.Double)">
            <summary>Set the length of doglegs in the leader cluster specified by leaderIndex.</summary>
            <param name="leaderIndex"> Input leader index</param>
            <param name="doglegLength"> Input the length of dog-leg leader line</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetDoglegLength(System.Int32)">
            <summary>Gets the length of doglegs in the leader cluster specified by leaderIndex.</summary>
            <param name="leaderIndex"> Input leader index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetArrowSymbolId(System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Sets the arrow head symbol id for the specific leaderline.</summary>
            <param name="leaderLineIndex"> Input the index of the specific leaderline.</param>
            <param name="id"> Input the object id of the arrow head symbol.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetArrowSymbolId(System.Int32)">
            <summary>Returns the object id of the arrow head symbol of the specific leaderline.</summary>
            <param name="leaderLineIndex"> Input the index of the specific leaderline.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetContextDataManager(System.IntPtr)">
            <summary>Sets the context data manager to MLeader.</summary>
            <param name="contextDataManager"> Input the pointer of context data manager.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.getContextDataManager">
            <summary>Returns the context data manager in MLeader.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.HasContent">
            <summary>Returns true if MLeader has content; otherwise, returns false.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.recomputeBreakPoints">
            <summary>Recalculates the dim break point.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.PostMLeaderToDb(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Adds current MLeader object to the modal space of input database.</summary>
            <param name="db"> Input database into which the current MLeader object should be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.ConnectionPoint(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Gets the leader connection point of the specific direction.</summary>
            <param name="direction"> Input the specific direction.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetBlockAttribute(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Gets attribute in block content determined by attribute definition id.</summary>
            <param name="attDefId"> Input attribute definition id.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.SetBlockAttribute(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.AttributeReference)">
            <summary>Set attribute in block content with attribute definition id.</summary>
            <param name="attDefId"> Input attribute definition id.</param>
            <param name="attributeValue"> Input attribute value.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MLeader.GetLeaderIndexes">
            <summary>Gets the indexes of leaders.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.Normal">
            <summary>Accesses the unit normal vector (in WCS coordinates) of the plane that contains the leader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.Scale">
            <summary>Gets or sets the scale for the MLeader.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.LeaderCount">
            <summary>Accesses the number of leaders.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.LeaderLineCount">
            <summary>Accesses the number of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.LeaderLineType">
            <summary>Accesses the leader line type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.LeaderLineColor">
            <summary>Accesses the color of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.LeaderLineTypeId">
            <summary>Accesses the objectId of leader line type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.LeaderLineWeight">
            <summary>Accesses the line weight of leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.LandingGap">
            <summary>Accesses the gap between leader tail and MText.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.EnableLanding">
            <summary>Assesses whether landing of leader line is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.EnableDogleg">
            <summary>Assesses if dog-leg leader line is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.DoglegLength">
            <summary>Accesses the length of dog-leg leader line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.ArrowSymbolId">
            <summary>Accesses the objectId of current arrow symbol.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.ArrowSize">
            <summary>Accesses the arrow size.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.ContentType">
            <summary>Accesses the content type of MLeader object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextStyleId">
            <summary>Accesses the objectId of current text style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextAttachmentType">
            <summary>Accesses the text attachment type of MText in MLeader content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextAngleType">
            <summary>Accesses the angle type of text with respect to the last leader line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextAlignmentType">
            <summary>Accesses the text alignment type of Mtext in MLeader content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextColor">
            <summary>Accesses the text color of Mtext in MLeader content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextHeight">
            <summary>Accesses the text height of MText in MLeader content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.EnableFrameText">
            <summary>Assesses if text frame of MText is visible.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.BlockContentId">
            <summary>Accesses the id of referenced block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.BlockColor">
            <summary>Accesses the block color in block content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.BlockScale">
            <summary>Accesses the scale of referenced block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.BlockRotation">
            <summary>Accesses the rotation of referenced block.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.BlockConnectionType">
            <summary>Accesses how the block is connected with leader lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.EnableAnnotationScale">
            <summary>Assesses if annotation scale is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.MLeaderStyle">
            <summary>Accesses the object ID of current MLeader style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.BlockPosition">
            <summary>Accesses the position of MLeader block content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextLocation">
            <summary>Accesses the location of MLeader MText content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.ToleranceLocation">
            <summary>Accesses the location of MLeader tolerance content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.MText">
            <summary>Accesses the cloned MText.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.TextAttachmentDirection">
            <summary>Accesses the value of the text attachment Direction of MText content.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MLeader.ExtendLeaderToText">
            <summary>Gets and Sets the value indicating whether horizontal leader lines are automatically extended to text.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MoveType">
            <summary>
This .NET class wraps the AcDbMLeader::MoveType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MeshPointMaps">
            <summary>
This class acts as a wrapper for a GeoMesh.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MeshPointMaps.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Constructor sets the default values.</summary>
            <param name="sourcePts"> Input source points collection</param>
            <param name="destPts"> Input destination points collection</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshPointMaps.SourcePonints">
            <summary>Accesses the source points collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshPointMaps.DestPonints">
            <summary>Accesses the destination points collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoLocationData">
            <summary>
This .NET class wraps the AcDbGeoData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.GetMeshPointMap(System.Int32)">
            <summary>This function gets the source point and destination point pair at the specified index as a MeshPointMap.</summary>
            <param name="index"> Input the index to insert at</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.GetMeshPointMaps">
            <summary>This function gets a GeoMesh source points collection and a destination points collection as a MeshPointMaps.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.AddMeshPointMap(System.Int32,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This function adds a source point and destination point pair at the specified index.</summary>
            <param name="index"> Input the index to insert at</param>
            <param name="sourcePt"> Input the source point</param>
            <param name="destPt"> Input the destination point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.SetMeshPointMaps(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>This function sets the source points collection and destination points collection for a GeoMesh.</summary>
            <param name="sourcePts"> Input source points collection</param>
            <param name="destPts"> Input destination points collection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.ResetMeshPointMaps">
            <summary>This function resets the GeoMesh to NULL.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.PostToDb">
            <summary>This function posts this object to the extension dictionary of the dimension or MLeader object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.EraseFromDb">
            <summary>This function erase this object from the database.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.UpdateTransformationMatrix">
            <summary>This function updates the transformation matrix.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.TransformToLonLatAlt(System.Double,System.Double,System.Double)">
            <summary>This function transforms the dwg point provided into a geo space point. It then returns the longitude, latitude, and elevation.</summary>
            <param name="y"> Input y coordinate of dwg point</param>
            <param name="z"> Input z coordinate of dwg point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.TransformToLonLatAlt(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This function transforms the dwg point provided into a geo space point.</summary>
            <param name="dwgPt"> Input dwg point (x, y, z)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.TransformFromLonLatAlt(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This is TransformFromLonLatAlt, a member of class GeoLocationData.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.BlockTableRecordId">
            <summary>Accesses the object Id of model space block table record object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.UpDirection">
            <summary>Accesses the up direction in DWG world coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.NorthDirection">
            <summary>Accesses the north direction angle in DWG world coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.NorthDirectionVector">
            <summary>Accesses the north direction vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.NumMeshPoints">
            <summary>Accesses the total number of mesh points.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.GeoRSSTag">
            <summary>Accesses the the geoRSS tag string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.ScaleEstimationMethod">
            <summary>Accesses the scale estimation method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.ScaleFactor">
            <summary>Accesses the scale factor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.DoSeaLevelCorrection">
            <summary>Assesses if sea level correction is enabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.SeaLevelElevation">
            <summary>Accesses the sea level elevation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoLocationData.CoordinateProjectionRadius">
            <summary>Accesses the coordinate projection radius.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Overrule">
            <summary>
This .NET class wraps the ObjectARX class AcRxOverrule.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.AddOverrule(Autodesk.AutoCAD.Runtime.RXClass,Autodesk.AutoCAD.Runtime.Overrule,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method AcRxOverrule::addOverrule().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.RemoveOverrule(Autodesk.AutoCAD.Runtime.RXClass,Autodesk.AutoCAD.Runtime.Overrule)">
            <summary>This .NET method wraps the ObjectARX method AcRxOverrule::removeOverrule().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.HasOverrule(Autodesk.AutoCAD.Runtime.RXObject,Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>This .NET method wraps the ObjectARX method AcRxOverrule::hasOverrule().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.SetXDataFilter(System.String)">
            <summary>Enables the use of xdata in determining whether overrules apply. Use this method when you want AutoCAD to look for xdata with registeredApplicationName on the overruled subject before calling any of your overrules.</summary>
            <param name="registeredApplicationName"> Input the name of the registered application.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.SetExtensionDictionaryEntryFilter(System.String)">
            <summary>Enables the use of extension dictionary lookups to determine whether overrules apply.</summary>
            <param name="entryName"> Input the name of the entry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.SetCustomFilter">
            <summary>Enables the use of the IsApplicable method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.SetIdFilter(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Enables the use of id lookups to determine whether overrules apply.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.SetNoFilter">
            <summary>Disables all of the filter methods (SetCustomFilter, SetExtensionDictionaryEntryFilter, SetIdFilter, SetXDataFilter) as well as the IsApplicable() method in determining whether an overrule applies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Overrule.IsApplicable(Autodesk.AutoCAD.Runtime.RXObject)">
            <summary>This .NET method wraps the ObjectARX method AcRxOverrule::isApplicable().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Overrule.Overruling">
            <summary>This .NET property wraps the ObjectARX methods AcRxOverrule::isOverruling() and AcRxOverrule::setIsOverruling().</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData">
            <summary>
Faceter settings to be used with the SubDMesh.GetObjectMesh Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.#ctor(System.Double,System.Double,System.Double,System.Double,System.UInt16,System.UInt16,System.UInt16,System.Int16)">
            <summary>Contructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterDevSurface">
            <summary>Accesses the devSurface setting. This value is used (when subdividing the edges and also when placing the grid lines across the face) to control the deviation of the mesh from the FACE.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterDevNormal">
            <summary>Accesses the faceter devNormal setting. This value is used (when subdividing the edges and also when placing the grid lines across the face) to control the angle between facets in the mesh.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterGridRatio">
            <summary>Accesses the value for the maximum aspect ratio for the (quads in the) grid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterMaxEdgeLength">
            <summary>Accesses the value for the maximum number of grid lines that may be used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterMaxGrid">
            <summary>Accesses the value for the maximum number of grid lines that may be used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterMinUGrid">
            <summary>Accesses the value for the minimum number of U parameter grid lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterMinVGrid">
            <summary>Accesses the value for the minimum number of V parameter grid lines.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshFaceterData.FaceterMeshType">
            <summary>Accesses the value for the faceter mesh type:.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MeshDataCollection">
            <summary>
MeshDataCollection is the output of the SubDMesh.GetObjectMesh() method. It is the mesh representation that contains the following mesh data:</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MeshDataCollection.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Int32Collection,Autodesk.AutoCAD.Colors.EntityColorCollection,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshDataCollection.VertexArray">
            <summary>Accesses the vertexArray value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshDataCollection.FaceArray">
            <summary>Accesses the faceArray value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshDataCollection.ColorArray">
            <summary>Accesses the colorArray value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.MeshDataCollection.MaterialIdArray">
            <summary>Accesses the materialIdArray value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SubDMesh">
            <summary>
This .NET class wraps the ObjectARX AcDbSubDMesh Class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetDragStatus(Autodesk.AutoCAD.DatabaseServices.DragStatus)">
            <summary>This function is called when a drag operation involving this entity is starting, ending, or aborting. The status argument provides information about what is happening with the drag operation.</summary>
            <param name="status"> Value describing the status of the drag operation; one of the values from the DragStat enumeration</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetSubDMesh(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Int32Collection,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setSubDMesh.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetSphere(System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setSphere.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetCylinder(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setCylinder.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetCone(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setCone.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetTorus(System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setTorus.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.Setbox(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setBox.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetWedge(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setWedge.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetPyramid(System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setPyramid.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SubdDivideUp">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::subdDivideUp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SubdDivideDown">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::subdDivideDown.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SubdRefine(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::subdRefine.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SubdRefine">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::subdRefine.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SplitFace(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::splitFace.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ExtrudeFaces(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],Autodesk.AutoCAD.Geometry.Point3dCollection,System.Double)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::extrudeFaces(const AcDbFullSubentPathArray& subentPaths, const AcGePoint3dArray& alongPath).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ExtrudeFaces(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],System.Double,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::extrudeFaces(const AcDbFullSubentPathArray& subentPaths, double length, const AcGeVector3d& dir, double taper).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ExtrudeConnectedFaces(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],Autodesk.AutoCAD.Geometry.Point3dCollection,System.Double)">
            <summary>This wraps the ObjectARX AcDbSubDMesh::extrudeConnectedFaces() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ExtrudeConnectedFaces(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],System.Double,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>This wraps the ObjectARX AcDbSubDMesh::extrudeConnectedFaces(const AcDbFullSubentPathArray&amp; subentPaths, double length, const AcGeVector3d&amp; dir, double taper) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetNumberOfSubDividedFacesAt(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This .NET method wraps the ObjectARX AcDbSubDMesh::numOfSubDividedFacesAt Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetVertexAt(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getVertexAt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetVertexAt(System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getVertexAt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetVertexAt(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setVertexAt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetVertexAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setVertexAt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetSubDividedVertexAt(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getSubDividedVertexAt (AcDbSubentId&, AcGePoint3d&).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetSubDividedVertexAt(System.Int32)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getSubDividedVertexAt(Adesk::Int32, AcGePoint3d&).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetCrease(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],System.Double)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setCrease(AcDbFullSubentPathArray&, double).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetCrease(System.Double)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setCrease(double).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetCrease(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getCrease.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetCrease(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getCrease.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetAdjacentSubentPath(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.DatabaseServices.SubentityType)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getAdjacentSubentPath.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetSubentPath(System.Int32,Autodesk.AutoCAD.DatabaseServices.SubentityType)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getSubentPath.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ConvertToSurface(System.Boolean,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method AcDbSubDMesh::convertToSurface Method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ConvertToSurface(System.Boolean,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>
This .NET method wraps the ObjectARX method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ConvertToSolid(System.Boolean,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX AcDbSubDMesh::convertToSolid.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetSubentColor(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getSubentColor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetSubentMaterial(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getSubentMaterial.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetSubentMaterial(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setSubentMaterial.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetSubentMaterialMapper(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getSubentMaterialMapper.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SetSubentMaterialMapper(Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.GraphicsInterface.Mapper)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::setSubentMaterialMapper.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetFacePlane(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::getFacePlane.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ComputeVolume">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::computeVolume.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.ComputeSurfaceArea">
            <summary>This .NET method wraps the ObjectARX method AcDbSubDMesh::computeSurfaceArea.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.MergeFaces(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This wraps the ObjectARX AcDbSubDMesh::mergeFaces() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.Collapse(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This wraps the ObjectARX AcDbSubDMesh::collapse() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.Cap(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>This wraps the ObjectARX AcDbSubDMesh::cap() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.Spin(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This wraps the ObjectARX AcDbSubDMesh::spin() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubDMesh.GetObjectMesh(Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.MeshFaceterData)">
            <summary>Tessellates existing solid or surface object to mesh data using the given faceter settings. The mesh data includes the vertex array, face list array and face data.</summary>
            <param name="dbObj"> Input object to get the mesh.</param>
            <param name="faceterData"> Input faceter setting information.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SmoothLevel">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::subdLevel.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.Watertight">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::isWatertight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.NumberOfFaces">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::numOfFaces.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.NumberOfSubDividedFaces">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::numOfSubDividedFaces.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.NumberOfVertices">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::numOfVertices.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.NumberOfSubDividedVertices">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::numOfSubDividedVertices.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.Vertices">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::getVertices.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.FaceArray">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::getFaceArray.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.NormalArray">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::getNormalArray.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SubDividedVertices">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::getSubDividedVertices.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SubDividedFaceArray">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::getSubDividedFaceArray.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.SubDividedNormalArray">
            <summary>This .NET property wraps the ObjectARX method AcDbSubDMesh::getSubDividedNormalArray.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.VertexNormalArray">
            <summary>This wraps the ObjectARX AcDbSubDMesh::getVertexNormalArray and AcDbSubDMesh::setVertexNormalArray() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.VertexTextureArray">
            <summary>This wraps the ObjectARX AcDbSubDMesh::getVertexTextureArray() and AcDbSubDMesh::setVertexTextureArray() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubDMesh.VertexColorArray">
            <summary>This wraps the ObjectARX AcDbSubDMesh::getVertexColorArray() and AcDbSubDMesh::setVertexColorArray() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Entity3d">
            <summary>
This .NET class wraps the AcGeEntity3d ObjectARX class. It's an abstract base class for all point set classes. Any class that is derived from this class represents a set of points in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.Clone">
            <summary>Returns a copy of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Entity3d)">
            <summary>This method calls Entity3d.IsEqualTo(Entity3d entity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="entity"> Input entity to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.IsEqualTo(Autodesk.AutoCAD.Geometry.Entity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two entities are equal to each other.</summary>
            <param name="entity"> Input 3D mirror line</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.TransformBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Transforms the entity by applying the input matrix.</summary>
            <param name="transform"> Input transformation matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.TranslateBy(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Translates the entity by the input vector.</summary>
            <param name="translateVector"> Input vector by which entity is to be translated</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.RotateBy(System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Rotates the entity by the input angle about the line defined by the input point and vector.</summary>
            <param name="angle"> Input angle of rotation</param>
            <param name="vector"> Input vector about which entity is to be rotated</param>
            <param name="point"> Input point about which to rotate</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.ScaleBy(System.Double,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Scales the entity about the input point by the input scale factor. Input scale factor must be greater than 0.</summary>
            <param name="scaleFactor"> Input amount by which entity is to be scaled</param>
            <param name="point"> Input point about which entity is to be scaled</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.IsOn(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls Entity3d.IsOn(Point3d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Entity3d.IsOn(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns true if point lies on entity; otherwise, returns false.</summary>
            <param name="point"> Input 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PointOnCurve3d">
            <summary>
This .NET class wraps the AcGePointOnCurve3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d,System.Double)">
            <summary>Constructs a point on the input curve at the specified parameter value.</summary>
            <param name="curve"> Input any 3D curve</param>
            <param name="parameter"> Input parameter value on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.#ctor">
            <summary>Default constructor. Constructs a point on the curve Line3d.XAxis at the parameter value 0.0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.IsSingular(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if first derivative vector is zero-length.</summary>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.GetCurvature(System.Double)">
            <summary>Computes the curvature of the curve at the point on the curve at the specified parameter value.</summary>
            <param name="parameter"> Input parameter value on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.GetCurvature">
            <summary>Computes the curvature of the curve at the point on the curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.GetPointAtParameter(System.Double)">
            <summary>Returns the coordinates of the point on curve at the specified parameter value. This function resets the parameter value of the point on curve.</summary>
            <param name="parameter"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.GetPointOnCurve(Autodesk.AutoCAD.Geometry.Curve3d,System.Double)">
            <summary>Returns the coordinates of the point on the input curve at the specified parameter value. This function resets the underlying curve and parameter value of the point on curve.</summary>
            <param name="curve"> Input any 3D curve</param>
            <param name="parameter"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.GetDerivative(System.Int32,Autodesk.AutoCAD.Geometry.Curve3d,System.Double)">
            <summary>Returns the derivative of the specified order on the input curve at the specified parameter value. order must be greater than 0 and no larger than 2. This function resets the underlying curve and parameter value of the point on curve.</summary>
            <param name="order"> Input order of derivative</param>
            <param name="curve"> Input any 3D curve</param>
            <param name="parameter"> Input parameter value on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.GetDerivative(System.Int32,System.Double)">
            <summary>Returns the derivative of the specified order at the specified parameter value. order must be greater than 0 and no larger than 2. This function resets the parameter value of the point on curve.</summary>
            <param name="order"> Input order of derivative</param>
            <param name="parameter"> Input parameter value on curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.GetDerivative(System.Int32)">
            <summary>Returns the derivative of the specified order. order must be greater than 0 and no larger than 2.</summary>
            <param name="order"> Input order of derivative</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnCurve3d.IsSingular">
            <summary>Determines if first derivative vector is zero-length.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnCurve3d.Curve">
            <summary>Returns the curve on which the point lies.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnCurve3d.Parameter">
            <summary>Returns the parameter value of the point on curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnCurve3d.Point">
            <summary>Returns the coordinates of the point on curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.BoundBlock3d">
            <summary>
This .NET class wraps the AcGeBoundBlock3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs a parallelepiped given a vertex and two sides.</summary>
            <param name="point1"> Input origin vertex a corner of the bounding box</param>
            <param name="dir1"> Input direction and size for first side of the bounding box</param>
            <param name="dir2"> Input direction and size for second side of the bounding box</param>
            <param name="dir3"> Input direction and size for third side of the bounding box</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.#ctor">
            <summary>Constructs a parallelepiped contracted to the origin of the coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.GetMaximumPoint">
            <summary>Returns the maximum point of the coordinate belonging to a block.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.GetMinimumPoint">
            <summary>Returns the minimum point of the coordinate belonging to a block.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets the block as a parallelepiped with given vertex and sides.</summary>
            <param name="basePoint"> Input origin vertex a corner of the bounding box</param>
            <param name="dir1"> Input direction and size for first side of the bounding box</param>
            <param name="dir2"> Input direction and size for second side of the bounding box</param>
            <param name="dir3"> Input direction and size for third side of the bounding box</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets the block as a parallelepiped contracted to a segment between two points.</summary>
            <param name="basePoint"> Input first point</param>
            <param name="maximumPoint"> Input second point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.Extend(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Extends the block to include the new point.</summary>
            <param name="pointToInclude"> Input extension point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.Swell(System.Double)">
            <summary>Swells the block by moving the sides for the distance.</summary>
            <param name="distance"> Input distance to expand the block</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.Contains(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns true if the point belongs to the block. Returns false otherwise.</summary>
            <param name="pointToTest"> Input point to test whether the point belongs to the block</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundBlock3d.IsDisjoint(Autodesk.AutoCAD.Geometry.BoundBlock3d)">
            <summary>Returns true if the input block does not intersect with this block. Returns false otherwise.</summary>
            <param name="block"> Input another Autodesk.AutoCAD.Geometry.BoundBlock3d object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock3d.BasePoint">
            <summary>Returns origin vertex, a corner of the bounding area.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock3d.Direction1">
            <summary>Returns direction and size for first side of the bounding box.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock3d.Direction2">
            <summary>Returns the direction and size for second side of the bounding box.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock3d.Direction3">
            <summary>Returns the direction and size for third side of the bounding box.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.BoundBlock3d.IsBox">
            <summary>Returns true if the block is a coordinate box. Returns false otherwise.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.SplineEntity3d">
            <summary>
This .Net class wraps AcGeSplineEnt3d ObjectARX class. It represents different spline entities in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity3d.GetContinuityAtKnot(System.Int32)">
            <summary>Returns the degree of the highest derivative that is continuous at a knot. For example, if the spline does not have its first derivative at the knot indexed by i, then the value 0 is returned.</summary>
            <param name="i"> Input knot index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity3d.GetContinuityAtKnot(System.Int32,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the degree of the highest derivative that is continuous at a knot. For example, if the spline does not have its first derivative at the knot indexed by index, then the value 0 is returned.</summary>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
            <param name="index"> Input knot index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity3d.KnotAt(System.Int32)">
            <summary>Returns a knot value from the spline's knot vector.</summary>
            <param name="i"> Input index of a knot</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity3d.SetKnotAt(System.Int32,System.Double)">
            <summary>Resets the value of a knot at a given index i.</summary>
            <param name="i"> Input index of knot</param>
            <param name="value"> Input value of knot</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity3d.ControlPointAt(System.Int32)">
            <summary>Returns a control point from the array of spline's control points.</summary>
            <param name="i"> index of a control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity3d.SetControlPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Resets a control point from the spline's control array.</summary>
            <param name="i"> Input index of a control point in the control array</param>
            <param name="point"> Input value of the point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.IsRational">
            <summary>Returns a flag indicating if the spline is a polynomial or rational. This function makes sense only for an NurbCurve3d> object derived from the AcGeSplineEnt3d class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.Degree">
            <summary>Returns the degree of spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.Order">
            <summary>Returns spline's order. The curve is defined on the interval between knot values indexed by order - 1 and numberOfKnots - order. In the case of a B-spline, the order is greater than spline degree by 1. In the case of a polyline, the order is equal to 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.NumberOfKnots">
            <summary>Returns the number of knots in the knot vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.Knots">
            <summary>Return the spline's knot vector. The intervals between two consecutive knots partition the spline into polynomial or rational pieces.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.NumberOfControlPoints">
            <summary>Returns the number of control points in the control array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.StartParameter">
            <summary>Returns the minimal parameter on the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.EndParameter">
            <summary>Returns the maximal parameter on the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.StartPoint">
            <summary>Returns the point on the curve at the minimal parameter value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.EndPoint">
            <summary>Returns the point on the spline at the maximal parametric value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity3d.HasFitData">
            <summary>Returns true if the spline is constructed by using any interpolating fit data. Returns false otherwise.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.EllipticalArc3d">
            <summary>
This .NET class wraps the AcGeEllipArc3d ObjectARX class. It represents both full ellipses and elliptical arcs in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Constructs an ellipse with the specified center, major and minor axes, major and minor radii, and start and end angles.</summary>
            <param name="center"> Input ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
            <param name="startAngle"> Input angle of ellipse start point</param>
            <param name="endAngle"> Input angle of ellipse end point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double)">
            <summary>Constructs a full ellipse with the specified center, major and minor axes, and major and minor radii.</summary>
            <param name="center"> Input ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.#ctor">
            <summary>Default constructor. Constructs full ellipse centered at origin (0,0,0) with X and Y axis for major and minor axes respectively. Major and minor radius are both 1, so constructed ellipse is just the unit circle in the XY plane centered at the origin.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.ClosestPointToPlane(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls EllipticalArc3d.ClosestPointToPlane(PlanarEntity plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.ClosestPointToPlane(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the point on this ellipse that is closest to the given plane.</summary>
            <param name="plane"> Input plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls EllipticalArc3d.IntersectWith(PlanarEntity plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input any plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input plane intersects the ellipse.</summary>
            <param name="plane"> Input any plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls EllipticalArc3d.IntersectWith(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input line intersects the ellipse.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.ProjectedIntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls EllipticalArc3d.ProjectedIntersectWith(LinearEntity3d line, Vector3d projectionDirection, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="projectionDirection"> Input direction of projection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.ProjectedIntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the points on the ellipse and line that projects to the same point when projected onto a plane whose normal is projectionDirection.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="projectionDirection"> Input direction of projection</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.GetPlane">
            <summary>Returns the infinite plane in which the ellipse lies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IsCircular">
            <summary>This method calls EllipticalArc3d.IsCircular(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IsCircular(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if ellipse is a circular arc.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IsInside(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method calls EllipticalArc3d.IsInside(Point3d pointValue, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="pointValue"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.IsInside(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines whether the input point lies inside the ellipse. This function treats the ellipse as a full ellipse even if it is bounded. It determines if the input point lies inside the full ellipse.</summary>
            <param name="pointValue"> Input any 3D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.SetAxes(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Resets the major and minor axes of the ellipse.</summary>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.SetAngles(System.Double,System.Double)">
            <summary>Changes the start point and endpoint of the ellipse by resetting the angles of the start point and endpoint.</summary>
            <param name="startAngle"> Input angle of ellipse start point</param>
            <param name="endAngle"> Input angle of ellipse end point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Changes the definition of the ellipse to have the specified center, major and minor axes, major and minor radii, and start and end angles.</summary>
            <param name="center"> Input ; ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
            <param name="startAngle"> Input angle of ellipse start point</param>
            <param name="endAngle"> Input angle of ellipse end point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double)">
            <summary>Changes the definition of the ellipse to be a full ellipse with the specified center, major and minor axes, and major and minor radii.</summary>
            <param name="center"> Input ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.Center">
            <summary>Returns the center point of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.Normal">
            <summary>Returns the normal vector of the ellipse. The ellipse is oriented counterclockwise around this vector. This function always returns a unit vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.MinorAxis">
            <summary>Returns the minor axis vector of the ellipse. This function always returns a unit vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.MajorAxis">
            <summary>Returns the major axis vector of the ellipse. This function always returns a unit vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.MinorRadius">
            <summary>Returns the minor radius of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.MajorRadius">
            <summary>Returns the major radius of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.StartAngle">
            <summary>Returns the angle of the ellipse start point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.EndAngle">
            <summary>Returns the angle of the endpoint of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.StartPoint">
            <summary>Returns the start point of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc3d.EndPoint">
            <summary>Returns the endpoint of the ellipse.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.LinearEntity3d">
            <summary>
This .NET class wraps the AcGeLinearEnt3d ObjectARX class. This is an abstract base class for all 3D line classes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IntersectWith(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls LinearEntity3d.IntersectWith(PlanarEntity plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input any planar entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IntersectWith(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if line intersects input plane and if so returns their intersection point.</summary>
            <param name="plane"> Input any planar entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls LinearEntity3d.IntersectWith(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines intersect and if so returns their intersection point.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.ProjectedIntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls LinearEntity3d.ProjectedIntersectWith(LinearEntity3d line, Vector3d projectionDirection, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="projectionDirection"> Input direction of projection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.ProjectedIntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Finds the points on the two lines which project into the same point when projected onto a plane whose normal is projectionDirection. This function is mainly used by graphics where projectionDirection is the line of sight. In this case, this function returns the points on the two lines where the lines appear to intersect. If the lines do not actually intersect, then the vector between the two points is parallel to projectionDirection.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="projectionDirection"> Input direction of projection</param>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.Overlap(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls LinearEntity3d.Overlap(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.Overlap(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines overlap and if so returns the line that coincides with their region of overlap. The returned overlap line may be an object of any derived class of LinearEnt3d, depending on the types of the two lines.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsOn(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This method calls LinearEntity3d.IsOn(Plane plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input any plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsOn(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if line lies on input plane.</summary>
            <param name="plane"> Input any plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsParallelTo(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>This method calls LinearEntity3d.IsParallelTo(PlanarEntity plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input any planar entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsParallelTo(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if line is parallel to input plane.</summary>
            <param name="plane"> Input any planar entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsParallelTo(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls LinearEntity3d.IsParallelTo(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsParallelTo(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines are parallel.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.PlanarEntity)">
            <summary>Determines if two lines are perpendicular.</summary>
            <param name="plane"> Input any planar entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.PlanarEntity,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if line is perpendicular to input plane.</summary>
            <param name="plane"> Input any planar entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls LinearEntity3d.IsPerpendicularTo(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines are perpendicular.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsColinearTo(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls LinearEntity3d.IsColinearTo(LinearEntity3d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 3D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.IsColinearTo(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines are colinear.</summary>
            <param name="line"> Input any 3D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.GetPerpendicularPlane(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns a plane that is perpendicular to this line and passes through the input point.</summary>
            <param name="intersectionPoint"> Input any 3D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity3d.GetLine">
            <summary>Returns an infinite line that is coincident with this line. This function can be called for LineSeg3d and Ray3d objects to get an infinite line from a bounded line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LinearEntity3d.PointOnLine">
            <summary>Returns an arbitrary point on the line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LinearEntity3d.Direction">
            <summary>Returns direction vector of line. This vector is a unit vector and points in the direction of increasing parameter value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData">
            <summary>
This class contains the data returned by the NurbCurve3.FitData property.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.IsEqualTo(Autodesk.AutoCAD.Geometry.NurbCurve3dFitData)">
            <summary>Compares this object to a and returns true if they are equal.</summary>
            <param name="a"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.op_Inequality(Autodesk.AutoCAD.Geometry.NurbCurve3dFitData,Autodesk.AutoCAD.Geometry.NurbCurve3dFitData)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.op_Equality(Autodesk.AutoCAD.Geometry.NurbCurve3dFitData,Autodesk.AutoCAD.Geometry.NurbCurve3dFitData)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.FitPoints">
            <summary>Returns the FitPoints property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.Degree">
            <summary>Returns the Degree property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.FitTolerance">
            <summary>Returns the FitTolerance property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.TangentsExist">
            <summary>Returns the TangentsExist property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.StartTangent">
            <summary>Returns the StartTangent property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dFitData.EndTangent">
            <summary>Returns the EndTangent property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbCurve3dData">
            <summary>
This class contains data that defines a NurbCurve3d object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dData.IsEqualTo(Autodesk.AutoCAD.Geometry.NurbCurve3dData)">
            <summary>Compares this object to a and returns true if they are equal.</summary>
            <param name="a"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dData.op_Inequality(Autodesk.AutoCAD.Geometry.NurbCurve3dData,Autodesk.AutoCAD.Geometry.NurbCurve3dData)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dData.op_Equality(Autodesk.AutoCAD.Geometry.NurbCurve3dData,Autodesk.AutoCAD.Geometry.NurbCurve3dData)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3dData.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dData.Degree">
            <summary>Returns the Degree property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dData.Rational">
            <summary>Returns the Rational property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dData.Periodic">
            <summary>Returns the Periodic property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dData.ControlPoints">
            <summary>Returns the ControlPoints property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dData.Knots">
            <summary>Returns the Knots property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3dData.Weights">
            <summary>Returns the Weights property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbCurve3d">
            <summary>
This class represents non-uniform rational B-spline in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor(Autodesk.AutoCAD.Geometry.LineSegment3d)">
            <summary>Constructs spline representing a line segment.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor(Autodesk.AutoCAD.Geometry.EllipticalArc3d)">
            <summary>Constructs spline geometrically identical to an elliptic arc.</summary>
            <param name="ellipse"> Input elliptic arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>Constructs a 3d polynomial spline interpolating a given array if 3d points within a global tolerance.</summary>
            <param name="fitPoints"> Input points interpolating the spline curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Constructs a 3d polynomial spline interpolating a given array if 3d points within given tolerance.</summary>
            <param name="fitPoints"> Input points interpolating the spline curve</param>
            <param name="fitTolerance"> Input maximal deviation of the curve from the fitPoints</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Boolean,System.Boolean,Autodesk.AutoCAD.Geometry.KnotParameterizationEnum)">
            <summary>
This wraps the AcGeNurbCurve3d::AcGeNurbCurve3d (const AcGePoint3dArray&amp; fitPoints, const AcGeVector3d&amp; startTangent, const AcGeVector3d&amp; endTangent, Adesk::Boolean startTangentDefined = Adesk::kTrue, Adesk::Boolean endTangentDefined = Adesk::kTrue, AcGe::KnotParameterization knotParam = kChord, const AcGeTol&amp; fitTolerance = AcGeContext::gTol) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor(System.Int32,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,System.Boolean)">
            <summary>
Constructs a 3D rational spline by a knot vector, control points, and weights. If the spline is rational, control points and weights must have same length..</summary>
            <param name="degree"> Input the degree of spline.</param>
            <param name="knots"> Input an array of knot values, partitioning the spline's domain into rational pieces.</param>
            <param name="controlPoints"> Input an array of 3d control points.</param>
            <param name="weights"> Input an array of weight values.</param>
            <param name="periodic"> Input a flag indicating whether the spline is a periodic.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor(System.Int32,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point3dCollection,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method..</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.#ctor">
            <summary>Default constructor. This is only a placeholder. No data is stored.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.GetFitTangents">
            <summary>Returns the fit tangents of spline. Returns false if spline was not constructed from fit points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.GetFitPointAt(System.Int32)">
            <summary>Returns the fit point corresponding to the specified index. Returns true if index is greater than or equal to 0 and less than the total number of fit points.</summary>
            <param name="index"> Input index of fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.GetWeightAt(System.Int32)">
            <summary>Resets the weight of the specified control point. index must be greater than or equal to 0 and less than the number of control points.</summary>
            <param name="index"> Input index of control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.GetParametersOfC1Discontinuity">
            <summary>This method calls NurbCurve3d.GetParametersOfC1Discontinuity(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.GetParametersOfC1Discontinuity(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns parameter values of all points on the spline where the tangent vector is not continuous. These will be points where the tangent vector just to the left of the point is not equal to the tangent vector just to the right of the point. The returned parameter values will only be at spline knot values.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.GetParametersOfG1Discontinuity">
            <summary>This method calls NurbCurve3d.GetParametersOfG1Discontinuity(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.GetParametersOfG1Discontinuity(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns parameter values of all points on the spline where the tangent vector is not continuous. These will be points where the tangent vector just to the left of the point does not have the same direction as the tangent vector just to the right of the point. The returned parameter values will only be at spline knot values.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, the fit point at the specified index is reset to the new value.</summary>
            <param name="index"> Input index of fit point that is to be modified</param>
            <param name="point"> Input new fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.AddFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, a new fit point is added at the specified index. The fit point that was formerly at index is moved to index+1, index+1 gets moved to index+2, etc. index must be greater than or equal to 0 and less than or equal to the number of fit points.</summary>
            <param name="index"> Input index of fit point that is to be added</param>
            <param name="point"> Input new fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.DeleteFitPointAt(System.Int32)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, the fit point at the specified index is deleted.</summary>
            <param name="index"> Input index of fit point that is to be deleted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitTangents(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, the spline is recomputed using the new start and end tangent vectors.</summary>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitData(System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This method calls NurbCurve3d.SetFitData(Int32 degree, Point3dCollection fitPoints, Tolerance fitTolerance) with tolerance set to Global.</summary>
            <param name="degree"> Input new degree of spline</param>
            <param name="fitPoints"> Input new knot values</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitData(System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Recomputes the spline from the input fit points and makes it of the specified degree. If fitTolerance is not 0, then the constructed spline may not pass through the fit points. But the maximum distance from any fit point to the constructed spline will be no greater than fitTolerance.</summary>
            <param name="degree"> Input new degree of spline</param>
            <param name="fitPoints"> Input new knot values</param>
            <param name="fitTolerance"> Input tolerance to which spline will fit the interpolation points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitData(Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Boolean)">
            <summary>
This method calls NurbCurve3d.SetFitData(KnotCollection fitKnots, Point3dCollection fitPoints, Vector3d startTangent, Vector3d endTangent, Tolerance fitTolerance, Boolean periodic) with tolerance set to Global.</summary>
            <param name="fitKnots"> Input new knot values</param>
            <param name="fitPoints"> Input new fit points</param>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
            <param name="periodic"> Input indicating whether spline should be made periodic</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitData(Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance,System.Boolean)">
            <summary>
Recomputes the spline from the input fit points, start and end tangents, and fit tolerance..</summary>
            <param name="fitKnots"> Input new knot values</param>
            <param name="fitPoints"> Input new fit points</param>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
            <param name="fitTolerance"> Input tolerance to which spline will fit the interpolation points</param>
            <param name="periodic"> Input indicating whether spline should be made periodic</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitData(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.KnotParameterizationEnum,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This wraps the AcGeNurbCurve3d::setFitData(const AcGePoint3dArray&amp; fitPoints, const AcGeVector3d&amp; startTangent, const AcGeVector3d&amp; endTangent, KnotParameterization knotParam, const AcGeTol&amp; fitTol=AcGeContext::gTol) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitData(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls NurbCurve3d.SetFitData(Point3dCollection fitPoints, Vector3d startTangent, Vector3d endTangent, Tolerance fitTolerance) with tolerance set to Global.</summary>
            <param name="fitPoints"> Input new fit points</param>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetFitData(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Recomputes the spline from the input fit points, start and end tangents, and fit tolerance. If fitTolerance is not 0, then the constructed spline may not pass through the fit points, but the maximum distance from any fit point to the constructed spline will be no greater than fitTolerance.</summary>
            <param name="fitPoints"> Input new knot values</param>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
            <param name="fitTolerance"> Input tolerance to which spline will fit the interpolation points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.PurgeFitData">
            <summary>Deletes all fit data used to construct the spline. This function does not change the definition of the spline (that is, does not change the control points, knots, or weights).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.AddKnot(System.Double)">
            <summary>Adds new knot to the spline knot sequence. If the newKnot value is already a knot, then this function does nothing.</summary>
            <param name="newKnot"> Input new knot value to be inserted into the knot vector of the spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.InsertKnot(System.Double)">
            <summary>Adds new knot to the spline knot sequence. If the newKnot value is already a knot, then the multiplicity of the knot is increased by 1.</summary>
            <param name="newKnot"> Input new knot value to be inserted into the knot vector of the spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetWeightAt(System.Int32,System.Double)">
            <summary>Resets the weight of the specified control point. index must be greater than or equal to 0 and less than the number of control points.</summary>
            <param name="index"> Input index of control point</param>
            <param name="value"> Input new weight to be assigned to control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.SetEvaluateMode(System.Boolean)">
            <summary>
Resets the state of the evaluation mode in order turn the internal optimization on or off.</summary>
            <param name="evaluateMode"> Input state of the evaluation mode</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.JoinWith(Autodesk.AutoCAD.Geometry.NurbCurve3d)">
            <summary>Recomputes spline by joining input spline to this spline. Neither spline may be closed and the start point of the input spline must be equal to the endpoint of this spline.</summary>
            <param name="curve"> Input spline to be joined with this spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.HardTrimByParams(System.Double,System.Double)">
            <summary>Trims the spline to the new start and end parameters. This is done by adding and removing control points and knots, and is not done by just resetting the interval on which the spline is defined.</summary>
            <param name="newStartParameter"> Input new start parameter of spline</param>
            <param name="newEndParameter"> Input new end parameter of spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.MakeRational(System.Double)">
            <summary>If the spline is not already rational, then it is made rational and each control point is assigned the specified weight. If the spline is already rational, the weight at each control point is multiplied by the input weight.</summary>
            <param name="weight"> Input weight to be assigned to each control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.MakeClosed">
            <summary>If the spline is not already closed, it is made closed by creating a periodic spline defined by the current fit points or control points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.MakePeriodic">
            <summary>Make a spline into a periodic spline. It converts a spline defined by clamped format into unclamped format. If a spline is not closed, we will make it closed first.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.MakeNonPeriodic">
            <summary>Make a periodic spline non-periodic. It converts a spline from unclamped format into clamped format by inserting full knot multiplicity at start and end point.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.MakeOpen">
            <summary>If the spline is closed and if,.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.ElevateDegree(System.Int32)">
            <summary>The degree of the spline is increased by the specified amount.</summary>
            <param name="plusDegree"> Input amount by which degree is to be increased</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.AddControlPointAt(System.Double,Autodesk.AutoCAD.Geometry.Point3d,System.Double)">
            <summary>This wraps AcGeNurbCurve3d::addControlPointAt(double newKnot, const AcGePoint3d&amp; point, double weight = 1.0) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve3d.DeleteControlPointAt(System.Int32)">
            <summary>This wraps AcGeNurbCurve3d::deleteControlPointAt(int index) method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3d.NumFitPoints">
            <summary>Returns the number of fit points used to construct the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3d.FitTolerance">
            <summary>Returns the fit tolerance used to construct the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3d.NumWeights">
            <summary>Returns number of weights for the spline. This will be 0 if the spline is not rational or equal to the number of control points if the spline is rational.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3d.FitKnotParameterization">
            <summary>This wraps AcGeNurbCurve3d::getFitKnotParameterization and AcGeNurbCurve3d::setFitKnotParameterization methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3d.EvalMode">
            <summary>Returns state of the current evaluation mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3d.FitData">
            <summary>Returns all fit data used to construct the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve3d.DefinitionData">
            <summary>Returns all data that defines the spline. If spline is not rational, weights array will be empty.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PolylineCurve3d">
            <summary>
This .NET class wraps the AcGePolyline3d ObjectARX class. It's represents a piecewise linear spline entity in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d,System.Double)">
            <summary>Constructs a polyline approximating a curve within the specified epsilon.</summary>
            <param name="curve"> Input curve to be approximated by polyline</param>
            <param name="epsilon"> Input approximation epsilon</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>Constructs a polyline with the knots and point values established.</summary>
            <param name="knots"> Input knot vectors</param>
            <param name="controlPoints"> Input collection of fit points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>Constructs a polyline with the specified fit points.</summary>
            <param name="points"> Input collection of fit points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve3d.#ctor">
            <summary>Default constructor. Constructs placeholder only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve3d.FitPointAt(System.Int32)">
            <summary>Returns fit point at the specified index i.</summary>
            <param name="i"> Input index of a fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve3d.SetFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets the fit point at the specified index i.</summary>
            <param name="i"> Input index of a fit point</param>
            <param name="point"> Input fit point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PolylineCurve3d.NumberOfFitPoints">
            <summary>Returns number of fit points.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstraintGroupNode">
            <summary>
This class represents a node owned by Assoc2dConstraintGroup. Usually a node is connected with multiple other nodes and the connection between two nodes is not directed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstraintGroupNode.NodeId">
            <summary>Gets the node id of the ConstraintGroupNode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstraintGroupNode.OwningConstraintGroupId">
            <summary>Gets the ObjectId of its owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry">
            <summary>
This class represents a constrained geometry node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry.CommonConstraints(Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry)">
            <summary>Returns the array of references to GeometricalConstraint objects between this constrained geometry and the other constrained geometry otherConsGeom.</summary>
            <param name="otherConsGeom"> The reference to the other ConstrainedGeometry object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry.IsReadOnly">
            <summary>Indicates whether this constrained geometry is read-only -- cannot be modified or transformed, in other words, it is fixed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry.GeomDependencyId">
            <summary>Gets the ObjectId of the AssocGeomDependency object referenced by this constrained geometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry.OwningRigidSet">
            <summary>Gets the reference to the owning ConstrainedRigidSet object which this constrained geometry belongs to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry.ConnectedConstraints">
            <summary>Gets the the array of references to GeometricalConstraint objects which reference this constrained geometry. For a bounded line, arc or bounded ellipse, the array also contains the Coincident constraints between its implicit points and this constrained geometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry.ConnectedGeometries">
            <summary>Gets the array of references to ConstrainedGeometry objects to which this constrained geometry is indirectly connected through the common constraints.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry.FullSubentityPaths">
            <summary>Gets the array of FullSubentPaths of the subentities of the AutoCAD Entities that correspond to this constrained geometry.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet">
            <summary>
This class represents a constrained rigid set node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet.#ctor(System.Boolean,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>
Constructor.</summary>
            <param name="bScalable"> Input boolean indicating whether this rigid set can be uniformly scaled or not.</param>
            <param name="trans"> Input Matrix3d indicating the initial transform of this rigid set Relative to the work plane of the owning Assoc2dConstraintGroup object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet.GetConstrainedGeomAt(System.Int32)">
            <summary>Returns the reference to the constrained geometry.</summary>
            <param name="index"> Input the index.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet.NumOfConstrainedGeoms">
            <summary>Gets the number of contained constrained geometries.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet.Transform">
            <summary>Gets the transform of this rigid set, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint">
            <summary>
This class represents a constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.GetConnectedHelpParameterFor(Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry)">
            <summary>Returns reference to HelpParameter which this constraint and the specified constrained geometry both are connected to.</summary>
            <param name="consGeom"> The reference to ConstrainedGeometry object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.Deactivate">
            <summary>Leaves the GeometricalConstraint node in the Assoc2dConstraintGroup but removes it from the DCM dimension system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.Reactivate">
            <summary>Takes an inactive GeometricalConstraint and adds it to the DCM dimension system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.ConnectedGeometries">
            <summary>Gets the array of references to ConstrainedGeometry objects which this constraint is connected to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.ConnectedHelpParameters">
            <summary>Gets the array of references to HelpParameter objects which this constraint is connected to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.OwningCompositeConstraint">
            <summary>Gets the reference to the owning CompositeConstraint object if this constraint is owned by a composite constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.IsActive">
            <summary>Indicates whether the GeometricalConstraint is in DCM dimension system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.IsImplied">
            <summary>Indicates whether the GeometricalConstraint is implied.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.IsInternal">
            <summary>Indicates whether the constraint is implied or is part of a composite constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.IsEnabled">
            <summary>Indicates whether the constraint is enabled.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedPoint">
            <summary>
This class represents a constrained point node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedPoint.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained line is holding on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedPoint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedPoint.Point">
            <summary>Gets the point position, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint">
            <summary>
This class represents a constrained implicit point node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint.#ctor(System.UInt32,Autodesk.AutoCAD.DatabaseServices.ImplicitPointType,System.Int32)">
            <summary>Constructor.</summary>
            <param name="constrCurvId"> Input ConstraintGroupNodeId indicating the constrained curve to which this implicit point belongs.</param>
            <param name="ptype"> Input ImplicitPointType indicating the type of this implicit point.</param>
            <param name="index"> Input int indicating the define point index of this implicit point. It is only valid when the point type is kDefineImplicit. Default value is -1 (invalid index).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint.PointType">
            <summary>Gets the type of this implicit point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint.PointIndex">
            <summary>Gets the defined point index of this implicit point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint.ConstrainedCurveId">
            <summary>Gets the ConstraintGroupNodeId of the constrained curve to which this implicit point belongs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint.Point">
            <summary>Gets the point position, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ImplicitPointType">
            <summary>
The type of a constrained implicit point.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve">
            <summary>
This class represents a constrained curve node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve.IsBounded">
            <summary>Indicates whether this constrained curve is bounded.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve.ConstrainedImplicitPoints">
            <summary>Gets the array of references to ConstrainedImplicitPoint objects which belong to this constrained curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedLine">
            <summary>
This class represents a constrained unbounded line node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedLine.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained line is holding on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedLine.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedLine.PointOnLine">
            <summary>Gets some arbitrary point on the unbounded line, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedLine.Direction">
            <summary>Gets the direction unit vector of the unbounded line, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedConstructionLine">
            <summary>
This class represents a constrained unbounded construction line node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Constrained2PointsConstructionLine">
            <summary>
This class represents a constrained unbounded construction line node in the owning Assoc2dConstraintGroup. Internally it is made coincident to two ConstrainedPoint objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Constrained2PointsConstructionLine.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructor.</summary>
            <param name="point1"> Input first 3D point. Relative to the work plane of the owning Assoc2dConstraintGroup object.</param>
            <param name="point2"> Input second 3D point. Relative to the work plane of the owning Assoc2dConstraintGroup object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Constrained2PointsConstructionLine.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedDatumLine">
            <summary>
This class represents a constrained datum unbounded line node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedDatumLine.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructor.</summary>
            <param name="pointOnLine"> Input any 3D point. Relative to the work plane of the owning Assoc2dConstraintGroup object.</param>
            <param name="direction"> Input any 3D vector(must not be zero length). Relative to the work plane of the owning Assoc2dConstraintGroup object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedDatumLine.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine">
            <summary>
This class represents a constrained bounded line node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained line is holding on.</param>
            <param name="ray"> Input Boolean indicating whether this bounded line is a ray.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine.IsRay">
            <summary>Indicates whether this bounded line is a ray - a partially bounded line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine.StartPoint">
            <summary>Gets the start point of the bounded line, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine.EndPoint">
            <summary>Gets the end point of the bounded line, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine.MidPoint">
            <summary>Gets the mid point of the bounded line, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedCircle">
            <summary>
This class represents a constrained circle node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedCircle.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained circle is holding on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedCircle.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedCircle.Radius">
            <summary>Gets the radius of the constrained circle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedCircle.CenterPoint">
            <summary>Gets the center point of the constrained circle, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedArc">
            <summary>
This class represents a constrained arc node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedArc.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained arc is holding on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedArc.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedArc.StartPoint">
            <summary>Gets the start point of the constrained arc, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedArc.EndPoint">
            <summary>Gets the end point of the constrained arc, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedArc.MidPoint">
            <summary>Gets the mid point of the constrained arc, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse">
            <summary>
This class represents a constrained ellipse node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained ellipse is holding on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse.Direction">
            <summary>Gets the direction unit vector of the major axis of the constrained ellipse, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse.MajorRadius">
            <summary>Gets the major radius of the constrained ellipse. The major radius may be smaller than minor radius, this is different from EllipArc3d.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse.MinorRadius">
            <summary>Gets the minor radius of the constrained ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse.CenterPoint">
            <summary>Gets the center point of the constrained ellipse, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedEllipse">
            <summary>
This class represents a constrained ellipse arc node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedEllipse.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained bounded ellipse is holding on.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedEllipse.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedEllipse.StartPoint">
            <summary>Gets the start point of the constrained bounded ellipse, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedEllipse.EndPoint">
            <summary>Gets the end point of the constrained bounded ellipse, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConstrainedSpline">
            <summary>
This class represents a constrained NURBS spline node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedSpline.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.Geometry.NurbCurve3d)">
            <summary>Constructor.</summary>
            <param name="geomDependencyId"> Input ObjectId indicating the AssocGeomDependency object to which this constrained spline is holding on.</param>
            <param name="spline"> Input NurbCurve3d indicating the AcGe representation of this constrained spline Relative to the work plane of the owning Assoc2dConstraintGroup object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedSpline.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConstrainedSpline.DefinePointAt(System.Int32)">
            <summary>Returns the define point of the constrained spline. Relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
            <param name="index"> Input the index.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedSpline.NurbSpline">
            <summary>Gets the NurbCurve3d representation of the constrained spline, relative to the work plane of the owning Assoc2dConstraintGroup object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ConstrainedSpline.NumOfDefinePoints">
            <summary>Gets the number of define points of the constrained spline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HelpParameter">
            <summary>
This class represents a help parameter node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HelpParameter.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HelpParameter.ConnectedGeometry">
            <summary>Gets the reference to the ConstrainedGeometry which this help parameter is connected to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HelpParameter.ConnectedConstraint">
            <summary>Gets the reference to the GeometricalConstraint which this help parameter is connected to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HelpParameter.ConnectedEqualparamConstraints">
            <summary>Gets the array of references to EqualHelpParameterConstraint objects which this constraint is connected to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.HelpParameter.Value">
            <summary>Gets the value of this help parameter; the value is always larger than or equal to 0.0.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CompositeConstraint">
            <summary>
This class represents a composite constraint node in the owning Assoc2dConstraintGroup. It is the base class for all the kind of composite constraints, the owned constraints are all applied on(connected with) the same constrained geometries.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompositeConstraint.OwnedConstraints">
            <summary>Gets the array of references to GeometricalConstraint objects which are owned by this composite constraint.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EqualHelpParameterConstraint">
            <summary>
This class represents a EqualHelpParameter constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EqualHelpParameterConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EqualHelpParameterConstraint.GetEqualHelpParameters(Autodesk.AutoCAD.DatabaseServices.HelpParameter&,Autodesk.AutoCAD.DatabaseServices.HelpParameter&)">
            <summary>Returns pointers to the two HelpParameter objects which this constraint is connected to.</summary>
            <param name="The returned pointer to the first AcHelpParameter object."> </param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PerpendicularConstraint">
            <summary>
This class represents a Perpendicular constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PerpendicularConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.NormalConstraint">
            <summary>
This class represents a Normal constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.NormalConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCurveConstraint">
            <summary>
This class represents a PointCurve (coincident) constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCurveConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ColinearConstraint">
            <summary>
This class represents a Colinear (coincident) constraint node in the owning Assoc2dConstraintGroup. It can be applied between two constrained line.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ColinearConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCoincidenceConstraint">
            <summary>
This class represents a PointCoincidence (coincident) constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCoincidenceConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ConcentricConstraint">
            <summary>
This class represents a Concentric constraint node in the owning Assoc2dConstraintGroup. It can be applied between two circles, arcs or ellipses.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ConcentricConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CenterPointConstraint">
            <summary>
This class represents a Concentric constraint node in the owning Assoc2dConstraintGroup. It can be applied between a point and a circle, arc or ellipse.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TangentConstraint">
            <summary>
This class represents a Tangent constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TangentConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EqualRadiusConstraint">
            <summary>
This class represents a EqualRadius constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EqualRadiusConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EqualDistanceConstraint">
            <summary>
This class represents a EqualDistance constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EqualDistanceConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EqualLengthConstraint">
            <summary>
This class represents a EqualLength constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EqualLengthConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ParallelConstraint">
            <summary>
This class represents a Parallel constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ParallelConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HorizontalConstraint">
            <summary>
This class represents a Horizontal constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.HorizontalConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.VerticalConstraint">
            <summary>
This class represents a Vertical constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.VerticalConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.EqualCurvatureConstraint">
            <summary>
This class represents a EqualCurvature constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.EqualCurvatureConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SymmetricConstraint">
            <summary>
This class represents a Symmetric constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymmetricConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MidPointConstraint">
            <summary>
This class represents a MidPoint constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.MidPointConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FixedConstraint">
            <summary>
This class represents a Fixed constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FixedConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.G2SmoothConstraint">
            <summary>
This class represents a G2Smooth composite constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.G2SmoothConstraint.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationMode">
            <summary>
At the beginning of AssocActionBody.EvaluateOverride() implementation, the custom code needs to query the mode in which it should evaluate itself.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocAction">
            <summary>
Any object that wants to exhibit associative behavior, i.e. be automatically evaluated by the associative mechanism when objects it depends on change, needs to be derived from an AssocActionBody class (see comments at the AssocActionBody class) and owned by a parent AssocAction object. The action body is fully owned by its parent action, such as when the parent action is erased, it also erases the owned action body.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.GetActionBody(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This wraps the AcDbAssocAction::actionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.SetStatus(Autodesk.AutoCAD.DatabaseServices.AssocStatus,System.Boolean,System.Boolean)">
            <summary>
Sets the AssocStatus of the action. If the status is one of the codes that indicate that the action will need to be evaluated (the IsEvaluationRequest() predicate returns true for such a status), but the current status of the action is not that it would need to be evaluated, it propagates this status up to the AssocNetwork owning the action, and higher in the network hierarchy to the network owning this network, etc, so that all owning networks know that they contain an action that needs to be evaluated..</summary>
            <param name="newStatus"> The new AssocStatus of the action.</param>
            <param name="notifyOwningNetwork"> If true, and the passed-in status indicates that the action needs to be evaluated, the status of the AssocNetwork owning this dependency is set to the same status (unless the network evaluation status is already more severe than the new one).</param>
            <param name="setInOwnedActions"> If true, and this action owns some other actions (such as AssocNetwork owns actions), the status is also set in all owned actions (both directly owned and recursively owned).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.SetOwningNetwork(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Every action except for the topmost AssocNetwork is logically owned by a single AssocNetwork..</summary>
            <param name="networkId"> The AssocNetwork logically owning this action.</param>
            <param name="alsoSetAsDatabaseOwner"> Make the network the database owner of this action.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.GetDependencies(System.Boolean,System.Boolean)">
            <summary>
Gets AssocDependencies of this action. The default implementation obtains all dependencies owned by the base action class and selects the ones based on the required read/write type..</summary>
            <param name="readDependenciesWanted"> Read-type dependencies wanted.</param>
            <param name="writeDependenciesWanted"> Write-type dependencies wanted.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.AddDependency(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Adds the given AssocDependency to this action. The dependency may either become owned by this action (if setThisActionAsOwningAction is true) which is the most common case, or just referenced by this action.</summary>
            <param name="dependencyId"> ObjectId of the AssocDependency being added to this action.</param>
            <param name="setThisActionAsOwningAction"> If true, sets this action to be the database owner of the dependency. In this case the dependency must not be already owned by any other action.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.RemoveDependency(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Removes the given AssocDependency from this action.</summary>
            <param name="dependencyId"> ObjectId of the AssocDependency being removed from this action.</param>
            <param name="alsoEraseIt"> Erases the dependency after removing it.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.RemoveAllDependencies(System.Boolean)">
            <summary>
Removes all AssocDependencies kept in the vector of dependencies of this action and optionally also erases them..</summary>
            <param name="alsoEraseThem"> Erase the AssocDependencies after removing them.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.GetDependentObjects(System.Boolean,System.Boolean)">
            <summary>
Gets objects that this action depends on or modifies. The default implementation collects all objects on which the action has AssocDependencies..</summary>
            <param name="readDependenciesWanted"> Dependent-on objects wanted.</param>
            <param name="writeDependenciesWanted"> Modified objects wanted.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.IsOwnedDependency(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Checks whether the given AssocDependency is owned by this action, either directly, or if this action is a network, is owned by an action owned by the network.</summary>
            <param name="dependency"> The dependency that is checked whether it is owned by this action. Needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.IsExternalDependency(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Checks whether the given AssocDependency, owned by this action, is external to this action, i.e., it depends on an DBObject that is not this action and is not owned by this action (when the action is a network). Also, when the dependency does not depend on any object, it is considered external.</summary>
            <param name="dependency"> The dependency that is checked whether it is external. Needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.IsRelevantDependencyChange(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Delegated from the owned dependency's AssocDependency.IsRelevantChange() predicate. It allows the owning action, instead of the dependency itself, to decide whether the object change is relevant to that particular dependency. The default implementation just returns true.</summary>
            <param name="dependency"> The dependency that is checked whether the change in the object it depends on is relevant or not. It needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.HasDependencyCachedValue(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Delegated from the owned dependency's AssocDependency.HasCachedValue() predicate. It allows the owning action, instead of the dependency itself, to decide whether the dependency has a cached value. The default implementation just returns false.</summary>
            <param name="dependency"> The dependency that is checked whether it has cached value. It needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.AreDependenciesOnTheSameThing(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Delegated from the owned dependency's AssocDependency.IsDependentOnTheSameThingAs() predicate. It allows the owning action, instead of the dependency itself, to decide whether the two depedencies depend on the same thing. The default implementation just returns true.</summary>
            <param name="dependency1"> The dependency owned by this action. It needs to be open at least for read.</param>
            <param name="dependency2"> Another dependency. It needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.AreDependenciesEqual(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Delegated from he owned dependency's AssocDependency.isEqualTo() predicate. It allows the owning action, instead of the dependency itself, to decide whether the two dependencies are equal. The default implementation just returns false.</summary>
            <param name="dependency1"> The dependency owned by this action. It needs to be open at least for read.</param>
            <param name="dependency2"> Another dependency. It needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.GetActionsDependentOnObject(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean,System.Boolean,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>
This wraps the AcDbAssocAction::getActionsDependentOnObject() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.GetActionsDependentOnObject(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean,System.Boolean)">
            <summary>
A static method to get all actions depending on the given DBObject (these actions have AssocDependencies on this object).</summary>
            <param name="dbObj"> The DBObject whose actions are requested. The object needs to be open at least for read.</param>
            <param name="readDependenciesWanted"> Actions that depend-on the object wanted.</param>
            <param name="writeDependenciesWanted"> Actions that modify the object wanted.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.DependentObjectCloned(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Called from the owned dependency's AssocDependency.copied() persistent reactor callback. It notifies the owning action about the fact that an object the action has a dependency on has been cloned. The cloning may be just shallow clone, not necessarily deep or wblock clone.</summary>
            <param name="dependency"> The AssocDependency on the DBObject that has been cloned.</param>
            <param name="dbObj"> The original object.</param>
            <param name="newObj"> The newly created clone.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.AddMoreObjectsToDeepClone(Autodesk.AutoCAD.DatabaseServices.IdMapping,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Called just before the end of the main deep-cloning loop (before AcRxEventReactor::beginDeepCloneXlation() reactor notification), when the objects have already been cloned but their ids haven't been translated yet.</summary>
            <param name="idMap"> The IdMapping of the current deep cloning session.</param>
            <param name="additionalObjectsToClone"> Additional objects that the action also wants to deep clone. It is legal to add objects that have already been cloned; they will be ignored and not cloned again.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.PostProcessAfterDeepClone(Autodesk.AutoCAD.DatabaseServices.IdMapping)">
            <summary>Called from a reactor notification method (ids of the clones have already been translated) to inform the source actions that they have been cloned, so that they can update the clones or do some other work that it needed. Notice that the source action can obtain its clone by consulting the provided IdMapping.</summary>
            <param name="idMap"> The IdMapping of the current deep cloning session.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.PostProcessAfterDeepCloneCancel(Autodesk.AutoCAD.DatabaseServices.IdMapping)">
            <summary>Called from a reactor notification method. Notice that the source action can obtain its clone by consulting the provided IdMapping.</summary>
            <param name="idMap"> The IdMapping of the current deep cloning session.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.EvaluateDependencies">
            <summary>This method needs to be called from the client code evaluateOverride() method, usually after the client code inspected the dependencies, found which changed, which were on erased objects, etc. It gets all dependencies of the action and evaluates the ones that need to be evaluated, i.e. dependencies for which IsEvaluationRequest() == true.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.EvaluateDependency(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Delegated from the owned dependency's AssocDependency.evaluateOverride() method. It allows the owning action, instead of the dependency itself, to do the work. The default implementation just sets the dependency status to IsUpToDateAssocStatus.</summary>
            <param name="dependency"> The dependency that is to be evaluated. It needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.OwnedDependencyStatusChanged(Autodesk.AutoCAD.DatabaseServices.AssocDependency,Autodesk.AutoCAD.DatabaseServices.AssocStatus)">
            <summary>This callback is called from AssocDependency.SetStatus(..., true) and notifies the action owning the dependency that the status of the dependency has just been changed. The dependency is still open for write and already has the new status.</summary>
            <param name="ownedDependency"> The dependency whose status has just been changed.</param>
            <param name="previousStatus"> Previous status of the dependency.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.TransformActionBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Notifes the action that the owner of the action was transformed, such as that all entities in the BlockTableRecord owning the network that owns the action were transformed.</summary>
            <param name="transform"> The provided transformation matrix.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.AssocAction)">
            <summary>Compares this action with the given action and returns true if and only if they are equal (whatever it means). Both actions need to be open at least for read.</summary>
            <param name="otherAction"> The other action needs to be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.EvaluationPriority">
            <summary>This method provides default implementation suitable for most circumstances, but actions may override it to define their special behavior.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.GetDependentActionsToEvaluate(Autodesk.AutoCAD.DatabaseServices.ActionsToEvaluateCallback)">
            <summary>Lets the action report all other actions that need to be evaluated because this action is evaluated. It is repeatedly used to transitively collect all actions that need to be evaluated, before an associative network is evaluated. This action needs to be open at least for read and it needs to require to be evaluated: IsEvaluationRequest() == true.</summary>
            <param name="actionsToEvaluateCallback"> The method uses this callback to report other AssocActions, AssocDependencies and arbitrary DBObjects that should also be scheduled to evaluate when this action is evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.Evaluate(Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback)">
            <summary>This method is called by the client code to evaluate an action or an associative network. It is the crux of the whole associative mechanism.</summary>
            <param name="evaluationCallback"> While the action is being evaluated, it calls methods of the callback object to inform the client code about the evaluation. The callback reference must not be NULL. See the definition of AssocEvaluationCallback for more details.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.ObjectThatOwnsNetworkInstance">
            <summary>Starting from this AssocAction, checks this AssocAction and its owners (in "physical" AutoCAD database object owhership sense) until an AssocNetwork is encountered whose "database" owner is not another AssocNetwork. Then finds an inverse of AssocNetwork.GetInstanceFromObject(), i.e., it finds the DBObject for which GetInstanceFromObject() method returns the AssocNetwork.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.RemoveActionsControllingObject(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This wraps the AcDbAssocAction::removeActionsControllingObject() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.RemoveActionsControllingObject(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32)">
            <summary>This wraps the AcDbAssocAction::removeActionsControllingObject() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAction.RemoveActionsControllingObject(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This wraps the AcDbAssocAction::removeActionsControllingObject() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocAction.ActionBody">
            <summary>Gets and sets the ObjectId of an object of a class derived from AssocActionBody, or null if no action body object has been set. The AssocActionBody object is owned by this AssocAction object and implements the body of the custom action. See more information see AssocActionBody class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocAction.IsActionBodyAProxy">
            <summary>This wraps the AcDbAssocAction::isActionBodyAProxy() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocAction.Status">
            <summary>Gets and sets the current AssocStatus of this action.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocAction.OwningNetwork">
            <summary>Gets the logically owning AssocNetwork or ObjectId.Null if it is the topmost AssocNetwork.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocAction.IsActionEvaluationInProgress">
            <summary>Indicates whether the system is currently evaluating an action or a network of actions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocAction.CurrentEvaluationCallback">
            <summary>Gets the current AssocEvaluationCallback set by the AssocAction.evaluate() call, or NULL if no action evaluation is in progress. Notice that when action evaluation is in progress, there is always a non-NULL AssocEvaluationCallback.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocDraggingState">
            <summary>
While in the middle of evaluation, the action may inquire the client code whether the evaluation is happening from inside of the dragging loop and at which stage the dragging is.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocTransformationType">
            <summary>
Information about what type of transformation (which AutoCAD command) has been performed with the entities before the actions that have dependencies on these entities are evaluated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocStatus">
            <summary>
The status of AssocActions and AssocDependencies. In case of an action it relates to the action itself, in case of a dependency it relates to the object the dependency depends on.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocGlobalUtility">
            <summary>
A Utility class to wrap all global utility methods</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocGlobalUtility.EvaluationRequestSeverityLevel(Autodesk.AutoCAD.DatabaseServices.AssocStatus)">
            <summary>Returns the severity level (positive integer) of those status values that indicate a request for an AssocAction or an AssocDependency to be evaluated, or 0 if the status does not indicate an evaluation request. Higher numbers mean more "severe" requests to evaluate.</summary>
            <param name="status"> The AssocStatus.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocGlobalUtility.IsEvaluationRequest(Autodesk.AutoCAD.DatabaseServices.AssocStatus)">
            <summary>Returns true for the AssocStatus values that are a request for an AssocAction or AssocDependency to be evaluated, and false for other AssocStatus values.</summary>
            <param name="status"> The AssocStatus.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocGlobalUtility.IsToBeSkipped(Autodesk.AutoCAD.DatabaseServices.AssocStatus)">
            <summary>Returns true if the AssocStatus indicates that the action or dependency should be skipped and treated as if it were not there.</summary>
            <param name="status"> The AssocStatus.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocGlobalUtility.IsDraggingProvidingSubstituteObjects(Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback)">
            <summary>Returns true if in the middle of dragging and the AssocDraggingState indicates that the dragger is providing substitute non-database resident objects that are clones of the original database-resident objects.</summary>
            <param name="evaluationCallback"> The current AssocEvaluationCallback. NULL pointer is allowed.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocDependency">
            <summary>
AssocDependencies represent information about which AssocActions depend on or modify which DBObjects. This is how the associativity in the drawing is represented. Dependencies are owned by actions and are attached to the objects as persistent reactors. When the dependent-on object changes, it notifies the dependency via the persistent reactor mechanism. The dependency checks whether the change is relevant, such as when the dependency is on an endpoint of a line but the color of the line changed, or the other endpoint changed, and if yes, it changes its status indicating that it needs to be evaluated, and also changes the status of the owning action indicating that it needs to be evaluated (and the action changes the status of the AssocNetwork that owns it).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.SetStatus(Autodesk.AutoCAD.DatabaseServices.AssocStatus,System.Boolean)">
            <summary>
Sets the AssocStatus of the dependency. If the status is one of the codes that indicate that the action owning the dependency will need to be evaluated (the IsEvaluationRequest() predicate returns true for such a status), it can also notify the action owning the dependency to change its status indicating that it needs to be evaluated. The action may change its status and notify the network owning the action. The network may change its status and notify its owning network, etc. until all the networks in the hierarchy are notified that they contain an action that needs to be evaluated..</summary>
            <param name="newStatus"> The new AssocStatus of the dependency.</param>
            <param name="notifyOwningAction"> If true, and the passed-in status indicates that the dependency needs to be evaluated, the status of the AssocAction owning this dependency is set to the same status (unless the action evaluation status is already more severe than the new one). The action then notifies its owning network.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.AttachToObject(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId)">
            <summary>Attaches this dependency to a given CompoundObjectId as a persistent reactor and also orders it to be at the correct position in the list of dependencies on the object, based on the dependency order(). The dependency that is being attached must not be currently attached to any object.</summary>
            <param name="compoundId"> The CompoundObjectId to attach the dependency to. If regular ObjectId is passed in, it is automatically converted to CompoundObjectId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.DetachFromObject">
            <summary>Detaches this dependency from the DBObject it is currently attached to. It also detatches it from the list of persistent reactors of the dependent-on-object, and if the dependency is on a compound object, it detaches this dependency from the persistent reactor lists of all objects the dependency is currently attached to.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.UpdateDependentOnObject">
            <summary>Updates the object the dependency depends on, based on the information the dependency obtains from the owning action. If the dependency owns an AssocDependencyBody object, its UpdateDependentOnObject() method is called, otherwise the default implementation of this method does nothing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.SetDependentOnObject(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId)">
            <summary>Sets the dependent-on object of this dependency to be the given CompoundObjectId.</summary>
            <param name="compoundId"> The CompoundObjectId the dependency should depend-on (may be null).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.GetFirstDependencyOnObject(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Gets the first dependency on the given DBObject. Dependencies are attached to DBObjects in the form of persistent reactors and are ordered on the object based on their Order(). The first dependency in this ordered list is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.GetDependenciesOnObject(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean,System.Boolean)">
            <summary>
Gets all dependencies on the given DBObject. Dependencies are attached to DBObjects in the form of persistent reactors and are ordered on the object based on their Order(). The retuned array contains the dependencies properly ordered.</summary>
            <param name="readDependenciesWanted"> Read-type dependencies wanted.</param>
            <param name="writeDependenciesWanted"> Write-type dependencies wanted.</param>
            <param name="object"> The DBObject whose dependencies are requested. The object needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.NotifyDependenciesOnObject(Autodesk.AutoCAD.DatabaseServices.DBObject,Autodesk.AutoCAD.DatabaseServices.AssocStatus)">
            <summary>Gets all dependencies on the given DBObject and notifies them about a change by setting their status. It notifies both the primary dependencies on the object (when the object is the DependentOnObject() of the dependency) as well as secondary dependencies (when the object is one of the objects in the CompoundObjectId of the dependency).</summary>
            <param name="newStatus"> The new status to be set to the dependencies.</param>
            <param name="object"> The DBObject whose dependencies are to be notified. The object needs to be open at least for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsDependentOnTheSameThingAs(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>This method returns true if this dependency depends on exactly the same "thing" (such as on the same subentity of the same entity) as the other dependency.</summary>
            <param name="otherDependency"> The other dependency needs to be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Compares this dependency with the given dependency and returns true if and only if they are equal (whatever it means). Both dependencies need be open at least for read.</summary>
            <param name="otherDependency"> The other dependency needs to be open for read.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDependency.Evaluate">
            <summary>Called by the AssocAction.EvaluateDependencies() to update the "dirty" dependencies of the action. The custom dependency classes can implement code to cache the dependent-on data in order to allow filtering-out irrelevant notifications, or do some other work.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.DependencyBody">
            <summary>Gets and sets the ObjectId of an object of a class derived from AssocDependencyBody, or a null id if no dependency body object has been set. The AssocDependencyBody object is owned by this AssocDependency object and implements the body of the custom dependency. See the comments at the AssocDependencyBody class for more information.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.Status">
            <summary>Gets and sets the current AssocStatus of this dependency.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsReadDependency">
            <summary>Sets and gets the IsReadDependency property. True indicates the AssocAction owning the dependency uses the value of the dependent-on DBObject.The default value is false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsWriteDependency">
            <summary>Sets and gets the IsWriteDependency property. True indicates the AssocAction owning the dependency changes the value of the dependent-on DBObject.The default value of this flag is false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsObjectStateDependent">
            <summary>Sets and gets whether the AssocAction owning the dependency requires the dependent-on DBObject to be in the expected "object state" with respect to the list of dependencies on the object, before the action can be evaluated.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.Order">
            <summary>Gets and sets the order of the dependency, i.e., the order where it should be positioned in the list of all dependencies on an DBObject. Dependencies with lower Order() are positioned in the list before the dependencies with higher Order(). Dependencies with the same Order() are ordered based on how they were added to the object, the dependencies added later are positioned after the dependencies added earlier.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.OwningAction">
            <summary>Gets and sets the owning AssocAction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.DependentOnObject">
            <summary>Gets the DBObject this dependency is attached to, or ObjectId::Null if the dependency is not attached to any object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.DependentOnCompoundObject">
            <summary>A dependency is attached as a persistent reactors to all objects of the CompoundObjectId. If the dependency does not use CompoundObjectId, the returned CompoundObjectId is of the DependentOnObject() converted to an CompoundObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsDependentOnCompoundObject">
            <summary>Indicates whether the dependency is using CompoundObjectId to depend on the dependent-on-object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.PrevDependencyOnObject">
            <summary>Gets the previous dependency in the list of dependencies of an DBObject or ObjectId::Null if it is the first dependency in the list.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.NextDependencyOnObject">
            <summary>Gets the next dependency in the list of dependencies of an DBObject or ObjectId::Null if it is the last dependency in the list.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsAttachedToObject">
            <summary>Indicates whether the dependency it attached to an object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.DependentOnObjectStatus">
            <summary>Gets the current status of the DependentOnObject, can be OK, NotInitializedYet or InvalidObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsDelegatingToOwningAction">
            <summary>Gets and sets whether some dependency methods delegate to the action that owns the dependency if the method is not directly implemented in the dependency or in the AssocDependencyBody object that the dependency may own. The default is true, i.e., the delegation takes place. Examples of dependency methods that perform the delegation to the owning action are methods like IsRelevantChange(), HasCachedValue(), IsEqualTo(), IsDependentOnTheSameThingAs(), Evaluate(), etc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.HasCachedValue">
            <summary>Indicates whether the dependency currently holds the cached value of the "thing" it depends on. It does not necessarily mean that the cached value is current and the same as the current value of the dependent-on "thing". If the thing changed, the cached value the dependency holds may still be the previously cached value. But if the dependency status is IsUpToDateAssocStatus, the cached value should be in sync with the "thing" the dependency depends on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsRelevantChange">
            <summary>This property indicates whether the dependent-on "thing" really changed in such a way that the change is relevant to this particular dependency type. For example, if the dependency is on a subentity of a geometric entity, it should check whether the geometry of this subentity is really different from what it was before (such as by comparing it with the cached geometry).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsDependentOnObjectReadOnly">
            <summary>Indicates whether the dependent on object is read-only, i.e., the object is not allowed to be changed. The default implementation returns true if the dependent-on object is an Entity on locked layer, otherwise it returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.IsActionEvaluationInProgress">
            <summary>Indicates whether the system is currently evaluating an action or a network of actions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDependency.CurrentEvaluationCallback">
            <summary>Gets the current AssocEvaluationCallback set by the AssocAction.Evaluate() call, or NULL if no action evaluation is in progress. Notice that when action evaluation is in progress, there always is a non-NULL AssocEvaluationCallback.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocEvaluationPriority">
            <summary>
Negative numbers mean that an AssocAction cannot be evaluated at this time, positive numbers mean that the action can now be evaluated. Higher positive priority numbers mean that the action should be evaluated sooner, ahead of actions with lower positive priority. The negative numbers mean how much the action cannot be evaluated. The smaller the number, the less the action can be evaluated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId">
            <summary>
Class used to identify an Object in an Database when the object is references via a path of BlockReferences, and possibly by some other ways in the future. The object may reside in the host database (the same database as the CompoundObjectId belongs to) or it may reside in an XREF database or even in an unrelated database.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Creates CompoundObjectId from an ordinary ObjectId and a path of BlockReferences. If the host database is null, the host database is obtained from the first id in the path. Even if it is in XREF database, the database hosting the XREF is obtained.</summary>
            <param name="id"> ObjectId of the DBObject that this CompoundObjectId is going to reference.</param>
            <param name="path"> The path of BlockRefrences that lead to the referenced object. The first BlockReference in the path resides in the host database, the second BlockReference is from the BlockTableRecord that the first BlockReference references, the third BlockReference is from the BlockTableRecord that the second BlockReference references, etc.</param>
            <param name="pHostDatabase"> The host database. If null, the database is taken from the first BlockReference id in the path (even if it is in XREF database).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId)">
            <summary>Copy constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Creates CompoundObjectId from an ordinary ObjectId. If the host database is null, the host database is obtained from the given ObjectId. Even if it is in XREF database, the database hosting the XREF is obtained.</summary>
            <param name="id"> ObjectId of the DBObject that this CompoundObjectId is going to reference.</param>
            <param name="hostDatabase"> The host database. If null, the database is taken from the ObjectId (even if it is in XREF database).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Creates CompoundObjectId from an ordinary ObjectId. If the host database is null, the host database is obtained from the given ObjectId. Even if it is in XREF database, the database hosting the XREF is obtained.</summary>
            <param name="id"> ObjectId of the DBObject that this CompoundObjectId is going to reference.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.#ctor">
            <summary>The default constructor creates an empty CompoundObjectId.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.SetEmpty">
            <summary>Sets the CompoundObjectId to be empty, containing no data.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.Set(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Sets this CompoundObjectId from an ordinary ObjectId and a path of BlockReferences. If the host database is null, the host database is obtained from the first id in the path. Even if it is in XREF database, the database hosting the XREF is obtained.</summary>
            <param name="id"> ObjectId of the DBObject that this CompoundObjectId is going to reference.</param>
            <param name="path"> The path of BlockRefrences that lead to the referenced object. The first BlockRefrence in the path resides in the host database, the second BlockReference is from the BlockTableRecord that the first BlockReference references, the third BlockReference is from the BlockTableRecord that the second BlockReference references, etc.</param>
            <param name="hostDatabase"> The host database. If null, the database is taken from the first BlockReference id in the path (even if it is in XREF database).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.Set(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Sets this CompoundObjectId from another CompoundObjectId.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.Set(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Sets this CompoundObjectId from an ordinary ObjectId. If the host database is null, the host database is obtained from the given ObjectId. Even if it is in XREF database, the database hosting the XREF is obtained.</summary>
            <param name="id"> ObjectId of the Object that this CompoundObjectId is going to reference.</param>
            <param name="hostDatabase"> The host database. If null, the database is taken from the ObjectId (even if it is in XREF database).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.SetFullPath(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Sets this AcDbCompoundObjectId from the path that contains the path of AcDbBlockReferences apppended by the leaf AcDbObjectId.</summary>
            <param name="fullPath"> The path of AcDbBlockRefrences and the leaf level object itself as the last element of the array.</param>
            <param name="pHostDatabase"> The host database. If null, the database is taken from the first AcDbBlockReference id in the fullPath.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.IsValid(System.Int32)">
            <summary>Returns true if the CompoundObjectId is valid.</summary>
            <param name="validityCheckingLevel"> Input the level of testing.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.Remap(Autodesk.AutoCAD.DatabaseServices.IdMapping)">
            <summary>Remaps all the ObjectIds in this CompoundObjectId by the given IdMapping. Returns true if any remapping actually happened, false otherwise.</summary>
            <param name="idMap"> See the description of the IdMapping class.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.DwgOutFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.DwgInFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler,System.Int32)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.DxfOutFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.DxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler,Autodesk.AutoCAD.DatabaseServices.Database,System.Int32)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.NullId">
            <summary>Returns an empty CompoundObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.TopId">
            <summary>Gets the first ObjectId (of an BlockReference) in the path, or the leaf-node ObjectId, if there is no path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.LeafId">
            <summary>Gets the leaf-node ObjectId that resides in the BlockTableRecord that the last BlockReference in the path references, or simply the ObjectId if there is no path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.FullPath">
            <summary>Gets the full path, i.e., the given path of BlockReference ids appended with the leaf ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.Path">
            <summary>Gets the BlockReference path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.IsEmpty">
            <summary>Indicates whether the CompoundObjectId contains no data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.IsExternal">
            <summary>Returns true iff the CompoundObjectId is from an external drawing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.IsSimpleObjectId">
            <summary>Indicates whether there is no path, only the leaf id (which may be null).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.Status">
            <summary>Gets the status type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.CompoundObjectId.Transform">
            <summary>Gets the compound transform from the leaf object to the world, concatenating all the BlockReference transforms, from the most nested one to the topmost one. This transformation represents mapping of the coordinates of the leaf-level object from its BlockTableRecord coordinate space to the world coordinate space.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocNetwork">
            <summary>
The AssocNetwork class keeps a network of AssocActions. Notice that it is derived from AssocAction, therefore it also behaves as an individual AssocAction. It means as a whole network can depend on other objects via its AssocDependencies or be owned by a higher-level AssocNetwork, allowing to create hierarchical associative structures.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.AddAction(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Adds an AssocAction to be owned by this network. The action being added must not be owned by any network. Every action except for the topmost AssocNetwork is "logically" owned by a single AssocNetwork..</summary>
            <param name="actionId"> AssocAction being added to the network.</param>
            <param name="alsoSetAsDatabaseOwner"> Make this network the database owner of the action.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.RemoveAction(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
Removes an AssocAction from the network and optionally erases it. The action being removed must be owned by this network.</summary>
            <param name="actionId"> AssocAction being removed from the network.</param>
            <param name="alsoEraseIt"> Erase the action after removing it.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.AddActions(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,System.Boolean)">
            <summary>
Adds the given AssocActions to be owned by this network. The actions being added must not be owned by any network..</summary>
            <param name="actionIds"> AssocActions being added to the network.</param>
            <param name="alsoSetAsDatabaseOwner"> Make this network the database owner of the actions.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.RemoveAllActions(System.Boolean)">
            <summary>
Removes all AssocActions from the network and optionally erases them. The network will become empty.</summary>
            <param name="alsoEraseThem"> Erase the actions after removing them.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.OwnedActionStatusChanged(Autodesk.AutoCAD.DatabaseServices.AssocAction,Autodesk.AutoCAD.DatabaseServices.AssocStatus)">
            <summary>This callback is called from AssocAction.SetStatus(..., true) and notifies the network owing the action that the status of the action has just been changed. The action is still open for write and already has the new status.</summary>
            <param name="ownedAction"> The action whose status has just been changed.</param>
            <param name="previousStatus"> Previous status of the action.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.GetInstanceFromDatabase(Autodesk.AutoCAD.DatabaseServices.Database,System.Boolean,System.String)">
            <summary>
Returns ObjectId of the AssocNetwork owned by the given database, optionally creating a new one if it does not exist yet. Returns ObjectId::Null if the network cannot be obtained..</summary>
            <param name="database"> Database owning the network.</param>
            <param name="createIfDoesNotExist"> If it does not exist yet, create a new subdictionary under the named object dictionary of the database. Create an AssocNetwork and make it owned by this newly created subdictionary.</param>
            <param name="dictionaryKey"> The name of the sub-dictionary under which the network belongs. If no key name is given, the default "ACAD_ASSOCNETWORK" key is used.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.GetInstanceFromObject(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean,System.Boolean,System.String)">
            <summary>
Returns ObjectId of the AssocNetwork owned by the extension dictionary of the given DBObject, optionally creating a new one if it does not exist yet. Returns ObjectId.Null if the network cannot be obtained..</summary>
            <param name="owningObjectId"> The Object owning the sub-dictionary that owns the AssocNetwork.</param>
            <param name="createIfDoesNotExist"> If it does not exist yet, create a new subdictionary of the extension dictionary of the object. Create an AssocNetwork and make it owned by this newly created subdictionary.</param>
            <param name="addToTopLevelNetwork"> If the network is newly created, it also adds it to the the top-level network of the database that owns the owningObjectId. It has no effect if the network already exists or if createIfDoesNotExist is false.</param>
            <param name="dictionaryKey"> The name of the sub-dictionary under which the network belongs. If no key name is given, the default "ACAD_ASSOCNETWORK" key is used.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.RemoveInstanceFromObject(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean,System.String)">
            <summary>
Removes the network and the sub-dictionary that owns it from the extension dictionary of the object.</summary>
            <param name="owningObjectId"> The DBObject whose extension dictionary owns the sub-dictionary that owns the AssocNetwork.</param>
            <param name="alsoEraseIt"> Erase the network after removing it.</param>
            <param name="dictionaryKey"> The name of the sub-dictionary under which the network belongs. If no key name is given, the default "ACAD_ASSOCNETWORK" key is used.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.RemoveInstanceFromDatabase(Autodesk.AutoCAD.DatabaseServices.Database,System.Boolean,System.String)">
            <summary>
Removes the network and the sub-dictionary that owns it from the named object dictionary of the database.</summary>
            <param name="alsoEraseIt"> Erase the network after removing it.</param>
            <param name="dictionaryKey"> The name of the sub-dictionary under which the network belongs. If no key name is given, the default "ACAD_ASSOCNETWORK" key is used.</param>
            <param name="owningObjectId"> The database whose named object dictionary owns the sub-dictionary that owns the AssocNetwork.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocNetwork.GetActions">
            <summary>Gets the reference to the *internal* array of ObjectIds of all owned AssocActions. If used for anything more than just a simple iteration, or when there is any chance that some actions may be added/removed, you need to make a copy of this array FIRST, because the array may change.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocVariable">
            <summary>
AssocVariable keeps a name, value and expression. The name is an arbitrary non-empty string but the client code sets rules that define valid variable names.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.SetName(System.String,System.Boolean)">
            <summary>
Sets the name of the variable. It does not verify the name. Names should be validated using the AssocVariable.ValidateNameAndExpression method before being used..</summary>
            <param name="newName"> New name of the variable.</param>
            <param name="updateReferencingExpressions"> If true, it finds all expressions referencing this variable and changes them (changes their strings) to reflect the new name of the variable.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.FindObjectByName(System.String,Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>Using this AssocVariable as the starting context, searches for an object with the given name. The initial implementation just searches the AssocNetwork owning this variable, but later we may add more sophisticated searches, such as cross-network references, nested-network references, global references, etc.</summary>
            <param name="objectName"> The name of the searched-for object.</param>
            <param name="pObjectClass"> The class of the searched-for object (isKindOf() test is used).</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.ValidateNameAndExpression(System.String,System.String,System.String&)">
            <summary>Validates the given nameToValidate, expressionToValidate or both, to see whether they can be used as name and/or expression for this variable. If either string is empty, it is not validated and is assumed that the name and/or expression of this variable is not going to change.</summary>
            <param name="nameToValidate"> The variable name to validate. May be null.</param>
            <param name="expressionToValidate"> The variable expression to validate. May be null.</param>
            <param name="errorMessage"> Error string if the name or expression is not valid, empty otherwise.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.EvaluateExpression(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection&,Autodesk.AutoCAD.DatabaseServices.ResultBuffer[]&,Autodesk.AutoCAD.DatabaseServices.ResultBuffer&)">
            <summary>A helper method allowing to evaluate the expression at any time without modifying the variable and by explicitly providing values of the referenced objects (variables). It is a read-only method, it does not change the value of this or other variables, neither it changes the status of any variables.</summary>
            <param name="objectIds"> Array of ids of value-providing objects. It is an in/out argument. It is being appended during the evaluation with ids of the value-providing objects whose values have been obtained (currently these objects are only AssocVariables).</param>
            <param name="objectValues"> Array of values of value-providing objects. It is an in/out argument. It is being appended during the evaluation with values of the value-providing objects whose values have been obtained (currently these objects are only AssocVariables).</param>
            <param name="evaluatedExpressionValue"> Returned evaluated value of the expression.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.EvaluateExpression(Autodesk.AutoCAD.DatabaseServices.ResultBuffer&)">
            <summary>A helper method allowing the expression to evaluated at any time without modifying the variable. It is a read-only method.</summary>
            <param name="evaluatedExpressionValue"> Returned evaluated value of the expression.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.AddGlobalCallback(Autodesk.AutoCAD.DatabaseServices.AssocVariableCallback)">
            <summary>See the explanation of AssocVariableCallback. Multiple global callbacks can be registered and they apply to all AssocVariables.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.RemoveGlobalCallback(Autodesk.AutoCAD.DatabaseServices.AssocVariableCallback)">
            <summary>See the explanation of AssocVariableCallback. Multiple global callbacks can be registered and they apply to all AssocVariables.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVariable.globalCallback">
            <summary>Returns a callback that is the collection of all callbacks registered by client code. This function is meant mostly for private use and there should not be much need for the client code to use it. Anyway, the client code must never delete or unregister the returned callback, or do anything with it except for calling its methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocVariable.Name">
            <summary>Gets the variable name which is an arbitrary string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocVariable.Expression">
            <summary>Gets the expression or an empty string if the variable is a constant.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocVariable.Value">
            <summary>Gets and sets the evaluated and cached value of the variable. Sets the evaluated value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocVariable.Description">
            <summary>Gets and sets the description of the variable which is an arbitrary string. It does not have any additional meaning and does not affect the expression evaluation in any way.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocVariable.EvaluatorId">
            <summary>Gets and sets the id of the expression evaluator that is used to parse the expression.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint">
            <summary>
This class represents a dimensional constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint.ValueDependencyId">
            <summary>Gets the ObjectId of the AssocValueDependency object referenced by this dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint.DimDependencyId">
            <summary>Gets and sets the ObjectId of the dimension dependency object referenced by this dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint.MeasuredValue">
            <summary>Gets the value of the dimensional constraint measured from the distances/angles/radii of the constrained geometries.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DistanceConstraint">
            <summary>
This class represents a distance constraint node in the owning Assoc2dConstraintGroup. It can be applied between two constrained geometries (normally two points).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DistanceConstraint.#ctor(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructor. The direction type is set to FixedDirection.</summary>
            <param name="direction"> Input AcGeVector3d indicating the fixed direction which is used to measure the distance. The vector length must not be zero.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DistanceConstraint.#ctor">
            <summary>Default constructor. The direction type is set to NotDirected.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DistanceConstraint.DirectionType">
            <summary>Gets the direction type of this distance constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DistanceConstraint.Direction">
            <summary>Gets the fixed direction of this distance constraint. Only valid when the direction type is FixedDirection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DistanceConstraint.ConstrainedLineId">
            <summary>Gets the constrained line id. Only valid when the direction type is PerpendicularToLine or ParallelToLine.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AngularConstraint">
            <summary>
This class represents an angle constraint node in the owning Assoc2dConstraintGroup. It can be applied between two constrained lines.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AngularConstraint.#ctor">
            <summary>Default constructor. The angle sector type is set to kParallelAntiClockwise.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AngularConstraint.SetAngleMultiplier(System.Double)">
            <summary>Sets a multiplier that is used to multiply angles obtained from AssocValueDependencies that depend on AssocVariables to convert the angles to radians. It is needed because the expression evaluator used by AssocVariables considers all angles to be in degrees. To convert from degrees to radians, the multiplier needs to be set to Pi/180. If no angle multiplier is set, the default is Pi/180.</summary>
            <param name="multiplier"> The angle multiplication factor.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AngularConstraint.AngleMultiplier">
            <summary>Returns the current angle multipiler.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AngularConstraint.SectorType">
            <summary>Gets the angle sector type of this angle constraint.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ThreePointAngleConstraint">
            <summary>
This class represents an angle constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ThreePointAngleConstraint.#ctor(Autodesk.AutoCAD.DatabaseServices.AngularConstraint.AngularSectorType)">
            <summary>Constructor.</summary>
            <param name="type"> Input SectorType indicating the angle sector which is used to measure the angle.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ThreePointAngleConstraint.#ctor">
            <summary>Default constructor. The angle sector type is set to ParallelAntiClockwise.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RadiusDiameterConstraint">
            <summary>
This class represents a radius or diameter constraint node in the owning Assoc2dConstraintGroup.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RadiusDiameterConstraint.#ctor">
            <summary>Default constructor. The constraint type is set to CircleRadius.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RadiusDiameterConstraint.ConstrType">
            <summary>Gets the constraint type of this constraint.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency">
            <summary>
This class represents a dependency on a subentity (face/edge/vertex) of a geometric entity. It keeps an AssocPersSubentId that persistently identitfies the subentity and provides new protocol to set the referenced subentity and get/set the subentity geometry.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.DependentOnObjectMirrored">
            <summary>Called by the client code to inform the AssocGeomDependency that the object, whose subentity it depends on, has been mirrored. The dependency then mirrors the AssocPersSubentityId it holds. For the majority of dependent-on entity types it is a no-op, but for some entity types (such as for Arc) the AssocPersSubentityId actually needs to be updated.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.RedirectToAnotherSubentity(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Gets all AssocGeomDependencies on the old object that reference the given oldSubentId of that object and redirects them to reference the newSubentId of the new object.</summary>
            <param name="oldObjectId"> The DBObject whose AssocGeomDependencies are to be redirected. It will be opened for write.</param>
            <param name="oldSubentId"> The SubentityId of the AssocGeomDependencies that is to be redirected.</param>
            <param name="newObjectId"> The object to redirect the dependencies to. It will be opened for write.</param>
            <param name="newSubentId"> The new SubentityId in the new object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.PersistentSubentId">
            <summary>Gets the reference to the internally held AssocPersSubentityId that identifies a subentity of the dependent-on entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.TransientSubentIds">
            <summary>Gets the transient SubentityIds of the dependent-on entity corresponding to the internally held AssocPersSubentityId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.Subentity">
            <summary>Sets the internally held AssocPersSubentityId to persistently identify the given subentity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.SubentityType">
            <summary>This is SubentityType, a member of class AssocGeomDependency.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.TransientSubentCount">
            <summary>Gets the number of transient SubentityIds corresponding to the internally held AssocPersSubentityId. In typical cases, it is just a single subentity, but generally it may be none, one or any number of subentities.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.IsCachingSubentityGeometry">
            <summary>Indicates whether the dependency keeps a cache of the referenced subentity geometry (even if the cache may currently be empty).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.VertexSubentityGeometry">
            <summary>Gets and sets coordinates of vertex subentities corresponding to the internally held AssocPersSubentityId, which must identify a vertex subentity type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.EdgeSubentityGeometry">
            <summary>Gets and sets curves of edge subentities corresponding to the internally held AssocPersSubentityId, which must identify an edge subentity type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency.FaceSubentityGeometry">
            <summary>Gets and sets surfaces of face subentities corresponding to the internally held AssocPersSubentityId, which must identify a face subentity type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup">
            <summary>
The Assoc2dConstraintGroup class represents a set of geometric constraint relations between subentities of geometric entities. All the geometries must lie in a single plane.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.#ctor(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>Default constructor.</summary>
            <param name="plane"> Input Plane of the newly created constraint group object. Default value is Plane::kXYPlane.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.TransformActionBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Transforms the work plane of the constraint group by the rigid motion component of the transformation matrix. If the transformation matrix also contains a uniform scaling factor, it removes all ExplicitConstraint nodes. If the transformation matrix contains a general component, it removes all GeometricalConstraint nodes.</summary>
            <param name="transform"> The given transformation matrix.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.SolutionStatus(System.Boolean)">
            <summary>
Gets the solution evaluation status of this constraint group. Normally this method should only be called after an evaluation.</summary>
            <param name="alsoCheckForConstraints"> Input boolean indicating if need to check constraints. Default value is true.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GeometryStatus(Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry)">
            <summary>Gets the evaluation status of the passed in constrained geometry. Normally this method should only be called after an evaluation.</summary>
            <param name="consGeom"> Input reference to ConstrainedGeometry indicating the constrained geometry object to be checked.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.ConstraintStatus(Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint)">
            <summary>Gets the evaluation status of the passed in constraint.</summary>
            <param name="constraint"> Input reference to GeometricalConstraint indicating the constraint object to be checked.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.AddConstrainedGeometry(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>Creates and adds a new ConstrainedGeometry object into this constraint group. The caller should not cache the reference returned for future use; instead the caller may cache the node id of ConstrainedGeometry.</summary>
            <param name="subentPath"> Input FullSubentPath of the constrained entity, down to the subentity level. Only SubentityType.Edge and SubentityType.Vertex are valid subent types. The vertex subent must NOT be edge vertex.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.DeleteConstrainedGeometry(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Deletes an existing ConstrainedGeometry object which is internally held. This function also removes and erases the AssocGeomDependency object from this constraint group action.</summary>
            <param name="geomDependencyId"> Input ObjectId of the AssocGeomDependency object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GetConstrainedGeometry(Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency)">
            <summary>Gets the reference to the corresponding internally held ConstrainedGeometry. The reference returned might be temporary and the caller should not cache it for future use; instead the caller may cache the node id of ConstrainedGeometry.</summary>
            <param name="geomDependency"> Input reference to AssocGeomDependency of the constrained entity. The AssocGeomDependency object maybe transient, in other words, not added into the database yet.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GetConstrainedGeometry(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,System.Boolean)">
            <summary>
Gets the reference to the corresponding internally held ConstrainedGeometry. The reference returned might be temporary and the caller should not cache it for future use; instead the caller may cache the node id of ConstrainedGeometry.</summary>
            <param name="createArcLineMid"> Input Boolean indicating if create implicit midpoint of arc or line segment if it is not there. Default value is false.</param>
            <param name="fullSubentPath"> Input FullSubentPath of the constrained entity, down to the subentity level. Only vertex or edge subentity type can be passed in.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.AddGeometricalConstraint(Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.ConstraintType,Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry[])">
            <summary>Creates and adds a geometrical constraint into this constraint group.</summary>
            <param name="type"> Input GeometricalConstraint::GeometricalConstraintType indicating the type of constraint to be created.</param>
            <param name="consGeoms"> Input array of the ConstrainedGeometry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.AddGeometricalConstraint(Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint.ConstraintType,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>Creates and adds a geometrical constraint into this constraint group.</summary>
            <param name="type"> Input GeometricalConstraint::GeometricalConstraintType indicating the type of constraint to be created.</param>
            <param name="paths"> Input array of the FullSubentPath which can be mapped to ConstrainedGeometry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.AddAngularConstraint(Autodesk.AutoCAD.DatabaseServices.ConstrainedLine,Autodesk.AutoCAD.DatabaseServices.ConstrainedLine,Autodesk.AutoCAD.DatabaseServices.AngularConstraint.AngularSectorType,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Creates and adds an angle constraint into this constraint group.</summary>
            <param name="consLine1"> Input reference to ConstrainedLine object</param>
            <param name="consLine2"> Input reference to ConstrainedLine object</param>
            <param name="sectorType"> Input AngularConstraint.SectorType indicating the angle sector to measure.</param>
            <param name="valueDependencyId"> Input object id of the value dependency object.</param>
            <param name="dimDependencyId"> Input object id of the dimension dependency object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.AddRadiusDiameterConstraint(Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry,Autodesk.AutoCAD.DatabaseServices.RadiusDiameterConstraint.RadDiaConstrType,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Creates and adds a radius or diameter constraint into this constraint group.</summary>
            <param name="consGeom"> Input reference to ConstrainedGeometry object which must be a kind of ConstrainedCircle or ConstrainedEllipse.</param>
            <param name="type"> Input RadiusDiameterConstraint::RadiusDiameterConstrType indicating the type of constraint to be created.</param>
            <param name="valueDependencyId"> Input object id of the value dependency object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.DeleteConstraint(Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint)">
            <summary>Deletes an existing GeometricalConstraint object which is internally held.</summary>
            <param name="geomConst"> Input GeometricalConstraint indicating the constraint to be deleted.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.AutoConstrain(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],Autodesk.AutoCAD.Geometry.Tolerance,Autodesk.AutoCAD.DatabaseServices.AutoConstrainEvaluationCallback)">
            <summary>Defines constraints that can be added to an under-constrained model.</summary>
            <param name="paths"> List of subentites which are to be constrained automatically.</param>
            <param name="tol"> Tol to define distance tolerance as well as angle tolerance. Tolerance.EqualPoint() defines distance tolerance and Tolerance.EqualVector() defines angle tolerance. Angle tolerance is in radians of angle.</param>
            <param name="callback"> Reference to autoconstraint evaluation callback. This callback will implement constraint priority and priority override.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GetAllConnectedGeomDependencies(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Gets all AssocGeomDependency objects which are connected by constraints.</summary>
            <param name="srcGeomDependencyIds"> Input ObjectIdArray indicating the source AssocGeomDependency objects.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GetGroupNode(System.UInt32)">
            <summary>Gets a reference to the ConstraintGroupNode object.</summary>
            <param name="nodeId"> Input ConstraintGroupNodeId indicating the node id.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.RegenDimensionSystem">
            <summary>Regenerates the internal dimension system. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GeometryMirrored(Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency)">
            <summary>Called by the client code to inform the constraint group that the dependent entity for geomDependency has been mirrored. The constraint group then mirrors the implicit points for the constrained curve for the given geom dependency. For the majority of constrained curves it is just a no-op, but for some curves (such as for ConstrainedArc) the implicit points needs to be actually updated.</summary>
            <param name="geomDependency"> Reference to AssocGeomDependency for which implicit point needs to be updated for mirror action.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.AddGlobalCallback(Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintCallback)">
            <summary>See the explanation of Assoc2dConstraintCallback. Multiple global callbacks can be registered and they apply to all Assoc2dConstraintGroup.</summary>
            <param name="callback"> The callback to be registered.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.RemoveGlobalCallback(Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintCallback)">
            <summary>See the explanation for Assoc2dConstraintCallback. Multiple global callbacks can be registered and they apply to all Assoc2dConstraintGroup.</summary>
            <param name="callback"> The callback to be unregistered.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GlobalCallback">
            <summary>Returns a callback that is the collection of all callbacks registered by the client code. This function is meant mostly for private use and there should not be much need for the client code to use it. In any case, the client code must never delete or unregister the returned callback, or do anything with it except for calling its methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.WorkPlane">
            <summary>This is WorkPlane, a member of class Assoc2dConstraintGroup.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.GetDOF">
            <summary>Gets the remaining DOF (Degree of Freedom) of this constraint group. It includes the positional DOF of a well-defined model.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.ConstrainedGeometries">
            <summary>Gets all ConstrainedGeometry objects in this constraint group, including ConstraintImplicitPoint objects which are associated with corresponding ConstrainedCurve objects.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup.Constraints">
            <summary>Gets all GeometricalConstraint objects in this constraint group, including topological and dimensional constraints.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocValueDependency">
            <summary>
A concrete dependency class that represents a dependency on a scalar value, such as on a numerical variable. The dependent-on object needs to expose AssocValueProviderPE protocol extension class that is used to obtain the value from the object. It is possible to specify the name of the value in case the object provides more than one value.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocValueDependency.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocValueDependency.ValueName">
            <summary>Gets and sets the name of the referenced value or an empty string if the value name is not needed because the referenced object exposes only a single value (it is a common case, such as for AssocVariable objects).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocValueDependency.DependentOnObjectValue">
            <summary>Gets and sets the value in the dependent-on object and updates the cached value; queries the dependent-on object and returns its value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocSingleEdgePersSubentId">
            <summary>
The concrete derived AssocPersSubentId class that identifies an edge subentity if the entity has only a single edge subentity (such as in the case of curve entities).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSingleEdgePersSubentId.#ctor">
            <summary>Default Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSingleEdgePersSubentId.TransientSubentCount(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Always returns number 1.</summary>
            <param name="entity"> Not used.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSingleEdgePersSubentId.SubentType(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Always returns SubentityType.Edge.</summary>
            <param name="entity"> Not used.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSingleEdgePersSubentId.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId)">
            <summary>Returns true if this and the other AssocSingleEdgePersSubentId reference exactly the same subentity of the same entity. It just calls the base class AssocPersSubentityId.IsEqualTo() because there is no additional data stored in this derived AssocSingleEdgePersSubentId class.</summary>
            <param name="entity"> The entity owning the subentities of this and the other AssocSingleEdgePersSubentId.</param>
            <param name="other"> The other AssocSingleEdgePersSubentId.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocSingleEdgePersSubentId.IsNull">
            <summary>Is always false because AssocSingleEdgePersSubentId always identities the single edge of an entity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId">
            <summary>
The concrete derived AssocPersSubentityId class that simply keeps the SubentityId when it is persistent and does not change.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.#ctor(Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>Constructor. Just keeps the given SubentityId.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.TransientSubentCount(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Returns number 1 if not null or 0 if null.</summary>
            <param name="entity"> Not used.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.SubentType(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Returns the type of the stored SubentityId.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.SubentId(Autodesk.AutoCAD.DatabaseServices.Entity)">
            <summary>Returns the stored SubentityId.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.IsEqualTo(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId)">
            <summary>Returns true if this and the other AssocSimplePersSubentityId reference exactly the same subentity of the same entity. It simply compares the stored SubentityIds.</summary>
            <param name="entity"> The entity owning the subentities of this and the other AssocPersSubentityId.</param>
            <param name="other"> The other AssocSimplePersSubentityId.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.DwgOutFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to write the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.DwgInFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.DxfOutFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to write the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.DxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.Audit(Autodesk.AutoCAD.DatabaseServices.AuditInfo)">
            <summary>The standard protocol.</summary>
            <param name="auditInfo"> See the AuditInfo documentation.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId.IsNull">
            <summary>Indicates whether the SubentityId stored in this AssocSimplePersSubentityId is null.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SubentityGeometry">
            <summary>
A simple class that just keeps geometry of a vertex or edge subentity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityGeometry.#ctor(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>Constructor initializing with an edge subnetity.</summary>
            <param name="curve"> The curve is not owned by this SubentityGeometry.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityGeometry.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructor initializing with a vertex subentity.</summary>
            <param name="pnt"> The coordinates of the point subentity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentityGeometry.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubentityGeometry.Type">
            <summary>Gets the SubentityType of the subentity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubentityGeometry.Point">
            <summary>Gets the coordinates of the vertex subentity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubentityGeometry.Curve">
            <summary>Gets a reference to the curve of the edge subentity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody">
            <summary>
Wrapper AssocDimDependencyBody manages a Dimension entity that serves as the graphical representation of a dimensional constraint. It inherits common functionality from the AssocDimDependencyBodyBase class and overrides the base-class pure virtual methods in which it implements the Dimension-specific functionality.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody.UpdateDependentOnObjectOverride">
            <summary>Updates position, size and orientation of the controlled Dimension.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody.CreateAndPostToDatabase(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId&,Autodesk.AutoCAD.DatabaseServices.ObjectId&)">
            <summary>"Pseudo constructor". Creates a new AssocDependency object owning a new AssocDimDependencyBody object and makes the dependent-on object of the new dependency to be the provided Dimension. Posts both objects to the database of the Dimension.</summary>
            <param name="dimId"> ObjectId of the Dimension.</param>
            <param name="dimDepId"> ObjectId of the created AssocDependency.</param>
            <param name="dimDepBodyId"> ObjectId of the created AssocDimDependencyBody.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.Constraint">
            <summary>Returns the corresponding dimensional constraint node.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetSubentityGeoms(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Returns all constrained subentities of Entities constrained by this dimensional constraint.</summary>
            <param name="distanceDirection"> Direction of the distance constraint.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetVariableNameAndExpression(System.String&,System.String&,System.String)">
            <summary>Returns name, expression and current value of the AssocVariable that corresponds to this dimensional constraint.</summary>
            <param name="name"> Variable name.</param>
            <param name="expression"> Variable expression.</param>
            <param name="value"> Variable value.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetEntityNameAndExpression(System.String&,System.String&)">
            <summary>Returns name and expression from the text that the managed entity is displaying.</summary>
            <param name="name"> Name from the managed entity display text.</param>
            <param name="expression"> Expression from the managed entity display text.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetVariableNameAndExpression(System.String,System.String)">
            <summary>Sets new name and expression of the AssocVariable that corresponds to this dimensional constraint. Either name or expression may be empty strings which indicates no change.</summary>
            <param name="name"> New name of the AssocVariable.</param>
            <param name="expression"> New expression of the AssocVariable.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetEntityNameAndExpression(System.String,System.String,System.String)">
            <summary>Sets name and expression that the managed entity should display. Either name or expression may be empty strings which indicates not to change them.</summary>
            <param name="name"> New name the managed entity should display.</param>
            <param name="expression"> New expression the managed entity should display.</param>
            <param name="value"> New value the managed entity should display.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetNameAndExpression(System.String,System.String)">
            <summary>Sets name and expression on both the AssocVariable that corresponds to this dimensional constraint and on the managed entity that serves as the graphical representation of this dimensional constraint. Either name or expression may be empty strings which indicates no change.</summary>
            <param name="name"> New name to be set.</param>
            <param name="expression"> New expression to be set.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ValidateEntityText(System.String)">
            <summary>Checks if the given entityTextToValidate can be used as the text the managed entity displays. Either the name or the expression part of the entityTextToValidate text may be empty which means that the current name/expression should be used.</summary>
            <param name="entityTextToValidate"> The entity text to check.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ComposeEntityText(System.Int32)">
            <summary>Composes the text that the managed entity should display. The text is composed from the corresponding AssocVariable name, expression and/or value. The text formatting follows requiredNameFormat.</summary>
            <param name="requiredNameFormat"> The constraint name format display, deafault value if -1. If requiredNameFormat == -1, CONSTRAINTNAMEFORMAT sysvar is used for choosing the text format.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SetVariableValueToMeasuredValue">
            <summary>Measures the current dimensional constraint based on the current positions and sizes of the constrained geometries and sets the corresponding AssocVariable to this measured value. If the dimensional constraint is satisfied, the AssocVariable value will already be equal to the measured value and no setting is needed, and nothing happens. Notice that if AssocVariable contained an expression, it will be erased and the variable will just contain a numerical value, not an expression.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DeactivateConstraint">
            <summary>Deactivates the constraint.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ReactivateConstraint">
            <summary>Reactivates the constraint. Reactivating a constraint means creating a d_node or r_node for this ExplicitConstraint and adding it to the DCM dimension system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.EntityAttachmentPointMoved(Autodesk.AutoCAD.DatabaseServices.SubentityGeometry[],System.Double)">
            <summary>Updates the constraint geometry when dimension grip points are moved. Any move made through triangular grip should move the constraint geometry by the same amount and update the constraint variable value. Clients of this function need to pass new positions of the dimension attachment in SubentGeometry array, and new dimension measurement. This API performs the following operations:.</summary>
            <param name="newAttachedGeometries"> The new attached geometries to be updated.</param>
            <param name="measurement"> New measurement, default value is 0.0.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.EvaluateOverride">
            <summary>This function sets the name and expression in the controlled entity text to be the same as the name and expression of the corresponding AssocVariable.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ModifiedOverride(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>If the controlled entity text changed, this function sets the name and expression of the AssocVariable to be the same as the name and expression in the entity text.</summary>
            <param name="dbObj"> The controlled entity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ErasedOverride(Autodesk.AutoCAD.DatabaseServices.DBObject,System.Boolean)">
            <summary>
When the dependent-on object (such as an Dimension) is erased, the corresponding AssocVariable is also erased.</summary>
            <param name="isErasing"> Boolean isErasing.</param>
            <param name="pDbObj"> The controlled entity.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SubErase(System.Boolean)">
            <summary>
Overridden method from the DBObject base class. It erases the controlled entity, such as the Dimension.</summary>
            <param name="erasing"> Boolean erasing.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DwgInFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DwgOutFields(Autodesk.AutoCAD.DatabaseServices.DwgFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DxfInFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.DxfOutFields(Autodesk.AutoCAD.DatabaseServices.DxfFiler)">
            <summary>The standard filing protocol.</summary>
            <param name="filer"> The filer to read the object data to.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody.EntityTextOverride">
            <summary>Gets and sets the text of the controlled Dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody.EntityMeasurementOverride">
            <summary>Gets the measurement from the controlled Dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody.IsEntityAttachmentChangedOverride">
            <summary>Indicates whether the attachment of the controlled Dimension changed, such as the Dimension has been repositioned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.Variable">
            <summary>Gets the object id of the corresponding AssocVariable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.ConstrainedGeoms">
            <summary>Gets all ConstrainedGeometries constrained by this dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.SubentityConstrainedGeoms">
            <summary>Gets all constrained subentities of Entities constrained by this dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.IsConstraintActive">
            <summary>Indicates whether the constraint is active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetMeasuredValue">
            <summary>Gets the current dimensional constraint based on the current positions and sizes of the constrained geometries. If the dimensional constraint is satisfied, the AssocVariable value will already be equal to the measured value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.IsReferenceOnly">
            <summary>Sets whether the constraint is reference only. A reference "constraint" keeps updating its AssocVariable and the dimension text with the measured value of the dimension, but it does not function as a dimensional constraint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.GetCurrentlyUsedEntityNameFormat">
            <summary>Gets the format that is used to display the entity name and expression by looking at the currently displayed entity text. See CONSTRAINTNAMEFORMAT sysvar for the possible format values.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase.IsRelevantChangeOverride">
            <summary>Overridden property from AssocDependencyBody base class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocManager">
            <summary>
This wraps the ObjectARX AcDbAssocManager class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.EvaluateTopLevelNetwork(Autodesk.AutoCAD.DatabaseServices.Database,Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback,System.Int32)">
            <summary>Evaluates the top-level AssocNetwork of the given database, using the global evaluation callback. The top-level network owns subnetworks, such as subnetworks owned by the individual BlockTableRecords. Notice that the top-level network owns its subentworks in logical sense, but not necessarily in AutoCAD database ownership sense. See AddAction() and GetInstanceFromObject() methods of AssocNetwork class for more details.</summary>
            <param name="callback"> Optional AssocEvaluationCallback that is added to the global callback before the evaluation and removed after the evaluation is completed.</param>
            <param name="callbackOrder"> Order of the optional AssocEvaluationCallback.</param>
            <param name="patabase"> Database whose top-level network is to be evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.GlobalEvaluationMultiCallback">
            <summary>Returns the global AssocEvaluationCallback that is used while dragging, when evaluating the top-level associative network on document lock mode change, or anytime AssocManager.EvaluateTopLevelNetwork() is explicitly called by the client code.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.AddGlobalEvaluationCallback(Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback,System.Int32)">
            <summary>Adds the given user-provided AssocEvaluationCallback to the global AssocEvaluationMultiCallback.</summary>
            <param name="order"> Specifies the ordering of the user-provided callbacks in the global AssocEvaluationMultiCallback. The lower-order callbacks are called before the higher-order callbacks. The drag callback is inserted with order 0, i.e. callbacks with negative order will be called before it and callbacks with positive order will be called after it.</param>
            <param name="pCallback"> The user-provided evaluation callback. The callback does not become owned by the global AssocEvaluationMultiCallback, it is just referenced by it.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.RemoveGlobalEvaluationCallback(Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback)">
            <summary>Removes the given user-provided evaluation callback from the global AssocEvaluationMultiCallback.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.HasAssocNetwork(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns true if the given database has some associative data; in particular, if there is a global AssocNetwork for the whole database. See the related AssocNetwork.GetInstanceFromDatabase() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.AuditAssociativeData(Autodesk.AutoCAD.DatabaseServices.Database,System.Boolean)">
            <summary>
Audits the associative data in the database and tries to fix the errors that might have happened during round-trip, due to lazy-erase, etc.</summary>
            <param name="database"> Database whose associative data is to be audited.</param>
            <param name="traverseWholeDatabase"> If true, all objects in the database are visited and checked, and therefore loaded into memory.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocManager.Initialize">
            <summary>This is an internal method that initializes the Associative Framework subsystem.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeomRef">
            <summary>
This wraps the ObjectARX AcDbGeomRef class</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeomRef.Reset">
            <summary>This wraps the ObjectARX AcDbGeomRef::reset() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomRef.IsValid">
            <summary>This wraps the ObjectARX AcDbGeomRef::isValid() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomRef.IsEmpty">
            <summary>This wraps the ObjectARX AcDbGeomRef::isEmpty() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SubentRef">
            <summary>
This wraps the ObjectARX AcDbSubentRef class</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentRef.CopyFrom(Autodesk.AutoCAD.DatabaseServices.SubentRef)">
            <summary>This wraps the ObjectARX AcDbSubentRef::operator =(const AcDbSubentRef&amp;) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SubentRef.CreateEntity">
            <summary>This wraps the ObjectARX AcDbSubentRef::createEntity() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubentRef.Entity">
            <summary>This wraps the ObjectARXAcDbSubentRef::entity() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SubentRef.SubentId">
            <summary>This wraps the ObjectARX AcDbSubentRef::subentId() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FaceRef">
            <summary>
This wraps the ObjectARX AcDbFaceRef class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This wraps the ObjectARXAcDbFaceRef::AcDbFaceRef(const AcDbCompoundObjectId&amp;, const AcDbSubentId&amp;, const AcGeCurve3d*) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRef.#ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId)">
            <summary>This wraps the ObjectARXAcDbFaceRef::AcDbFaceRef(const AcDbCompoundObjectId&amp;, const AcDbSubentId&amp;, const AcGeCurve3d*) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FaceRef.#ctor">
            <summary>This wraps the ObjectARX AcDbFaceRef::AcDbFaceRef() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocActionParam">
            <summary>
Abstract base class for all derived AcDbAssocXxxActionParam classes. Action parameters are owned by AcDbAssocParamBasedActionBody, either directly or via an AcDbAssocCompoundActionParam hierarchy.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocActionParam::AcDbAssocActionParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.MakeParamEmpty(System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocActionParam::makeParamEmpty(bool alsoEraseOwnedObjects) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.MakeParamConstant">
            <summary>This wraps the ObjectARX AcDbAssocActionParam::makeParamConstant() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.DetachDependencies">
            <summary>This wraps the ObjectARX AcDbAssocActionParam::detachDependencies() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.TransformConstantGeometry(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This wraps the ObjectARX AcDbAssocActionParam::transformConstantGeometry(const AcGeMatrix3d&amp;) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.GetDependencies(System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocActionParam::getDependencies() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.ParentAction">
            <summary>This wraps the ObjectARX AcDbAssocActionParam::parentAction() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocActionParam.Name">
            <summary>This wraps the ObjectARX AcDbAssocActionParam::name() and AcDbAssocActionParam::setName() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocFaceActionParam">
            <summary>
This wraps the ObjectARX AcDbAssocFaceActionParam class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFaceActionParam.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocFaceActionParam::AcDbAssocFaceActionParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFaceActionParam.GetFaceRef">
            <summary>This wraps the ObjectARX AcDbAssocFaceActionParam::getFaceRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFaceActionParam.SetFaceRef(Autodesk.AutoCAD.DatabaseServices.FaceRef,System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocFaceActionParam::setFaceRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFaceActionParam.SetFaceRef(Autodesk.AutoCAD.DatabaseServices.FaceRef)">
            <summary>This wraps the ObjectARX AcDbAssocFaceActionParam::setFaceRef() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocFaceActionParam.DependentOnCompoundObject">
            <summary>This wraps the ObjectARX AcDbAssocFaceActionParam::getDependentOnCompoundObject() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocEdgeActionParam">
            <summary>
This wraps the ObjectARX AcDbAssocEdgeActionParam class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeActionParam.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocEdgeActionParam::AcDbAssocEdgeActionParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeActionParam.GetEdgeRef">
            <summary>This wraps the ObjectARX AcDbAssocEdgeActionParam::getEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeActionParam.SetEdgeRef(Autodesk.AutoCAD.DatabaseServices.EdgeRef,System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocEdgeActionParam::setEdgeRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeActionParam.SetEdgeRef(Autodesk.AutoCAD.DatabaseServices.EdgeRef)">
            <summary>This wraps the ObjectARX AcDbAssocEdgeActionParam::setEdgeRef() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocEdgeActionParam.DependentOnCompoundObject">
            <summary>This wraps the ObjectARXAcDbAssocEdgeActionParam::getDependentOnCompoundObject() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocAsmBodyActionParam">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.AssocAsmBodyActionParam.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAsmBodyActionParam.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocAsmBodyActionParam::AcDbAssocAsmBodyActionParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAsmBodyActionParam.SetBody(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocAsmBodyActionParam::setBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocAsmBodyActionParam.SetBody(Autodesk.AutoCAD.DatabaseServices.Entity,System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocAsmBodyActionParam::setBody() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocAsmBodyActionParam.DependentOnCompoundObject">
            <summary>This wraps the ObjectARX AcDbAssocAsmBodyActionParam::getDependentOnCompoundObject() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocVertexActionParam">
            <summary>
This wraps the ObjectARX AcDbAssocVertexActionParam class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVertexActionParam.#ctor">
            <summary>This wraps the ObjectARX AssocVertexActionParam::AcDbAssocVertexActionParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVertexActionParam.SetVertexRef(Autodesk.AutoCAD.DatabaseServices.VertexRef,System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AssocVertexActionParam::setVertexRef() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocVertexActionParam.GetVertexRef">
            <summary>This wraps the ObjectARX AssocVertexActionParam::getVertexRef() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocVertexActionParam.DependentOnCompoundObject">
            <summary>This wraps the ObjectARX AcDbAssocVertexActionParam::getDependentOnCompoundObject() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.#ctor">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::AcDbAssocCompoundActionParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.RemoveAllParams(System.Boolean)">
            <summary>
This wraps the ObjectARX AssocCompoundActionParam::removeAllParams() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.AddParam(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::addParam () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.RemoveParam(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
This wraps the ObjectARX AssocCompoundActionParam::removeParam () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.ParamsAtName(System.String)">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::paramsAtName () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.ParamAtName(System.String,System.Int32)">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::paramAtName() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.ParamAtName(System.String)">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::paramAtName() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.ParamAtIndex(System.Int32)">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::paramAtIndex() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.ParamCount">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::paramCount() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam.OwnedParams">
            <summary>This wraps the ObjectARX AssocCompoundActionParam::ownedParams () method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocPathActionParam">
            <summary>
This wraps the ObjectARX AcDbAssocPathActionParam class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathActionParam.#ctor">
            <summary>This wraps the ObjectARX AssocPathActionParam::AcDbAssocPathActionParam() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathActionParam.GetEdgeRefArray">
            <summary>This wraps the ObjectARX AssocPathActionParam::getEdgeRefArray() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathActionParam.SetEdgeRefArray(Autodesk.AutoCAD.DatabaseServices.EdgeRef[])">
            <summary>This wraps the ObjectARX AssocPathActionParam::setEdgeRefArray() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathActionParam.UpdateEdgeRef(System.Int32,Autodesk.AutoCAD.DatabaseServices.EdgeRef)">
            <summary>This wraps the ObjectARX AssocPathActionParam::updateEdgeRef() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocParamBasedActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocParamBasedActionBody class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocSurfaceActionBody::AcDbAssocSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.ResultingSurfaceDep(System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocSurfaceActionBody::resultingSurfaceDep() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.ResultingSurfaceDep(System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocSurfaceActionBody::resultingSurfaceDep() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.SetResultingSurface(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocSurfaceActionBody::setResultingSurface() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.EvaluateOverride">
            <summary>This wraps the ObjectARX AcDbAssocSurfaceActionBody::evaluateOverride() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.FindActionsThatAffectedTopologicalSubentity(Autodesk.AutoCAD.DatabaseServices.Entity,Autodesk.AutoCAD.DatabaseServices.SubentityId)">
            <summary>This wraps the ObjectARX AcDbAssocSurfaceActionBody::findActionsThatAffectedTopologicalSubentity(); method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.ResultingSurface">
            <summary>This wraps the ObjectARX AcDbAssocSurfaceActionBody::resultingSurface() andAcDbAssocSurfaceActionBody::setResultingSurface ()methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody.IsSemiAssociative">
            <summary>This wraps the ObjectARXAcDbAssocSurfaceActionBody::isSemiAssociative( ) method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody">
            <summary>
This wraps AcDbAssocPathBasedSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::AcDbAssocPathBasedSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.RemoveAllPathParams">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::removeAllPathParams() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.SetInputPaths(Autodesk.AutoCAD.DatabaseServices.PathRef[])">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::setInputPaths() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.UpdateInputPath(System.Int32,Autodesk.AutoCAD.DatabaseServices.PathRef)">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::updateInputPath() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.SetInputPoints(Autodesk.AutoCAD.DatabaseServices.VertexRef[])">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::setInputPoints() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.GetInputPoints">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::getInputPoints() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.MakeInputPathsDrawOnTopOfResultingSurface">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::makeInputPathsDrawOnTopOfResultingSurface() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody.InputPathParams">
            <summary>This wraps the ObjectARX AcDbAssocPathBasedSurfaceActionBody::getInputPathParams() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder">
            <summary>
Used to build the BlendOptions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder.ToBlendOptions">
            <summary>Returns the generated BlendOptions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder.Simplify">
            <summary>Gets and sets the simplify option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder.Solid">
            <summary>Gets and sets the solid option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder.Quality">
            <summary>Gets and sets the quality option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder.CoplanarPoint">
            <summary>Gets and sets the coplanar point option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder.CoplanarDirection">
            <summary>Gets and sets the coplanar direction option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder.DriveMode">
            <summary>Gets and sets the driveMode option.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARXAcDbAssocBlendSurfaceActionBody::AcDbAssocBlendSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.GetStartEdgeContinuity(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::startEdgeContinuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.SetStartEdgeContinuity(System.Int16,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::setStartEdgeContinuity () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.GetEndEdgeContinuity(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::endEdgeContinuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.SetEndEdgeContinuity(System.Int16,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::setEndEdgeContinuity () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.GetStartEdgeBulge(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::startEdgeBulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.SetStartEdgeBulge(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::setStartEdgeBulge () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.GetEndEdgeBulge(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::endEdgeBulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.SetEndEdgeBulge(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::setEndEdgeBulge () method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.GetContinuityGripPoints(Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Point3d&)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::getContinuityGripPoints() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.GetProfiles(Autodesk.AutoCAD.DatabaseServices.LoftProfile&,Autodesk.AutoCAD.DatabaseServices.LoftProfile&)">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::getProfiles() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.LoftProfile,Autodesk.AutoCAD.DatabaseServices.BlendOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.StartEdgeContinuity">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::startEdgeContinuity() and AcDbAssocBlendSurfaceActionBody::setStartEdgeContinuity () methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.EndEdgeContinuity">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::endEdgeContinuity() and AcDbAssocBlendSurfaceActionBody::setEndEdgeContinuity () methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.StartEdgeBulge">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::startEdgeBulge() and AcDbAssocBlendSurfaceActionBody::setStartEdgeBulge() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.EndEdgeBulge">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::endEdgeBulge() and AcDbAssocBlendSurfaceActionBody::setEndEdgeBulge() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody.BlendOption">
            <summary>This wraps the ObjectARX AcDbAssocBlendSurfaceActionBody::getBlendOptions() and AcDbAssocBlendSurfaceActionBody::setBlendOptions() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocExtendSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocExtendSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtendSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocExtendSurfaceActionBody::AcDbAssocExtendSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtendSurfaceActionBody.GetDistance(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocExtendSurfaceActionBody::distance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtendSurfaceActionBody.SetDistance(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocExtendSurfaceActionBody::setDistance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtendSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.EdgeRef[],System.Double,Autodesk.AutoCAD.DatabaseServices.Surface.EdgeExtensionType,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocExtendSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocExtendSurfaceActionBody.Distance">
            <summary>This wraps the ObjectARX AcDbAssocExtendSurfaceActionBody::distance() and AcDbAssocExtendSurfaceActionBody::setDistance() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody::AcDbAssocExtrudedSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.GetTaperAngle(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody::taperAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.SetTaperAngle(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody::setTaperAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.GetHeight(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody::height() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.SetHeight(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody::setHeight() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.PathRef,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.DatabaseServices.SweepOptions,System.Boolean)">
            <summary>
This wraps the ObjectARXAcDbAssocExtrudedSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.TaperAngle">
            <summary>This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody::taperAngle() and AcDbAssocExtrudedSurfaceActionBody::setTaperAngle() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody.Height">
            <summary>This wraps the ObjectARX AcDbAssocExtrudedSurfaceActionBody::height() and AcDbAssocExtrudedSurfaceActionBody::setHeight() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocLoftedSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocLoftedSurfaceActionBody::AcDbAssocLoftedSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.SubentRef[],Autodesk.AutoCAD.DatabaseServices.PathRef[],Autodesk.AutoCAD.DatabaseServices.PathRef,Autodesk.AutoCAD.DatabaseServices.LoftOptions,System.Int32[],System.Double[],System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocLoftedSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocOffsetSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocOffsetSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocOffsetSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocOffsetSurfaceActionBody::AcDbAssocOffsetSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocOffsetSurfaceActionBody.GetDistance(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocOffsetSurfaceActionBody::distance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocOffsetSurfaceActionBody.SetDistance(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocOffsetSurfaceActionBody::setDistance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocOffsetSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Double,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocOffsetSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocOffsetSurfaceActionBody.Distance">
            <summary>This wraps the ObjectARX AcDbAssocOffsetSurfaceActionBody::distance() and AcDbAssocOffsetSurfaceActionBody::setDistance ()methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody">
            <summary>
This wraps AcDbAssocPatchSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::AcDbAssocPatchSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.GetContinuity(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::continuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.SetContinuity(System.Int32,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::setContinuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.GetBulge(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::bulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.SetBulge(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::setBulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.SetConstraintPoints(Autodesk.AutoCAD.DatabaseServices.VertexRef[])">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::setConstraintPoints() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.SetConstraintCurves(Autodesk.AutoCAD.DatabaseServices.EdgeRef[])">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::setConstraintCurves() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.EdgeRef[],Autodesk.AutoCAD.DatabaseServices.EdgeRef[],Autodesk.AutoCAD.DatabaseServices.VertexRef[],System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.EdgeRef[],Autodesk.AutoCAD.DatabaseServices.EdgeRef[],Autodesk.AutoCAD.DatabaseServices.VertexRef[],System.Int32,System.Double,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.Continuity">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::continuity() and AcDbAssocPatchSurfaceActionBody::setContinuity ()methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.Bulge">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::bulge() and AcDbAssocPatchSurfaceActionBody::setBulge() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody.ContinuityGripPoint">
            <summary>This wraps the ObjectARX AcDbAssocPatchSurfaceActionBody::getContinuityGripPoint() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocPlaneSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocPlaneSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPlaneSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocPlaneSurfaceActionBody::AcDbAssocPlaneSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocPlaneSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.PathRef,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocPlaneSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocRevolvedSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocRevolvedSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocRevolvedSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocRevolvedSurfaceActionBody::AcDbAssocRevolvedSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocRevolvedSurfaceActionBody.GetRevolveAngle(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocRevolvedSurfaceActionBody::revolveAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocRevolvedSurfaceActionBody.SetRevolveAngle(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocRevolvedSurfaceActionBody::setRevolveAngle() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocRevolvedSurfaceActionBody.RevolveAngle">
            <summary>This wraps the ObjectARX AcDbAssocRevolvedSurfaceActionBody::revolveAngle() and AcDbAssocRevolvedSurfaceActionBody::setRevolveAngle() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARXAcDbAssocSweptSurfaceActionBody::AcDbAssocSweptSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.GetScaleFactor(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::scaleFactor() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.SetScaleFactor(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::setScaleFactor() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.GetAlignAngle(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::alignAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.SetAlignAngle(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::setAlignAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.GetTwistAngle(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::twistAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.SetTwistAngle(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARXAcDbAssocSweptSurfaceActionBody::setTwistAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.PathRef,Autodesk.AutoCAD.DatabaseServices.PathRef,Autodesk.AutoCAD.DatabaseServices.SweepOptions,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.ScaleFactor">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::scaleFactor() and AcDbAssocSweptSurfaceActionBody::setScaleFactor () methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.AlignAngle">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::alignAngle() and AcDbAssocSweptSurfaceActionBody::setAlignAngle ()methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody.TwistAngle">
            <summary>This wraps the ObjectARX AcDbAssocSweptSurfaceActionBody::twistAngle() and AcDbAssocSweptSurfaceActionBody::setTwistAngle () methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocTrimSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocTrimSurfaceActionBody::AcDbAssocTrimSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody.SetTrimInfo(Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo[],System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocTrimSurfaceActionBody::setTrimInfo() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody.MakeTrimPermanent">
            <summary>This wraps the ObjectARX AcDbAssocTrimSurfaceActionBody::makeTrimPermanent() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody.Untrim">
            <summary>This wraps the ObjectARX AcDbAssocTrimSurfaceActionBody::untrim() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo[],System.Boolean,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocTrimSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody.TrimmedArea">
            <summary>This wraps the ObjectARX AcDbAssocTrimSurfaceActionBody::getTrimmedArea() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo">
            <summary>
This wraps the ObjectARX AcDbSurfaceTrimInfo class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo.#ctor">
            <summary>This wraps the ObjectARX AcDbSurfaceTrimInfo::AcDbSurfaceTrimInfo() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo.IsCurve">
            <summary>This wraps the ObjectARX AcDbSurfaceTrimInfo::isCurve() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo.ToolBodyId">
            <summary>This wraps the ObjectARX AcDbSurfaceTrimInfo::toolBodyId() and AcDbSurfaceTrimInfo::setToolBodyId() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo.Relation">
            <summary>This wraps the ObjectARX AcDbSurfaceTrimInfo::relation() and AcDbSurfaceTrimInfo::setRelation () methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo.ProjVector">
            <summary>This wraps the ObjectARX AcDbSurfaceTrimInfo::projVector() and AcDbSurfaceTrimInfo::setProjVector() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::AcDbAssocNetworkSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.GetContinuity(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType,System.String&,System.String&)">
            <summary>This wraps the ObjectARXAcDbAssocNetworkSurfaceActionBody::getContinuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.GetContinuity(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType)">
            <summary>This wraps the ObjectARXAcDbAssocNetworkSurfaceActionBody::getContinuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.SetContinuity(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType,System.Int32,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::setContinuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.SetContinuity(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType,System.Int32)">
            <summary>This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::setContinuity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.GetBulge(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType,System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::getBulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.GetBulge(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType)">
            <summary>This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::getBulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.SetBulge(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType,System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::setBulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.SetBulge(Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody.ProfileType,System.Double)">
            <summary>This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::setBulge() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.PathRef[],Autodesk.AutoCAD.DatabaseServices.PathRef[],System.Int32[],System.Double[],System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocNetworkSurfaceActionBody::createInstance() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::AcDbAssocFilletSurfaceActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.GetHintPoints">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::getHintPoints() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.SetHintPoints(Autodesk.AutoCAD.Geometry.Point3d[],Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::setHintPoints() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.GetRadius(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::radius() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.SetRadius(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::setRadius() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.GetFilletHandleData(Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Vector3d&,Autodesk.AutoCAD.Geometry.Point3d&,Autodesk.AutoCAD.Geometry.Vector3d&)">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::getFilletHandleData() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.Radius">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::radius() and AcDbAssocFilletSurfaceActionBody::setRadius() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody.TrimMode">
            <summary>This wraps the ObjectARX AcDbAssocFilletSurfaceActionBody::setTrimMode() and AcDbAssocFilletSurfaceActionBody::trimMode() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocEdgeFilletActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocEdgeFilletActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeFilletActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocEdgeFilletActionBody::AcDbAssocEdgeFilletActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeFilletActionBody.GetRadius(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocEdgeFilletActionBody::radius() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeFilletActionBody.SetRadius(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocEdgeFilletActionBody::setRadius() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeFilletActionBody.CreateInstance(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[],System.Double,System.Boolean)">
            <summary>
This wraps the ObjectARX AcDbAssocEdgeFilletActionBody::createInstance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocEdgeFilletActionBody.Radius">
            <summary>This wraps the ObjectARX AcDbAssocEdgeFilletActionBody::radius() and AcDbAssocEdgeFilletActionBody::setRadius() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody">
            <summary>
This wraps the ObjectARX AcDbAssocEdgeChamferActionBody class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody.#ctor">
            <summary>This wraps the ObjectARX AcDbAssocEdgeChamferActionBody::AcDbAssocEdgeChamferActionBody() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody.GetBaseDistance(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocEdgeChamferActionBody::baseDistance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody.SetBaseDistance(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocEdgeChamferActionBody::setBaseDistance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody.GetOtherDistance(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocEdgeChamferActionBody::otherDistance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody.SetOtherDistance(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocEdgeChamferActionBody::setOtherDistance() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody.BaseDistance">
            <summary>This wraps the ObjectARX AcDbAssocEdgeChamferActionBody::baseDistance() and AcDbAssocEdgeChamferActionBody::setBaseDistance() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody.OtherDistance">
            <summary>This wraps the ObjectARX AcDbAssocEdgeChamferActionBody::otherDistance and AcDbAssocEdgeChamferActionBody::setOtherDistance() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ItemLocator">
            <summary>
ItemLocator wraps the ObjectARX class AcDbItemLocator.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ItemLocator.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Parameterized constructor.</summary>
            <param name="itemIndex"> The input Index relative to the first item. itemIndex >= 0.</param>
            <param name="rowIndex"> The input Index relative to the first row. rowIndex >= 0.</param>
            <param name="levelIndex"> The input Index relative to the first level. levelIndex >=0.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ItemLocator.ItemIndex">
            <summary>Item position relative to the first item.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ItemLocator.RowIndex">
            <summary>Item position relative to the first row.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ItemLocator.LevelIndex">
            <summary>Item position relative to the first level.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocArray">
            <summary>
AssocArray wraps the ObjectARX class AcDbAssocArrayActionBody. It has the object Id of the ID of an associative array (rectangular, polar or path array) and the ID of that associative array's corresponding AcDbAssocArrayActionBody, which is responsible for evaluating the array's parameters. It owns a AssocArrayParameters object to manipulate the parameters of the associative array.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.CreateArray(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.VertexRef,Autodesk.AutoCAD.DatabaseServices.AssocArrayParameters)">
            <summary>This method wraps AcDbAssocArrayActionBody::createInstance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.IsAssociativeArray(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method wraps the ObjectARX AcDbAssocArrayActionBody::isAssociativeArray() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.GetAssociativeArray(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method returns the AssocArray object with the given entity. The ID of the ActionBody evaluating this entity (associative array) is attached to this AssocArray object. If no such ActionBody exists, a null pointer is returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.GetParameters">
            <summary>Returns the parameter object owned by this AssocArray object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.AddSourceEntity(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This method wraps the ObjectARX AcDbAssocArrayActionBody::addSourceEntity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.RemoveSourceEntity(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method wraps the ObjectARX AcDbAssocArrayActionBody::removeSourceEntity() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.TransformItemBy(Autodesk.AutoCAD.DatabaseServices.ItemLocator,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>This method wraps the ObjectARX AcDbAssocArrayActionBody::transformItemBy() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.GetItemTransform(Autodesk.AutoCAD.DatabaseServices.ItemLocator)">
            <summary>This method wraps the ObjectARX AcDbAssocArrayActionBody::getTransform() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.DeleteItem(Autodesk.AutoCAD.DatabaseServices.ItemLocator,System.Boolean)">
            <summary>
This method wraps the ObjectARX AcDbAssocArrayActionBody::deleteItem() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.ReplaceItems(Autodesk.AutoCAD.DatabaseServices.ItemLocator[],Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.VertexRef)">
            <summary>Replaces items, identified by their indices in the form of ItemLocator, with given substEntities and basePoint. The substEntities form an array item, and this new array item is placed in the locations indicated by the given indices. The basePoint is relative to the substEntities, and it is transformed along with the substEntities.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.ResetItems">
            <summary>Removes the item override, such as position, orientation or object replacement, from all items of this associative array.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.getItemLocators(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[])">
            <summary>Obtains a list of ItemLocator for given list of subents of an associative array. The subent provided should be a full subentity path of an entity in an array item.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArray.Explode(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method wraps the AcDbAssocArrayActionBody::explode() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArray.EntityId">
            <summary>Gets the associative array ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArray.SourceEntities">
            <summary>Gets the array of IDs of the source entities that form an item in the associative array.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocArrayParameters">
            <summary>
AssocArrayParameters wraps the ObjectARX AcDbAssocArrayParameters class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayParameters.Commit">
            <summary>This method commits the changes contained in the AssocArrayParameters object and syncs the changes with the database, so the changes to the array are visible on the screen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayParameters.Owner">
            <summary>Gets the owner (AssocArray object) of this AssocArrayParameters object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters">
            <summary>
AssocArrayCommonParameters wraps the ObjectARX AcDbAssocArrayCommonParameters class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.GetRowCount(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::rowCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.SetRowCount(System.Int32,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::setRowCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.GetRowSpacing(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::rowSpacing() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.SetRowSpacing(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::setRowSpacing() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.GetRowElevation(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::rowElevation() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.SetRowElevation(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::setRowElevation() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.GetLevelCount(System.String&,System.String&)">
            <summary>This wraps the ObjectARX ObjectARX AcDbAssocArrayCommonParameters::levelCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.SetLevelCount(System.Int32,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::setLevelCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.GetLevelSpacing(System.String&,System.String&)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::levelSpacing() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.SetLevelSpacing(System.Double,System.String,System.String)">
            <summary>This wraps the ObjectARX AcDbAssocArrayCommonParameters::setLevelSpacing() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.RowCount">
            <summary>Wraps the ObjectARX the ObjectARX AcDbAssocArrayCommonParameters::rowCount() and AcDbAssocArrayCommonParameters::setRowCount() methodS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.RowSpacing">
            <summary>Wraps the ObjectARX AcDbAssocArrayCommonParameters::rowSpacing() and AcDbAssocArrayCommonParameters::setRowSpacing() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.RowElevation">
            <summary>Wraps the ObjectARX AcDbAssocArrayCommonParameters::rowElevation() and AcDbAssocArrayCommonParameters::setRowElevation() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.LevelCount">
            <summary>Wraps the ObjectARX AcDbAssocArrayCommonParameters::levelCount() and AcDbAssocArrayCommonParameters::setLevelCount() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.LevelSpacing">
            <summary>Wraps the ObjectARX AcDbAssocArrayCommonParameters::levelSpacing() and AcDbAssocArrayCommonParameters::setLevelSpacing() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.BasePlane">
            <summary>Wraps the ObjectARX AcDbAssocArrayCommonParameters::getBasePlane() and AcDbAssocArrayCommonParameters::setBasePlane() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.BaseNormal">
            <summary>Wraps the ObjectARX AcDbAssocArrayCommonParameters::getBasePlane() and AcDbAssocArrayCommonParameters::setBasePlane() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters.BasePoint">
            <summary>Wraps the ObjectARX AcDbAssocArrayCommonParameters::getBasePlane() and AcDbAssocArrayCommonParameters::setBasePlane() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters">
            <summary>
AssocArrayRectangularParameters wraps the ObjectARX AcDbAssocArrayRectangularParameters class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.#ctor(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Parameterized constructor. The axesAngle and rotation parameters are in degrees.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.GetColumnCount(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::columnCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.SetColumnCount(System.Int32,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::setColumnCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.GetColumnSpacing(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::columnSpacing() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.SetColumnSpacing(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::setColumnSpacing() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.GetAxesAngle(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::axesAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.SetAxesAngle(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::setAxesAngle() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.ColumnCount">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::columnCount() and AcDbAssocArrayRectangularParameters::setColumnCount() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.ColumnSpacing">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::columnSpacing() and AcDbAssocArrayRectangularParameters::setColumnSpacing() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.AxesAngle">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::axesAngle() and AcDbAssocArrayRectangularParameters::setAxesAngle() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.XAxisDirection">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::axisDirection() and AcDbAssocArrayRectangularParameters::setAxisDirection() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters.YAxisDirection">
            <summary>Wraps the ObjectARX AcDbAssocArrayRectangularParameters::axisDirection() and AcDbAssocArrayRectangularParameters::setAxisDirection() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters">
            <summary>
AssocArrayPolarParameters wraps the ObjectARX AcDbAssocArrayPolarParameters class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.#ctor(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Parameterized constructor. The angle, which stands for angle between, is measured in degrees.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.GetItemCount(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::itemCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.SetItemCount(System.Int32,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::setItemCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.GetAngleBetweenItems(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::angleBetweenItems() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.SetAngleBetweenItems(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::setAngleBetweenItems() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.GetFillAngle(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::fillAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.SetFillAngle(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::setFillAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.GetStartAngle(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::startAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.SetStartAngle(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::setStartAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.GetRadius(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::radius() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.SetRadius(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::setRadius() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.ItemCount">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::itemCount() and AcDbAssocArrayPolarParameters::setItemCount() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.AngleBetweenItems">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::angleBetweenItems() and AcDbAssocArrayPolarParameters::setAngleBetweenItems() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.FillAngle">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::fillAngle() and AcDbAssocArrayPolarParameters::setFillAngle() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.StartAngle">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::startAngle() and AcDbAssocArrayPolarParameters::setStartAngle() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.Direction">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::direction() and AcDbAssocArrayPolarParameters::setDirection() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.Radius">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::radius() and AcDbAssocArrayPolarParameters::setRadius() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters.RotateItems">
            <summary>Wraps the ObjectARX AcDbAssocArrayPolarParameters::rotateItems() and AcDbAssocArrayPolarParameters::setRotateItems() methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters">
            <summary>
AssocArrayPathParameters wraps the ObjectARX AcDbAssocArrayPathParameters class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.#ctor(System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Parameterized constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.GetItemCount(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::itemCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.SetItemCount(System.Int32,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::setItemCount() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.GetItemSpacing(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::itemSpacing() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.SetItemSpacing(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::setItemSpacing() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.GetStartOffset(System.String&,System.String&)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::startOffset() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.SetStartOffset(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::setStartOffset() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.GetEndOffset(System.String&,System.String&)">
            <summary>Wraps the ObjectARX the ObjectARX AcDbAssocArrayPathParameters::endOffset() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.SetEndOffset(System.Double,System.String,System.String)">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::setEndOffset() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.Method">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::method() and AcDbAssocArrayPathParameters::setMethod() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.ItemCount">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::itemCount() and AcDbAssocArrayPathParameters::setItemCount() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.ItemSpacing">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::itemSpacing() and AcDbAssocArrayPathParameters::setItemSpacing() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.Path">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::path() and AcDbAssocArrayPathParameters::setPath() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.AlignItems">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::alignItems().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.StartOffset">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::startOffset() and AcDbAssocArrayPathParameters::setStartOffset() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.EndOffset">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::endOffset() and AcDbAssocArrayPathParameters::setEndOffset() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters.PathDirection">
            <summary>Wraps the ObjectARX AcDbAssocArrayPathParameters::setPathDirection() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GripMode">
            <summary>
The type that contains all information to present a single mode.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripMode.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.ModeId">
            <summary>Gets and sets the unique identifier among the collection of modes this PE implements.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.DisplayString">
            <summary>Gets and sets the command line version of the display string for this mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.ToolTip">
            <summary>Gets and sets the string tool tip of this mode. (For future use.).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.CLIDisplayString">
            <summary>Gets and sets the display string of this mode in various UI elements (including the hover menu and object context menu).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.CLIPromptString">
            <summary>Gets and sets the command line prompt string when this mode is switched as current.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.CLIKeywordList">
            <summary>Gets and sets the command line keyword list associated to CLIPromptString.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.Cursor">
            <summary>Gets and sets the type of cursor this mode uses. Optional.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.Action">
            <summary>Gets and sets the action type of this mode uses.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripMode.CommandString">
            <summary>Gets and sets the command used for this mode if the action type is kCommand. Optional.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GripModeCollection">
            <summary>
The collection that wraps AcArray of AcDbMultiModesGripPE::GripMode</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripModeCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripModeCollection.GetEnumerator">
            <summary>Gets the internal IEnumerator object to enumerate the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GripModeCollection.Clear">
            <summary>Empties the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripModeCollection.Count">
            <summary>Gets the item count in the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GripModeCollection.IsReadOnly">
            <summary>Indicates whether the collection is read-only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloud">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.PointCloud.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloud.#ctor">
            <summary>This is PointCloud, a member of class PointCloud.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloud.RegenPointClouds">
            <summary>This is RegenPointClouds, a member of class PointCloud.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudEx">
            <summary>
The PointCloudEx entity (or "point cloud extension entity") works with the AcDbPointCloudDefEx object (or "point cloud extension definition object") to manage point cloud data inside AutoCAD. The relationship between these two classes is much like the relationship between an AutoCAD block definition object and a block reference entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.#ctor">
            <summary>This is PointCloudEx, a member of class PointCloudEx.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.GetColorSchemeForStylization(Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType)">
            <summary>Returns the color scheme name based on the given stylization mode. This property only applies when the point cloud is being displayed using a stylization mode that has a color ramp. Returns an empty string if the stylization mode is not kIntensityRamp, kHeightRamp, or kClassificationRamp.</summary>
            <param name="type"> Indicates a stylization type.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.SetColorSchemeForStylization(System.String,Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType)">
            <summary>Sets the current color scheme based on the given stylization mode. This property only applies when the point cloud is being displayed using a stylization mode that has a color ramp. If the color scheme guid doesn't exist, the color scheme will not take effect.</summary>
            <param name="name"> Indicates the name of a color scheme to be set.</param>
            <param name="type"> Indicates a stylization type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.HasProperty(Autodesk.AutoCAD.DatabaseServices.PointCloudProperty)">
            <summary>Gets the state if the point cloud contains intensity, classification, elevation, etc.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.findScanItem(System.String)">
            <summary>Gets a scan item by the scan GUID in the point cloud.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.findRegionItem(System.Int32)">
            <summary>Gets the region item by its ID in the point cloud. The region ID is stored in the RCP file.</summary>
            <param name="regionId"> The region ID to be returned.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.setScanVisibility(System.String,System.Boolean)">
            <summary>
Sets whether or not a scan is visible. This method does nothing if the scan GUID does not exist.</summary>
            <param name="scanGuid"> The scan GUID</param>
            <param name="visible"> Whether or not the scan is visible</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.setRegionVisibility(System.Int32,System.Boolean)">
            <summary>
Sets whether or not a specified region is visible. This function can be used to set visibility of any region, or to points that are not assigned to any region. If the given region ID is outside of the range of valid region IDs, there is no change.</summary>
            <param name="regionId"> The region ID</param>
            <param name="visible"> The region's visibility</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.setAllScansVisibility(System.Boolean)">
            <summary>
Sets whether or not all scans are visible.</summary>
            <param name="visible"> The visibility of all scans.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.setAllRegionsVisibility(System.Boolean,System.Boolean)">
            <summary>
Sets whether or not all regions are visible.</summary>
            <param name="visible"> The visibility for all regions.</param>
            <param name="includeUnassigned"> true or false, whether or not set the bVisible to unassigned points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.getPointCloudDataList">
            <summary>Get the list of PointCloudItem, which includes the scan items and region items.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.getCroppingCount">
            <summary>Returns the number of cropping boundaries that are set on this entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.getPointCloudCropping(System.Int32)">
            <summary>Returns a cropping boundary by index, for editing. Requires that the AcDbPointCloudEx be open for writing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.addCroppingBoundary(Autodesk.AutoCAD.DatabaseServices.PointCloudCrop)">
            <summary>Adds a new cropping boundary to this point cloud entity.</summary>
            <param name="cropping"> An AcDbPointCloudCrop object which is to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.clearCropping">
            <summary>Removes all cropping boundaries on this point cloud entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.removeLastCropping">
            <summary>Removes most recently added cropping boundary from this point cloud entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.TransformBy(Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Transform the PointCloudEx with the input matrix.</summary>
            <param name="xform"> The input transform matrix.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.AttachPointCloud(System.String,Autodesk.AutoCAD.Geometry.Point3d,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Create a PointCloudEx entity.</summary>
            <param name="filename"> Point cloud source file path. This represent the original filepath use to cerate the index. This entry can be blank.</param>
            <param name="location"> Location of point cloud entity. If entity is inserted at 0,0,0 the points will appear where they are located in the point cloud.</param>
            <param name="scale"> Scale factor. 1.0 is default scale, and cannot less than 0.0</param>
            <param name="rotation"> Rotation Angle in degrees. 0 is default rotation</param>
            <param name="db"> Returns object id of created PointCloudEx</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.MinMaxIntensity">
            <summary>Gets or sets the range (min/max values) of the current intensity colorization range.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.IntensityOutOfRangeBehavior">
            <summary>Gets or sets the current display option for the points which are out of intensity range.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.CurrentColorScheme">
            <summary>Gets or sets the current color scheme name that corresponds to the current stylization mode. This property only applies when the point cloud is being displayed using a stylization mode that has a color ramp. This method returns an empty string if the stylization mode is not kIntensityRamp, kHeightRamp, or kClassificationRamp.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.MinMaxElevation">
            <summary>Get or sets the range (min/max values) of the elevation colorization range.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.ElevationApplyToFixedRange">
            <summary>Gets or sets whether or not the elevation range update dynamically as the extents of the limit box change.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.ElevationOutOfRangeBehavior">
            <summary>Gets or sets the current display option for any points which are out of elevation range.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.Stylization">
            <summary>This is Stylization, a member of class PointCloudEx.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.IntensityGradient">
            <summary>Gets or sets whether show Intensity in gradient.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.ElevationGradient">
            <summary>Gets or sets whether show Elevation in gradient.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.LimitBoxBound">
            <summary>Gets the bound of limit box.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.Scale">
            <summary>Gets or sets the scale factor of the point cloud.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.Rotation">
            <summary>Gets or sets the rotation angle of the point cloud in the current UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.Location">
            <summary>Get or set the location in the drawing where the base point of the point cloud is attached.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.ActiveFileName">
            <summary>Gets the active path name of the externally referenced point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.CroppingInverted">
            <summary>Gets or sets whether cropping on this entity is currently inverted.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.ShowCropped">
            <summary>Gets or sets whether or not this entity should show the cropped point cloud.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.PointCloudDefExId">
            <summary>Object Id of PointCloudDefEx.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.GeomExtents">
            <summary>Geometry extents of point cloud.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudEx.NativeExtents">
            <summary>Returns the non-translated native 3D extent of the point cloud in ECS, which is taken from point cloud data file directly.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudDispOptionOutOfRange">
            <summary>
Defines the display options for the points which are out of intensity/elevation range.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType">
            <summary>
Defines colorization mode of the point cloud.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudPropertyState">
            <summary>
Defines the current state of supported properties in the point cloud data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudProperty">
            <summary>
Defines the properties of point cloud data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudItem">
            <summary>
Class point cloud item, which presents different type of point cloud elements, for example project, scan, region, etc.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.Clone">
            <summary>Clone a Point Cloud Item.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.CompareTo(Autodesk.AutoCAD.DatabaseServices.PointCloudItem)">
            <summary>Compare two current Point Cloud item to another and check whether they are the same.</summary>
            <param name="other"> The second point cloud item for comparison.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.ToCmdString">
            <summary>Serialize the point cloud item to a string.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.CreatePointCloudDataItemCollection(System.IntPtr)">
            <summary>Build a point cloud item list from an array of AcPointCloudItem.</summary>
            <param name="unmanagedObjPtr"> The pointer of array of AcPointCloudItem</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.ItemId">
            <summary>Gets or sets id of item.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.Name">
            <summary>Gets or sets the name of item.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.ProjectName">
            <summary>Gets or sets the name of project to which the current item belongs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.Guid">
            <summary>Gets or sets the GUID of item.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.Visibility">
            <summary>Gets or sets the visibility of item.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudItem.CategoryId">
            <summary>Gets or sets the type of the item.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop">
            <summary>
This class defines a cropping boundary for the PointCloudEx entity. Each cropping boundary contains a plane which locates the boundary, a cropping type, a flag indicating whether we want what is inside or outside the region, another flag indicating whether the results of this cropping boundary should be inverted.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.Create(System.IntPtr)">
            <summary>Creates a PointCloudCrop instance.</summary>
            <param name="unmanagedObjPtr"> Specifies the AcDbPointCloudCrop pointer. For a valid pointer, it binds the created PointCloudCrop with it; if it is System::IntPtr::Zero, it creates a non-binded PointCloudCrop.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.IsValid">
            <summary>Checks if this object represents a valid cropping boundary.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.Clear">
            <summary>Clears all cropping boundary information.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.Dispose">
            <summary>This is Dispose, a member of class PointCloudCrop.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.CropPlane">
            <summary>Gets or sets the plane on which this cropping boundary is defined.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.Vertices">
            <summary>Gets or sets the points array for point cloud crop boundary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.CropType">
            <summary>Gets or set the cropping boundary type for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.Inside">
            <summary>Gets or sets whether this cropping boundary is allowing points inside of itself or outside.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudCrop.Inverted">
            <summary>Gets or sets whether this cropping region's results are to be inverted.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PCAdsName">
            <summary>
This is record Autodesk.AutoCAD.DatabaseServices.PCAdsName.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Notifier">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.Notifier.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Notifier.OnPropertyChanged(System.String)">
            <summary>This is OnPropertyChanged, a member of class Notifier.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudItemType">
            <summary>
Describes the type of point cloud item.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx">
            <summary>
The PointCloudDefEx object (or "point cloud extension definition object") controls the actual point cloud data associated with one or more PointCloudEx entities (or "point cloud extension entity"). These objects link the .rcp/.rcs file to the dwg file, similar to how Xrefs work.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.#ctor">
            <summary>This is PointCloudDefEx, a member of class PointCloudDefEx.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.classVersion">
            <summary>Returns the class version number that indicates which version of AcDbPointCloudEx this object represents. This is primarily used during filing operations to determine what data to read or write.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.load">
            <summary>Loads point cloud data from the source point cloud file. If the point cloud is already loaded, true is returned. This will notifies all dependent AcDbPointCloudEx entities to be redrawn.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.unload">
            <summary>Unloads all point cloud data in the AcDbPointCloudDefEx immediately, but does not delete the AcDbPointCloudDefEx itself. This method notifies all dependent AcDbPointCloudEx entities to be redrawn.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.getRcsFilePath(System.String)">
            <summary>Gets the file path of specified RCS.</summary>
            <param name="guid"> Specifies the GUID of the RCS</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.getAllRcsFilePaths">
            <summary>Gets the list which contains all RCS filepath.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.EntityCount">
            <summary>Returns the number of AcDbPointCloudEx entities in the current drawing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.SourceFileName">
            <summary>Sets the pathname of a externally referenced point cloud file. The point cloud filepath name is stored when the current drawing is saved. The point cloud extension definition is initialized and a file descriptor is created for access to the point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.ActiveFileName">
            <summary>Sets the active path name of the externally referenced point cloud file. The active path points to the file that is actually used to define the point cloud in the current drawing. However, the active path is not persistent, and is not saved in the drawing file. If pathname does not point to a valid point cloud file, then the active path is unchanged.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.FileType">
            <summary>Returns the file extension of this definition's point cloud file. There are two types: RCP for a ReCap Project file; RCS for a ReCap Scan file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.totalPointsCount">
            <summary>Returns the total point count for the point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.totalRegionsCount">
            <summary>Returns the total region count for the point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.totalScansCount">
            <summary>Returns the total scan count for the point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.defaultWidth">
            <summary>Returns the default extent's width of the point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.defaultLength">
            <summary>Returns the default extent's length of the point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.defaultHeight">
            <summary>Returns the default extent's height of the point cloud file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx.extents">
            <summary>Gets the whole extents of attached point cloud.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.#ctor">
            <summary>This is PointCloudColorRamp, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.Color(System.Int32)">
            <summary>This is Color, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.SetColor(System.Int32,Autodesk.AutoCAD.Colors.EntityColor)">
            <summary>This is SetColor, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.Visibility(System.Int32)">
            <summary>This is Visibility, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.SetVisibility(System.Int32,System.Boolean)">
            <summary>
This is SetVisibility, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.SetFrom(Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp)">
            <summary>This is SetFrom, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.NumColors">
            <summary>This is NumColors, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp.Name">
            <summary>This is Name, a member of class PointCloudColorRamp.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.#ctor">
            <summary>This is PointCloudClassificationColorRamp, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.Color(System.Int32)">
            <summary>This is Color, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.SetColor(System.Int32,Autodesk.AutoCAD.Colors.EntityColor)">
            <summary>This is SetColor, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.Visibility(System.Int32)">
            <summary>This is Visibility, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.SetVisibility(System.Int32,System.Boolean)">
            <summary>
This is SetVisibility, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.SetFrom(Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp)">
            <summary>This is SetFrom, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.NumColors">
            <summary>This is NumColors, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp.Name">
            <summary>This is Name, a member of class PointCloudClassificationColorRamp.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.GetColorMapId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>This is GetColorMapId, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.PointCloudColorSchemeChanged">
            <summary>This is PointCloudColorSchemeChanged, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.ColorScheme(System.String,Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp&)">
            <summary>This is ColorScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.HasColorScheme(System.String)">
            <summary>This is HasColorScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.SetColorScheme(System.String,Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp)">
            <summary>This is SetColorScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.DeleteColorScheme(System.String)">
            <summary>This is DeleteColorScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.ClassificationScheme(System.String,Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp&)">
            <summary>This is ClassificationScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.HasClassificationScheme(System.String)">
            <summary>This is HasClassificationScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.SetClassificationScheme(System.String,Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp)">
            <summary>This is SetClassificationScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.DeleteClassificationScheme(System.String)">
            <summary>This is DeleteClassificationScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.ColorSchemeInUse">
            <summary>This is ColorSchemeInUse, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.ClassificationColorSchemeInUse">
            <summary>This is ClassificationColorSchemeInUse, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.DefaultIntensityColorScheme">
            <summary>This is DefaultIntensityColorScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.DefaultElevationColorScheme">
            <summary>This is DefaultElevationColorScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.DefaultClassificationColorScheme">
            <summary>This is DefaultClassificationColorScheme, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.ColorSchemeGUIDs">
            <summary>This is ColorSchemeGUIDs, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap.ClassificationSchemeGUIDs">
            <summary>This is ClassificationSchemeGUIDs, a member of class PointCloudColorMap.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ViewBorder">
            <summary>
The ViewBorder class represents the border entity used by model documentation views in association with a Viewport entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ViewBorder.#ctor">
            <summary>This .NET method wraps the ObjectARX method. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ViewBorder.GetSourceType">
            <summary>This method gets the SourceType of the model documentation view - undefined, Inventor, Fusion, or model space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ViewBorder.GetViewStyleType">
            <summary>This method gets the style type of the model documentation view -- from the base view, wireframe with visible edges, wireframe with hidden edges, shaded with visible edges, or shaded with hidden edges.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.InsertionPoint">
            <summary>Gets the center of the view border in WCS coordinates (in paperspace). Return value is Autodesk.AutoCAD.Geometry.Point3d.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.Height">
            <summary>Gets the height of the model documentation view border. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.Width">
            <summary>Gets the width of the model documentation view border. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.InventorFileReference">
            <summary>This method wraps AcDbViewBorder::inventorFileReference method. Return value is String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.IsFirstAngleProjection">
            <summary>to indicate whether the projection type is first angle or third angle. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.ViewportId">
            <summary>This method returns the ObjectID of the associated model documentation view's Viewport entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.RotationAngle">
            <summary>Gets the rotation angle (in radians) of the model documentation view in the viewport. The rotation angle is a rotation around the view's line of sight (that is, the vector from camera to target, which is always perpendicular to the display, looking from the front of the display toward the back). The zero angle is horizontally to the right (that is, the display coordinate system's positive X axis). Return value is double, in radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.Scale">
            <summary>Gets the scale used by the model documentation view. The scale defines the relationship of units in paperspace to units in model space of the viewport. For example, a scale of 0.5 would indicate that 1 unit in the model space of the viewport maps to 0.5 units in paperspace. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewBorder.ShadedDPI">
            <summary>Gets the DPI of the image generated for the shaded view style. Return value is System::UInt32.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SourceType">
            <summary>
The type of the source of the data for the model documentation view.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ViewStyleType">
            <summary>
The type of the view style.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ViewRepBlockReference">
            <summary>
The ViewRepBlockReference class represents the AcDbViewRepBlockReference entity used by model documentation views in association with a Viewport entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ViewRepBlockReference.#ctor">
            <summary>This is ViewRepBlockReference, a member of class ViewRepBlockReference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ViewRepBlockReference.OwnerViewportId">
            <summary>This property returns the ObjectID of the associated model documentation view's Viewport entity. Return value is Autodesk.AutoCAD.DatabaseServices.ObjectId.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle">
            <summary></summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.#ctor">
            <summary>This is SectionViewStyle, a member of class SectionViewStyle.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.GetViewLabelPattern(Autodesk.AutoCAD.DatabaseServices.Field)">
            <summary>This method gets the pattern for view label. If the view label pattern is using fields, the master field will be copied to the given 'field' including child fields.</summary>
            <param name="field"> Input: a field object to be updated with the view label pattern master field.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.SetViewLabelPattern(System.String,Autodesk.AutoCAD.DatabaseServices.Field)">
            <summary>Sets the pattern for view label. If 'field' parameter is specified and contains child fields, then label pattern will be acquired from the field. Otherwise the 'pattern' string is used.</summary>
            <param name="pattern"> Input: the pattern string for the view label.</param>
            <param name="field"> Input: optional pointer to a Field object to provide the field data to be used in the view label pattern.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.SetDatabaseDefaults(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Sets this object's properties to the default values of given database.</summary>
            <param name="dataBasePointer"> Input: database to be used</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.PostViewStyleToDb(Autodesk.AutoCAD.DatabaseServices.Database,System.String)">
            <summary>Add this view style object to the given database using the given name. Returns the object id of the newly added SectionViewStyle object.</summary>
            <param name="dataBasePointer"> Input: database to be updated</param>
            <param name="styleName"> Input: name to be used for this view style.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.DefaultViewName(System.Int32)">
            <summary>Returns the default section name based on the given index.</summary>
            <param name="index"> The index of the default name.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ValidateViewName(System.String)">
            <summary>Validates the given name as a section name.</summary>
            <param name="name"> Input: section name to validate.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ValidateIdentifierExcludeCharacters(System.String)">
            <summary>Checks whether the identifier exclude character string is correctly formatted and contains valid characters.</summary>
            <param name="characters"> Input: the characters to validate.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.Name">
            <summary>The name of the section view style. Return value is System::String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.Description">
            <summary>The description of the section view style. Return value is System::String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IsModifiedForRecompute">
            <summary>Indicates whether the section view style has been modified and associated section views and section view symbols need to be updated. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IdentifierStyleId">
            <summary>The id of the text style table record to be associated to section symbol identifiers. return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IdentifierColor">
            <summary>The color to be used for the identifier of section view symbols. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IdentifierHeight">
            <summary>The text height to be used by the identifier of section view symbols. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IdentifierExcludeCharacters">
            <summary>The characters excluded from use by section symbol identifiers. Return value is System::String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IdentifierPosition">
            <summary>The identifier offset type. Return value is SectionViewIdentifierPosition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IdentifierOffset">
            <summary>The distance the section view symbol identifiers are offset from the section view symbol arrowheads. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ArrowPosition">
            <summary>The section view symbol arrow direction setting which can be towards the cutting plane or away from the cutting plane. Return value is SectionViewArrowDirection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.EndLineOvershoot">
            <summary>The length of the end line overshoot. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ArrowStartSymbolId">
            <summary>The objectId of the block table record used to represent the arrow start symbol. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ArrowEndSymbolId">
            <summary>The objectId of the block table record used to represent the arrow end symbol. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ArrowSymbolColor">
            <summary>The color for the section symbol arrow. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ArrowSymbolSize">
            <summary>The size for the section symbol arrow. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ArrowSymbolExtensionLength">
            <summary>The length for the section symbol arrow extension line. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.PlaneLineWeight">
            <summary>The line weight for the section symbol plane line. Return value is Lineweight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.PlaneLineColor">
            <summary>The color for the section symbol plane line. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.PlaneLineTypeId">
            <summary>The ObjectId of the linetype for the section symbol plane line. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.BendLineColor">
            <summary>The color for the section bend line. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.BendLineWeight">
            <summary>The line weight for the section symbol bend lines. Return value is LineWeight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.BendLineTypeId">
            <summary>The ObjectId of the linetype for the section symbol bend lines. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.BendLineLength">
            <summary>The length for the section symbol bend lines. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.EndLineLength">
            <summary>The length for the section symbol end lines. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ViewLabelTextStyleId">
            <summary>The id of the text style table record to be associated to the section view label text. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ViewLabelTextColor">
            <summary>The color for section view label text. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ViewLabelTextHeight">
            <summary>The height for the section view label text. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ViewLabelOffset">
            <summary>The offset distance for the section view label text. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ViewLabelAttachment">
            <summary>The type of attachment for the section view label text. Return value is ModelDocViewLabelAttachmentPoint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ViewLabelAlignment">
            <summary>The type of alignment for the section view label text. Return value is ModelDocViewLabelAlignmentType.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ViewLabelPattern">
            <summary>The pattern for the section view label text. Return value is String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.HatchPattern">
            <summary>The name of the hatch pattern to be used by the section view hatching. Return value is String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.HatchColor">
            <summary>The color for the hatching to be used by the section view. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.HatchBackgroundColor">
            <summary>The color for the hatching background to be used by the section view. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.HatchScale">
            <summary>The scale for the hatching to be used by the section view. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.HatchAngles">
            <summary>The list of angles to be used by the hatching within a section view. Return value is NAMESPACE_ACGE::DoubleCollection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.HatchTransparency">
            <summary>The transparency for the hatching to be used by the section view. Return value is Transparency.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.IsContinuousLabeling">
            <summary>Indicates whether the section view symbol should be created with continuous labeling at every bend. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ShowArrowheads">
            <summary>Indicates whether the section symbol should display the arrowheads. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ShowViewLabel">
            <summary>Indicates whether the section view should display the view label text. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ShowAllPlaneLines">
            <summary>Indicates whether the section symbol should display all the plane lines. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ShowAllBendIndentifiers">
            <summary>Indicates whether the section symbol should display the all the bend identifiers. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ShowEndAndBendLines">
            <summary>Indicates whether the section symbol should display the end and bend lines. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionViewStyle.ShowHatching">
            <summary>Indicates whether the section view should display hatching. Return value is bool.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition">
            <summary>
The type of identifier positioning.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionViewArrowDirection">
            <summary>
The type defining section view symbol arrowhead direction.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAttachmentPoint">
            <summary>
The type of attachment for the model documentation view label text.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAlignmentType">
            <summary>
The type of alignment for the section view label text.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle">
            <summary>
The wrapper class for the AcDbDetailViewStyle class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.#ctor">
            <summary>This is DetailViewStyle, a member of class DetailViewStyle.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.GetViewLabelPattern(Autodesk.AutoCAD.DatabaseServices.Field)">
            <summary>This method gets the pattern for view label. If the view label pattern is using fields, the master field will be copied to the given 'field' including child fields.</summary>
            <param name="field"> Input: a field object to be updated with the view label pattern master field.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.SetViewLabelPattern(System.String,Autodesk.AutoCAD.DatabaseServices.Field)">
            <summary>Sets the pattern for view label. If 'field' parameter is specified and contains child fields, then label pattern will be acquired from the field. Otherwise the 'pattern' string is used.</summary>
            <param name="pattern"> Input: the pattern string for the view label.</param>
            <param name="field"> Input: optional pointer to a Field</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.DefaultViewName(System.Int32)">
            <summary>Returns the default detail view name based on the given index.</summary>
            <param name="index"> The index of the default name.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ValidateViewName(System.String)">
            <summary>Validates the given name as a detail view name.</summary>
            <param name="name"> Input: section name to validate.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.SetDatabaseDefaults(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Sets this object's properties to the default values of given database.</summary>
            <param name="dataBasePointer"> Input: database to be used</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.PostViewStyleToDb(Autodesk.AutoCAD.DatabaseServices.Database,System.String)">
            <summary>Add this view style object to the given database using the given name. Returns the object id of the newly added DetailViewStyle object.</summary>
            <param name="dataBasePointer"> Input: database to be updated.</param>
            <param name="styleName"> Input: name to be used for this view style.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.Name">
            <summary>The name of the detail view style. Return value is System::String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.Description">
            <summary>The description of the detail view style. Return value is System::String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.IsModifiedForRecompute">
            <summary>Indicates whether the detail view style has been modified and associated detail views and detail view symbols need to be updated. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.IdentifierStyleId">
            <summary>The id of the text style table record to be associated to detail symbol identifier. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.IdentifierColor">
            <summary>The color to be used for the identifier detail view symbols. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.IdentifierHeight">
            <summary>The text height to be used by the identifier of detail view symbols. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.IdentifierOffset">
            <summary>The offset of the detail view symbol identifier from the extension line. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.IdentifierPlacement">
            <summary>The identifer placement flags relating to the detail view symbol boundary. Return value is NAMESPACE_ACDB::DetailViewIdentifierPlacement.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ArrowSymbolId">
            <summary>The objectId of the block table record used to represent the detail view symbol arrowhead. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ArrowSymbolColor">
            <summary>The color for the detail view symbol arrowhead. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ArrowSymbolSize">
            <summary>The size for the detail view symbol arrowhead. Return value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ShowArrowheads">
            <summary>Indicates whether the detail symbol should display the detail view symbol arrowhead. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.BoundaryLineWeight">
            <summary>The line weight for the detail view symbol boundary line. The return value is LineWeight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.BoundaryLineColor">
            <summary>The color for the detail view symbol boundary line. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.BoundaryLineTypeId">
            <summary>The ObjectId of the linetype for the detail view symbol boundary line. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ConnectionLineWeight">
            <summary>The line weight for the detail view symbol connection line. Return value is .ineWeight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ConnectionLineColor">
            <summary>The color for the detail view symbol connection line. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ConnectionLineTypeId">
            <summary>The ObjectId of the linetype for the detail view symbol connection line. Return value is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ViewLabelTextStyleId">
            <summary>The id of the text style table record to be associated to the detial view label text. Return is ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ViewLabelTextColor">
            <summary>The color for detial view label text. Return is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ViewLabelTextHeight">
            <summary>The height for the detail view label text. Return is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ViewLabelOffset">
            <summary>The offset distance for the detail view label text. Return is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ViewLabelAttachment">
            <summary>The type of attachment for the detail view label text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ViewLabelAlignment">
            <summary>The type of alignment for the detail view label text.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ViewLabelPattern">
            <summary>The pattern for the detail view label text. The return value is String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ShowViewLabel">
            <summary>Indicates whether the section view should display the detail view label text. Return value is bool.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.ModelEdge">
            <summary>The type of model edge for the detail view. Return value is NAMESPACE_ACDB::DetailViewModelEdge.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.BorderLineWeight">
            <summary>The line weight for the detail view border line. Return value is LineWeight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.BorderLineColor">
            <summary>The color for the detail view border line. Return value is Color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailViewStyle.BorderLineTypeId">
            <summary>The ObjectId of the linetype for the detail view border line. Return value is ObjectId.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DetailViewIdentifierPlacement">
            <summary>
The type of detail view identifier placement.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge">
            <summary>
The type of the detail view model edge.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DetailSymbol">
            <summary>
The DetailSymbol class represents the detail view symbol entity used by model documentation views in association with a Viewport entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.#ctor">
            <summary>This .NET method wraps the ObjectARX method. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.IsOverriddenProperty(Autodesk.AutoCAD.DatabaseServices.DetailSymbolOverriddenProperty)">
            <summary>Tests the given flag to see if the property is overridden.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.SymbolStyleId">
            <summary>The object ID of the DetailViewStyle object associated with this entity. Value is the ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.Scale">
            <summary>The scale of the detail symbol entity. Value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.Identifier">
            <summary>The identifier of the detail symbol. Value is String.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.BoundaryType">
            <summary>The type of the detail symbol boundary. Value is NAMESPACE_ACDB::DetailSymbolBoundaryType.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.ModelEdgeType">
            <summary>The type of the detail symbol Model Edge. Value is NAMESPACE_ACDB::DetailViewModelEdge.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.DisplayIdentifier">
            <summary>Returns flag indicating whether the detail symbol's identifier is to be displayed. Value is Boolean.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.OwningViewScale">
            <summary>Returns the parent view's scale. Value is double.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.DetailViewScale">
            <summary>Returns the associated detail view's scale.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.Origin">
            <summary>Returns the detail symbol's origin. Value is Point3d.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.Direction">
            <summary>Returns the detail symbol's direction vector. Value is Vector3d.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.BoundarySize">
            <summary>Returns the detail symbol's boundary size vector. The value is Vector2d.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.ModelEdgeOrigin">
            <summary>Returns the origin of the detail symbol's model edge (full boundary around detail view). Value is Point3d.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.ModelEdgeDirection">
            <summary>Returns the direction of the detail symbol's model edge (full boundary around detail view). Value is Vector3d.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DetailSymbol.IdentifierPosition">
            <summary>Returns the detail symbol's identifier position.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DetailSymbolBoundaryType">
            <summary>
An enum defining the type of the detail symbol boundary.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DetailSymbolOverriddenProperty">
            <summary>
An enum to indicate which property of the style is overridden.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SectionSymbol">
            <summary>
The SectionSymbol class represents the section view symbol entity used by model documentation views in association with a Viewport entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.#ctor">
            <summary>Constructor for the SectionSymbol class. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.GetSectionPointAt(System.Int32)">
            <summary>Gets the section point at the specified index (zero-based).</summary>
            <param name="index"> Input: zero-based index into the section symbol point collection.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.GetBulgeAt(System.Int32)">
            <summary>Gets the section point bulge factor at the specified index (zero-based).</summary>
            <param name="index"> Input: zero-based index into the section symbol point bulge collection.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.GetSectionPoints">
            <summary>Gets a collection of all the section points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.AddSectionPoint(Autodesk.AutoCAD.Geometry.Point3d,System.Double)">
            <summary>This .NET method wraps the ObjectARX method. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.RemoveSectionPointAt(System.Int32)">
            <summary>This .NET method wraps the ObjectARX method. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.SetSectionPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d,System.Double)">
            <summary>This .NET method wraps the ObjectARX method. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.GetLabelNameAt(System.Int32)">
            <summary>Gets the label at the point identified by the specified index. A section identifier is can be created at ever end and bend line point of the section symbol based on the view section style.</summary>
            <param name="index"> Input: zero-based index into the section symbol point collection.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.SetLabelNameAt(System.Int32,System.String)">
            <summary>This .NET method wraps the ObjectARX method. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.GetLabelOffsetAt(System.Int32)">
            <summary>Gets the offset vector for the section symbol point at the specified index.</summary>
            <param name="index"> Input: zero-based index into the section symbol point collection.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.SetLabelOffsetAt(System.Int32,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This .NET method wraps the ObjectARX method. For internal use only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.GetLabelOffsets">
            <summary>Gets all of the label offset vectors for the section symbol.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.SetLabelOffsets(Autodesk.AutoCAD.Geometry.Vector3dCollection)">
            <summary>This .NET method wraps the ObjectARX method.For internal use only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.SymbolStyleId">
            <summary>The object ID of the SectionViewStyle object associated with this entity. Returns ObjectId.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.Scale">
            <summary>The scale of the section symbol entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.Identifier">
            <summary>The identifier of the section symbol.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.IsViewDirectionLeft">
            <summary>A flag indicating whether the view direction is to the left.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.IsHalfSection">
            <summary>A flag indicating whether the section symbol annotates is associated to a half section view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SectionSymbol.SectionPointsCount">
            <summary>The number of points in the section symbol.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeomapImage">
            <summary>
The GeomapImage class represents an embedded raster image which is captured from a portion of LiveMap.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeomapImage.#ctor">
            <summary>This is GeomapImage, a member of class GeomapImage.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeomapImage.GetVertices">
            <summary>Gets the 4 corner points of the embeded image.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeomapImage.GetImageVertices">
            <summary>This is GetImageVertices, a member of class GeomapImage.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeomapImage.ImageSize">
            <summary>The size of the embeded image in pixel.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeomapImage.UpdateMapImage(System.Boolean)">
            <summary>
Update the embeded image by re-capturing the live map.</summary>
            <param name="Reset"> Input Boolean to indicate whether to recapture the image in optimal resolution to the screen. If true, the L</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.BottomLeftPoint">
            <summary>The original point in the bottom left corner of the image frame.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.Height">
            <summary>Height of the Geomap Image frame.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.Width">
            <summary>Width of the Geomap Image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.ImageBottomLeftPoint">
            <summary>The original point in the bottom left corner of the embeded image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.ImageHeight">
            <summary>Height of the Geomap embeded image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.ImageWidth">
            <summary>Width of the Geomap embeded image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.Resolution">
            <summary>The resolution of the image as an enumerated value that apply on top of LOD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.LOD">
            <summary>Map Level Of Details (Zoom level) at the point of captured. Update will reset this value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.MapType">
            <summary>The map type of the map image as an enumerated value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.IsOutOfDate">
            <summary>A flag to indicate whether the image is up to date.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.Brightness">
            <summary>The brightness of the map image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.Contrast">
            <summary>The brightness of the map image.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeomapImage.Fade">
            <summary>The brightness of the map image.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker">
            <summary>
The GeoPositionMarker class represents a Geographical location aware marker object with label.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.#ctor(Autodesk.AutoCAD.Geometry.Point3d,System.Double,System.Double)">
            <summary>This is GeoPositionMarker, a member of class GeoPositionMarker.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.#ctor">
            <summary>This is GeoPositionMarker, a member of class GeoPositionMarker.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.Position">
            <summary>The Insertion point of the position marker.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.Radius">
            <summary>Radius of the position marker.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.LandingGap">
            <summary>landing gap of the position marker.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.Text">
            <summary>The position marker text label.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.MText">
            <summary>The position marker MText label.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.MTextVisible">
            <summary>The visibility of the MText label.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.EnableFrameText">
            <summary>Label text frame enabling.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.TextAlignmentType">
            <summary>label text alignment type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.Notes">
            <summary>Notes of the position marker.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.GeoPosition">
            <summary>The Geographical location of the position marker.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.Normal">
            <summary>This is Normal, a member of class GeoPositionMarker.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker.TextStyle">
            <summary>This is TextStyle, a member of class GeoPositionMarker.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextAlignment">
            <summary>
This is record Autodesk.AutoCAD.DatabaseServices.TextAlignment.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.RuntimeSystem">
            <summary>
This class initializes the application host services and the runtime factories that produce managed ObjectARX objects for an AutoCAD managed application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RuntimeSystem.Initialize(Autodesk.AutoCAD.DatabaseServices.HostApplicationServices,System.Int32)">
            <summary>Invoked during runtime initialization.</summary>
            <param name="hostServices"> Input Autodesk.AutoCAD.DatabaseServices.HostApplicationServices object.</param>
            <param name="localId"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RuntimeSystem.Terminate">
            <summary>Called only when AutoCAD exits.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ExternalEntityKind">
            <summary>
This .NET enum wraps the AcGe::ExternalEntityKind ObjectARX enum. This defines the type of external entity that can be accessed through GeLib interface.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ClipError">
            <summary>
This .NET enum wraps the AcGe::ClipError ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ClipCondition">
            <summary>
This .NET enum wraps the AcGe::ClipCondition ObjectARX enum. It gives information about the spatial relationship between the input polygon and the clip boundary.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus">
            <summary>
This .NET class wraps the AcDb::XrefNotificationStatus ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.MergeCellStyleOption">
            <summary>
This .NET class wraps the MergeCellStyleOption ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.IndexCreation">
            <summary>
This .NET enum wraps the AcDb::IndexCreation ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayerEvaluation">
            <summary>
This .NET enum wraps the ObjectARX AcDb::LayerEvaluation enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.NewLayerNotification">
            <summary>
This .NET enum wraps the AcDb::NewLayerNotification ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes">
            <summary>
This .NET class wraps the AcGiDrawable::SetAttributesFlags ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ErrorCondition">
            <summary>
This .NET class wraps the AcGe::ErrorCondition ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LightingUnits">
            <summary>
This .NET enum wraps the ObjectARX AcDb.LightingUnits enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Planarity">
            <summary>
This .NET class wraps the AcDb::Planarity ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.LispDataType">
            <summary>
This class enumerates the valid Lisp data types.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.DrawFlags">
            <summary>
This .NET class wraps the AcGiSubEntityTraits::DrawFlags ObjectARX class. This is an enumeration of valid bitmasks for calls to the setDrawFlags() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.HatchEdgeType">
            <summary>
This .NET class wraps the AcDbHatch::HatchEdgeType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.ProceduralTextureType">
            <summary>
This .NET enum wraps the AcGiProceduralTexture::Type ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TableStyleFlags">
            <summary>
This .NET class wraps the AcDb::TableStyleFlags ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingModel">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties::FaceLightingModel.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingQuality">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties::FaceLightingQuality.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties::FaceColorMode.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSFaceModifiers">
            <summary>
This .NET class wraps the ObjectARX bitfield enum AcGiVisualStyleProperties::FaceModifier.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSEdgeModel">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties::EdgeModel.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSEdgeStyles">
            <summary>
This .NET class wraps the ObjectARX bitfield enum AcGiVisualStyleProperties::EdgeStyle.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers">
            <summary>
This .NET class wraps the ObjectARX bitfield enum AcGiVisualStyleProperties::EdgeModifier.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSEdgeJitterAmount">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties::EdgeJitterAmount.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties::EdgeLinePattern.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSDisplayStyles">
            <summary>
This .NET class wraps the ObjectARX bitfield enum AcGiVisualStyleProperties::DisplayStyle.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VSDisplayShadowType">
            <summary>
This .NET class wraps the ObjectARX enum AcGiVisualStyleProperties.DisplayShadowType.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GsMarkType">
            <summary>
This .NET class wraps the AcDbMLeader::gsMarkType ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RigidSetTypeInfo">
            <summary>
Rigid set type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocConstraintType">
            <summary>
This enum describes dimensional constraint type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Registry">
            <summary>
This is class Autodesk.AutoCAD.Runtime.Registry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Registry.LocalMachine">
            <summary>This is LocalMachine, a member of class Registry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Registry.CurrentUser">
            <summary>This is CurrentUser, a member of class Registry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Registry.ClassesRoot">
            <summary>This is ClassesRoot, a member of class Registry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.Registry.CurrentConfig">
            <summary>This is CurrentConfig, a member of class Registry.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.RegistryKey">
            <summary>
This is class Autodesk.AutoCAD.Runtime.RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.#ctor(Microsoft.Win32.RegistryKey)">
            <summary>This is RegistryKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.Close">
            <summary>This is Close, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)">
            <summary>This is CreateSubKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
            <summary>This is CreateSubKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.CreateSubKey(System.String)">
            <summary>This is CreateSubKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.DeleteSubKey(System.String)">
            <summary>This is DeleteSubKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.DeleteSubKeyTree(System.String)">
            <summary>This is DeleteSubKeyTree, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.DeleteValue(System.String)">
            <summary>This is DeleteValue, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.GetBaseKey(Microsoft.Win32.RegistryHive)">
            <summary>This is GetBaseKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.GetSubKeyNames">
            <summary>This is GetSubKeyNames, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)">
            <summary>This is GetValue, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.GetValue(System.String,System.Object)">
            <summary>This is GetValue, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.GetValue(System.String)">
            <summary>This is GetValue, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.GetValueKind(System.String)">
            <summary>This is GetValueKind, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.GetValueNames">
            <summary>This is GetValueNames, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)">
            <summary>This is OpenBaseKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.OpenSubKey(System.String,System.Boolean)">
            <summary>
This is OpenSubKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
            <summary>This is OpenSubKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.OpenSubKey(System.String)">
            <summary>This is OpenSubKey, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>This is SetValue, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.SetValue(System.String,System.Object)">
            <summary>This is SetValue, a member of class RegistryKey.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.RegistryKey.Dispose">
            <summary>This is Dispose, a member of class RegistryKey.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RegistryKey.SubKeyCount">
            <summary>This is SubKeyCount, a member of class RegistryKey.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.RegistryKey.ValueCount">
            <summary>This is ValueCount, a member of class RegistryKey.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Matrix2dInfo">
            <summary>
This value type encapsulates the data returned by the Matrix2d.IsConformal() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.IsEqualTo(Autodesk.AutoCAD.Geometry.Matrix2dInfo)">
            <summary>Compares this object to other object and returns true if they are equal.</summary>
            <param name="a"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.IsEqualTo(Autodesk.AutoCAD.Geometry.Matrix2dInfo,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests a against this object for equivalency within the tolerance range specified by tolerance.</summary>
            <param name="a"> Input object to check against</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.op_Inequality(Autodesk.AutoCAD.Geometry.Matrix2dInfo,Autodesk.AutoCAD.Geometry.Matrix2dInfo)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.op_Equality(Autodesk.AutoCAD.Geometry.Matrix2dInfo,Autodesk.AutoCAD.Geometry.Matrix2dInfo)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dInfo.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix2dInfo.Scale">
            <summary>Returns scale factor of matrix. The returned scale is the square root of the maximum length of the two column vectors.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix2dInfo.Angle">
            <summary>Returns the Angle property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix2dInfo.IsMirror">
            <summary>Returns the IsMirror property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Matrix2dInfo.Reflex">
            <summary>Returns the Reflex property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CoordinateSystem2d">
            <summary>
This struct encapsulates the origin point and X- and Y-axis vectors that define a 2D coordinate system.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.IsEqualTo(Autodesk.AutoCAD.Geometry.CoordinateSystem2d)">
            <summary>This method calls CoordinateSystem2d.IsEqualTo(CoordinateSystem2d a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input object to compare with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.IsEqualTo(Autodesk.AutoCAD.Geometry.CoordinateSystem2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests a against this object for equivalency within the tolerance range specified by tolerance.</summary>
            <param name="a"> Input object to compare with</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.op_Inequality(Autodesk.AutoCAD.Geometry.CoordinateSystem2d,Autodesk.AutoCAD.Geometry.CoordinateSystem2d)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.op_Equality(Autodesk.AutoCAD.Geometry.CoordinateSystem2d,Autodesk.AutoCAD.Geometry.CoordinateSystem2d)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.Origin">
            <summary>Returns the origin of the coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.Xaxis">
            <summary>Returns the vector defining the x axis of the coordinate system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CoordinateSystem2d.Yaxis">
            <summary>Returns the vector defining the y axis of the coordinate system.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Matrix2dBuilder">
            <summary>
This class is required to build instances of Autodesk.AutoCAD.Geometry.Matrix2d , which is an immutable value type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dBuilder.#ctor(Autodesk.AutoCAD.Geometry.Matrix2d)">
            <summary>Constructs a new builder based on an existing matrix.</summary>
            <param name="value"> Input matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dBuilder.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Matrix2dBuilder.ToMatrix2d">
            <summary>Returns the Matrix2d object built using this object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.LenientResourceManager">
            <summary>
This object manages lenient resources.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.LenientResourceManager.#ctor(System.Type)">
            <summary>Constructor.</summary>
            <param name="t"> Input.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Marshaler">
            <summary>
This class provides utility methods for converting bitmaps and subentity paths between managed objects and unmanaged pointers. It is provided for developers who require interoperability between their own C++ objects and managed code.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Marshaler.BitmapInfoToBitmap(System.IntPtr)">
            <summary>Converts bitmapInfo to Bitmap.</summary>
            <param name="bitmapInfo"> Input bitmap info object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Marshaler.BitmapToBitmapInfo(System.Drawing.Bitmap)">
            <summary>Converts bitmap to BitmapInfo.</summary>
            <param name="bitmap"> Input bitmap</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Marshaler.CopyToUnmanagedFullSubentityPath(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,System.IntPtr)">
            <summary>Converts path to an unmanaged path object.</summary>
            <param name="path"> Input path to copy</param>
            <param name="newPath"> Input new path</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Marshaler.CopyToManagedFullSubentityPath(System.IntPtr)">
            <summary>Returns the result of converting path to a managed path object.</summary>
            <param name="path"> Input path to copy</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Marshaler.ObjectToAcValue(System.Object,System.IntPtr)">
            <summary>Overloads for the Marshaler.ObjectToAcValue method.</summary>
            <param name="obj"> Input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Marshaler.AcValueToObject(System.IntPtr)">
            <summary>Converts acValueObj to Object.</summary>
            <param name="acValueObj"> Input AcValue object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Marshaler.ObjectToResbuf(System.Object)">
            <summary>This is ObjectToResbuf, a member of class Marshaler.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory.NumOfCoordinate">
            <summary>This is NumOfCoordinate, a member of class GeoCoordinateCategory.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory.GetCoordinateAt(System.Int32)">
            <summary>This is GetCoordinateAt, a member of class GeoCoordinateCategory.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory.CreateAll">
            <summary>This is CreateAll, a member of class GeoCoordinateCategory.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory.ID">
            <summary>This is ID, a member of class GeoCoordinateCategory.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem">
            <summary>
The GeoCoordinate class represents a coordinate reference system (CRS) definition. A CRS is also being referred to as a spatial reference system (SRS). This is the wrapper class for the AcDbGeoCoordinateSystem class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.GetProjectionParamList(System.Boolean)">
            <summary>
This is GetProjectionParamList, a member of class GeoCoordinateSystem.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.CreateAll(Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory)">
            <summary>This is CreateAll, a member of class GeoCoordinateSystem.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.CreateAll">
            <summary>This is CreateAll, a member of class GeoCoordinateSystem.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.Create(System.String)">
            <summary>Instantiates a new GeoCoordinateSystem object from the current virtual catalog. If no such CRS definition exists but the input string contains enough information(i.e. WKT or XML) for constructing a temporary AcDbGeoCoordinateSystem instance, this is being returned instead.</summary>
            <param name="coordSysIdOrFullDef"> A coordinate system name. For example: "WORLD-MERCATOR"</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.ID">
            <summary>Get this CRS's identifier string, which is also being referred to as a (coordinate system) code.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.EPSGcode">
            <summary>Get this CRS's EPSG code.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.Type">
            <summary>Get this definition's description, if there's any.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.Description">
            <summary>Gets the projection method of this CRS. The projection is the conversion of the CRS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.ProjectionCode">
            <summary>Gets the unit of the coordinate system axis of this CRS. All axis contains the same unit.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.Unit">
            <summary>Gets the unit of the coordinate system axis of this CRS. All axis contains the same unit.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.GeoUnit">
            <summary>Gets a factor, that the length units of this CRS instance must be multiplied with to calculate the equivalent in meters. If the CRS is geographic, this value represents the distance in meters of 1° measured along the equatorial great circle of the underlying ellipsoid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.UnitScale">
            <summary>Gets a factor, that the length units of this CRS instance must be multiplied with to calculate the equivalent in meters. If the CRS is geographic, this value represents the distance in meters of 1° measured along the equatorial great circle of the underlying ellipsoid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.Datum">
            <summary>Gets the datum, if any, referenced by this this CRS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.Ellipsoid">
            <summary>Gets the related ellipsoid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.Offset">
            <summary>Gets the projection method parameter offset easting of this CRS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.CartesianExtents">
            <summary>Gets the Cartesian extent of this CRS's.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.GeodeticExtents">
            <summary>Get the geodetic extent of this CRS's, the range of longitude and latitude.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.XmlRepresentation">
            <summary>This is XmlRepresentation, a member of class GeoCoordinateSystem.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem.WktRepresentation">
            <summary>This is WktRepresentation, a member of class GeoCoordinateSystem.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoCSType">
            <summary>
This is record Autodesk.AutoCAD.DatabaseServices.GeoCSType.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode">
            <summary>
This is record Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoCSUnit">
            <summary>
This is record Autodesk.AutoCAD.DatabaseServices.GeoCSUnit.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer">
            <summary>
This is class Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.TransformPoint(System.String,System.String,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This is TransformPoint, a member of class GeoCoordinateTransformer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.TransformPoint(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>This is TransformPoint, a member of class GeoCoordinateTransformer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.TransformPoints(System.String,System.String,Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This is TransformPoints, a member of class GeoCoordinateTransformer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.TransformPoints(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>This is TransformPoints, a member of class GeoCoordinateTransformer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.Create(System.String,System.String)">
            <summary>This is Create, a member of class GeoCoordinateTransformer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.SourceCSid">
            <summary>This is SourceCSid, a member of class GeoCoordinateTransformer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer.TargetCSid">
            <summary>This is TargetCSid, a member of class GeoCoordinateTransformer.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PointCloudCropType">
            <summary>
Defines the crop type. The crop type is the shape of the cropping region.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PointOnSurface">
            <summary>
This .NET class wraps the AcGePointOnSurface ObjectARX class. It represents a point on a surface. This class encapsulates all of the geometric information of a point on a surface, including its parameter value, 3D coordinates, derivatives, and normal vector.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.#ctor">
            <summary>Default constructor. Constructs a point on the surface AcGePlane.XYPlane at the parameter value (0,0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetPoint(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the coordinates of the point on surface at the specified point. This function resets the parameter value of the point on surface.</summary>
            <param name="point"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetNormal(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the normal vector at the specified point.</summary>
            <param name="point"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetNormal">
            <summary>Returns the normal vector at the point on surface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetUDerivative(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the U-partial derivative at the specified point. order must be greater than 0 and no larger than 2. This function resets the underlying and parameter value of the point on surface.</summary>
            <param name="order"> Input order of derivative</param>
            <param name="point"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetUDerivative(System.Int32)">
            <summary>Returns the U-partial derivative of the specified order. order must be greater than 0 and no larger than 2.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetVDerivative(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the V-partial derivative at the specified parameter value. order must be greater than 0 and no larger than 2. This function resets the underlying and parameter value of the point on surface.</summary>
            <param name="order"> Input order of derivative</param>
            <param name="point"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetVDerivative(System.Int32)">
            <summary>Returns the V-partial derivative of the specified order. order must be greater than 0 and no larger than 2.</summary>
            <param name="order"> Input order of derivative</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetMixedPartial(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns the mixed partial at the specified point.</summary>
            <param name="point"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetMixedPartial">
            <summary>Returns the mixed partial at the point on surface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetTangentVector(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Maps the input tangent vector to the tangent plane at the specified parameter value. The returned vector is equal to uDeriv(1)*vec.x + vDeriv(1)*vec.y.</summary>
            <param name="vector"> Input any 2D vector</param>
            <param name="point"> Input parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetTangentVector(Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Maps the input tangent vector to the tangent plane at the point on surface. The returned vector is equal to uDeriv(1)*vec.x + vDeriv(1)*vec.y.</summary>
            <param name="vector"> Input any 2D vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetInverseTangentVector(Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Projects the input vector onto the tangent plane at the specified point and returns the 2D parameter space vector that maps to this projected vector.</summary>
            <param name="vector"> Input any 3D vector</param>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointOnSurface.GetInverseTangentVector(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Projects the input vector onto the tangent plane at the point on surface and returns the 2D parameter space vector that maps to this projected vector.</summary>
            <param name="vector"> Input any 3D vector</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnSurface.Surface">
            <summary>Returns the surface on which the point lies.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointOnSurface.Parameter">
            <summary>Returns the parameter value of the point on surface.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients">
            <summary>
This class encapsulates the data returned by the PlanarEnt.getCoefficients() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Constructor overloads used to create an instance of the PlanarEquationCoefficients.PlanarEquationCoefficients class.</summary>
            <param name="a"> Input.</param>
            <param name="b"> Input.</param>
            <param name="c"> Input.</param>
            <param name="d"> Input.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients.A">
            <summary>Returns output coefficient A.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients.B">
            <summary>Returns output coefficient B.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients.C">
            <summary>Returns output coefficient C.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients.D">
            <summary>Returns output coefficient D.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.BoundedPlane">
            <summary>
This .NET class wraps the AcGeBoundedPlane ObjectARX class. It represents a bounded planar parametric surface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a bounded planar surface defined by origin and two other points.</summary>
            <param name="p1"> Input point</param>
            <param name="origin"> Input origin point</param>
            <param name="p2"> Input point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs a bounded planar surface defined by a point and two vectors.</summary>
            <param name="origin"> Input plane origin</param>
            <param name="u"> Input U direction</param>
            <param name="v"> Input V direction</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.#ctor">
            <summary>Constructs a valid default infinite planar surface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.IntersectWith(Autodesk.AutoCAD.Geometry.BoundedPlane)">
            <summary>This method calls BoundedPlane.IntersectWith(BoundedPlane plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input bounded plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.IntersectWith(Autodesk.AutoCAD.Geometry.BoundedPlane,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns flag indicating if there is any segment intersection. Computes a segment of intersection with another bounded plane.</summary>
            <param name="plane"> Input bounded plane</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.IntersectWith(Autodesk.AutoCAD.Geometry.Plane)">
            <summary>This method calls BoundedPlane.IntersectWith(BoundedPlane plane, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="plane"> Input bounded plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.IntersectWith(Autodesk.AutoCAD.Geometry.Plane,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns flag indicating if a segment intersection takes place. Computes intersection with infinite non-parametric plane.</summary>
            <param name="plane"> Input bounded plane</param>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes plane definition to the one specified by input data as per the origin point and the points on plane, p1 and p2.</summary>
            <param name="p1"> Input first point on plane</param>
            <param name="origin"> Input origin point</param>
            <param name="p2"> Input second point on plane</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.BoundedPlane.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Changes plane definition to the one specified by input data, as per the origin point and input vectors u and v.</summary>
            <param name="origin"> Input origin point</param>
            <param name="u"> Input u vector</param>
            <param name="v"> Input Autodesk.AutoCAD.Geometry.Vector3d object, v vector</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo">
            <summary>
This .NET class wraps the AcFileDependencyInfo ObjectARX class. It describes a file dependency entry.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.ToString">
            <summary>Returns an equivalent string representation of this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider. See the Microsoft .NET API documentation for details.</summary>
            <param name="provider"> Culture-specific format string</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.FullFileName">
            <summary>Accesses the saved full path name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.FileName">
            <summary>Accesses the saved base file name without the path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.FoundPath">
            <summary>Accesses the alternate path at which the file was found, if any.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.FingerprintGuid">
            <summary>Accesses the fingerprint GUID from the .dwgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.VersionGuid">
            <summary>Accesses the version GUID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.Feature">
            <summary>Accesses the feature name (for example, "Acad:Xref").</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.IsModified">
            <summary>Accesses the current file-modified status.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.FileDependencyInfo.IsAffectsGraphics">
            <summary>Assesses if the entry affects the picture.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.UniqueString">
            <summary>
This wraps the AcUniqueString class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.UniqueString.Intern(System.String)">
            <summary>Gets an existing UniqueString or registers a new UniqueString.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.KernelDescriptor">
            <summary>
This wraps the AcGsKernelDescriptor class. Effectively an array of UniqueString objects that describes the Graphics System Kernel.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.KernelDescriptor.addRequirement(Autodesk.AutoCAD.UniqueString)">
            <summary>Require support for a given capability. Effectively the same as addSupport but used for different documentary purposes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.KernelDescriptor.supports(Autodesk.AutoCAD.UniqueString)">
            <summary>Query support for a given capability. Effectively the same as requires but used for different documentary purposes.</summary>
            <param name="capability"> String describing the graphics capability.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel">
            <summary>
This is class Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel.#ctor(System.IntPtr)">
            <summary>This is GraphicsKernel, a member of class GraphicsKernel.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel.#ctor">
            <summary>This is GraphicsKernel, a member of class GraphicsKernel.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.LinearEntity2d">
            <summary>
This .NET class wraps the AcGeLinearEnt2d ObjectARX class. It's an abstract base class for all 2D line classes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity2d)">
            <summary>This method calls LinearEnt2d.IntersectWith(LinearEntity2d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 2D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines intersect and if so returns their intersection point.</summary>
            <param name="line"> Input any 2D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.Overlap(Autodesk.AutoCAD.Geometry.LinearEntity2d)">
            <summary>Overloads for the LinearEntity2d.Overlap method.</summary>
            <param name="line"> Input any 2D linear entityDetermines if two lines overlap and if so returns the line that coincides with their region of overlap. The returned overlap line may be an object of any derived class of LinearEnt2d, depending on the types of the two lines.This method calls LinearEnt2d.Overlap(LinearEntity2d line, Tolerance tolerance) with tolerance set to Global.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.Overlap(Autodesk.AutoCAD.Geometry.LinearEntity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines overlap and if so returns the line that coincides with their region of overlap. The returned overlap line may be an object of any derived class of LinearEnt2d, depending on the types of the two lines.</summary>
            <param name="line"> Input any 2D linear entity</param>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IsParallelTo(Autodesk.AutoCAD.Geometry.LinearEntity2d)">
            <summary>This method calls LinearEnt2d.IsParallelTo(LinearEntity2d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 2D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IsParallelTo(Autodesk.AutoCAD.Geometry.LinearEntity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines are parallel.</summary>
            <param name="line"> Input any 2D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.LinearEntity2d)">
            <summary>This method calls LinearEnt2d.IsPerpendicularTo(LinearEntity2d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 2D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IsPerpendicularTo(Autodesk.AutoCAD.Geometry.LinearEntity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines are perpendicular to each other.</summary>
            <param name="line"> Input any 2D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IsColinearTo(Autodesk.AutoCAD.Geometry.LinearEntity2d)">
            <summary>This method calls LinearEnt2d.IsColinearTo(LinearEntity2d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 2D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.IsColinearTo(Autodesk.AutoCAD.Geometry.LinearEntity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if two lines are colinear.</summary>
            <param name="line"> Input any 2D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.GetPerpendicularLine(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Returns a line that is perpendicular to this line and passes through the input point.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.LinearEntity2d.GetLine">
            <summary>Returns an infinite line that is coincident with this line. This function can be called for LineSeg2d and Ray2d objects to get an infinite line from a bounded line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LinearEntity2d.PointOnLine">
            <summary>Returns an arbitrary point on the line.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.LinearEntity2d.Direction">
            <summary>Returns direction vector of line. This vector is a unit vector and points in the direction of increasing parameter value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.ProfileCurve2d">
            <summary>
This wraps the profile curve2d, which is the output of basic elements of point cloud extraction result.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProfileCurve2d.#ctor(Autodesk.AutoCAD.Geometry.CircularArc2d)">
            <summary>Constructor with an arc.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProfileCurve2d.#ctor(Autodesk.AutoCAD.Geometry.LineSegment2d)">
            <summary>Constructor with a line segment.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProfileCurve2d.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.ProfileCurve2d.IsSegment">
            <summary>Returns a segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.ProfileCurve2d.IsArc">
            <summary>Returns an arc.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.ProfileCurve2d.LineSeg">
            <summary>Specifies it as a line segment.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.ProfileCurve2d.Arc">
            <summary>Specifies it as an arc.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.ExtractionType">
            <summary>
Specifies the extraction type: outline or floorplan.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.PointCloudExtractor">
            <summary>
This wraps the AcPointCloudExtractor, which can extract point cloud in a plan and output line/pline.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.ProfileCurveType">
            <summary>
Specifies the extraction curve type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DBObjectReference">
            <summary>
This class contains an object's ID and the DXF group code that represents the object's type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DBObjectReference.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Int32)">
            <summary>This constructor sets the ID and kind of object reference.</summary>
            <param name="id"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId object</param>
            <param name="kind"> Input System.Int32 object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObjectReference.ObjectId">
            <summary>Accesses the object ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DBObjectReference.Kind">
            <summary>Returns the Kind property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.ProgressMeter">
            <summary>
This .NET class wraps the AcDbHostApplicationProgressMeter ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProgressMeter.Start">
            <summary>Sets the progress meter to its initial reading and make it visible. You may choose to display the string passed into the method. Do not modify this string after passing it to Start().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProgressMeter.Start(System.String)">
            <summary>Sets the progress meter to its initial reading and make it visible. You may choose to display the string passed into the method. Do not modify this string after passing it to Start().</summary>
            <param name="displayString"> Input optional string to display with the meter.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProgressMeter.Stop">
            <summary>Cause the meter to cease to be visible.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProgressMeter.MeterProgress">
            <summary>You should maintain a long data member to count the number of times MeterProgress() has been called. By comparing this value to that provided by SetLimit(), you will be able to calculate and display what percentage of the calculation or operation has completed.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.ProgressMeter.SetLimit(System.Int32)">
            <summary>Called to identify the maximum number of times MeterProgress() is called.</summary>
            <param name="max"> Input maximum number of meter updates.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AuditPass">
            <summary>
This .NET class wraps the AcDbAuditInfo::AuditPass ObjectARX enumeration, which keeps track of which pass the command is on.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData">
            <summary>
This .NET class wraps the AcDbDimData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData.Dimension">
            <summary>Accesses the dynamic dimension object. It returns null if the application does not create a dynamic dimension and set the pointer.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData.Focal">
            <summary>Accesses the current focus dynamic dimension; it returns false if this object is not the current focus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData.Editable">
            <summary>Assesses if the object is editable. An editable dynamic dimension can be either an active or potential type. An informational type of dynamic dimension is not editable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData.Visible">
            <summary>Returns true if the object is invisible; it returns false it is visible.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData.HideIfValueIsZero">
            <summary>Returns true if the object is always invisible when its value is zero.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData.ApplicationData">
            <summary>Accesses application-specific data associated with the object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection">
            <summary>
This class represents a collection of DynamicDimenionData objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection.Add(Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData)">
            <summary>Adds a new DynamicDimensionData object to the collection.</summary>
            <param name="data"> A DynamicDimensionData object to add.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection.RemoveAt(System.Int32)">
            <summary>Removes the item at position i from the collection.</summary>
            <param name="i"> The position of the item to be removed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection.Clear">
            <summary>Clears the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData[],System.Int32)">
            <summary>Copies the element in array starting from index into the collection.</summary>
            <param name="array"> Array to copy from</param>
            <param name="index"> Zero-based index to begin at</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection.Count">
            <summary>Accesses the number of elements in the count.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionChangedEventArgs">
            <summary>
This class provides data for the OnDimensionValueChanged function of the Jig class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionChangedEventArgs.#ctor(System.Int32,System.Double)">
            <summary>This constructor sets the index and value for the new object.</summary>
            <param name="index"> Input the index of the dimension</param>
            <param name="value"> Input the floating point value of the dimension</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionChangedEventArgs.Index">
            <summary>Accesses the index value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DynamicDimensionChangedEventArgs.Value">
            <summary>Accesses the value of the dimension.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.VisualStyleTraits">
            <summary>
This .NET class wraps the AcGiVisualStyleTraits ObjectARX class. This class defines the visual style traits. Derived from DrawableTraits, this class provides the interfaces to implement for setting and returning the visual style via drawable traits.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.VisualStyleTraits.AcGiVisualStyle">
            <summary>Returns VisualStyle const reference to the visual style that is currently captured in this traits object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d">
            <summary>
This .NET class wraps the AcGeAugPolyline3d ObjectARX class. It represents a mathematical entity used to support different types of spline curves in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d,System.Double,System.Double,System.Double)">
            <summary>Constructs polyline which approximates the input curve. Each vertex of the polyline lies on the input curve. The maximum distance from any point on any segment of the polyline to the input curve does not exceed eps.</summary>
            <param name="curve"> Input any 3D curve</param>
            <param name="fromParameter"> Input parameter value on curve</param>
            <param name="toParameter"> Input parameter value on curve (must be larger than fromParam)</param>
            <param name="eps"> Input approximation distance</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3dCollection)">
            <summary>Constructs object representing a 3D polyline with attached vectors at each control point.</summary>
            <param name="controlPoints"> Input control point array</param>
            <param name="vectorBundle"> Input vector array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3dCollection)">
            <summary>Constructor.</summary>
            <param name="knots"> Input knot vector</param>
            <param name="controlPoints"> Input control point collection</param>
            <param name="vectorBundle"> Input vector bundle collection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.#ctor">
            <summary>Default constructor. Used as a placeholder only. No data members are allocated.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.GetPointAt(System.Int32)">
            <summary>Returns the point at the specified index.</summary>
            <param name="index"> Input index of a point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.SetPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Resets point at the specified index to the input point.</summary>
            <param name="index"> Input index of a vector</param>
            <param name="point"> Input 3d point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.GetVectorAt(System.Int32)">
            <summary>Returns a vector at the specified index.</summary>
            <param name="index"> Input index of a vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.SetVectorAt(System.Int32,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Resets vector at the specified index to the input vector.</summary>
            <param name="index"> Input index of a vector</param>
            <param name="point"> Input vector point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.GetD2VectorAt(System.Int32)">
            <summary>Returns second derivative vector at the specified index.</summary>
            <param name="index"> Input index of a vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.SetD2VectorAt(System.Int32,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Resets second derivative vector at the specified index to the input vector.</summary>
            <param name="index"> Input index of a vector</param>
            <param name="point"> Input vector point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.Points">
            <summary>Returns list of points that define the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.D1Vectors">
            <summary>Returns list of tangent vectors at each point of the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.D2Vectors">
            <summary>Returns list of second derivative vectors at each point of the polyline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d.ApproximateTolerance">
            <summary>Returns tolerance that was used to construct polyline if polyline was constructed to approximate a 3D curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ClipBoundary2dData">
            <summary>
This class contains data used by various ClipBoundary2d operations.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.IsEqualTo(Autodesk.AutoCAD.Geometry.ClipBoundary2dData)">
            <summary>This method tests a against this object for equivalency.</summary>
            <param name="a"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.op_Inequality(Autodesk.AutoCAD.Geometry.ClipBoundary2dData,Autodesk.AutoCAD.Geometry.ClipBoundary2dData)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.op_Equality(Autodesk.AutoCAD.Geometry.ClipBoundary2dData,Autodesk.AutoCAD.Geometry.ClipBoundary2dData)">
            <summary>Read-only.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.ClippedVertices">
            <summary>Returns the ClippedVertices property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.ClipCondition">
            <summary>Returns the ClipCondition property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ClipBoundary2dData.ClippedSegmentSourceLabel">
            <summary>Returns the ClippedSegmentSourceLabel property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ClipBoundary2d">
            <summary>
This .NET class wraps the AcGeClipBoundary2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Constructs a n convex open or closed polyline clip boundary (one or more edges).</summary>
            <param name="clipBoundary"> Input 2d point array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs an ortho-aligned rectangular clip boundary. Two diagonally opposite corners define the rectangle.</summary>
            <param name="firstCorner"> Input corner of a rectangle</param>
            <param name="secondCorner"> Input corner of a rectangle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2d.#ctor">
            <summary>Null constructor. If this constructor is used, one of the set functions must be called before the object can be used for clipping.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2d.Set(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Resets the object to an convex open or closed polyline clip boundary (one or more edges).</summary>
            <param name="clipBoundary"> Input 2d point array</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Resets the object to an ortho-aligned rectangular clip boundary.</summary>
            <param name="firstCorner"> Input first corner of a rectangle</param>
            <param name="secondCorner"> Input second corner of a rectangle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2d.ClipPolygon(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Clips the specified closed polygon against the clip boundary.</summary>
            <param name="rawVertices"> Input 2d point array defining the input polygon. Self-intersecting and winding polygons are allowed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ClipBoundary2d.ClipPolyline(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Clips the specified closed polyline against the clip boundary.</summary>
            <param name="rawVertices"> Input 2d point array defining the input polyline. Self-intersecting and winding polylines are allowed.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CompositeParameter">
            <summary>
This value type encapsulates the data that defines the parameter of a point on a composite curve. This data includes the point's component parameter value, and the index of the component curve on which the point lies.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeParameter.#ctor(System.Int32,System.Double)">
            <summary>Constructor.</summary>
            <param name="segmentIndex"> Input segment index</param>
            <param name="localParameter"> Input local parameter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeParameter.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeParameter.IsEqualTo(Autodesk.AutoCAD.Geometry.CompositeParameter)">
            <summary>This method calls CompositeParameter.IsEqualTo(CompositeParameter a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input object to compare with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeParameter.IsEqualTo(Autodesk.AutoCAD.Geometry.CompositeParameter,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests a against this object for equivalency within the tolerance range specified by tolerance.</summary>
            <param name="a"> Input Autodesk.AutoCAD.Geometry.CompositeParameter object.</param>
            <param name="tolerance"> Input Autodesk.AutoCAD.Geometry.Tolerance object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeParameter.op_Inequality(Autodesk.AutoCAD.Geometry.CompositeParameter,Autodesk.AutoCAD.Geometry.CompositeParameter)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeParameter.op_Equality(Autodesk.AutoCAD.Geometry.CompositeParameter,Autodesk.AutoCAD.Geometry.CompositeParameter)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeParameter.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CompositeParameter.SegmentIndex">
            <summary>Returns the SegmentIndex property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CompositeParameter.LocalParameter">
            <summary>Returns LocalParameter property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CompositeCurve2d">
            <summary>
This .NET class wraps the AcGeCompositeCurve2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d[])">
            <summary>Constructs a composite curve from the list of input curves. The input curves should be connected at their endpoints. That is, the start point of each curve in the list (excluding the first curve) should be equal to the endpoint of the previous curve in the list. No check of this is made by the constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve2d.GetCurves">
            <summary>Returns the list of pointers to the component curves that make up the composite.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve2d.SetCurves(Autodesk.AutoCAD.Geometry.Curve2d[])">
            <summary>Resets the list of curves that make up the composite. The curves in curves are not deleted when the composite is deleted.</summary>
            <param name="curves"> Input Autodesk.AutoCAD.Geometry.Curve2d[] object; array of curves in the composite curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve2d.GlobalToLocalParameter(System.Double)">
            <summary>Takes a parameter value of a point on the composite and returns the parameter value of that same point on the component curve on which it lies.</summary>
            <param name="value"> Input global parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve2d.LocalToGlobalParameter(Autodesk.AutoCAD.Geometry.CompositeParameter)">
            <summary>Takes a parameter value of a point on the component curve and returns the parameter value of that point on the composite curve.</summary>
            <param name="value"> Input local parameter value</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CompositeCurve3d">
            <summary>
This .NET class wraps the AcGeCompositeCurve3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d[])">
            <summary>Constructs a composite curve from the list of input curves. The input curves should be connected at their endpoints, although no check of this is made by the constructor. That is, the start point of each curve in the list (excluding the first curve) should be equal to the endpoint of the previous curve in the list.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve3d.GetCurves">
            <summary>Returns the list of pointers to the component curves which make up the composite.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve3d.GlobalToLocalParameter(System.Double)">
            <summary>Takes a parameter value of a point on the composite and returns the parameter value of that same point on the component curve on which it lies. The index of the component curve on which the point lies is returned in value.</summary>
            <param name="value"> Input global parameter value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CompositeCurve3d.LocalToGlobalParameter(Autodesk.AutoCAD.Geometry.CompositeParameter)">
            <summary>Takes a parameter value of a point on the component curve specified by value and returns the parameter value of that point on the composite curve.</summary>
            <param name="value"> Input local parameter</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Cone">
            <summary>
This .NET class wraps the AcGeCone ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.#ctor(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Interval,System.Double,System.Double)">
            <summary>Constructs a conic segment defined by the input data.</summary>
            <param name="cosineAngle"> Input cosine of the angle formed by cone generator and its axis</param>
            <param name="sineAngle"> Input sine of the angle formed by cone generator and its axis</param>
            <param name="baseOrigin"> Input center of the circular base</param>
            <param name="baseRadius"> Input radius of the circular base</param>
            <param name="axisOfSymmetry"> Input cone's axis of rotation</param>
            <param name="height"> Input height of the cone</param>
            <param name="startAngle"> Input start parameter on the base circle</param>
            <param name="endAngle"> Input end parameter on the base circle</param>
            <param name="refAxis"> Input reference vector on base</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.#ctor(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,System.Double,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs a full circular cone defined by the input data.</summary>
            <param name="cosineAngle"> Input cosine of the angle formed by cone generator and its axis</param>
            <param name="sineAngle"> Input sine of the angle formed by cone generator and its axis</param>
            <param name="baseOrigin"> Input center of the circular base</param>
            <param name="baseRadius"> Input radius of the circular base</param>
            <param name="axisOfSymmetry"> Input cone's axis of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.#ctor">
            <summary>Default constructor. Initializes the sineAngle to -sin(Pi/4), the cosineAngle to cos(Pi/4), the axis of symmetry to (0,1,0), the reference axis to (1,0,0), the baseOrigin to (0,0,0), and the base radius to 2.0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.GetAngles">
            <summary>Returns as parameters the start and end angles on the cone's base.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.GetHalfAngles">
            <summary>Computes cosine and sine of the angle between the axis and a generator.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.GetHeightAt(System.Double)">
            <summary>Computes a range of parameters on the axis corresponding to the points belonging to the cone.</summary>
            <param name="parameter"> Input output interval on the axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.IsClosed">
            <summary>This method calls Cone.IsClosed(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.IsClosed(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns flag indicating if conic segment is a full circular cone with respect to the tolerance.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.SetAngles(System.Double,System.Double)">
            <summary>Resets cone's definition parameters to the ones specified by input data.</summary>
            <param name="startAngle"> Input start parameter on base circle</param>
            <param name="endAngle"> Input end parameter on base circle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.Set(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,System.Double,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Interval,System.Double,System.Double)">
            <summary>Resets cone's definition parameters to the ones specified by input data.</summary>
            <param name="cosineAngle"> Input cosine of the angle between axis and a generator</param>
            <param name="sineAngle"> Input sine of the angle between axis and a generator</param>
            <param name="baseCenter"> Input center of the base</param>
            <param name="baseRadius"> Input radius of the base</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
            <param name="refAxis"> Input reference vector on the base circle</param>
            <param name="height"> Input interval on cone's axis</param>
            <param name="startAngle"> Input start parameter on base circle</param>
            <param name="endAngle"> Input end parameter on base circle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.Set(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,System.Double,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Resets cone's definition parameters to the ones specified by input data.</summary>
            <param name="cosineAngle"> Input cosine of the angle between axis and a generator</param>
            <param name="sineAngle"> Input sine of the angle between axis and a generator</param>
            <param name="baseCenter"> Input center of the base</param>
            <param name="baseRadius"> Input radius of the base</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls Cone.IntersectWith(LinearEntity3d linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cone.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Computes intersections between the cone and a linear entity.</summary>
            <param name="linearEntity"> Input linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.BaseRadius">
            <summary>Returns radius of the base.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.BaseCenter">
            <summary>Returns the center of the base.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.HalfAngle">
            <summary>Returns angle between the axis and a generator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.Height">
            <summary>Computes a range of parameters on the axis corresponding to the points belonging to the cone.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.IsOuterNormal">
            <summary>Returns a flag indicating if the cone's normal is pointing out towards the closed cone.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.AxisOfSymmetry">
            <summary>Returns the axis of the cone.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.ReferenceAxis">
            <summary>Returns reference vector on the base circle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cone.Apex">
            <summary>Returns cone's vertex.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.SplineEntity2d">
            <summary>
This .NET class wraps the AcGeSplineEnt2d ObjectARX class. It represents different spline entities in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity2d.GetContinuityAtKnot(System.Int32)">
            <summary>Returns the degree of the highest derivative that is continuous at a knot. For example, if the spline does not have its first derivative at the knot indexed by index, then the value 0 is returned.</summary>
            <param name="index"> Input knot index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity2d.GetContinuityAtKnot(System.Int32,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns the degree of the highest derivative that is continuous at a knot. For example, if the spline does not have its first derivative at the knot indexed by index, then the value 0 is returned.</summary>
            <param name="index"> Input knot index</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity2d.GetKnotAt(System.Int32)">
            <summary>Returns a knot value from the spline's knot vector.</summary>
            <param name="index"> Input index of a knot</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity2d.SetKnotAt(System.Int32,System.Double)">
            <summary>Resets the value of a knot at a given index.</summary>
            <param name="index"> Input index of knot</param>
            <param name="value"> Input value of knot</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity2d.GetControlPointAt(System.Int32)">
            <summary>Returns a control point from the array of the spline's control points.</summary>
            <param name="index"> Input index of a control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SplineEntity2d.SetControlPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Resets a control point from the spline's control array.</summary>
            <param name="index"> Input index of a control point in the control array</param>
            <param name="point"> Input value of the point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.IsRational">
            <summary>Returns a flag indicating if the spline is a polynomial or rational. This function makes sense only for an NurbCurve2d object derived from the SplineEnt2d class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.Degree">
            <summary>Returns the degree of spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.Order">
            <summary>Returns spline's order. The curve is defined on the interval between knot values indexed by order - 1 and numberOfKnots - order. In the case of a B-spline, the order is greater than spline degree by 1. In the case of a polyline, the order is equal to 1.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.NumKnots">
            <summary>Returns the number of knots in the knot vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.Knots">
            <summary>Return the spline's knot vector. The intervals between two consecutive knots partition the spline into polynomial or rational pieces.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.NumControlPoints">
            <summary>Returns the number of control points in the control array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.StartParameter">
            <summary>Returns the minimal parameter on the curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.EndParameter">
            <summary>Returns the maximal parameter on the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.StartPoint">
            <summary>Returns the point on the curve at the minimal parameter value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.EndPoint">
            <summary>Returns the point on the spline at the maximal parametric value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SplineEntity2d.HasFitData">
            <summary>Returns true if the spline is constructed by using any interpolating fit data. Returns false otherwise.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d">
            <summary>
This .NET class wraps the AcGeCubicSplineCurve2d ObjectARX class. This class represent an interpolation cubic spline in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d,System.Double)">
            <summary>Constructs a cubic interpolation spline approximating curve with the distance of epsilon.</summary>
            <param name="curve"> Input generic 2D curve</param>
            <param name="epsilon"> Input approximation tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructs an interpolation cubic spline going through the fit points. The constructed spline has start and end derivative specified by the input data.</summary>
            <param name="fitPoints"> Input interpolating points</param>
            <param name="startDerivative"> Input derivative at the beginning of spline</param>
            <param name="endDerivative"> Input derivative at the end of spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Constructs an interpolation cubic spline going through the fit points within tolerance specified by the tolerance object. The constructed spline has start and end derivative specified by the input data.</summary>
            <param name="fitPoints"> Input interpolating points</param>
            <param name="startDerivative"> Input derivative at the beginning of spline</param>
            <param name="endDerivative"> Input derivative at the end of spline</param>
            <param name="tolerance"> Input tolerance object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Constructs an interpolation cubic spline going through the fit points. The constructed spline is a closed curve.</summary>
            <param name="fitPoints"> Input interpolating points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Constructs an interpolation cubic spline going through the fit points within tolerance specified by the tol object. The constructed spline is a closed curve.</summary>
            <param name="fitPoints"> Input interpolating points</param>
            <param name="tolerance"> Input tolerance object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.#ctor">
            <summary>Default constructor. Initializes with an empty points list.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.GetFitPointAt(System.Int32)">
            <summary>Resets the fit point at the specified index to the input value.</summary>
            <param name="index"> Input index of a fitPoint point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.SetFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Resets the fit point at the specified index to the input value.</summary>
            <param name="index"> Input index of a fit point</param>
            <param name="point"> Input fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.GetFirstDerivativeAt(System.Int32)">
            <summary>Returns the first derivative at the interpolation point specified by its index.</summary>
            <param name="index"> Input index of an interpolation point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.SetFirstDerivativeAt(System.Int32,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Resets the derivative at the specified index to the input value.</summary>
            <param name="index"> Input index of a fit point</param>
            <param name="derivative"> Input derivative</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CubicSplineCurve2d.NumFitPoints">
            <summary>Returns number of the spline's fit points.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d">
            <summary>
This .NET class wraps the AcGeCubicSplineCurve3d ObjectARX class. This class represents an interpolation cubic spline in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d,System.Double)">
            <summary>Constructs a cubic interpolation spline approximating curve with the distance of epsilon.</summary>
            <param name="curve"> Input generic 3D curve</param>
            <param name="epsilon"> Input approximation tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs an interpolation cubic spline going through the fit points. The constructed spline has start and end derivative specified by the input data.</summary>
            <param name="points"> Input interpolating points</param>
            <param name="startDerivative"> Input derivative at the beginning of spline</param>
            <param name="endDerivative"> Input derivative at the end of spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Constructs an interpolation cubic spline going through the fit points within tolerance specified by the tolerance object. The constructed spline has start and end derivative specified by the input data.</summary>
            <param name="points"> Input interpolating points</param>
            <param name="startDerivative"> Input derivative at the beginning of spline</param>
            <param name="endDerivative"> Input derivative at the end of spline</param>
            <param name="tolerance"> Input tolerance object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>Constructs an interpolation cubic spline going through the fit points. The constructed spline is a closed curve.</summary>
            <param name="points"> Input interpolating points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Constructs an interpolation cubic spline going through the fit points within tolerance specified by the tolerance object. The constructed spline is a closed curve.</summary>
            <param name="points"> Input interpolating points</param>
            <param name="tolerance"> Input tolerance object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.#ctor">
            <summary>Default constructor. Initializes with an empty point list.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.FitPointAt(System.Int32)">
            <summary>Returns fitPoint at a given index i.</summary>
            <param name="i"> Input index of a fitPoint point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.SetFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Resets the fit point at the specified index i to the input value.</summary>
            <param name="i"> Input index of a fit point</param>
            <param name="point"> Input fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.FirstDerivativeAt(System.Int32)">
            <summary>Returns the first derivative at the interpolation point specified by its index i.</summary>
            <param name="i"> Input index of an interpolation point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.SetFirstDerivativeAt(System.Int32,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Resets the derivative at the specified index to the input value.</summary>
            <param name="i"> Input index of a fit point</param>
            <param name="derivative"> Input derivative</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CubicSplineCurve3d.NumberOfFitPoints">
            <summary>Returns number of the spline's fit points.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PointEntity2d">
            <summary>
This .NET class wraps the AcGePointEnt2d ObjectARX class. It's an abstract base class for 2D point classes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PointEntity2d.Point">
            <summary>Returns 2D coordinates of point entity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.EllipticalArc2d">
            <summary>
This .NET class wraps the AcGeEllipArc2d ObjectARX class. It represents both full ellipses and elliptical arcs in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Constructs an ellipse with the specified center, major and minor axes, major and minor radii, and start and end angles.</summary>
            <param name="center"> Input ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
            <param name="startAngle"> Input angle of ellipse start point</param>
            <param name="endAngle"> Input angle of ellipse end point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,System.Double,System.Double)">
            <summary>Constructs a full ellipse with the specified center, major and minor axes, and major and minor radii.</summary>
            <param name="center"> Input ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.#ctor(Autodesk.AutoCAD.Geometry.CircularArc2d)">
            <summary>Constructs a 2D ellipse that is identical to the input circular arc.</summary>
            <param name="arc"> Input any 2D circular arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.#ctor">
            <summary>Default constructor. Constructs full ellipse centered at origin (0,0) with X and Y axis for major and minor axes respectively. Major and minor radius are both 1, so constructed ellipse is just the unit circle centered at the origin.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity2d)">
            <summary>This method calls EllipticalArc2d.IntersectWith(LinearEntity2d line, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="line"> Input any 2D linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if the input line intersects the ellipse.</summary>
            <param name="line"> Input any 2D linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.IsCircular">
            <summary>This method calls EllipticalArc2d.IsCircular(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.IsCircular(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines if an ellipse is a circular arc.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.IsInside(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>This method calls EllipticalArc2d.IsInside(Point2d point, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.IsInside(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Determines whether the input point lies inside the ellipse. This function treats the ellipse as a full ellipse even if it is bounded. This function also determines if the input point lies inside the full ellipse.</summary>
            <param name="point"> Input any 2D point</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.SetAxes(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Resets the major and minor axes of the ellipse.</summary>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.SetAngles(System.Double,System.Double)">
            <summary>Changes the start point and endpoint of the ellipse by resetting the angles of the start point and endpoint.</summary>
            <param name="startAngle"> Input angle of ellipse startpoint</param>
            <param name="endAngle"> Input angle of ellipse endpoint</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.Set(Autodesk.AutoCAD.Geometry.CircularArc2d)">
            <summary>Changes the definition of the ellipse to be identical to the input circular arc.</summary>
            <param name="arc"> Input any 2D circular arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Changes the definition of the ellipse to have the specified center, major and minor axes, major and minor radii, and start and end angles.</summary>
            <param name="center"> Input ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
            <param name="startAngle"> Input angle of ellipse start point</param>
            <param name="endAngle"> Input angle of ellipse endpoint</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.EllipticalArc2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,System.Double,System.Double)">
            <summary>Changes the definition of the ellipse to a full ellipse with the specified center, major and minor axes, and major and minor radii.</summary>
            <param name="center"> Input ellipse center</param>
            <param name="majorAxis"> Input ellipse major axis</param>
            <param name="minorAxis"> Input ellipse minor axis</param>
            <param name="majorRadius"> Input ellipse major radius</param>
            <param name="minorRadius"> Input ellipse minor radius</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.Center">
            <summary>Returns the center point of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.MinorRadius">
            <summary>Returns the minor radius of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.MajorRadius">
            <summary>Returns the major radius of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.MinorAxis">
            <summary>Returns the minor axis vector of the ellipse. This function always returns a unit vector.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.MajorAxis">
            <summary>Returns the major axis vector of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.StartAngle">
            <summary>Returns the angle of the ellipse start point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.EndAngle">
            <summary>Returns the angle of the endpoint of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.StartPoint">
            <summary>Returns the start point of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.EndPoint">
            <summary>Returns the endpoint of the ellipse.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.EllipticalArc2d.IsClockWise">
            <summary>Determines if the orientation of an ellipse is clockwise or counterclockwise.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ExternalCurve2d">
            <summary>
This .NET class wraps the AcGeExternalCurve2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ExternalCurve2d.#ctor">
            <summary>Default constructor. Creates an empty instance.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ExternalCurve2d.SetToOwnCurve">
            <summary>Forces this instance to own its definition data. If the current instance is the owner, then this is non-operational. Otherwise, this method makes a copy of the curve definition data such that it owns that geometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve2d.IsNurbCurve">
            <summary>Determines whether the external curve instance can be represented by a curve definition that is native to gelib. Returns true if the external curve does have an exact gelib native representation, otherwise it returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve2d.IsDefined">
            <summary>Determines whether the instance is empty. Returns true if the instance does have a curve definition, otherwise returns false, implying an empty instance.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve2d.ExternalCurve">
            <summary>Provides access to the external entity in its native form. A caller having access to the precise definition of the external entity can use that knowledge to gain efficient access to the entity in its native form.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve2d.ExternalCurveKind">
            <summary>Provides information concerning the native system in which the external curve definition was created.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve2d.IsOwnerOfCurve">
            <summary>Determines whether this instance owns its definition data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve2d.NurbCurve">
            <summary>Returns gelib native representation for the external curve.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbCurve2d">
            <summary>
This .Net class wraps AcGeNurbCurve2d ObjectARX class. This class represents non-uniform rational B-spline in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor(Autodesk.AutoCAD.Geometry.LineSegment2d)">
            <summary>Constructs spline representing a line segment.</summary>
            <param name="linSegment"> Input line segment</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor(Autodesk.AutoCAD.Geometry.EllipticalArc2d)">
            <summary>Constructs spline geometrically identical to an elliptic arc.</summary>
            <param name="ellipse"> Input elliptic arc</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Constructs a 2D polynomial spline interpolating a given array if 2D points within a global tolerance.</summary>
            <param name="fitPoints"> Input points interpolating the spline curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Constructs a 2D polynomial spline interpolating a given array if 2D points within given tolerance.</summary>
            <param name="fitPoints"> Input points interpolating the spline curve</param>
            <param name="fitTolerance"> Input maximal deviation of the curve from the fitPoints</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,System.Boolean,System.Boolean,Autodesk.AutoCAD.Geometry.KnotParameterizationEnum)">
            <summary>
This wraps AcGeNurbCurve2d::AcGeNurbCurve2d (const AcGePoint2dArray&amp; fitPoints, const AcGeVector2d&amp; startTangent, const AcGeVector2d&amp; endTangent, Adesk::Boolean startTangentDefined = Adesk::kTrue, Adesk::Boolean endTangentDefined = Adesk::kTrue, const AcGeTol&amp; fitTolerance = AcGeContext::gTol) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor(System.Int32,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,System.Boolean)">
            <summary>
Constructs a 2D rational spline by a knot vector, control points, and weights. If the spline is rational, control points and weights must have same length..</summary>
            <param name="degree"> Input the degree of the spline.</param>
            <param name="knots"> Input an array of knot values, partitioning the spline's domain into rational pieces.</param>
            <param name="controlPoints"> Input an array of 2D control points.</param>
            <param name="weights"> Input an array of weight values.</param>
            <param name="periodic"> Input a flag indicating whether the spline is a periodic.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor(System.Int32,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point2dCollection,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX method..</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.#ctor">
            <summary>Default constructor. This is only a placeholder. No data is stored.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.GetFitTangents">
            <summary>Returns the fit tangents of spline. Returns false if spline was not constructed from fit points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.GetFitPointAt(System.Int32)">
            <summary>Returns the fit point corresponding to the specified index. Returns true if index is greater than or equal to 0 and less than the total number of fit points.</summary>
            <param name="index"> Input index of fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.GetWeightAt(System.Int32)">
            <summary>Resets the weight of the specified control point. index must be greater than or equal to 0 and less than the number of control points.</summary>
            <param name="index"> Input index to weights</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.GetParametersOfC1Discontinuity">
            <summary>This method calls NurbCurve2d.GetParametersOfC1Discontinuity(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.GetParametersOfC1Discontinuity(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns parameter values of all points on the spline where the tangent vector is not continuous. These will be points where the tangent vector just to the left of the point is not equal to the tangent vector just to the right of the point. The returned parameter values will only be at spline knot values.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.GetParametersOfG1Discontinuity">
            <summary>This method calls NurbCurve2d.GetParametersOfG1Discontinuity(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.GetParametersOfG1Discontinuity(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns parameter values of all points on the spline where the tangent vector is not continuous. These will be points where the tangent vector just to the left of the point does not have the same direction as the tangent vector just to the right of the point. The returned parameter values will only be at spline knot values.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, the fit point at the specified index is reset to the new value.</summary>
            <param name="index"> Input index of fit point that is to be modified</param>
            <param name="point"> Input new fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.AddFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, a new fit point is added at the specified index. The fit point that was formerly at index is moved to index+1, index+1 gets moved to index+2, etc. index must be greater than or equal to 0 and less than or equal to the number of fit points.</summary>
            <param name="index"> Input index of fit point that is to be added</param>
            <param name="point"> Input new fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.DeleteFitPointAt(System.Int32)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, the fit point at the specified index is deleted.</summary>
            <param name="index"> Input index of fit point that is to be deleted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitTangents(Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>If spline was not created with fit data, this function returns false. Otherwise, the spline is recomputed using the new start and end tangent vectors.</summary>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitData(System.Int32,Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>This method calls NurbCurve2d.SetFitData(Int32 degree, Point2dCollection fitPoints, Tolerance fitTolerance) with tolerance set to Global.</summary>
            <param name="degree"> Input new degree of spline</param>
            <param name="fitPoints"> Input new fit points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitData(System.Int32,Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Recomputes the spline from the input fit points and makes it of the specified degree. If fitTolerance is not 0, then the constructed spline may not pass through the fit points. But the maximum distance from any fit point to the constructed spline will be no greater than fitTolerance.</summary>
            <param name="degree"> Input new degree of spline</param>
            <param name="fitPoints"> Input new fit points</param>
            <param name="fitTolerance"> Input tolerance to which spline will fit the interpolation points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitData(Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,System.Boolean)">
            <summary>
This method calls NurbCurve2d.SetFitData(KnotCollection fitKnots, Point2dCollection fitPoints, Vector2d startTangent, Vector2d endTangent, Tolerance fitTolerance, Boolean periodic) with tolerance set to Global.</summary>
            <param name="fitKnots"> Input new knot values</param>
            <param name="fitPoints"> Input new fit points</param>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
            <param name="periodic"> Input indicating whether spline should be made</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitData(Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Tolerance,System.Boolean)">
            <summary>
Recomputes the spline from the input fit points, start and end tangents, and fit tolerance..</summary>
            <param name="fitKnots"> Input new knot values</param>
            <param name="fitPoints"> Input new fit points</param>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
            <param name="fitTolerance"> Input tolerance to which spline will fit the interpolation points</param>
            <param name="periodic"> Input indicating whether spline should be made periodic</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitData(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.KnotParameterizationEnum,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This wraps the AcGeNurbCurve2d::setFitData(const AcGePoint2dArray&amp; fitPoints, const AcGeVector2d&amp; startTangent, const AcGeVector2d&amp; endTangent, KnotParameterization knotParam, const AcGeTol&amp; fitTol=AcGeContext::gTol) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitData(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>This method calls NurbCurve2d.SetFitData(Point2dCollection fitPoints, Vector2d startTangent, Vector2d endTangent, Tolerance fitTolerance) with tolerance set to Global.</summary>
            <param name="fitPoints"> Input new fit points</param>
            <param name="startTangent"> Input new start tangent vector</param>
            <param name="endTangent"> Input new end tangent vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetFitData(Autodesk.AutoCAD.Geometry.Point2dCollection,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Vector2d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Recomputes the spline from the input fit points, start and end tangents, and fit tolerance. If fitTolerance is not 0, then the constructed spline may not pass through the fit points, but the maximum distance from any fit point to the constructed spline will be no greater than fitTolerance.</summary>
            <param name="fitPoints"> Input new fit points</param>
            <param name="startTangent"> Input new start tangent</param>
            <param name="endTangent"> Input new end tangent</param>
            <param name="fitTolerance"> Input tolerance to which spline will fit the interpolation points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.PurgeFitData">
            <summary>Deletes all fit data used to construct the spline. This function does not change the definition of the spline (that is, does not change the control points, knots, or weights).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.AddKnot(System.Double)">
            <summary>Adds new knot to the spline knot sequence. If the newKnot value is already a knot, then this function does nothing.</summary>
            <param name="newKnot"> Input new knot value to be inserted into the knot vector of the spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.InsertKnot(System.Double)">
            <summary>Adds new knot to the spline knot sequence. If the newKnot value is already a knot, then the multiplicity of the knot is increased by 1.</summary>
            <param name="newKnot"> Input new knot value to be inserted into the knot vector of the spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetWeightAt(System.Int32,System.Double)">
            <summary>Resets the weight of the specified control point. index must be greater than or equal to 0 and less than the number of control points.</summary>
            <param name="index"> Input index of control point</param>
            <param name="value"> Input new weight to be assigned to control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.SetEvaluateMode(System.Boolean)">
            <summary>
Resets the state of the evaluation mode in order turn the internal optimization on or off.</summary>
            <param name="evaluateMode"> Input state of the evaluation mode</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.JoinWith(Autodesk.AutoCAD.Geometry.NurbCurve2d)">
            <summary>Recomputes spline by joining input spline to this spline. Neither spline may be closed and the start point of the input spline must be equal to the endpoint of this spline.</summary>
            <param name="curve"> Input spline to be joined with this spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.HardTrimByParams(System.Double,System.Double)">
            <summary>Trims the spline to the new start and end parameters. This is done by adding and removing control points and knots, and is not done by just resetting the interval on which the spline is defined.</summary>
            <param name="newStartParameter"> Input new start parameter of spline</param>
            <param name="newEndParameter"> Input new end parameter of spline</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.MakeRational(System.Double)">
            <summary>If the spline is not already rational, then it is made rational and each control point is assigned the specified weight. If the spline is already rational, the weight at each control point is multiplied by the input weight.</summary>
            <param name="weight"> Input weight to be assigned to each control point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.MakeClosed">
            <summary>If the spline is not already closed, it is made closed by creating a periodic spline defined by the current fit points or control points.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.MakePeriodic">
            <summary>Make a spline into a periodic spline. It converts a spline defined by clamped format into unclamped format. If a spline is not closed, we will make it closed first.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.MakeNonPeriodic">
            <summary>Make a periodic spline non-periodic. It converts a spline from unclamped format into clamped format by inserting full knot multiplicity at start and end point.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.MakeOpen">
            <summary>If the spline is closed and if,.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.ElevateDegree(System.Int32)">
            <summary>The degree of the spline is increased by the specified amount.</summary>
            <param name="plusDegree"> Input amount by which degree is to be increased</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.AddControlPointAt(System.Double,Autodesk.AutoCAD.Geometry.Point2d,System.Double)">
            <summary>This wraps AcGeNurbCurve2d::addControlPointAt(double newKnot, const AcGePoint2d&amp; point, double weight = 1.0) method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2d.DeleteControlPointAt(System.Int32)">
            <summary>This wraps AcGeNurbCurve2d::deleteControlPointAt(int index) method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2d.NumFitPoints">
            <summary>Returns the number of fit points used to construct the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2d.FitTolerance">
            <summary>Returns the fit tolerance used to construct the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2d.NumWeights">
            <summary>Returns number of weights for the spline. This will be 0 if the spline is not rational or equal to the number of control points if the spline is rational.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2d.FitKnotParameterization">
            <summary>This wraps AcGeNurbCurve2d::getFitKnotParameterization and AcGeNurbCurve2d::setFitKnotParameterizationmethods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2d.EvalMode">
            <summary>Returns state of the current evaluation mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2d.FitData">
            <summary>Returns all fit data used to construct the spline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2d.DefinitionData">
            <summary>Returns all data that defines the spline. If spline is not rational, weights array will be empty.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.OffsetCurve2d">
            <summary>
This .NET class wraps the AcGeOffsetCurve2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.OffsetCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d,System.Double)">
            <summary>Constructs an offset curve that is an exact offset of the specified base curve. The direction of offset is determined by the sign of the offsetDistance parameter.</summary>
            <param name="baseCurve"> Input base curve</param>
            <param name="offsetDistance"> Input offset distance</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve2d.Curve">
            <summary>Returns the base curve of which this curve is an offset.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve2d.OffsetDistance">
            <summary>Returns the signed distance that this curve is offset from the base curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve2d.ParameterDirection">
            <summary>Returns 1 if this curve has the same parameter direction as the base curve, 0 if this curve has an opposite parameter direction as the base curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve2d.Transformation">
            <summary>Returns transformation matrix that was applied to this curve by calling transformBy(). If transformBy() has never been called for this curve, the returned matrix will be the identity matrix. If transformBy() has been called more than once, the returned matrix will be the concatenation of all of the transformation matrices.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PointEntity3d">
            <summary>
This .NET class wraps the AcGePointEnt3d ObjectARX class. It's an abstract base class for 3D point classes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PointEntity3d.GetPoint">
            <summary>Returns 3D coordinates of point entity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.OffsetCurve3d">
            <summary>
This .NET class wraps the AcGeOffsetCurve3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.OffsetCurve3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double)">
            <summary>Constructs an offset curve that is an exact offset of the specified base curve. The direction of offset is determined by the sign of the offsetDistance parameter and by the direction of planeNormal. The base curve must be planar and planeNormal must be perpendicular to the plane of the base curve.</summary>
            <param name="baseCurve"> Input base curve</param>
            <param name="planeNormal"> Input plane normal</param>
            <param name="offsetDistance"> Input offset distance</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve3d.Curve">
            <summary>Returns the base curve of which this curve is an offset.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve3d.Normal">
            <summary>Returns Normal property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve3d.OffsetDistance">
            <summary>Returns the signed distance that this curve is offset from the base curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve3d.ParameterDirection">
            <summary>Returns 1 if this curve has the same parameter direction as the base curve, 0 if this curve has an opposite parameter direction as the base curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetCurve3d.Transformation">
            <summary>Returns transformation matrix that was applied to this curve by calling transformBy(). If transformBy() has never been called for this curve, the returned matrix will be the identity matrix. If transformBy() has been called more than once, the returned matrix will be the concatenation of all of the transformation matrices.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ExternalCurve3d">
            <summary>
This .NET class wraps the AcGeExternalCurve3d ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsLine">
            <summary>Determines whether the external curve instance can be represented by a curve definition that is native to gelib.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsRay">
            <summary>Assesses if the curve is a ray.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsLineSegment">
            <summary>Determines whether the external curve instance can be represented by a curve definition that is native to gelib.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsCircularArc">
            <summary>Determines whether the external curve instance can be represented by a curve definition that is native to gelib.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsEllipticalArc">
            <summary>Determines whether the external curve instance can be represented by a curve definition that is native to gelib.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsNurbCurve">
            <summary>Determines whether the external curve instance can be represented by a curve definition that is native to gelib. Returns true if the external curve does have an exact gelib native representation, otherwise it returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsDefined">
            <summary>Determines whether the instance is empty.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.IsNativeCurve">
            <summary>Certain external curve definition may have corresponding native gelib representations. An example is the circular arc. This method allows the caller to obtain such a representation for an instance of external curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.NativeCurve">
            <summary>Returns gelib native representation for the external curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalCurve3d.ExternalCurveKind">
            <summary>Provides information concerning the native system in which the external curve definition was created.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Position3d">
            <summary>
This .NET class wraps the AcGePosition3d ObjectARX class. It represents a point in 3D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position3d.#ctor(System.Double,System.Double,System.Double)">
            <summary>Constructs a 3D position object that has the specified coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a 3D position object with the same coordinates as the input point.</summary>
            <param name="point"> Input any 3D point object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position3d.#ctor">
            <summary>Default constructor. Constructs a 3D position object with coordinates of (0,0,0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position3d.Set(System.Double,System.Double,System.Double)">
            <summary>Changes the coordinates of the 2D position object to the input coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position3d.Set(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes the coordinates of the 3D position object to have the same coordinates as the input point.</summary>
            <param name="point"> Input any 3D point</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CurveBoundaryData">
            <summary>
This class contains data that defines a CurveBoundary object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundaryData.GetCurve3ds">
            <summary>This method returns the array of 3D curves for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundaryData.GetCurve2ds">
            <summary>This method returns the array of 2D curves for this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundaryData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundaryData.IsEqualTo(Autodesk.AutoCAD.Geometry.CurveBoundaryData)">
            <summary>This method compares the 2D and 3D orientations and 2D and 3D curves of this boundary to those of a.</summary>
            <param name="a"> Input object to check equivalency</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundaryData.op_Inequality(Autodesk.AutoCAD.Geometry.CurveBoundaryData,Autodesk.AutoCAD.Geometry.CurveBoundaryData)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundaryData.op_Equality(Autodesk.AutoCAD.Geometry.CurveBoundaryData,Autodesk.AutoCAD.Geometry.CurveBoundaryData)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundaryData.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundaryData.Orientation3d">
            <summary>Returns logical orientation of 3dGeometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundaryData.Orientation2d">
            <summary>Returns the logical orientation of parameter space curves.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CurveBoundary">
            <summary>
This .NET class wraps the AcGeCurveBoundary ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundary.#ctor">
            <summary>Default constructor. Creates an empty instance.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundary.Clone">
            <summary>Returns a copy of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundary.Set(System.Int32,Autodesk.AutoCAD.Geometry.Entity3d[],Autodesk.AutoCAD.Geometry.Curve2d[],System.Boolean,System.Boolean)">
            <summary>
Resets the definition of an instance of this class. If the current instance is not empty, and it owns its definition data, then prior to resetting the definition data, it would delete the existing definition..</summary>
            <param name="numElements"> Input number of elements in curve boundary</param>
            <param name="curve3ds"> Input array of 3D space geometry of each element of curve boundary</param>
            <param name="curve2ds"> Input array of parameter space geometry of each element of curve boundary</param>
            <param name="orientation3d"> Input logical orientation applicable to each element of 3dGeometry</param>
            <param name="orientation2d"> Input logical orientation applied to each element of paramGeometry</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveBoundary.SetToOwnCurves">
            <summary>Forces this instance to own its definition data. If the current instance is the owner, then this is non-operational. Otherwise, this method makes a copy of the definition data such that it owns that data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundary.IsDegenerate">
            <summary>Returns true if the curve boundary consists of a single element and it is degenerate to a single 3D space point. Otherwise it returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundary.DegeneratePosition">
            <summary>Returns 3D space point for a degenerate curve boundary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundary.DegenerateCurve">
            <summary>Determines whether the curve boundary is degenerate to a single 3D space point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundary.NumElements">
            <summary>Returns the number of elements of the curve boundary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundary.Contour">
            <summary>This property yields the representation information concerning the curve boundary.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveBoundary.IsOwnerOfCurves">
            <summary>Returns true if the curve boundary representation data is owned by this instance, else false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d">
            <summary>
This .Net class wraps AcGeCurveCurveInt2d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Interval,Autodesk.AutoCAD.Geometry.Interval)">
            <summary>Constructs an object that represents the intersection of the two input curves. Intersection points and overlaps are only returned if they are within the two specified parameter ranges. Intersection points are returned within the accuracy of the specified tolerance (or to within the default tolerance if no tolerance parameter is specified).</summary>
            <param name="curve1"> Input first curve</param>
            <param name="curve2"> Input second curve</param>
            <param name="range1"> Input first range interval</param>
            <param name="range2"> Input second range interval</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>Constructs an object that represents the intersection of the two input curves. Intersection points are returned within the accuracy of the default tolerance.</summary>
            <param name="curve1"> Input first curve</param>
            <param name="curve2"> Input second curve</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.#ctor">
            <summary>This default constructor would typically be used as a placeholder where the curves would be specified by a subsequent call to one of the Set() functions. This constructor sets the two curves to be the infinite lines represented by the X and Y axes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.GetIntersectionRanges">
            <summary>Returns the two intervals for which intersection points and overlap will be returned.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.GetIntersectionPoint(System.Int32)">
            <summary>Returns the specified intersection point. number must be non-negative.</summary>
            <param name="number"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.GetIntersectionParameters(System.Int32)">
            <summary>Returns the parameter values on each curve of the specified intersection point.</summary>
            <param name="intersection"> Input intersection point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.GetPointOnCurve1(System.Int32)">
            <summary>Returns the specified intersection point as an PointOnCurve2d object of the first curve. The PointOnCurve2d class contains functions to return the 2D coordinates and the parameter value of the returned point.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.GetPointOnCurve2(System.Int32)">
            <summary>Returns the specified intersection point as an PointOnCurve2d object of the second curve. The PointOnCurve2d class contains functions to return the 2D coordinates and the parameter value of the returned point.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.IsTangential(System.Int32)">
            <summary>Returns whether the specified intersection point is a tangential intersection.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.IsTransversal(System.Int32)">
            <summary>Returns whether the specified intersection point is a transversal intersection.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.GetIntersectionPointTolerance(System.Int32)">
            <summary>Returns the tolerance that was used to find the specified intersection point.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.GetOverlapRanges(System.Int32)">
            <summary>Returns the intervals of overlap of each curve of the specified overlap. overlapNumber must be non-negative and be less than the number of overlaps returned by OverlapCount.</summary>
            <param name="overlapNumber"> Input number of overlaps to get intervals for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.ChangeCurveOrder">
            <summary>Reverses the order of the two curves.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.OrderWithRegardsTo1">
            <summary>Reorders intersection points so that they will be returned in increasing parameter values with respect to the first curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.OrderWithRegardsTo2">
            <summary>Reorders intersection points so that they will be returned in increasing parameter values with respect to the second curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.Set(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Interval,Autodesk.AutoCAD.Geometry.Interval)">
            <summary>This method calls CurveCurveIntersector2d.Set(Curve2d curve1, Curve2d curve2, Interval range1, Interval range2, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve1"> Input any 2D curve</param>
            <param name="curve2"> Input any 2D curve</param>
            <param name="range1"> Input subset of curve1 domain</param>
            <param name="range2"> Input subset of curve2 domain</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.Set(Autodesk.AutoCAD.Geometry.Curve2d,Autodesk.AutoCAD.Geometry.Curve2d)">
            <summary>This method calls CurveCurveIntersector2d.Set(Curve2d curve1, Curve2d curve2, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve1"> Input any 2D curve</param>
            <param name="curve2"> Input any 2D curve</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.Curve1">
            <summary>Returns a pointer to the first curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.Curve2">
            <summary>Returns a pointer to the second curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.Tolerance">
            <summary>Returns the tolerance that will be used when intersecting the two curves.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.NumberOfIntersectionPoints">
            <summary>Returns the number of intersection points between the two curves.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.OverlapCount">
            <summary>Returns the number of intervals of overlap between the two curves.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d.OverlapDirection">
            <summary>Returns true if the two curves are oriented in the same direction where they overlap and false if they are oriented in the opposite direction.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d">
            <summary>
This .Net class wraps AcGeCurveCurveInt3d ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Interval,Autodesk.AutoCAD.Geometry.Interval,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs an object that represents the intersection of the two input curves, curve1 and curve2. Intersection points and overlaps are only returned if they are within the two specified parameter ranges. Intersection points are returned within the accuracy of the default tolerance.</summary>
            <param name="curve1"> Input first curve</param>
            <param name="curve2"> Input second curve</param>
            <param name="range1"> Input first range interval</param>
            <param name="range2"> Input second range interval</param>
            <param name="planeNormal"> Input optional plane normal</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.#ctor(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs an object that represents the intersection of the two input curves. Intersection points are returned within the accuracy of the default tolerance in.</summary>
            <param name="curve1"> Input first curve</param>
            <param name="curve2"> Input second curve</param>
            <param name="planeNormal"> Input optional plane normal</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.#ctor">
            <summary>This default constructor is used as a placeholder where the curves are specified by a subsequent call to one of the set() functions. This constructor sets the two curves to be the infinite lines represented by the X and Y axes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.GetIntersectionRanges">
            <summary>Returns the two intervals for which intersection points and overlap occur.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.GetIntersectionPoint(System.Int32)">
            <summary>Returns the intersection points between the two curves.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.GetIntersectionParameters(System.Int32)">
            <summary>Returns the parameter values on each curve of the specified intersection point.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.GetPointOnCurve1(System.Int32)">
            <summary>Returns the specified intersection point intersection as an PointOnCurve3d object of the first curve. The PointOnCurve3d class contains functions to return the 3D coordinates and the parameter value of the returned point.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.GetPointOnCurve2(System.Int32)">
            <summary>Returns the specified intersection point intersection as an PointOnCurve3d object of the second curve. The PointOnCurve3d class contains functions to return the 3D coordinates and the parameter value of the returned point.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.IsTangential(System.Int32)">
            <summary>Returns whether the specified intersection point is a tangential intersection.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.IsTransversal(System.Int32)">
            <summary>Returns whether the specified intersection point is a transversal intersection.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.GetIntersectionPointTolerance(System.Int32)">
            <summary>Returns the tolerance that was used to find the specified intersection point.</summary>
            <param name="intersection"> Input index to the intersection desired</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.OverlapCount">
            <summary>Returns the number of intervals of overlap between the two curves.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.OverlapDirection">
            <summary>Returns true if the two curves are oriented in the same direction where they overlap and false if they are oriented in the opposite direction. This function returns true if there is no overlap between the two curves.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.GetOverlapRanges(System.Int32)">
            <summary>Returns the intervals of overlap of each curve of the specified overlap. overlap must be non-negative and be less than the number of overlaps returned by OverlapCount.</summary>
            <param name="overlap"> Input number of overlaps to get intervals for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.ChangeCurveOrder">
            <summary>Reverses the order of the two curves.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.OrderWithRegardsTo1">
            <summary>Reorders intersection points so that they are returned in increasing parameter values with respect to the first curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.OrderWithRegardsTo2">
            <summary>Reorders intersection points so that they are returned in increasing parameter values with respect to the second curve.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.Set(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Interval,Autodesk.AutoCAD.Geometry.Interval,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>This method calls CurveCurveIntersector3d.Set(Curve3d curve1, Curve3d curve2, Interval range1, Interval range2, Vector3d planeNormal, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="curve1"> Output Autodesk.AutoCAD.Geometry.Curve3d object; first curve</param>
            <param name="curve2"> Output Autodesk.AutoCAD.Geometry.Curve3d object; second curve</param>
            <param name="range1"> Output Autodesk.AutoCAD.Geometry.Interval object; first range interval</param>
            <param name="range2"> Output Autodesk.AutoCAD.Geometry.Interval object; second range interval</param>
            <param name="planeNormal"> Input optional plane normal</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.Set(Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Curve3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Resets the two curves, curve1 and curve2, that are to be intersected. The planeNormal parameter is only used by the getIntConfigs() member function. It is not necessary to supply this parameter if getIntConfigs() will not be called for this object.</summary>
            <param name="curve1"> Input first curve</param>
            <param name="curve2"> Input second curve</param>
            <param name="planeNormal"> Input optional plane normal</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.Curve1">
            <summary>Returns a pointer to the first curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.Curve2">
            <summary>Returns a pointer to the second curve.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.PlaneNormal">
            <summary>Returns the plane normal that getIntConfigs() uses to compute the configurations at an intersection point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.Tolerance">
            <summary>Returns the tolerance used when intersecting the two curves.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d.NumberOfIntersectionPoints">
            <summary>Returns the number of intersection points between the two curves.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Cylinder">
            <summary>
This .NET class wraps the AcGeCylinder ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.#ctor(System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Interval,System.Double,System.Double)">
            <summary>Constructs a bounded cylinder defined by the input data.</summary>
            <param name="radius"> Input cylinder radius</param>
            <param name="origin"> Input base point on the cylinder axis</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
            <param name="referenceAxis"> Input reference vector on the base circle</param>
            <param name="height"> Input interval on the axis referred by the origin</param>
            <param name="startAngle"> Input start angle on the base circle</param>
            <param name="endAngle"> Input end angle on the base circle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.#ctor(System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs an infinite cylinder defined by the input data.</summary>
            <param name="radius"> Input cylinder radius</param>
            <param name="origin"> Input reference point on the cylinder axis</param>
            <param name="axisOfSymmetry"> Input rotation axis</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.#ctor">
            <summary>Constructs a valid infinite default cylinder.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.GetAngles">
            <summary>Computes start and end angles on the base circle.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.GetHeightAt(System.Double)">
            <summary>Returns the input parameter converted into the parameterization defined by the origin and the axis vector.</summary>
            <param name="parameter"> Input parameter from cylinder domain</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.IsClosed">
            <summary>This method calls Cylinder.IsClosed(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.IsClosed(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns flag indicating if cylindrical segment is a full circular cylinder with respect to the tolerance specified.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.SetAngles(System.Double,System.Double)">
            <summary>Changes cylinder definition to satisfy the input data.</summary>
            <param name="startAngle"> Input start angle</param>
            <param name="endAngle"> Input end angle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.Set(System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Interval,System.Double,System.Double)">
            <summary>Changes cylinder definition to satisfy the input data.</summary>
            <param name="radius"> Input radius</param>
            <param name="origin"> Input origin</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
            <param name="referenceAxis"> Input reference vector</param>
            <param name="height"> Input height interval</param>
            <param name="startAngle"> Input start angle</param>
            <param name="endAngle"> Input end angle</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.Set(System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Changes cylinder definition to satisfy the input data.</summary>
            <param name="radius"> Input radius</param>
            <param name="origin"> Input origin</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls Cylinder.IntersectWith(LinearEntity3d linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Cylinder.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Computes the intersections with a linear entity. Returns false if there are no intersections, otherwise true is returned.</summary>
            <param name="linearEntity"> Input linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cylinder.Radius">
            <summary>Returns radius of the cylinder.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cylinder.Origin">
            <summary>Returns origin of the cylinder.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cylinder.AxisOfSymmetry">
            <summary>Returns vector indicating the rotation axis.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cylinder.ReferenceAxis">
            <summary>Returns reference vector on the base circle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cylinder.IsOuterNormal">
            <summary>Returns flag indicating if the surface normal is pointing outwards.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Cylinder.Height">
            <summary>Computes interval on the axis parameterized by the origin and the axis vector.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ExternalSurface">
            <summary>
This .NET class wraps the AcGeExternalSurface ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ExternalSurface.#ctor">
            <summary>Default constructor. Creates an empty instance.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ExternalSurface.SetToOwnSurface">
            <summary>Forces this instance to own its definition data. If the current instance is the owner, then this is non-operational. This method would make a copy of the surface definition data such that it owns that geometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.ExternalSurfaceDefiniton">
            <summary>Returns the pointer to the external bounded surface definition.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.ExternalSurfaceKind">
            <summary>Provides information concerning the native system in which the external bounded surface definition was created.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsPlane">
            <summary>Determines whether the external surface instance can be represented by a surface definition that is native to gelib.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsSphere">
            <summary>Returns true if the external surface is a sphere, else false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsCylinder">
            <summary>Returns true if the external surface is a cylinder, else false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsCone">
            <summary>Returns true if the external surface is a cone, else false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsTorus">
            <summary>Returns true if the external surface is a torus, else false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsNurbSurface">
            <summary>Determines whether the external surface instance can be represented by a surface definition that is native to gelib. Returns true if the external surface does have an exact gelib native representation, otherwise it returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsDefined">
            <summary>Determines whether the instance is empty. Returns true if the instance does have a surface definition. Otherwise it returns true, implying an empty instance.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsNativeSurface">
            <summary>Allows the caller to obtain native gelib representations for an instance of external surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.nativeSurface">
            <summary>Allows the caller to obtain native gelib representations for an instance of external surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalSurface.IsOwnerOfSurface">
            <summary>Determines whether this instance owns its definition data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface">
            <summary>
This .NET class wraps the AcGeExternalBoundedSurface ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.#ctor">
            <summary>Default constructor. Creates an empty instance.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.GetContours">
            <summary>This function provides access to the curve boundary geometry for the boundaries on the surface. They are obtained as an array of CurveBoundary instances. Each of these instances in general consists of an array of oriented 3D curves or 3D positions, and an array of oriented parameter space curves. For any given 3D space entity, the corresponding parameter space curve may not be present. In such instances, the entry at that index of the corresponding parameter space curve array would be NULL.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.SetToOwnSurface">
            <summary>Forces this instance to own its definition data. If the current instance is the owner, then this is non-operational. Otherwise, this method makes a copy of the surface definition data such that it owns that geometry.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.ExternalSurfaceKind">
            <summary>Provides information concerning the native system in which the external bounded surface definition was created.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsDefined">
            <summary>Determines whether the instance is empty. Returns true if the instance does have a surface definition. Otherwise it returns false, implying an empty instance.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.ExternalSurfaceDefinition">
            <summary>Accesses the external surface definition associated with this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.BaseSurface">
            <summary>This function provides access to the unbounded surface geometry (that is, unbounded other than by the parametric bounds, if applicable, of the surface). The output surface has been converted to a native surface if an appropriate native surface type exists for it.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.ExternalBaseSurface">
            <summary>Access to the external entity in its native form. A caller having access to the precise definition of the external entity can use that knowledge to gain efficient access to the entity in its native form.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsPlane">
            <summary>Determines the type of the unbounded base surface. Returns true if the base surface is a plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsSphere">
            <summary>Determines the type of the unbounded base surface. Returns true if the base surface is a sphere.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsCylinder">
            <summary>Determines the type of the unbounded base surface. Returns true if the base surface is a cylinder.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsCone">
            <summary>Determines the type of the unbounded base surface. Returns true if the base surface is a cone.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsTorus">
            <summary>Determines the type of the unbounded base surface. Returns true if the base surface is a torus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsNurbs">
            <summary>Determines the type of the unbounded base surface. Returns true if the base surface is NURBS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsExternalSurface">
            <summary>Determines the type of the unbounded base surface. Returns true if the base surface is an external surface. If none of the other type inquiries (isCone, isCylinder, isNurbs, isPlane, isSphere, isTorus) is true, but the object is defined, then isExternaSurface must be true.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.NumContours">
            <summary>Returns the number of curve boundaries on this surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.ExternalBoundedSurface.IsOwnerOfSurface">
            <summary>Determines whether this instance owns its definition data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData">
            <summary>
This class contains the data returned by the NurbCurve2d.FitData property.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.IsEqualTo(Autodesk.AutoCAD.Geometry.NurbCurve2dFitData)">
            <summary>Compares this object to a and returns true if they are equal.</summary>
            <param name="a"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.op_Inequality(Autodesk.AutoCAD.Geometry.NurbCurve2dFitData,Autodesk.AutoCAD.Geometry.NurbCurve2dFitData)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.op_Equality(Autodesk.AutoCAD.Geometry.NurbCurve2dFitData,Autodesk.AutoCAD.Geometry.NurbCurve2dFitData)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.FitPoints">
            <summary>Returns the FitPoints property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.Degree">
            <summary>Returns the Degree property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.FitTolerance">
            <summary>Returns the FitTolerance property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.TangentsExist">
            <summary>Returns the TangentsExist property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.StartTangent">
            <summary>Returns the StartTangent property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dFitData.EndTangent">
            <summary>Returns the EndTangent property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbCurve2dData">
            <summary>
This class contains data that defines a NurbCurve2d object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dData.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to check against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dData.IsEqualTo(Autodesk.AutoCAD.Geometry.NurbCurve2dData)">
            <summary>Compares this object to a and returns true if they are equal.</summary>
            <param name="a"> Input object to check with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dData.op_Inequality(Autodesk.AutoCAD.Geometry.NurbCurve2dData,Autodesk.AutoCAD.Geometry.NurbCurve2dData)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dData.op_Equality(Autodesk.AutoCAD.Geometry.NurbCurve2dData,Autodesk.AutoCAD.Geometry.NurbCurve2dData)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbCurve2dData.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dData.Degree">
            <summary>Returns the Degree property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dData.Rational">
            <summary>Returns the Rational property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dData.Periodic">
            <summary>Returns the Periodic property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dData.ControlPoints">
            <summary>Returns the ControlPoints property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dData.Knots">
            <summary>Returns the Knots property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbCurve2dData.Weights">
            <summary>Returns the Weights property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.PolylineCurve2d">
            <summary>
This .NET class wraps the AcGePolyline2d ObjectARX class. It's represents a piecewise linear spline entity in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Curve2d,System.Double)">
            <summary>Constructs a polyline approximating a curve within the specified epsilon.</summary>
            <param name="curve"> Input curve to be approximated by polyline</param>
            <param name="epsilon"> Input approximation epsilon</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Constructs a polyline with the knots and point values established.</summary>
            <param name="knots"> Input knot vectors</param>
            <param name="controlPoints"> Input collection of fit points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve2d.#ctor(Autodesk.AutoCAD.Geometry.Point2dCollection)">
            <summary>Constructs a polyline with the specified fit points.</summary>
            <param name="points"> Input collection of fit points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve2d.#ctor">
            <summary>Default constructor. Constructs placeholder only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve2d.FitPointAt(System.Int32)">
            <summary>Returns fit point at the specified index i.</summary>
            <param name="i"> Input index of a fit point</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.PolylineCurve2d.SetFitPointAt(System.Int32,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Sets the fit point at the specified index i.</summary>
            <param name="i"> Input index of a fit point</param>
            <param name="point"> Input fit point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.PolylineCurve2d.NumberOfFitPoints">
            <summary>Returns number of fit points.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Ray2d">
            <summary>
This .NET class wraps the AcGeRay2d ObjectARX class. It represents a half-bounded line in 2D space. A Ray2d object either has a start point but no endpoint, or has an endpoint but no start point.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs a ray whose start point is point1 and passes through point2. point1 must be different from point2.</summary>
            <param name="point1"> Input start point of ray</param>
            <param name="point2"> Input any 2D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Constructs a ray whose start point is point and whose direction is vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of ray</param>
            <param name="vector"> Input direction vector of ray</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray2d.#ctor">
            <summary>Default constructor. Constructs a ray whose start point is (0,0) and whose direction is (1,0) (that is, the positive X axis).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Changes the definition of the ray so that the start point is point1 and it passes through point2. point1 must be different from point2.</summary>
            <param name="point1"> Input start point of ray</param>
            <param name="point2"> Input any 2D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray2d.Set(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Vector2d)">
            <summary>Changes the definition of the ray so the start point is point and the direction of the ray is vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of ray</param>
            <param name="vector"> Input direction vector of ray</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Ray3d">
            <summary>
This .NET class wraps the AcGeRay3d ObjectARX class. It represents a half-bounded line in 3D space. A Ray3d object either has a start point but no endpoint, or has an endpoint but no start point.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a ray whose start point is point1 and passes through point2. point1 must be different from point2.</summary>
            <param name="point1"> Input start point of ray</param>
            <param name="point2"> Input any 3D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray3d.#ctor(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs a ray whose start point is point and whose direction is vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of ray</param>
            <param name="vector"> Input direction vector of ray</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray3d.#ctor">
            <summary>Default constructor. Constructs a ray whose start point is (0,0,0) and whose direction is (1,0,0) (that is, the positive X axis).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes the definition of the ray so that the start point is point1 and it passes through point2. point1 must be different from point2.</summary>
            <param name="point1"> Input any 3D point</param>
            <param name="point2"> Input any 3D point different from point1</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Ray3d.Set(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Changes the definition of the ray so the start point is point and the direction of the ray is vector. vector must not be a zero-length vector.</summary>
            <param name="point"> Input start point of ray</param>
            <param name="vector"> Input direction vector of ray</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition">
            <summary>
This class contains the data returned by the NurbSurface.GetDefinition method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.IsEqualTo(Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition)">
            <summary>Compares this object to a and returns true if they are equal.</summary>
            <param name="a"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.op_Inequality(Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition,Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.op_Equality(Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition,Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.ControlPoints">
            <summary>Computes array of surface's control points.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.Weights">
            <summary>Computes array of the weights.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.UKnots">
            <summary>Computes array of the U knots.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.VKnots">
            <summary>Computes array of the V knots.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.DegreeInU">
            <summary>Return U degree of surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.DegreeInV">
            <summary>Return V degree of surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.PropertiesInU">
            <summary>Returns the PropertiesInU property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.PropertiesInV">
            <summary>Returns the PropertiesInV property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.NumberOfControlPointsInU">
            <summary>Returns U dimension of control array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition.NumberOfControlPointsInV">
            <summary>Returns V dimension of control array.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.NurbSurface">
            <summary>
This .NET class wraps the AcGeNurbSurface ObjectARX class. It represents generic NURB parametric surface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurface.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.KnotCollection)">
            <summary>Constructs a NURB surface defined by input data.</summary>
            <param name="degreeU"> Input U degree</param>
            <param name="degreeV"> Input V degree</param>
            <param name="propsInU"> Input U properties (uses NurbSurfaceProperties values)</param>
            <param name="propertiesInV"> Input V properties (uses NurbSurfaceProperties values)</param>
            <param name="numberControlPointsInU"> Input number of control points in U direction</param>
            <param name="numberControlPointsInV"> Input number of control points in V direction</param>
            <param name="controlPoints"> Input collection of control points</param>
            <param name="weights"> Input collection of weights</param>
            <param name="knotsInU"> Input U collection of knots</param>
            <param name="knotsInV"> Input V collection of knots</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurface.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Constructs a NURB surface defined by input data.</summary>
            <param name="degreeU"> Input U degree</param>
            <param name="degreeV"> Input V degree</param>
            <param name="propsInU"> Input U properties (uses NurbSurfaceProperties values)</param>
            <param name="propertiesInV"> Input V properties (uses NurbSurfaceProperties values)</param>
            <param name="numberControlPointsInU"> Input number of control points in U direction</param>
            <param name="numberControlPointsInV"> Input number of control points in V direction</param>
            <param name="controlPoints"> Input array of control points</param>
            <param name="weights"> Input array of weights</param>
            <param name="knotsInU"> Input U array of knots</param>
            <param name="knotsInV"> Input V array of knots</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurface.#ctor">
            <summary>Constructs an empty surface that can be used as a placeholder only.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurface.GetDefinition">
            <summary>Computes the surface definition data.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurface.Set(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.KnotCollection)">
            <summary>This method calls NurbSurface.Set(Int32 degreeU, Int32 degreeV, Int32 propsInU, Int32 propsInV, Int32 numControlPointsInU, Int32 numControlPointsInV, Point3dCollection controlPoints, DoubleCollection weights, KnotCollection knotsInU, KnotCollection knotsInV, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="degreeU"> Input U degree</param>
            <param name="degreeV"> Input V degree</param>
            <param name="propsInU"> Input U properties (uses NurbSurfaceProperties values)</param>
            <param name="propsInV"> Input V properties (uses NurbSurfaceProperties values)</param>
            <param name="numControlPointsInU"> Input number of control points in U direction</param>
            <param name="numControlPointsInV"> Input number of control points in V direction</param>
            <param name="controlPoints"> Input array of control points</param>
            <param name="weights"> Input array of weights</param>
            <param name="knotsInU"> Input U array of knots</param>
            <param name="knotsInV"> Input U array of knots</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.NurbSurface.Set(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.DoubleCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.KnotCollection,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Changes surface definition to one specified by input data.</summary>
            <param name="degreeU"> Input U degree</param>
            <param name="degreeV"> Input V degree</param>
            <param name="propsInU"> Input U properties (uses NurbSurfaceProperties values)</param>
            <param name="propsInV"> Input V properties (uses NurbSurfaceProperties values)</param>
            <param name="numControlPointsInU"> Input number of control points in U directio</param>
            <param name="numControlPointsInV"> Input number of control points in V direction</param>
            <param name="controlPoints"> Input array of control points</param>
            <param name="weights"> Input array of weights</param>
            <param name="knotsInU"> Input U array of knots</param>
            <param name="knotsInV"> Input U array of knots</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.IsRationalInU">
            <summary>Returns flag indicating if surface is a non-polynomial surface in U direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.IsRationalInV">
            <summary>Returns flag indicating if surface is a non-polynomial surface in V direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.SingularityInU">
            <summary>Returns an integer which is one of the .NurbSurfaceProperties values. The returned value is a characterization of U singularity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.SingularityInV">
            <summary>Returns an integer which is one of the NurbSurfaceProperties values. The returned value is a characterization of V singularity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.DegreeInU">
            <summary>Return U degree of surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.NumControlPointsInU">
            <summary>Returns U dimension of control array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.DegreeInV">
            <summary>Return V degree of surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.NumControlPointsInV">
            <summary>Returns V dimension of control array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.ControlPoints">
            <summary>Computes array of surface's control points.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.Weights">
            <summary>Computes array of the weights.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.IsPeriodicInU">
            <summary>Returns flag indicating if surface is a periodic surface in U direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.IsPeriodicInV">
            <summary>Returns flag indicating if surface is a periodic surface in V direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.PeriodicInU">
            <summary>Returns flag indicating if surface is a periodic surface in U direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.PeriodicInV">
            <summary>Returns flag indicating if surface is a periodic surface in V direction.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.NumKnotsInU">
            <summary>Returns U dimension of knot array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.UKnots">
            <summary>Computes array of the U knots.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.NumKnotsInV">
            <summary>Returns V dimension of knot array.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.NurbSurface.VKnots">
            <summary>Computes array of the V knots.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.OffsetSurface">
            <summary>
This .NET class wraps the AcGeOffsetSurface ObjectARX class. It represents an offset object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.OffsetSurface.#ctor(Autodesk.AutoCAD.Geometry.Surface,System.Double)">
            <summary>Constructs an offset object defined by input data.</summary>
            <param name="baseSurface"> Input base surface</param>
            <param name="offsetDistance"> Input offset distance</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.OffsetSurface.#ctor">
            <summary>Default constructor. Initializes the base surface pointer to NULL and the offset distance to 0.0.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.OffsetSurface.Set(Autodesk.AutoCAD.Geometry.Surface,System.Double)">
            <summary>Changes offset definition to the one specified by input data.</summary>
            <param name="surface"> Input base surface</param>
            <param name="offsetDistance"> Input offset distance</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.IsPlane">
            <summary>Returns flag indicating if offset is a plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.IsBoundedPlane">
            <summary>Returns flag indicating if offset is a bounded plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.IsSphere">
            <summary>Returns flag indicating if offset is a sphere.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.IsCylinder">
            <summary>Returns flag indicating if offset is a cylinder surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.IsCone">
            <summary>Returns flag indicating if offset is a cone surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.IsTorus">
            <summary>Returns flag indicating if offset is a torus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.OriginalSurface">
            <summary>Computes pointer to the original surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.ConstructionSurface">
            <summary>Accesses the base surface.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.OffsetSurface.OffsetDist">
            <summary>Returns offset distance.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Position2d">
            <summary>
This .NET class wraps the AcGePosition2d ObjectARX class. It represents a point in 2D space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position2d.#ctor(System.Double,System.Double)">
            <summary>Constructs a 2D position object that has the specified coordinates.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position2d.#ctor(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs a 2D position object with the same coordinates as the input point.</summary>
            <param name="point"> Input any 2D point object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position2d.#ctor">
            <summary>Default constructor. Constructs a 2D position object with coordinates of (0,0).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position2d.Set(System.Double,System.Double)">
            <summary>Changes the coordinates of the 2D position object to the input coordinates.</summary>
            <param name="y"> _nt_</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Position2d.Set(Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Changes the coordinates of the 2D position object to have the same coordinates as the input point.</summary>
            <param name="point"> Input any 2D point</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Sphere">
            <summary>
This .NET class wraps the AcGeSphere ObjectARX class. It represents a spherical surface.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.#ctor(System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Constructs a spherical segment defined by the input data.</summary>
            <param name="radius"> Input radius for the sphere</param>
            <param name="center"> Input center point for the sphere</param>
            <param name="northAxis"> Input direction to the north pole</param>
            <param name="referenceAxis"> Input direction to the zero meridian</param>
            <param name="startAngleU"> Input start longitude</param>
            <param name="endAngleU"> Input end longitude</param>
            <param name="startAngleV"> Input start latitude</param>
            <param name="endAngleV"> Input end latitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.#ctor(System.Double,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructs a sphere with the input radius centered at the input center.</summary>
            <param name="radius"> Input radius</param>
            <param name="center"> Input center</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.#ctor">
            <summary>Constructs a valid default sphere.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.GetAnglesInU">
            <summary>Computes start and end longitudes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.GetAnglesInV">
            <summary>Computes start and end latitudes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.IsClosed">
            <summary>This method calls CircularArc2d.IsClosed(Tolerance tolerance) with tolerance set to Global.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.IsClosed(Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Returns flag indicating if spherical segment is a full circular belt with respect to the tolerance specified.</summary>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.SetAnglesInU(System.Double,System.Double)">
            <summary>Changes sphere definition to satisfy the input data.</summary>
            <param name="startAngle"> Input start longitude</param>
            <param name="endAngle"> Input end longitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.SetAnglesInV(System.Double,System.Double)">
            <summary>Changes sphere definition to satisfy the input data.</summary>
            <param name="startAngle"> Input start latitude</param>
            <param name="endAngle"> Input end latitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.Set(System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Changes sphere definition to satisfy the input data.</summary>
            <param name="radius"> Input radius of sphere</param>
            <param name="center"> Input center of sphere</param>
            <param name="northAxis"> Input axis of sphere</param>
            <param name="referenceAxis"> Input reference axis</param>
            <param name="startAngleU"> Input start longitude</param>
            <param name="endAngleU"> Input end longitude</param>
            <param name="startAngleV"> Input start latitude</param>
            <param name="endAngleV"> Input end latitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.Set(System.Double,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes sphere definition to satisfy the input data.</summary>
            <param name="radius"> Input radius of sphere</param>
            <param name="center"> Input center of sphere</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls Sphere.IntersectWith(LinearEntity3d linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Sphere.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Computes intersections with a linear entity.</summary>
            <param name="linearEntity"> Input liner entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Sphere.Radius">
            <summary>Returns sphere's radius.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Sphere.Center">
            <summary>Returns sphere's center.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Sphere.NorthAxis">
            <summary>Returns direction to the north pole.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Sphere.ReferenceAxis">
            <summary>Returns direction to the zero meridian.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Sphere.NorthPole">
            <summary>Returns position of the north pole.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Sphere.SouthPole">
            <summary>Returns position of the south pole.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Sphere.IsOuterNormal">
            <summary>Returns flag indicating if the sphere normal is pointing outwards.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Torus">
            <summary>
This .NET class wraps the AcGeTorus ObjectARX class. It represents toroidal segment.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.#ctor(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Constructor.</summary>
            <param name="majorRadius"> Input major radius</param>
            <param name="minorRadius"> Input minor radius</param>
            <param name="origin"> Input center</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
            <param name="referenceAxis"> Input direction to the zero meridian</param>
            <param name="startAngleU"> Input start longitude</param>
            <param name="endAngleU"> Input end longitude</param>
            <param name="startAngleV"> Input start latitude</param>
            <param name="endAngleV"> Input end latitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.#ctor(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructs a full torus defined by input data.</summary>
            <param name="majorRadius"> Input major radius</param>
            <param name="minorRadius"> Input minor radius</param>
            <param name="origin"> Input center</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.#ctor">
            <summary>Constructs a valid default torus.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.GetAnglesInU">
            <summary>Computes start and end longitudes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.GetAnglesInV">
            <summary>Computes start and end latitudes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.SetAnglesInU(System.Double,System.Double)">
            <summary>Changes start and end longitudes to the input data.</summary>
            <param name="startAngle"> Input start longitude</param>
            <param name="endAngle"> Input end longitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.SetAnglesInV(System.Double,System.Double)">
            <summary>Changes start and end latitudes to the input data.</summary>
            <param name="startAngle"> Input start latitude</param>
            <param name="endAngle"> Input end latitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.Set(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double,System.Double,System.Double)">
            <summary>Changes torus definition to the input data.</summary>
            <param name="majorRadius"> Input major radius</param>
            <param name="minorRadius"> Input minor radius</param>
            <param name="origin"> Input center</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
            <param name="refAxis"> Input reference axis</param>
            <param name="startAngleU"> Input start longitude</param>
            <param name="endAngleU"> Input end longitude</param>
            <param name="startAngleV"> Input start latitude</param>
            <param name="endAngleV"> Input end latitude</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.Set(System.Double,System.Double,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Changes torus definition to the input data.</summary>
            <param name="majorRadius"> Input major radius</param>
            <param name="minorRadius"> Input minor radius</param>
            <param name="origin"> Input center</param>
            <param name="axisOfSymmetry"> Input axis of rotation</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d)">
            <summary>This method calls Torus.IntersectWith(LinearEntity3d linearEntity, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="linearEntity"> Input linear entity</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Torus.IntersectWith(Autodesk.AutoCAD.Geometry.LinearEntity3d,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>Computes intersections with a linear entity.</summary>
            <param name="linearEntity"> Input linear entity</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.MajorRadius">
            <summary>Returns the major radius.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.MinorRadius">
            <summary>Returns the minor radius.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.Center">
            <summary>Returns the center of the torus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.AxisOfSymmetry">
            <summary>Return the axis of rotation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.ReferenceAxis">
            <summary>Returns the direction to the zero meridian.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.IsOuterNormal">
            <summary>Returns a flag indicating if the surface normal is pointing outside the closed torus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.IsLemon">
            <summary>Returns true when the major radius is less than zero but the absolute value is not as large as the minor radius.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.IsApple">
            <summary>Returns true when the major radius is less than the minor radius but greater than zero, producing a solid with a dimple in the middle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.IsVortex">
            <summary>Returns true when the major radius is equal to the minor radius.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.IsDoughnut">
            <summary>Returns true when the major radius is greater than the minor radius, producing a solid with a hole in the middle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.IsDegenerate">
            <summary>Returns true when the minor radius is less than or equal to zero or when the major radius is less than or equal to the negative of the minor radius.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Torus.IsHollow">
            <summary>Returns true when the major radius is greater than the minor radius, producing a solid with a hole in the middle.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations">
            <summary>
This class contains SurfaceSurfaceIntersectorConfiguration objects that describe the left and right surface configuration data for each of two intersecting surfaces. An object of this class is returned by the SurfaceSurfaceIntersector.GetIntersectionConfigurations method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.IsEqualTo(Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations)">
            <summary>Compares this object with a and returns true if they are equal.</summary>
            <param name="a"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.op_Inequality(Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations,Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.op_Equality(Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations,Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.GetHashCode">
            <summary>Returns the hash code for this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.Surface1Left">
            <summary>Returns the Surface1Left property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.Surface2Left">
            <summary>Returns the Surface2Left property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.Surface1Right">
            <summary>Returns the Surface1Right property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.Surface2Right">
            <summary>Returns the Surface2Right property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.IntersectionType">
            <summary>Returns the type of intersection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations.Dimension">
            <summary>Returns the Dimension property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration">
            <summary>
This .NET enum wraps the AcGe::ssiConfig ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorType">
            <summary>
This .NET enum wraps the AcGe::ssiType ObjectARX enum. These values categorize the surface/surface intersection component.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector">
            <summary>
This .NET class wraps the AcGeSurfSurfInt ObjectARX class. This class holds data for intersections of two surfaces.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.#ctor(Autodesk.AutoCAD.Geometry.Surface,Autodesk.AutoCAD.Geometry.Surface)">
            <summary>The intersection class constructor references surface objects, but the intersection object does not own them. The surface objects are linked to the intersection object. On deletion or modification of one of them, internal intersection results are marked as invalid and to be re-computed.</summary>
            <param name="surface2"> Input second surface object</param>
            <param name="surface1"> Input first surface object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.IntersectCurve(System.Int32,System.Boolean)">
            <summary>
Returns NULL if the dimension of this intersection is not 1.</summary>
            <param name="number"> Input index of the intersection</param>
            <param name="isExternal"> Input Boolean to return curve on first or second surface</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.IntersectParameterCurve(System.Int32,System.Boolean,System.Boolean)">
            <summary>
Returns NULL if the dimension of this intersection is not 1..</summary>
            <param name="number"> Input index of the intersection</param>
            <param name="isExternal"> Input Boolean to return curve on first or second surface</param>
            <param name="isFirst"> Input Boolean flag to return curve on first or second surface</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.IntersectPoint(System.Int32)">
            <summary>Invalid return if the dimension of this intersection is not 0.</summary>
            <param name="number"> Input index of the intersection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.GetIntersectPointParameters(System.Int32)">
            <summary>Returns the point parameters required for intersection.</summary>
            <param name="number"> Input index of the intersection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.GetIntersectionConfigurations(System.Int32)">
            <summary>Returns the configuration data required for intersection.</summary>
            <param name="number"> Input index of the intersection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.GetDimension(System.Int32)">
            <summary>Returns the dimension of surface intersection.</summary>
            <param name="number"> Input index of the intersection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.GetType(System.Int32)">
            <summary>Returns the type of the intersection at the index.</summary>
            <param name="number"> Input index of the intersection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.Set(Autodesk.AutoCAD.Geometry.Surface,Autodesk.AutoCAD.Geometry.Surface)">
            <summary>This method calls Set(Surface surface1, Surface surface2, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="surface1"> Input first surface object</param>
            <param name="surface2"> Input second surface object</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.Surface1">
            <summary>Returns the first surface object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.Surface2">
            <summary>Returns the second surface object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.NumResults">
            <summary>Counts the number of intersection results of any dimension.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector.Tolerance">
            <summary>Returns the tolerance value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Geometry.Curve3dCollection">
            <summary>
This class represents a collection of Curve3d objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.GetEnumerator">
            <summary>Returns an enumerator for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.RemoveAt(System.Int32)">
            <summary>This function removes the item at the given index if one exists.</summary>
            <param name="index"> Input index of item to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.CopyTo(Autodesk.AutoCAD.Geometry.Curve3d[],System.Int32)">
            <summary>Copies the elements of this collection into the provided array starting at the given index.</summary>
            <param name="array"> Input array to copy to</param>
            <param name="index"> Input index to begin copying from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.Insert(System.Int32,Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>Inserts value in to the collection, at the index specified by index.</summary>
            <param name="index"> Input index to insert at</param>
            <param name="value"> Input item to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.Remove(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>This function removes value from the collection if it exists.</summary>
            <param name="value"> Input item to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.Contains(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>Returns a Boolean indicating whether value is contained in this collection.</summary>
            <param name="value"> Input value to check for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.IndexOf(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>Finds the index of an item in the collection based on value.</summary>
            <param name="value"> Input value to retrieve index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Geometry.Curve3dCollection.Add(Autodesk.AutoCAD.Geometry.Curve3d)">
            <summary>Adds a curve to this collection.</summary>
            <param name="value"> Input item to add</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3dCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3dCollection.IsFixedSize">
            <summary>Returns true if Curve3dCollection has fixed size; otherwise false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Geometry.Curve3dCollection.IsReadOnly">
            <summary>Returns true if Curve3dCollection is read-only; otherwise false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.TransientManager">
            <summary>
This .NET class wraps the AcGiTransientManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TransientManager.AddTransient(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode,System.Int32,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This function adds a transient to a list of viewports.</summary>
            <param name="added"> Input the transient to be added</param>
            <param name="mode"> Input the drawing mode where transient will be added</param>
            <param name="subDrawingMode"> Input the sub drawing mode of specified drawing mode</param>
            <param name="viewportNumbers"> Input viewport numbers for viewports to add this transient</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TransientManager.EraseTransient(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This function erases a transient from a list of viewports.</summary>
            <param name="erased"> Input the transient to be removed</param>
            <param name="viewportNumbers"> Input viewport numbers for viewports to erase this transient</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TransientManager.EraseTransients(Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode,System.Int32,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>This function erases all transients in the specified subDrawingMode from a list of viewports.</summary>
            <param name="mode"> Input the drawing mode where transient stores</param>
            <param name="subDrawingMode"> Input the sub drawing mode of specified drawing mode of transient being erased</param>
            <param name="viewportNumbers"> Input viewport numbers for viewports to erase this transient</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TransientManager.UpdateTransient(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.Geometry.IntegerCollection)">
            <summary>Update a transient via the transient manager.</summary>
            <param name="updated"> Input the transient being updated via transient manager</param>
            <param name="viewportNumbers"> Input viewport numbers for viewports to update this transient</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TransientManager.AddChildTransient(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This function adds a child transient to specified parent transient. This allows for partial updates of the parent drawable.</summary>
            <param name="added"> Input the adding child transient</param>
            <param name="parent"> Input the parent transient</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TransientManager.EraseChildTransient(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This function erases a child transient from specified parent transient.</summary>
            <param name="erased"> Input the erasing child transient</param>
            <param name="parent"> Input the parent transient</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsInterface.TransientManager.UpdateChildTransient(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This function only updates a child transient of the specified parent transient. This means partial updates of parent drawable.</summary>
            <param name="updated"> Input the updating child transient</param>
            <param name="parent"> Input the parent transient</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsInterface.TransientManager.CurrentTransientManager">
            <summary>Accesses the current transient manager.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode">
            <summary>
This .NET enum wraps the AcGiTransientDrawingMode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsCheckRevolveCurveOut">
            <summary>
This class encapsulates the values output by the RevolveOptions.CheckRevolveCurve() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsCheckRevolveCurveOut.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsCheckRevolveCurveOut.Closed">
            <summary>Assesses whether the region is closed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsCheckRevolveCurveOut.EndPointsOnAxis">
            <summary>Assesses whether whether the curve is open and its endpoints lie on the axis of revolution.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsCheckRevolveCurveOut.Planar">
            <summary>Assesses whether the curve is planar.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder">
            <summary>
This class is used to edit the properties of the RevolveOptions class, which is an immutable value type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder.#ctor(Autodesk.AutoCAD.DatabaseServices.RevolveOptions)">
            <summary>Copy constructor.</summary>
            <param name="value"> Input constructor to copy.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder.ToRevolveOptions">
            <summary>Accesses the starting angle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder.DraftAngle">
            <summary>Accesses the draft angle in radians.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder.TwistAngle">
            <summary>Accesses the angle by which the profile will be twisted as it revolves around the axis. The default value of this option is 0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder.CloseToAxis">
            <summary>Accesses the close to axis option. If this option is set for an open profile, then the ends of the profile will be extended to the axis of revolution before revolving. The default value of this option is false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption">
            <summary>
This .NET class wraps the AcDbSweepOptions::AlignOption ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LoftOptionsCheckCurvesOut">
            <summary>
This class is a container for the Boolean values output by the LoftOptions.checkLoftCurves() ObjectARX function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptionsCheckCurvesOut.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsCheckCurvesOut.AllOpen">
            <summary>Indicates whether all of the cross-section curves are open.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsCheckCurvesOut.AllClosed">
            <summary>Indicates whether all of the cross-section curves are closed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsCheckCurvesOut.AllPlanar">
            <summary>Indicates whether all of the cross-section curves are planar.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption">
            <summary>
This .NET class wraps the AcDbLoftOptions::NormalOption ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder">
            <summary>
This is a helper class that is used to populate a DatabaseServices.LoftOptions object from the loft options sysvars.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.#ctor(Autodesk.AutoCAD.DatabaseServices.LoftOptions)">
            <summary>This constructor creates an object from an existing LoftOptions object.</summary>
            <param name="value"> LoftOptions object to create from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.SetOptionsFromSysvars">
            <summary>Set loft options from the current values of system variables.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.ToLoftOptions">
            <summary>Returns a DatabaseServices.LoftOptions object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.DraftStart">
            <summary>Accesses the start draft angle in radians. This is the surface take-off direction at the first cross section. The default value of this option is 0, which indicates that no draft angle is defined and the system will compute the optimum angle at the first cross section.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.DraftEnd">
            <summary>Accesses the end draft angle in radians. This is the surface take-off direction at the last cross section. The default value of this option is 0, which indicates that no draft angle is defined and the system will compute the optimum angle at the last cross section.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.DraftStartMag">
            <summary>Accesses the start draft magnitude. Controls the magnitude of the surface tangent vector at the first cross-section. The default value of this option is 0, which means that the system will compute the optimum magnitude.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.DraftEndMag">
            <summary>Accesses the end draft magnitude. Controls the magnitude of the surface tangent vector at the last cross-section. The default value of this option is 0, which means that the system will compute the optimum magnitude.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.ArcLengthParam">
            <summary>Accesses the arc length  parametrization.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.NoTwist">
            <summary>Accesses the value of the noTwist option. This option can be used to minimize the amount of twist in the resulting surface or solid when the cross-sections are all closed. The default value of this option is true. If this option is set then the start point of each closed cross-section is aligned with the other cross-sections to minimize twist.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.AlignDirection">
            <summary>Accesses the value of the AlignDirection option. This option can be used to orient each of the cross sections so that the normal vector of each cross section points towards the next cross section. The default value of this option is true. If the cross sections are not all oriented in the same direction, then this option should be used to avoid creating a twisted or self-intersecting surface or solid.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.Simplify">
            <summary>Accesses the value of the simplify option. If this option is set, then simple surface types (plane, cylinder, cone, sphere, or torus) will be created whenever all of the cross sections lie on such a surface. Otherwise a general surface type will be created. The default value of this option is true.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.Closed">
            <summary>Accesses the value of the closed option. If this option is set, then the resulting surface/solid will start and end at the first cross section. If all of the cross sections are closed, then this will result in a torus-like shape. If this option is not set, then the surface or solid will be open or capped with a planar surface at the first and last cross sections. The default value of this option is false. If this option is set, then there must be at least three cross sections.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.Ruled">
            <summary>Accesses the value of the ruled option. If this option is set then a ruled surface will be created between each pair of cross sections rather than a single smooth surface. This will result in a much coarser object. The default value of this option is false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.VirtualGuide">
            <summary>Accesses the state of the virtual guide option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder.NormalOption">
            <summary>Accesses the plane normal option. See LoftOptionsNormalOption for a description of possible values. The default value of this option is NoNormal.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction">
            <summary>
This wraps the ObjectARX AcDbAssocObjectPointer template.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction.#ctor(Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody)">
            <summary>Constructor.</summary>
            <param name="dependencyBodyBeingEvaluated"> The action that is just being evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction.#ctor(Autodesk.AutoCAD.DatabaseServices.AssocDependency)">
            <summary>Constructor.</summary>
            <param name="dependencyBeingEvaluated"> The action that is just being evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction.#ctor(Autodesk.AutoCAD.DatabaseServices.AssocActionBody)">
            <summary>Constructor.</summary>
            <param name="actionBodyBeingEvaluated"> The action that is just being evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction.#ctor(Autodesk.AutoCAD.DatabaseServices.AssocAction)">
            <summary>Constructor.</summary>
            <param name="actionBeingEvaluated"> The action that is just being evaluated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction.GetDBObject(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.OpenMode,System.Boolean,System.Boolean)">
            <summary>
GetDBObject.</summary>
            <param name="objectId"> ObjectId of the object that should be opened.</param>
            <param name="openMode"> ForRead, ForWrite, ForNotify.</param>
            <param name="openErased"> Opens the object even if it is erased.</param>
            <param name="openOnLockedLayer"> Opens the object even on the locked layer.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction.IsSubstituteObject(Autodesk.AutoCAD.DatabaseServices.DBObject)">
            <summary>Indicates whether there is a substitute object.</summary>
            <param name="dbObject"> Object for which it finds out whether there is a substitute object.</param>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectSnapContext">
            <summary>
This class represents the input parameters of the CustomOsnapInfo.getOsnapInfo() ObjectARX function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectSnapContext.PickedObject">
            <summary>Accesses the entity involved in the object snap operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectSnapContext.GraphicsSystemSelectionMark">
            <summary>Accesses the graphic system marker of the subentity involved in the object snap operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectSnapContext.PickPoint">
            <summary>Accesses the point (in WCS coordinates) picked during the object snap operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectSnapContext.LastPoint">
            <summary>Accesses the point (in WCS coordinates) selected just before PickPoint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectSnapContext.ViewTransform">
            <summary>Accesses the transformation matrix to transform from WCS to DCS.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectSnapInfo">
            <summary>
This class represents the output parameters of CustomOsnapInfo.getOsnapInfo() ObjectARX function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectSnapInfo.SnapPoints">
            <summary>Accesses the pre-existing snap points.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectSnapInfo.SnapCurves">
            <summary>Accesses the pre-existing collection to append osnap curves to (may already contain curves).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Graph">
            <summary>
This .NET class wraps the AcDbGraph ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.#ctor(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>The first node in the graph is considered the root node.</summary>
            <param name="root"> Input root node. Default is NULL.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.Node(System.Int32)">
            <summary>Returns the node at the index. Returns NULL if the index is invalid.</summary>
            <param name="index"> Input desired node index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.AddNode(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Adds a new node to the graph. The node must be created on the heap and should not be deleted once it has been added to the graph. The graph will take care of deleting it when necessary. You cannot add a node to more than one graph.</summary>
            <param name="nodeToAdd"> Node to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.AddEdge(Autodesk.AutoCAD.DatabaseServices.GraphNode,Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Adds an edge between two nodes to the graph. Neither node can be NULL, and must have already been added to this same graph. from->out() will now have an entry pointing to toPointer, as will toPointer->in() have an entry pointing to from.</summary>
            <param name="from"> Input the node to begin the edge at</param>
            <param name="toPointer"> Input the node to end the edge at</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.DelNode(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Completely removes a node from the graph. It also disconnects the references from other nodes to this node, if present.</summary>
            <param name="nodeToDelete"> Node to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.Reset">
            <summary>Deletes all of the nodes and cycle nodes, and resets the graph to being empty. This is also called by Graph's destructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.ClearAll(System.Byte)">
            <summary>Used to clear the flag bit(s) in all the nodes in the graph.</summary>
            <param name="flags"> Input flag values to clear for all nodes in the graph</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.GetOutgoing">
            <summary>Takes the nodes and returns all of the outgoing nested nodes as a collection. It sets the Selected bit on the original nodes in the array, and sets the InList bit on all the nodes in the resulting collection. Each node in the list will appear in the collection only once.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.FindCycles(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Sets up the internal cycle graph in order to find and label all nodes which cause circular references. The cycle information is kept within the graph, like a cache. An internal dirty bit indicates when the graph has changed, so that the cycle information needs to be updated. So, it is important to call FindCycles() whenever changes might have occured in the graph, before accessing any of the cycle information functions, such as GraphNode.IsCycleNode(). Calling FindCycles() when the graph has not changed simply checks the existing information, and is efficient.</summary>
            <param name="start"> Input node to begin the search for cycles at. Usually defaulted to NULL.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.BreakCycleEdge(Autodesk.AutoCAD.DatabaseServices.GraphNode,Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>This method is used to break a cycle at a particular point. It removes both the cycle reference and the real reference between from and toPointer. It then calls FindCycles() to update the cycle information changes which result from the break.</summary>
            <param name="from"> Input node that the edge begins at</param>
            <param name="toPointer"> Input node that the edge ends at</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Graph.SetNodeGrowthRate(System.Int32)">
            <summary>This method sets the number of nodes that are allocated to the graph at a time. If the graph consists of many nodes, this method should be called to increase the rate from the default of 8 nodes at a time. Setting a rate to a higher value increases performance but may cause increased memory usage due to unused but allocated node space.</summary>
            <param name="rate"> Number of nodes to allocate at once</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Graph.RootNode">
            <summary>Accesses the root, or first, node in the graph. Returns NULL if the first node is NULL; that is, the graph is empty.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Graph.NumNodes">
            <summary>Accesses the number of nodes in the graph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Graph.IsEmpty">
            <summary>Assesses if the graph is empty.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GraphNode">
            <summary>
This .NET class wraps the AcDbGraphNode ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.In(System.Int32)">
            <summary>Returns the incoming reference at int.</summary>
            <param name="index"> Input desired node index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.Out(System.Int32)">
            <summary>Returns the outgoing reference.</summary>
            <param name="index"> Input desired node index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.CycleIn(System.Int32)">
            <summary>When FindCycles() is called, it creates an internal duplicate set of references used to detect and break cycles.</summary>
            <param name="index"> Input desired node index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.CycleOut(System.Int32)">
            <summary>When FindCycles() is called, it creates an internal duplicate set of references used to detect and break cycles.</summary>
            <param name="index"> Input desired node index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.AddRefTo(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Creates a reference from this node to an outgoing node. It also sets the outgoing node's incoming pointer to complete the graph edge connection. Both nodes must be in the same graph, and outGoingNode should not be NULL. Note that graph edges can also be created using Graph.AddEdge().</summary>
            <param name="outGoingNode"> Input to the outgoing node</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.RemoveRefTo(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>This is the opposite of AddRefTo(). It removes the entry from the Out() collection, and removes this node from the referenced node's In() collection.</summary>
            <param name="nodeToRemoveReference"> Input node to remove reference of</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.DisconnectAll">
            <summary>Removes all of the references between this node and any In() or Out() nodes, or CycleIn() and CycleOut() nodes. It is always called in the destructor. It has the effect of cleaning up any node pointers to this node.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.IsMarkedAs(System.Int32)">
            <summary>Returns true if the flag bit(s) passed in match set flag bit(s) in this node.</summary>
            <param name="flag"> Input flag values to check for this node</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.MarkAs(System.Byte)">
            <summary>Sets the flag bit(s) passed in.</summary>
            <param name="flags"> Input flag values to set for this node</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.Clear(System.Byte)">
            <summary>Clears the flag bit(s) passed in.</summary>
            <param name="flags"> Input flag values to clear for this node</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.MarkTree(System.Byte,Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection)">
            <summary>Marks this node and all nested out() nodes with the flags value supplied. If an collection is passed in, it also appends this node, and the nested Out() nodes, to the collection. If it finds that this node or any nested nodes already have the flag bit(s) set, it does not follow that branch any further.</summary>
            <param name="flags"> Input flag values to set for this node and all nested out nodes</param>
            <param name="appendedTo"> Input collection that this node and all nested out nodes should optionally be appended to</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNode.SetEdgeGrowthRate(System.Int32,System.Int32)">
            <summary>This method sets the number of outgoing and incoming edges that are allocated at a time on a graph node. If the node-to-node relationship contains many edges, this method should be called to increase the rate of the outgoing and incoming edges from the defaults of 4 and 2 respectively. Setting the rates to higher values increases performance but may increase memory usage.</summary>
            <param name="outEdgeRate"> Number of outgoing edges allocated at one time</param>
            <param name="inEdgeRate"> Number of incoming edges allocated at one time</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.Data">
            <summary>Accesses the data associated with this node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.NumOut">
            <summary>Accesses the number of outgoing references from this node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.NumIn">
            <summary>Accesses the number of incoming references to this node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.NextCycleNode">
            <summary>Accesses the next outgoing cyclical reference. It is the same as calling CycleOut(0).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.Owner">
            <summary>Accesses the Graph to which this node is attached.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.NumCycleOut">
            <summary>Accesses the number of outgoing cyclical references.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.NumCycleIn">
            <summary>Accesses the number of incoming cyclical references.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNode.IsCycleNode">
            <summary>Assesses if this node is part of a cyclical reference.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection">
            <summary>
This class contains a collection of graph nodes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Index to remove from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.Add(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Adds an item to the collection.</summary>
            <param name="value"> Item to add.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.IndexOf(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Returns the zero-based index of the collection item that matches value.</summary>
            <param name="value"> Item to seek</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.Insert(System.Int32,Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Location to insert</param>
            <param name="value"> Item to insert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.Remove(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="value"> Item to remove.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.Contains(Autodesk.AutoCAD.DatabaseServices.GraphNode)">
            <summary>Returns a value indicating whether the collection contains an object that matches value.</summary>
            <param name="value"> Object to check for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.GraphNode[],System.Int32)">
            <summary>Copies objects in array to this collection, starting from index.</summary>
            <param name="array"> Array to copy from</param>
            <param name="index"> Zero-based index to start from</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection.Count">
            <summary>Accesses the number of items in the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraphNode">
            <summary>
Wraps the ObjectARX AcDbObjectIdGraphNode class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraphNode.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="id"> Input ObjectId that the node will contain.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraphNode.Create(System.IntPtr,System.Boolean)">
            <summary>
This static method creates and returns a new ObjectIdGraphNode.</summary>
            <param name="unmanagedPointer"> Input pointer to the AcDbObjectIdGraphNode object that the new ObjectIdGraphNode will wrap.</param>
            <param name="autoDelete"> Input boolean indicating whether the wrapped AcDbObjectIdGraphNode should be deleted when this ObjectIdGraphNode is destroyed.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.ObjectIdGraphNode.Id">
            <summary>Gets the ObjectId contained by this ObjectIdGraphNode.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefGraphNode">
            <summary>
This .NET class wraps the AcDbXrefGraphNode ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefGraphNode.Name">
            <summary>Returns the name for this node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefGraphNode.BlockTableRecordId">
            <summary>Returns the object ID of the BlockTableRecord associated with this node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefGraphNode.Database">
            <summary>Returns a pointer to the database relevant to this node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefGraphNode.IsNested">
            <summary>Returns True if this node  represents a nested xref that is not directly referenced in the host drawing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefGraphNode.XrefStatus">
            <summary>Returns the node's xref status.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefGraphNode.XrefNotificationStatus">
            <summary>Returns the node's xref notification status.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.LayoutManager">
            <summary>
This .NET class wraps the AcDbLayoutManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.SetCurrentLayoutId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Accesses the current layout. This will get/set the current layout from the current working database. If you want to get/set current layout from the database other than the current working database, you should set the working database to it first, and then set it back after you get/set the current layout.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.GetLayoutId(System.String)">
            <summary>This function returns the Layout object associated with the given input name. The returned object is not open for reading from or writing to the database by default.</summary>
            <param name="name"> Input name of Layout object to search for</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.CopyLayout(System.String,System.String)">
            <summary>This function makes a copy of an existing Layout object with the given copyName and creates a new copy with the layout name of newName.</summary>
            <param name="copyName"> Input name of Layout object to be copied</param>
            <param name="newName"> Input name for new copy of Layout object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.DeleteLayout(System.String)">
            <summary>This function removes the Layout object associated with the given layout name from the current database.</summary>
            <param name="deleteName"> Input name of Layout object to delete</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.CreateLayout(System.String)">
            <summary>This function creates a new Layout object given a unique layout name. The default viewports for the new layout are not created until the layout is first activated.</summary>
            <param name="newName"> Input name to give new Layout object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.RenameLayout(System.String,System.String)">
            <summary>This function renames a Layout object by the given oldName to the new name given by newName.</summary>
            <param name="oldName"> Input name of Layout object to rename</param>
            <param name="newName"> Input new name for renamed Layout object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.CloneLayout(System.String,System.String,System.Int32)">
            <summary>This function clones the given Layout object and sets the cloned layout to the given layout name and tab order.</summary>
            <param name="copyName"> Input to the old Layout name</param>
            <param name="newName"> Input the name for new layout</param>
            <param name="newTabOrder"> Optional input integer specifying new tab order</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.LayoutManager.GetNonRectangularViewportIdFromClipId(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This function returns the ObjectId for the non rectangular viewport ID associated with the given clipId. Returns NULL if given entity isn't a valid clip entity.</summary>
            <param name="clipId"> Input ObjectId of clip entity to get the nonrectangular viewport ID from</param>
            <param name="name"> Input name of Layout object to search for.</param>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutCreated">
            <summary>This event is fired when the layout creation ends.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutToBeRemoved">
            <summary>This event is fired when the layout is about to be removed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutRemoved">
            <summary>This event is fired when the layout removal ends.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.AbortLayoutRemoved">
            <summary>This event is fired when the layout remove is aborted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutToBeCopied">
            <summary>This event is fired when the layout is about to be copied.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutCopied">
            <summary>This event is fired when the layout copy ends.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.AbortLayoutCopied">
            <summary>This event is fired when the layout copy is aborted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutToBeRenamed">
            <summary>This event is fired when the layout is about to be renamed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutRenamed">
            <summary>This event is fired when the layout rename ends.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.AbortLayoutRename">
            <summary>This event is fired when the layout rename is aborted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutSwitched">
            <summary>This event is fired when the layout is switched.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.PlotStyleTableChanged">
            <summary>This event is fired when the plot style table is changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutsReordered">
            <summary>This event is fired when the layouts are reordered.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutsRefresh">
            <summary>This is LayoutsRefresh, a member of class LayoutManager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutManager.Current">
            <summary>Accesses the current layout manager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutManager.CurrentLayout">
            <summary>Accesses the current layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.LayoutManager.LayoutCount">
            <summary>Accesses the current number of layouts.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator">
            <summary>
This .NET class wraps the AcDbPlotSettingsValidator ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetPlotConfigurationName(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.String,System.String)">
            <summary>Specifies a system printer or PC3 file containing the "how to plot" information.</summary>
            <param name="plotSet"> Input</param>
            <param name="plotDeviceName"> Input pointer to plot device name</param>
            <param name="mediaName"> Input media name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetCanonicalMediaName(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.String)">
            <summary>Sets a locale-independent identifier for a specific media size. Use GetLocaleMediaName() to get the locale version of the identifier.</summary>
            <param name="plotSet"> Input</param>
            <param name="mediaName"> Input pointer to canonical media name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetPlotOrigin(Autodesk.AutoCAD.DatabaseServices.PlotSettings,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Contains the plot origin offset that is applied inside of the paper margins.</summary>
            <param name="plotSet"> Input</param>
            <param name="origin"> Input offset coordinates</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetPlotPaperUnits(Autodesk.AutoCAD.DatabaseServices.PlotSettings,Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit)">
            <summary>This method sets the units for plotting using the enumeration PlotPaperUnits.</summary>
            <param name="plotSet"> Input</param>
            <param name="units"> Input units by which the margins, offset, and paper size are interpreted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetPlotCentered(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.Boolean)">
            <summary>
This method sets whether the plot will be centered. If true, the paper margins are automatically computed to position the plot in the center of the sheet.</summary>
            <param name="plotSet"> Input</param>
            <param name="isCentered"> Input Boolean indicating whether the plot should be centered</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetPlotWindowArea(Autodesk.AutoCAD.DatabaseServices.PlotSettings,Autodesk.AutoCAD.DatabaseServices.Extents2d)">
            <summary>If a plot type of Window is selected, then these coordinates define the portion of the layout to plot. The arguments specify the two points in paperspace positioned on the output media.</summary>
            <param name="plotSet"> Input</param>
            <param name="windowArea"> Input window coordinates</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetPlotViewName(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.String)">
            <summary>If a plot type of View is selected, then this string specifies a named view that in turn specifies what portion of the layout to plot.</summary>
            <param name="plotSet"> Input</param>
            <param name="viewName"> Input named view indicating the portion of the layout to plot</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetUseStandardScale(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.Boolean)">
            <summary>
Determines whether the layout will use the StdScaleType property to calculate the current plot scale..</summary>
            <param name="plotSet"> Input</param>
            <param name="useStandard"> Input Boolean indicating whether to use standard scale</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetCustomPrintScale(Autodesk.AutoCAD.DatabaseServices.PlotSettings,Autodesk.AutoCAD.DatabaseServices.CustomScale)">
            <summary>This method sets the custom scale, a ratio of paperspace units to media units. The CustomPrintScale property stores the current scale (actually the numerator and denominator) for the plot settings for both "computed/standard" scales and "custom" scales. It always reflects the scale that will be used to plot.</summary>
            <param name="plotSet"> Input</param>
            <param name="scale"> Input paperspace units</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetCurrentStyleSheet(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.String)">
            <summary>This method is used to set a specific plot style table on a layout.</summary>
            <param name="plotSet"> Input</param>
            <param name="styleSheetName"> Input pointer to plot style table name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetStdScale(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.Double)">
            <summary>Sets the standard scale value as a floating point scale. Each enumerated value in the enum StdScaleType maps to a single floating point number. This method allows an application to specify a standard scale without having to do a table lookup to compute the scale value.</summary>
            <param name="plotSet"> Input</param>
            <param name="standardScale"> Input standard scale value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.GetPlotDeviceList">
            <summary>Returns a collection of all available plot devices found on the system This list is built only once per AutoCAD session. Call RefreshLists() if plot devices were added or removed from the system after starting the AutoCAD session.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.GetCanonicalMediaNameList(Autodesk.AutoCAD.DatabaseServices.PlotSettings)">
            <summary>Returns all available canonical media names available for the plot device configured on the PlotSettings object pointed to by plotSet.</summary>
            <param name="plotSet"> Input pointer to PlotSettings object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.GetPlotStyleSheetList">
            <summary>Returns an array of all available plot style tables found on the system This list is built only once per AutoCAD session. Call RefreshLists() if plot style tables were added or removed from the system after starting the AutoCAD session.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.GetLocaleMediaName(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.Int32)">
            <summary>Given an index into the canonical media name list returned by GetCanonicalMediaNameList(), returns the localized version of the media name at the index.</summary>
            <param name="plotSet"> Input</param>
            <param name="index"> Input index into collection returned by GetCanonicalMediaNameList()</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.GetLocaleMediaName(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.String)">
            <summary>Given the canonical (locale-independent) representation for a given media name, returns the localized version.</summary>
            <param name="plotSet"> Input</param>
            <param name="canonicalName"> Input locale independent media name identifier (item type returned by GetCanonicalMediaNameList())</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetClosestMediaName(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.Double,System.Double,Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit,System.Boolean)">
            <summary>
For the configured plot device, sets the closest matching media size on the given PlotSettings object using the input criteria..</summary>
            <param name="plotSet"> _nt_</param>
            <param name="paperWidth"> _nt_</param>
            <param name="paperHeight"> _nt_</param>
            <param name="units"> _nt_</param>
            <param name="matchPrintableArea"> _nt_</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.RefreshLists(Autodesk.AutoCAD.DatabaseServices.PlotSettings)">
            <summary>Rebuilds the plot, canonical media, and plot style table arrays to reflect the current system state.</summary>
            <param name="plotSet"> Input</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetZoomToPaperOnUpdate(Autodesk.AutoCAD.DatabaseServices.PlotSettings,System.Boolean)">
            <summary>
This method sets a flag on an Layout object to indicate that a zoom to the associated paper image represented by the underlying Layout be performed if the paper receives update notification. An update notification can occur in a number of ways, but the most explicit is to call the UpdateCurrentPaper() method on the Layout Manager. It doesn't get notification, however, merely by setting attributes on the Layout object.</summary>
            <param name="plotSet"> Input</param>
            <param name="doZoom"> Input Boolean indicating whether to zoom</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.SetDefaultPlotConfig(Autodesk.AutoCAD.DatabaseServices.PlotSettings)">
            <summary>Sets default plot configuration values on the given PlotSettings object pointed to by plotSet.</summary>
            <param name="plotSet"> Input</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator.Current">
            <summary>Accesses the current item.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices">
            <summary>
This .NET class wraps the Services ObjectARX class within the AcDbSymbolUtilities namespace.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetLayerDefpointsId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database.</summary>
            <param name="database"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetLayerZeroId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULLObjectId.</summary>
            <param name="database"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsCompatibilityMode(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Retrieve the EXTNAMES setting of the specified database. True is returned if the database pointer is NULL or EXTNAMES is no longer applicable. The database pointer should not be NULL, so this condition causes an assert.</summary>
            <param name="database"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsBlockLayoutName(System.String)">
            <summary>Returns true if the name is a name of a layout’s block-table record or the name of the main paper space block.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsBlockModelSpaceName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsBlockPaperSpaceName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsLayerDefpointsName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsLayerZeroName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsLinetypeByBlockName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsLinetypeByLayerName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsLinetypeContinuousName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsRegAppAcadName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsTextStyleStandardName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.IsViewportActiveName(System.String)">
            <summary>Returns true if name matches a predefined symbol name. The string is normalized before the comparison to the predefined name.</summary>
            <param name="name"> Input name to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetBlockModelSpaceId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULL ObjectId.</summary>
            <param name="databasePointer"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetBlockPaperSpaceId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULL ObjectId.</summary>
            <param name="databasePointer"> Input pointer to database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetLinetypeByBlockId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULLObjectId.</summary>
            <param name="databasePointer"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetLinetypeByLayerId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULLObjectId.</summary>
            <param name="databasePointer"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetLinetypeContinuousId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULLObjectId.</summary>
            <param name="databasePointer"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetRegAppAcadId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULLObjectId.</summary>
            <param name="databasePointer"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetTextStyleStandardId(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the ObjectId of the predefined symbol table record for the specified database. This method will always return a non-NULLObjectId.</summary>
            <param name="databasePointer"> Input database to access</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.MakeDependentName(System.String,System.String)">
            <summary>Performs the necessary concatenation of the specified drawing name and symbol name to create a dependent symbol name. No validation of the drawing name, symbol name, or the resulting symbol name is done.</summary>
            <param name="dwgName"> Input the drawing name</param>
            <param name="symbolName"> Input the symbol name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.RepairPreExtendedSymbolName(System.String,System.Boolean)">
            <summary>
This method returns a "repaired" copy of the specified string. The method uses the same symbol name validation rules as the validation functions (such as validatePreExtendedSymbolname() and validateSymbolName()) except that the returned copy of the string does not contain any illegal characters. Those are replaced with valid replacement characters.</summary>
            <param name="oldName"> Input symbol name to repair</param>
            <param name="allowVerticalBar"> Input Boolean to indicate is vertical bars are allowed in the symbol name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.RepairSymbolName(System.String,System.Boolean)">
            <summary>
This method returns a "repaired" copy of the specified string. The method uses the same symbol name validation rules as the validation functions (such as validatePreExtendedSymbolname() and validateSymbolName()) except that the returned copy of the string does not contain any illegal characters. Those are replaced with valid replacement characters.</summary>
            <param name="oldName"> Input symbol name to repair</param>
            <param name="allowVerticalBar"> Input Boolean to indicate if vertical bars are allowed in the symbol name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.ValidatePreExtendedSymbolName(System.String,System.Boolean)">
            <summary>
This method validates name according to the rules for legacy (AutoCAD Release 14 and earlier) symbol names. name should be a non-NULL pointer. allowVerticalBar should be true to indicate that vertical bars should be considered valid characters in the symbol name, or false if not. name is normalized before validating.</summary>
            <param name="name"> Input name to validate</param>
            <param name="allowVerticalBar"> Input Boolean to indicate if vertical bars are valid in the symbol name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.ValidateSymbolName(System.String,System.Boolean)">
            <summary>
This method validates name according to the rules for extended (AutoCAD 2000 and later) symbol names. name should be a non-NULL pointer. allowVerticalBar should be true to indicate that vertical bars should be considered valid characters in the symbol name, or false if not. name is normalized before validating.</summary>
            <param name="name"> Input name to validate</param>
            <param name="allowVerticalBar"> Input Boolean to indicate if vertical bars are valid in the symbol name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetBlockNameFromInsertPathName(System.String)">
            <summary>Extract a suitable block name from a pathname. This method calls the GetSymbolNameFromPathName() method with "DXF;DWG" as the list of extensions to check.</summary>
            <param name="pathName"> Input path name to examine</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetInsertPathNameFromBlockName(System.String)">
            <summary>This function copies the string pointed to by blockName (or an empty string if blockName is null) into the path name string. It then checks to see if the string ends with a .dwg or .dxf extension. This check is not case-sensitive. If the string does not have either extension, then .dwg is appended to the end of the path name string.</summary>
            <param name="blockName"> Input name of block from which to get the path</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetMaxSymbolNameLength(System.Boolean,System.Boolean)">
            <summary>
Returns the maximum allowed length for symbol names, if applicable..</summary>
            <param name="isNewName"> Input Boolean to indicate whether we want to the length for extended or legacy symbol names</param>
            <param name="compatibilityMode"> Input Boolean to indicate extended or legacy symbol names</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetPathNameFromSymbolName(System.String,System.String)">
            <summary>This function copies the string pointed to by symbolName (or an empty string if symbolName is null) into path name. It then checks to see if the string ends with one of the extensions specified in extensions. This check is not case-sensitive. If the string does not end in one of the extensions specified in extensions, then a period ('.') followed by the first extension specified in extensions is appended to the end of the path name string.</summary>
            <param name="symbolName"> Input name of block from which to get the path</param>
            <param name="extensions"> Input list of extensions for which to search</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.GetSymbolNameFromPathName(System.String,System.String)">
            <summary>Extracts a suitable symbol name from a path name. The symbol name is the filename component of the path. Any of the specified filename extensions are removed. Lexical analysis of only the specified path is performed, and no attempt is made at any type of pathname validation or symbol name validation. Thus, the input pathname may be an invalid pathname and the resulting block name may be an invalid block name. If the pathname pointer is null, it is treated as an empty string. The solidus (‘/’) and backslash (‘\’) are treated as delimiters for directory names. Note that this function is meant to encapsulate a convention for extracting a block name from a pathname. It is not intended for use as a general purpose filename parsing utility.</summary>
            <param name="pathName"> Input path name</param>
            <param name="extensions"> Input list of extensions to consider</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.PreValidateSymbolName(System.String,System.Boolean)">
            <summary>
Perform any "pre-validation" steps on a string that will be validated as a symbol name:.</summary>
            <param name="preserveCase"> Input Boolean to indicate whether to preserve the case of alphabetic letters</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.BlockModelSpaceName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.BlockPaperSpaceName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.LayerDefpointsName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.LayerZeroName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.LinetypeByBlockName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.LinetypeByLayerName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.LinetypeContinuousName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.RegAppAcadName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.TextStyleStandardName">
            <summary>Returns the string used as the value for the  predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices.ViewportActiveName">
            <summary>Returns the string used as the value for the predefined symbol record. A NULL pointer or empty string will never be returned.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.ITextEditorSelectable">
            <summary>
This wraps the ObjectARX ITextEditorSelectable interface.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorLocation">
            <summary>
This wraps the ObjectARX AcDbTextEditorLocation class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorColumn">
            <summary>
This wraps the ObjectARX AcDbTextEditorColumn class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumn.StartOfText">
            <summary>This wraps the ObjectARX AcDbTextEditorColumn::startOfText() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumn.EndOfText">
            <summary>This wraps the ObjectARX AcDbTextEditorColumn::endOfText() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumn.Height">
            <summary>Gets and sets the height of the column object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns">
            <summary>
This wraps the ObjectARX AcDbTextEditorColumns class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.MaxCount">
            <summary>This wraps the ObjectARX AcDbTextEditorColumns::maxCount() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.Count">
            <summary>Gets and sets the count of the column objects in text editor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.Type">
            <summary>Gets and sets the type for the column object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.AutoHeight">
            <summary>Gets and sets the flag of auto height for all the column objects.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.Width">
            <summary>Gets and sets the width of the column object in editor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.Gutter">
            <summary>Gets and sets the gutter value of the column object in editor. This wraps the ObjectARX AcDbTextEditorColumns::gutter() and AcDbTextEditorColumns::setGutter() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.TotalWidth">
            <summary>Gets and sets the total width for all the column objects in editor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorColumns.IsFlowReversed">
            <summary>Gets and sets if the flows of all the column objects in editor are reversed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab">
            <summary>
This wraps the ObjectARX AcDbTextEditorParagraphTab class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab.Type">
            <summary>Gets and sets the tab type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab.Offset">
            <summary>Gets and sets the paragraph tab off set value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab.DecimalChar">
            <summary>Gets and sets the paragraph tab decimal char.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph">
            <summary>
This wraps the ObjectARX AcDbTextEditorParagraph class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.RestartNumbering">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::restartNumbering() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.ContinueNumbering">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::continueNumbering() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.GetTab(System.Int32)">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::getTab() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.AddTab(Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab)">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::addTab() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.RemoveTab(Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab)">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::removeTab() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.StartOfText">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::startOfText() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.EndOfText">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::endOfText() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.Alignment">
            <summary>Gets and sets the alignment type for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.FirstIndent">
            <summary>Gets and sets the first indent value for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.LeftIndent">
            <summary>Gets and sets the left indent value for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.RightIndent">
            <summary>Gets and sets the right indent value for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.LineSpaceStyle">
            <summary>Gets and sets the line space style for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.LineSpaceFactor">
            <summary>Gets and sets the line space factor for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.SpaceBefore">
            <summary>Gets and sets the before space for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.SpaceAfter">
            <summary>Gets and sets the after space for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.ParaNumberingType">
            <summary>Gets and sets the numbering type for the paragraph.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.TabsCount">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::tabsCount() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.MinLineSpacingFactor">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::minLineSpacingFactor() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.MaxLineSpacingFactor">
            <summary>This wraps the ObjectARX AcDbTextEditorParagraph::maxLineSpacingFactor() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.MinSpacingValue">
            <summary>Minimum allowable after/before space value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph.MaxSpacingValue">
            <summary>Maximum allowable after/before space value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.Font">
            <summary>
This structure represent the font information needed in the text editor. When the user sets the font, the editor needs to know if the font name is a SHX or a TrueType font.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.Font.#ctor(System.String,System.Boolean)">
            <summary>
Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Font.Name">
            <summary>Gets the name of the font.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.Font.IsTrueType">
            <summary>Indicates whether the font is true type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase">
            <summary>
This wraps the ObjectARX AcDbTextEditorSelectionBase class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.InsertString(System.String)">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::insertString() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.InsertColumnBreak">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::insertColumnBreak() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Language">
            <summary>Gets and sets the language for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Font">
            <summary>Gets and sSets the font for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Bold">
            <summary>Gets and sets the bold property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Italic">
            <summary>Gets and sets the italic property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Height">
            <summary>Gets and sets the text height for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Color">
            <summary>Gets and sets the color for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Underline">
            <summary>Gets and sets the underline property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Overline">
            <summary>Gets and sets the overline property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Strikethrough">
            <summary>Get current strikethrough state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.ObliqueAngle">
            <summary>Gets and sets the oblique angle for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.TrackingFactor">
            <summary>Gets and sets the tracking factor for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.WidthScale">
            <summary>Gets and sets the width scale factor for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.FlowAlignment">
            <summary>Gets and sets the flow alignment for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.MinObliqueAngle">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::minObliqueAngle() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.MaxObliqueAngle">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::maxObliqueAngle() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.MinTrackingFactor">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::minTrackingFactor() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.MaxTrackingFactor">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::maxTrackingFactor() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.MinWidthScale">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::minWidthScale() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.MaxWidthScale">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::maxWidthScale() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorStack">
            <summary>
This wraps the ObjectARX AcDbTextEditorStack class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.MinStackScale">
            <summary>This wraps the ObjectARX AcDbTextEditorStack::minStackScale() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.MaxStackScale">
            <summary>This wraps the ObjectARX AcDbTextEditorStack::maxStackScale() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.Type">
            <summary>Gets and sets the stack type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.Top">
            <summary>Gets and sets the stack top string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.Bottom">
            <summary>Gets and sets the stack bottom string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.Scale">
            <summary>Gets and sets the stack scale factor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.DecimalChar">
            <summary>Gets and sets the stack decimal char.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorStack.FlowAlign">
            <summary>Gets and sets the stack flow alignment.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection">
            <summary>
This wraps the ObjectARX AcDbTextEditorSelection class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.Stack">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::stack() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.UnStack">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::unStack() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.CombineParagraphs">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::combineParagraphs() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.RemoveCharacterFormatting">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::removeCharacterFormatting() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.RemoveParagraphFormatting">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::removeParagraphFormatting() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.RemoveAllFormatting">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::removeAllFormatting() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.ChangeToLowercase">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::changeToLowercase() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.ChangeToUppercase">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::changeToUppercase() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.CanSupportLanguage(System.Int32)">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::languageSupported() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.CanSupportFont(Autodesk.AutoCAD.DatabaseServices.Font)">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::fontSupported() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.ConvertToPlainText">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::convertToPlainText() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.UpdateField">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::updateField() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.InsertString(System.String)">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::insertString() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.InsertColumnBreak">
            <summary>This wraps the ObjectARX AcDbTextEditorSelectionBase::insertColumnBreak() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.CanUnStack">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::canUnStack() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.CanStack">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::canStack() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.Paragraphs">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::paragraph() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.CanChangeCase">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::canChangeCase() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.StackSettings">
            <summary>Gets and sets the selected stack object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.SelectionString">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::getSelectionText() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.SingleStackSelected">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::singleStackSelected() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.SingleFieldSelected">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::singleFieldSelected() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelection.FieldObject">
            <summary>This wraps the ObjectARX AcDbTextEditorSelection::field() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Language">
            <summary>Gets and sets the language for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Font">
            <summary>Gets and sSets the font for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Bold">
            <summary>Gets and sets the bold property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Italic">
            <summary>Gets and sets the italic property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Height">
            <summary>Gets and sets the text height for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Color">
            <summary>Gets and sets the color for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Underline">
            <summary>Gets and sets the underline property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Overline">
            <summary>Gets and sets the overline property for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.Strikethrough">
            <summary>Get current strikethrough state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.ObliqueAngle">
            <summary>Gets and sets the oblique angle for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.TrackingFactor">
            <summary>Gets and sets the tracking factor for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.WidthScale">
            <summary>Gets and sets the width scale factor for the current selection or cursor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase.FlowAlignment">
            <summary>Gets and sets the flow alignment for the current selection or cursor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditor">
            <summary>
This wraps the ObjectARX AcDbTextEditor class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditor.CreateTextEditor(Autodesk.AutoCAD.DatabaseServices.MText)">
            <summary>This wraps the ObjectARX AcDbTextEditor::createDbTextEditor() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditor.ClearSelection">
            <summary>This wraps the ObjectARX AcDbTextEditor::clearSelection() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditor.MakeSelection(Autodesk.AutoCAD.DatabaseServices.TextEditorLocation,Autodesk.AutoCAD.DatabaseServices.TextEditorLocation)">
            <summary>This wraps the ObjectARX AcDbTextEditor::makeSelection() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditor.SelectAll">
            <summary>This wraps the ObjectARX AcDbTextEditor::selectAll() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditor.Redraw">
            <summary>This wraps the ObjectARX AcDbTextEditor::redraw() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.TextEditor.GetFont(System.Int32)">
            <summary>This wraps the ObjectARX AcDbTextEditor::getFontName() and AcDbTextEditor::isTrueTypeFont() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.Columns">
            <summary>This wraps the ObjectARX AcDbTextEditor::columns() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.Selection">
            <summary>This wraps the ObjectARX AcDbTextEditor::selection() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.Cursor">
            <summary>This wraps the ObjectARX AcDbTextEditor::cursor() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.Wipeout">
            <summary>This wraps the ObjectARX AcDbTextEditor::wipeout() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.Paragraphs">
            <summary>Gets the TextEditorParagraph array of TextEditor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.Style">
            <summary>Gets and sets the current text editor text style object Id.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.IsAnnotativeStyle">
            <summary>Indicates whether the current text editor style is annotative.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.StyleCount">
            <summary>This wraps the ObjectARX AcDbTextEditor::getStyleCount() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.Attachment">
            <summary>Gets and sets the attachment point for the editor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.DefinedWidth">
            <summary>Gets and sets the defined width for the editor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.DefinedHeight">
            <summary>Gets and sets the defined height for the editor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.TextHeight">
            <summary>Gets and sets the text height for the editor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.ActualWidth">
            <summary>This wraps the ObjectARX AcDbTextEditor::actualWidth() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.ActualHeight">
            <summary>This wraps the ObjectARX AcDbTextEditor::actualHeight() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.AutoCAPS">
            <summary>Gets and sets the auto CAPS flag.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.NumberingEnabled">
            <summary>Gets and sets the flag to enable all the paragraphs numbering.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.AutoListEnabled">
            <summary>This wraps the ObjectARX AcDbTextEditor::autolistEnabled() and AcDbTextEditor::setAutolistEnabled() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.TabOnlyDelimiter">
            <summary>This wraps the ObjectARX AcDbTextEditor::tabOnlyDelimiter() and AcDbTextEditor::setTabOnlyDelimiter() methods.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.FontCount">
            <summary>This wraps the ObjectARX AcDbTextEditor::getFontCount() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.VerticalSHX">
            <summary>This wraps the ObjectARX AcDbTextEditor::isVerticalSHX() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.VerticalTTF">
            <summary>This wraps the ObjectARX AcDbTextEditor::isVerticalTTF() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.StackCount">
            <summary>This wraps the ObjectARX AcDbTextEditor::stackCount() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.DefaultStackScale">
            <summary>Gets and sets the default stack scale factor for selection object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.DefaultStackAlignment">
            <summary>Gets and sets the default stack alignment for selection object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.StartOfText">
            <summary>This wraps the ObjectARX AcDbTextEditor::startOfText() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditor.EndOfText">
            <summary>This wraps the ObjectARX AcDbTextEditor::endOfText() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorCursor">
            <summary>
This wraps the ObjectARX AcDbTextEditorCursor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorCursor.Location">
            <summary>Gets and sets the current cursor location.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorCursor.Paragraph">
            <summary>This wraps the ObjectARX AcDbTextEditorCursor::paragraph() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorCursor.Column">
            <summary>This wraps the ObjectARX AcDbTextEditorCursor::column() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout">
            <summary>
This wraps the ObjectARX AcDbTextEditorWipeout class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout.MinBackgroundScaleFactor">
            <summary>This wraps the ObjectARX AcDbTextEditorWipeout::minBackgroundScaleFactor() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout.MaxBackgroundScaleFactor">
            <summary>This wraps the ObjectARX AcDbTextEditorWipeout::maxBackgroundScaleFactor() method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout.BackgroundFillEnabled">
            <summary>Gets and sets the flag to enable the background fill.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout.UseBackgroundColor">
            <summary>Gets and sets the flag to use the background color.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout.BackgroundScaleFactor">
            <summary>Gets and sets the background scale factor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout.BackgroundFillColor">
            <summary>Gets and sets the background fill color.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.DgnUnderlayItem">
            <summary>
This .NET class wraps the AcDbDgnUnderlayItem ObjectARX class. It represents underlay items.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DgnUnderlayItem.UseMasterUnits">
            <summary>Assesses whether the underlay uses master units in the DGN file when the DGN file is being translated to DWG for the underlay to use. If master units are not used, then subunits are used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DgnUnderlayItem.ShowRasterRef">
            <summary>Gets a boolean indicating whether raster images should be displayed in referenced (xref) DGN files.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.DgnUnderlayItem.SetShowRasterRef">
            <summary>Sets a boolean indicating whether raster images should be displayed in referenced DGN files.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayItemCollection">
            <summary>
This class provides a collection for UnderlayItem objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayItemCollection.CopyTo(Autodesk.AutoCAD.DatabaseServices.UnderlayItem[],System.Int32)">
            <summary>Copies the underlay items to the collection from the specified index.</summary>
            <param name="array"> Input array to copy to</param>
            <param name="index"> Input index to begin copying from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayItemCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayItemCollection.Count">
            <summary>Returns the number of items in the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayFile">
            <summary>
This .NET class wraps the AcDbUnderlayFile ObjectARX class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayFile.Items">
            <summary>Returns the underlay items that should be referenced.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.UnderlayHost">
            <summary>
This .NET class wraps the AcDbUnderlayHost ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.UnderlayHost.GetFile(System.String,System.String)">
            <summary>Gets an underlay file. If password is set to null but is required by the drawing, this function will prompt the user for a password.</summary>
            <param name="path"> Input fully qualified path to the file to open</param>
            <param name="password"> Input optional password</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayHost.DwfHost">
            <summary>Returns the current DWF underlay host.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayHost.DgnHost">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayHost.DgnDocHost">
            <summary>Returns the current DGN underlay host that uses the current document for OLE entities.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.UnderlayHost.PdfHost">
            <summary>Accesses the current UnderlayHost for managing PDF underlays.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.DatabaseServices.XrefObjectId">
            <summary>
This .NET class wraps the AcDbXrefObjectId ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.Handle)">
            <summary>Constructor.</summary>
            <param name="XrefBlockTableRecordId"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId  object.</param>
            <param name="hand"> Input Autodesk.AutoCAD.DatabaseServices.Handle object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>Constructor.</summary>
            <param name="LocalId"> Input Autodesk.AutoCAD.DatabaseServices.ObjectId  object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.op_Inequality(Autodesk.AutoCAD.DatabaseServices.XrefObjectId,Autodesk.AutoCAD.DatabaseServices.XrefObjectId)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.op_Equality(Autodesk.AutoCAD.DatabaseServices.XrefObjectId,Autodesk.AutoCAD.DatabaseServices.XrefObjectId)">
            <summary>Returns true if a is equal to b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input System.Object object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.ResolveObjectId">
            <summary>Returns the ID of the object within the xref.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.Serialize">
            <summary>Serializes or files out DBObject.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.Deserialize(Autodesk.AutoCAD.DatabaseServices.ResultBuffer,Autodesk.AutoCAD.DatabaseServices.ResultBuffer&)">
            <summary>Turns the sequence of data between rbStart and rbEnd back into this object.</summary>
            <param name="rbStart"> Input Autodesk.AutoCAD.DatabaseServices.ResultBuffer object.</param>
            <param name="rbEnd"> Input Autodesk.AutoCAD.DatabaseServices.ResultBuffer object.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.IsValid">
            <summary>This returns true if the xref is loaded and the handle is valid within that xref. This method actually performs the check and does not rely on a cached value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.IsXref">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.IsNull">
            <summary>Returns true if this object does not refer to any other object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.ObjectId">
            <summary>Object ID of the object local to the host database.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.DatabaseServices.XrefObjectId.Handle">
            <summary>Handle of the object within the Xref data.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.VariableChangedEventArgs">
            <summary>
Provides more information in conjunction with AcRxVariableReactor::changed event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.VariableChangedEventArgs.OldValue">
            <summary>Gets the old value of the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.VariableChangedEventArgs.NewValue">
            <summary>Gets the new value of the variable.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.VariableChangedEventHandler">
            <summary>
 A delegate implemented by observers that are interested in variable changed events.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.VariableChangingEventArgs">
            <summary>
Contains variable changing event data.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.VariableChangingEventArgs.Veto(System.String)">
            <summary>Vetos the variable change.</summary>
            <param name="reason"> Optional. If more information is available about the failure then it should be be passed via this parameter</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.VariableChangingEventArgs.OldValue">
            <summary>Gets the old value for the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.VariableChangingEventArgs.NewValue">
            <summary>Gets the new value for the variable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.VariableChangingEventArgs.IsResetting">
            <summary>Returns true if the value is due to reset.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.VariableChangingEventHandler">
            <summary>
 A delegate implemented by observers that are interested in variable changing events.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo">
            <summary>
This .NET class wraps the AcGsClientViewInfo ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo.ViewportId">
            <summary>Accesses the Viewport ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo.AcadWindowId">
            <summary>Accesses the AutoCAD window ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo.ViewportObjectId">
            <summary>Accesses the Viewport Object ID.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.ViewportBorderProperties">
            <summary>
This class is a container for the GraphicsSystem.View.ViewportBorderProperties properties.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.ViewportBorderProperties.#ctor(System.Drawing.Color,System.Int32)">
            <summary>Constructor.</summary>
            <param name="color"> Input default color</param>
            <param name="weight"> Input default weight</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ViewportBorderProperties.Color">
            <summary>Returns the color of viewport border.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ViewportBorderProperties.Weight">
            <summary>Returns the weight of viewport border.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.StereoParameters">
            <summary>
This class is a container for the GraphicsSystem.View.StereoParameters properties.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.StereoParameters.#ctor(System.Double,System.Double)">
            <summary>Constructs an object with set values.</summary>
            <param name="magnitude"> Input magnitude of view separation</param>
            <param name="parallax"> Input parallax</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.StereoParameters.Magnitude">
            <summary>Returns magnitude of view separation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.StereoParameters.Parallax">
            <summary>Returns the current parallax. It adjusts the plane of zero parallax.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.View">
            <summary>
This .NET class wraps the View ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.GetModel(Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This .NET method wraps the ObjectARX method.</summary>
            <param name="drw"> The drawable object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.GetModelList">
            <summary>This .NET method wraps the ObjectARX method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.SetViewportClipRegion(System.Int32,System.Int32[],System.Drawing.Point[])">
            <summary>This method is used to specify a clip region distinct from the rectangular region supplied via SetViewport(). The region consists of the union of a set of polygons (each may be self-intersecting) determined by the application of the even-odd winding rule to the specified contour; this region is open (it does not include the contour itself).</summary>
            <param name="contours"> Input number of polygonal contours and the size of the counts array.</param>
            <param name="counts"> Input array where each entry corresponds to the number of device coordinate points used to specify that contour in the points array. For example, counts[i] contains the number of points that represent the (ith + 1) polygonal contour.</param>
            <param name="points"> Input array of points that specify polygonal contours.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.RemoveViewportClipRegion">
            <summary>Removes the effect of any previous SetViewportClipRegion() call, restoring the viewport to a rectangular clip region specified in SetViewport().</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.SetView(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double)">
            <summary>Sets the camera parameters needed to define the transformation from world space to normalized device coordinates. All values are specified in the world space coordinate system. Ensure that the camera position and target are distinct. As well, the specified upVector cannot be parallel to the eye vector (computed as the vector from the target to the position). fieldWidth and fieldHeight help define the transformation from view space to normalized device coordinates.</summary>
            <param name="position"> Input camera position.</param>
            <param name="target"> Input camera target.</param>
            <param name="upVector"> Input camera up vector.</param>
            <param name="fieldWidth"> Input width of the projection plane.</param>
            <param name="fieldHeight"> Input height of the projection plane.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Add(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsSystem.Model)">
            <summary>Specifies which portions of which models are viewed by this view. The proper way to employ this function is to construct a directed acyclic graph (the scene graph) of Drawable objects, each of which tells the Graphic System to draw its children by using Geometry.Draw(). Add the root of this graph (a Drawable) and the Model that handles its notifications with this method. This method always returns true.</summary>
            <param name="drawable"> Input root of scene graph.</param>
            <param name="model"> Input object to which all notifications for the above scene graph are directed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Erase(Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>Removes the specified drawable from the list of viewed drawables.</summary>
            <param name="drawable"> Input object to be removed from the view.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.EraseAll">
            <summary>Removes all drawables from a view.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Invalidate">
            <summary>Use this method to indicate that the view needs to be redrawn.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Update">
            <summary>When called non-interactively, this method flushes any queued graphics to the device. This may involve a full transformation and rasterization pass (which can be quite expensive).When called interactively, this method requests an update (but one is not guaranteed); the call returns immediately, and any transformation and rasterization occur asynchronously.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.BeginInteractivity(System.Double)">
            <summary>Puts the view into the interactive state.</summary>
            <param name="frameRateInHZ"> Input desired frame rate per second.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.EndInteractivity">
            <summary>Terminates the interactive state.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Flush">
            <summary>Use this method to stimulate an interactive View to flush its message queue, upgrade (if degradation has occurred), and attempt to render the frame. During this rendering pass, tessellated objects will employ the appropriate level of detail (which may trigger a regeneration of those objects). Only use this method during interactivity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Hide">
            <summary>Makes the view invisible. Nothing from this view should appear on the device while it is hidden.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Show">
            <summary>Restores a hidden view to a visible state.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.FreezeLayer(System.IntPtr)">
            <summary>Informs the view that the specified layer is frozen in this view. By default all layers are thawed.</summary>
            <param name="layerId"> Input Layer to be treated as frozen.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.ThawLayer(System.IntPtr)">
            <summary>Informs the view that the specified layer should be thawed in this view. ThawLayer() only needs to be called if the layer was previously frozen in the view.</summary>
            <param name="layerId"> Input Layer to be treated as thawed.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.ClearFrozenLayers">
            <summary>Clears all previously frozen layers in the view.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.InvalidateCachedViewportGeometry">
            <summary>Informs the Graphic System that all view-independent viewportDraw geometry is invalid and needs to be regenerated in this view.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Dolly(System.Double,System.Double,System.Double)">
            <summary>Translates the camera target and position by the specified camera space dolly amounts. All other camera parameters are left unaffected. The basis of camera space is as follows: positive Y is along the up vector, positive Z is along the eye vector from the camera position to the camera target, and X is the cross product of those two vectors.</summary>
            <param name="y"> Input Camera space y dolly amount.</param>
            <param name="z"> Input Camera space z dolly amount.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Dolly(Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Translates the camera target and position by the specified camera space dolly vector. All other camera parameters are left unaffected. The basis of camera space is as follows: positive Y is along the up vector, positive Z is along the eye vector from the camera position to the camera target, and X is the cross product of those two vectors.</summary>
            <param name="vector"> Input camera space dolly vector.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Roll(System.Double)">
            <summary>Rotates the camera’s up vector about the eye vector by the specified amount in radians. Positive angles correspond to a clockwise rotation when viewed from the camera position to the camera target.</summary>
            <param name="angle"> Input angular rotation about the eye vector in radians.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Orbit(System.Double,System.Double)">
            <summary>Orbits the camera. During orbit, the camera target and distance from position to target remain fixed; the camera position moves along the surface of a sphere described by these constraints. The X and Y parameters are in radians and correspond to angles traversed on this sphere along the cross product of the up vector and the eye vector (X) and along the up vector (Y). The X component of the orbit is performed before the Y component.</summary>
            <param name="y"> Input up vector.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Zoom(System.Double)">
            <summary>Changes the viewing field (the focal length) of the camera to give the effect of dynamically moving in or out of a scene. The camera position and target are not changed. The specified factor must be positive.</summary>
            <param name="factor"> Input zoom factor.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.ZoomExtents(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Modifies the current view such that the input bounding box defined by the two extents points is completely within the view.</summary>
            <param name="minPoint"> Input WCS point representing the corner of the bounding box extents.</param>
            <param name="maxPoint"> Input WCS point representing the corner of the bounding box extents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.ZoomWindow(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Modifies the current view such that the new window displays the region defined by the input screen coordinates. The aspect ratio is automatically maintained.</summary>
            <param name="lowerLeft"> Input screen coordinate of the lower-left point of the new zoom window.</param>
            <param name="upperRight"> Input screen coordinate of the upper-right point of the new zoom window.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Pan(System.Double,System.Double)">
            <summary>Pans the camera. During pan, the camera position and distance from position to target remain fixed; the camera target moves along the surface of a sphere described by these constraints. The X and Y parameters are in radians and correspond to angles traversed on this sphere along the cross product of the up vector and the eye vector (X) and along the up vector (Y). The X component of the pan is performed before the Y component.</summary>
            <param name="y"> Input up vector</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.PointInView(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns true if point is visible in the view frustum of this object.</summary>
            <param name="point"> Input WCS point to test.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.ExtentsInView(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns true if the bounding box defined by minPoint and maxPoint is at least partially visible in the view frustum of the current View object.</summary>
            <param name="minPoint"> Input WCS point of the corner of the bounding box extents.</param>
            <param name="maxPoint"> Input WCS point of the corner of the bounding box extents.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.Clone">
            <summary>Returns a new copy of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.GetSnapshot(System.Drawing.Rectangle)">
            <summary>Gets a snapshot of the current graphics state of the view.</summary>
            <param name="rectangle"> Input region used by snapshot.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.RenderToImage">
            <summary>Returns a rendered image of the graphics state of this view.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.EnableDefaultLighting(System.Boolean)">
            <summary>
Lets you enable or disable default lighting as well as set the type.</summary>
            <param name="bEnable"> Input flag to enable or disable default lighting.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.GetNumPixelsInUnitSquare(Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Sets pixelArea's X coordinate to the number of pixels in the vertical axis of a WCS unit square and pixelArea's Y coordinate to the number of pixels in the horizontal axis of the unit square.</summary>
            <param name="givenWorldpt"> Input WCS point for the center point of the display coordinate unit square.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.View.GetNumPixelsInUnitSquare(Autodesk.AutoCAD.Geometry.Point3d,System.Boolean)">
            <summary>
Sets pixelArea's X coordinate to the number of pixels in the vertical axis of a WCS unit square and pixelArea's Y coordinate to the number of pixels in the horizontal axis of the unit square..</summary>
            <param name="givenWorldpt"> Input WCS point for the center point of the display coordinate unit square.</param>
            <param name="includePerspective"> Input indicating perspective mode.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ViewportId">
            <summary>The viewport ID as a System.IntPtr. This is the same value as is available through the Autodesk.AutoCAD.GraphicsInterface.Viewport.ViewportId property. This is an ID that has no relation to the AutoCAD CVPORT system variable. The ID returned by this function is unique for every viewport in AutoCAD (including Paper Space AcDbViewports and tiled view viewports, AcDbViewportTableRecords), much the way a handle is for an entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.AcadWindowId">
            <summary>The viewport ID as a System.IntPtr. This is the same value as is available through the Autodesk.AutoCAD.GraphicsInterface.Viewport.ViewportId property. This is an ID that has no relation to the AutoCAD CVPORT system variable. The ID returned by this function is unique for every viewport in AutoCAD (including Paper Space AcDbViewports and tiled view viewports, AcDbViewportTableRecords), much the way a handle is for an entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ViewportObjectId">
            <summary>The Autodesk.AutoCAD.DatabaseServices.ObjectId of the viewport associated with the GS view. This ObjectId may refer to either an AcDbViewport or an AcDbViewportTableRecord. Read only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ViewportExtents">
            <summary>Retrieves the extents of the viewport in normalized device coordinates or in pixels.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ViewportBorderProperties">
            <summary>Accesses the properties of the viewport border.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ViewportBorderVisibility">
            <summary>Determines whether the viewport border is currently visible or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.Position">
            <summary>Returns the camera position. Make sure not to use Position when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.Target">
            <summary>Returns the camera target. Make sure not to use Target when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.UpVector">
            <summary>Returns the camera up vector. Make sure not to use UpVector when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.IsPerspective">
            <summary>Returns true if the projection is perspective and false otherwise. Make sure not to use IsPerspective when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.FieldWidth">
            <summary>Returns the camera field width. Make sure that FieldWidth is not used when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.FieldHeight">
            <summary>Returns the camera field height.Make sure that fieldWidth() is not used when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.EnableFrontClip">
            <summary>Enables front clipping plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.FrontClip">
            <summary>Returns the location of the front clipping plane as a world space distance from the camera target along the eye vector towards the camera position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.EnableBackClip">
            <summary>Enables back clipping plane.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.BackClip">
            <summary>Returns the location of the back clipping plane as a world space distance from the camera target along the eye vector away from the camera position.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ViewingMatrix">
            <summary>Returns the viewing matrix used to transform from world space to view space. Make sure not to use ViewingMatrix when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ProjectionMatrix">
            <summary>Returns the projection matrix used to transform from view space to normalized device space. Make sure not to use ProjectionMatrix when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ScreenMatrix">
            <summary>Returns the screen matrix used to transform from normalized device space to screen space. Make sure not to use ScreenMatrix when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.WorldToDeviceMatrix">
            <summary>Returns the transformation from world space to screen space. This will be the same as the result of the concatenation of the ViewingMatrix, ProjectionMatrix, and ScreenMatrix. Make sure not to use WorldToDeviceMatrix when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ObjectToDeviceMatrix">
            <summary>Returns the transformation from model space to screen space. Make sure not to use ObjectToDeviceMatrix when the view is in the interactive state.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.IsValid">
            <summary>Returns true if the view is displaying the correct picture and false otherwise.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.IsInteractive">
            <summary>Accesses isInteractive variable, which indicates whether View is interactive.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.IsVisible">
            <summary>Returns true if the view is visible and false if it is hidden.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.ExceededBounds">
            <summary>Indicates whether any viewing parameters (camera position, camera target, camera field, front/back clip plane distance, and viewing distance) have exceeded their boundaries during execution of any of the following view manipulation calls: setView(), setFrontClip(), setBackClip(), dolly(), roll(), orbit(), zoom(), and pan(), since the previous call to exceededBounds().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.EnableStereo">
            <summary>Enables/disables stereo viewing in the current view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.StereoParameters">
            <summary>Retrieves the currently configured values for magnitude and parallax.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.Device">
            <summary>Returns the Device to which this view is attached.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.VisualStyleId">
            <summary>Returns the object ID of the visual style set for this view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.VisualStyle">
            <summary>Returns a Boolean indicating whether a visual style has been set in this view.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.View.BackgroundId">
            <summary>Returns the object ID of the Background-derived object on the view, if one is set. If no background was set, it returns ObjectId.kNull.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Model">
            <summary>
This .NET class wraps the AcGsModel ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.#ctor(Autodesk.AutoCAD.GraphicsSystem.RenderType)">
            <summary>Constructs a new model with a render type.</summary>
            <param name="renderType"> Input render type to associate with this model</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.AddSceneGraphRoot(Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>Informs this Model that pRoot is a scene graph root. pRoot will remain cached until either eraseSceneGraphRoot() is called to remove it or the Model is destroyed. AutoCAD uses this method to ensure that the Modelspace Block remains cached even if it there are no viewports (this occurs during the VPORTS command and switches from tilemode to or from layout mode).</summary>
            <param name="pRoot"> Input object that is a scene graph root.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.EraseSceneGraphRoot(Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>Informs this Model that pRoot is no longer a scene graph root. This will cause the cache for pRoot to be destroyed if pRoot is not viewed by any View objects. If pRoot has been added to an View, it is implicitly registered as a scene graph root and will remain cached until it has been erased from all View objects. View.Erase() calls this method to ensure that pRoot is no longer implicitly registered as a scene graph root.</summary>
            <param name="pRoot"> Input object that was a scene graph root.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.OnAdded(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This notification informs the Graphic System (GS) that the specified Drawable has been added to the database represented by this Model.</summary>
            <param name="added"> Input object that has been added to the database.</param>
            <param name="parent"> Input optional Drawable parent.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.OnModified(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This notification informs the Graphic System (GS) that the database representation of the specified Drawable has been modified. For maximum efficiency, this should be called only when the geometry, attributes, or child list of the Drawable is modified.</summary>
            <param name="modified"> Input object that has been modified.</param>
            <param name="parent"> Input optional Drawable parent.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.OnErased(Autodesk.AutoCAD.GraphicsInterface.Drawable,Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This notification informs the Graphic System (GS) that the specified Drawable has been removed from the underlying database; it offers the GS the opportunity to clean up the portion of its cache corresponding to the erase database object.</summary>
            <param name="erased"> Input object that has been removed from the database.</param>
            <param name="parent"> Input optional Drawable parent.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.OnPaletteModified">
            <summary>This notification informs the GS that the color palette has changed.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.SetExtents(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Not implemented.</summary>
            <param name="point3dx"> Not implemented</param>
            <param name="point3dy"> Not implemented</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.SetSectioning(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d,System.Double,System.Double)">
            <summary>Sets the active live sectioning for the Model. After specifying the sectioning, it needs to be enabled via the EnableSectioning property.</summary>
            <param name="pts"> Input array of co-planar points specifying a sectioning region.</param>
            <param name="upVector"> Input object that specifies the orientation of the plane containing pts.</param>
            <param name="top"> Input that specifies the top capping height of the sectioning.</param>
            <param name="bottom"> Input that specifies the bottom capping height of the sectioning.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Model.SetSectioning(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Sets the active live sectioning for the Model. After specifying the sectioning, it needs to be enabled via the setEnableSectioning() method.</summary>
            <param name="pts"> Input array of co-planar points specifying a sectioning region.</param>
            <param name="upVector"> Input object that specifies the orientation of the plane containing pts.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.Transform">
            <summary>Returns whatever base modeling transformation has been set (or identity if none has been set) via setTransform.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.ViewClippingOverride">
            <summary>Pass true to this method to enable the geometry in a model to ignore the view’s front and back clipping planes (if any). Pass false to this method to ensure that a model respects the view’s clipping planes (this is the default behavior).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.VisualStyleId">
            <summary>Returns the persistent visual style on the model.By default, the view displays models in the visual style assigned to the view. Use this method to direct views to display the model in the specified visual style. Subsequent changes to VisualStyle will automatically reflect in the view. Specify ObjectId.kNull to clear the visual style on the model and revert to displaying with the view visual style.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.VisualStyle">
            <summary>Returns the non-persistent visual style on the model.By default, the view displays models in the visual style assigned to the view. Use this method to direct views to display the model in the specified visual style. The view makes a copy of the passed in visual style, so call this method every time the VisualStyle is changed and the model display needs to be updated.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.BackgroundId">
            <summary>Returns the object ID of the Background-derived object on the view, if one is set. If no background was set, it returns ObjectId.kNull.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.LinetypesEnabled">
            <summary>Returns true if linetypes are currently enabled. Otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.EnableSectioning">
            <summary>Returns Boolean indicating whether or not the currently specified sectioning is active in Views displaying this Model.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.SectioningVisualStyle">
            <summary>Returns the visual style to be used for objects on the clipped side of the sectioning. Passing a null object ID indicates that the clipped side should not be drawn. The default style is null.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.RenderType">
            <summary>Accesses the render type of this model.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.ShadowPlaneLocation">
            <summary>Returns the models current ground plane z position in world coordinates. The ground plane is always parallel to the X-Y world plane.The default value is 0.0.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Model.Selectable">
            <summary>Accesses the Selectable variable which controls if Model is selectable.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Projection">
            <summary>
This .NET enum wraps the AcGiMapper::Projection ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Device">
            <summary>
This .NET class wraps the AcGsDevice ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.Invalidate">
            <summary>Flags the entire device area as invalid. This method is used to communicate the fact that the entire display area needs to be refreshed. Re-rasterization is not required unless the device does not have backing store.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.Update">
            <summary>This message is propagated to all owned Views, and it forces the correct picture to be displayed by the GS.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.OnSize(System.Drawing.Size)">
            <summary>This function should be called whenever the size of the device changes. Pass in the width and height of the device in pixels. Only positive values should be specified. If your device has a width or height of 0, do not call this API.</summary>
            <param name="size"> Input width and height of device in pixels.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.OnRealizeForegroundPalette">
            <summary>Tells the device to realize its palette in the foreground and is typically called by the client when the GUI window receives focus.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.OnRealizeBackgroundPalette">
            <summary>Tells the device to realize its palette in the background and is typically called by the client when the GUI window loses focus.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.OnDisplayChange(System.Int32,System.Int32,System.Int32)">
            <summary>Tells the device that the Operating System Color Depth and/or Screen Resolution has changed, with the arguments being the new number of bits per pixel and the X and Y resolution, respectively.</summary>
            <param name="bitsPerPixel"> Input new number of bits per pixel.</param>
            <param name="xRes"> Input X resolution.</param>
            <param name="yRes"> Input Y resolution.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.Add(Autodesk.AutoCAD.GraphicsSystem.View)">
            <summary>Adds a view to be displayed on the device. Returns true if the view was successfully added to the device.</summary>
            <param name="view"> Input view to be displayed on the device.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.Erase(Autodesk.AutoCAD.GraphicsSystem.View)">
            <summary>Removes the view pointed to by view from the device. Returns true if the view was successfully removed from the device.</summary>
            <param name="view"> Input view to be removed from the device.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.EraseAll">
            <summary>Removes all views from the device.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.SetLogicalPalette(System.Drawing.Color[])">
            <summary>Used to communicate the logical palette used by the client when it makes use of SubEntityTraits.SetColor() method (for example, when the client specifies color with a palette index). AutoCAD sets the logical palette to the ACI color index values. The logical palette may very well not be the physical palette (if any) in use by the underlying hardware.</summary>
            <param name="palette"> Input array of logical palette colors.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.SetPhysicalPalette(System.Drawing.Color[])">
            <summary>Specifies a physical palette. It should be used in conjunction with off-screen devices.</summary>
            <param name="palette"> Input array that constitutes the palette.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Device.GetSnapshot(System.Drawing.Rectangle)">
            <summary>Gets a snapshot of the current graphics state of the device.</summary>
            <param name="rectangle"> Input region of snapshot.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Device.IsValid">
            <summary>Returns true when the device has the correct picture (no invalid flags or regions, no rasterization left to perform, and the rendering pipeline has been fully flushed of any queued drawing commands). Otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Device.BackgroundColor">
            <summary>Returns the current background color of the device.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Device.DeviceRenderType">
            <summary>Controls renderer type set by Device.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.DefaultLightingType">
            <summary>
Describes the number lights by default.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.DriverInfo">
            <summary>
This class contains the Graphics system driver information.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.DriverInfo.#ctor(System.Boolean,System.String,System.String)">
            <summary>
This constructor sets the driver info and its hardware acceleration.</summary>
            <param name="hardwareAccelerated"> Input sets whether this driver supports hardware acceleration</param>
            <param name="path"> Input full path to the driver file</param>
            <param name="driver"> Input name of the driver file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.DriverInfo.#ctor(System.String,System.String)">
            <summary>This constructor sets the driver info.</summary>
            <param name="path"> Input full path to the driver file</param>
            <param name="driver"> Input name of the driver file</param>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.DriverInfo.HardwareAccelerated">
            <summary>Accesses the Hardware Acceleration property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.DriverInfo.Path">
            <summary>Accesses the full path to the driver file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.DriverInfo.Driver">
            <summary>Accesses the driver file name.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.EffectStatus">
            <summary>
This is class Autodesk.AutoCAD.GraphicsSystem.EffectStatus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.EffectStatus.EffectUniqueString">
            <summary>This is EffectUniqueString, a member of class EffectStatus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.EffectStatus.EffectName">
            <summary>This is EffectName, a member of class EffectStatus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.EffectStatus.Available">
            <summary>This is Available, a member of class EffectStatus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.EffectStatus.Recommended">
            <summary>This is Recommended, a member of class EffectStatus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.EffectStatus.Enabled">
            <summary>This is Enabled, a member of class EffectStatus.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.EffectStatus.FeatureLevel">
            <summary>This is FeatureLevel, a member of class EffectStatus.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.CertificationData">
            <summary>
This is class Autodesk.AutoCAD.GraphicsSystem.CertificationData.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Configuration">
            <summary>
This .NET class wraps the AcGsConfig ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.Configure">
            <summary>Applies and saves configuration changes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.ShowConfigDialog(System.String)">
            <summary>This is ShowConfigDialog, a member of class Configuration.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.GetHardwareAcceleratedDrivers">
            <summary>Returns the name and path of the current hardware accelerated driver. It also returns the hardware acceleration mode of the Graphics System as true. If the Graphics System is not currently set to hardware accelerated, the driver name and path are not updated.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.DegradationChannelAt(System.Int32)">
            <summary>Returns the degradation channel at the specified position in the degradation chain.</summary>
            <param name="order"> Input for which degradation channel will be returned.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.IsFeatureEnabled(Autodesk.AutoCAD.UniqueString)">
            <summary>Returns Boolean indicating whether a hardware feature is enabled.</summary>
            <param name="feature"> Input input feature.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.IsFeatureAvailable(Autodesk.AutoCAD.UniqueString)">
            <summary>Returns Boolean indicating whether a feature is available.</summary>
            <param name="feature"> Input input feature.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.IsFeatureRecommended(Autodesk.AutoCAD.UniqueString)">
            <summary>Returns the hardware feature recommended status.</summary>
            <param name="feature"> Input hardware feature to query.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.SetFeatureEnabled(Autodesk.AutoCAD.UniqueString,System.Boolean)">
            <summary>
Enables or disables a particular hardware feature.</summary>
            <param name="feature"> Input feature to be enabled.</param>
            <param name="enable"> Input Boolean to enable or disable the feature.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.IsHardwareAccelerationEnabled">
            <summary>Queries the system on whether hardware acceleration is enabled or not.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.IsHardwareAccelerationAvailable">
            <summary>Queries the system on whether hardware acceleration is available or not.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.IsHardwareAccelerationRecommended">
            <summary>Queries the system on whether hardware acceleration is recommended or not.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.setHardwareAcceleration(System.Boolean)">
            <summary>
This is setHardwareAcceleration, a member of class Configuration.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.IsNoHardwareOverrideEnabled">
            <summary>Check to see if AutoCAD is running in safe mode.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.GetCertificationData">
            <summary>This is GetCertificationData, a member of class Configuration.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Configuration.GetVirtualDeviceName">
            <summary>This is GetVirtualDeviceName, a member of class Configuration.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.DriverName">
            <summary>Retrieves the driver name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.DriverVersion">
            <summary>Returns the major version number of the driver.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.DriverRevision">
            <summary>Returns the revision number of this version of the driver.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.DriverSearchPath">
            <summary>Retrieves the driver search path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.CurrentDisplayDriver">
            <summary>Queries the configuration settings for the current display driver. It reports the path name of the current display driver, the name of the current display driver, and whether the driver is capable of hardware acceleration.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.HardwareAcceleratedDriver">
            <summary>Retrieves the name and path of the current hardware accelerated driver.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.DefaultHardwareAcceleratedDriver">
            <summary>Retrieves the name and path of the default hardware accelerated driver.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.DynamicTessellation">
            <summary>Returns true if dynamic tessellation is enabled; it returns alse if dynamic tesselation is disabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.MaxLODs">
            <summary>Returns an integer between 1 and 10, representing the number of tessellations that the Graphics System will cache for dynamic tessellation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.SurfaceTessellationTolerance">
            <summary>Retrieves the amount of detail (tessellation lines or triangles) displayed for surfaces.The return value is an integer between 0 and 100. The lower the integer value, the less detail.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.CurveTessellationTolerance">
            <summary>Retrieves the amount of detail (tessellation lines or triangles) displayed for curves.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.FrameRate">
            <summary>Returns an integer between 1 and 60, representing the display speed in frames per second that must be maintained during view manipulations for adaptive degradation mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.AdaptiveDegradation">
            <summary>Returns true if adaptive degradation is enabled; it false if adaptive generation is disabled.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.RedrawOnWindowExpose">
            <summary>Returns true if geometry is re-rasterized before the screen is updated; it returns false if geometry is not re-rasterized.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.Handedness">
            <summary>Retrieves the currently configured handedness of the data passed in to the GS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.DiscardBackFaces">
            <summary>Returns true if back faces are discarded; it returns false if they are drawn.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.Transparency">
            <summary>Accesses the transparency quality.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Configuration.GenerateVertexNormals">
            <summary>This is GenerateVertexNormals, a member of class Configuration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.DegradationChannel">
            <summary>
This .NET class wraps the AcGsConfig::DegradationChannel ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Handedness">
            <summary>
This .NET enum wraps the AcGsConfig::Handedness ObjectARX enum. It deals with the handedness of the data passed in to the GS.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Quality">
            <summary>
This .NET class wraps the AcGsConfig::Quality ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.EffectListType">
            <summary>
This is record Autodesk.AutoCAD.GraphicsSystem.EffectListType.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.ErrorStatus">
            <summary>
This .NET enum wraps the GS::ErrorStatus ObjectARX enum. It contains values for defining error codes in the 3D Graphics System.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.HighlightStyle">
            <summary>
This .NET enum wraps the GS::HighlightStyle ObjectARX enum. It enumerates the various highlight styles.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.LineWeight">
            <summary>
This is record Autodesk.AutoCAD.GraphicsSystem.LineWeight.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.RendererType">
            <summary>
This .NET enum wraps the AcGsDevice.RendererType ObjectARX enum. This enum's values control a renderer type set by an Device.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Node">
            <summary>
This .NET class wraps the AcGsNode ObjectARX class. AcGsNode represents a node in the GS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Node.Drawable">
            <summary>Returns the Drawable associated with this Node.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.RenderType">
            <summary>
This .NET enum wraps the AcGsModel::RenderType ObjectARX enum. It provides a hint to the Graphic System about how the model's geometry should be rendered.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.InvalidationHint">
            <summary>
This .NET enum wraps the AcGsModel::InvalidationHint ObjectARX enum. It tells the Graphic System how to process the invalidate method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ComponentModel.PropertyProviderAttribute">
            <summary>
This attribute can be applied to a class and is used to associate IPropertyProvider objects with the target class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.PropertyProviderAttribute.#ctor(System.Type)">
            <summary>A constructor which creates a PropertyProviderAttribute of type type.</summary>
            <param name="type"> Input type of attribute</param>
        </member>
        <member name="P:Autodesk.AutoCAD.ComponentModel.PropertyProviderAttribute.PropertyProviderType">
            <summary>Accesses the type of the PropertProviderAttribute.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ComponentModel.IPropertyProvider">
            <summary>
Provides access to optional or "per-instance" properties. Objects that implement this interface can be used by the TypeDescriptor class to provide access to per-instance properties. The system will automatically call the GetProperties method if the Provider has been added to the TypeDescriptor either via the PropertyProviderAttribute or at runtime via TypeDescriptor.AddPropertyProvider.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.IPropertyProvider.GetProperties(System.Object)">
            <summary>Returns a collection of PropertyDescriptor objects based on a given object instance. The returned PropertyDescriptors may vary from instance to instance.</summary>
            <param name="instance"> Input the instance to retrieve from</param>
        </member>
        <member name="T:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor">
            <summary>
This interface is implemented by TypeDescriptor and provides facilities for adding/removing PropertyDescriptors and IPropertyProviders. There is a single instance for each type. To access it, try:</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor.ModifyPropertyCollection(System.ComponentModel.PropertyDescriptorCollection,System.Object)">
            <summary>Returns the final collection of all property descriptors including per-instance props.</summary>
            <param name="defaultProps"> Input default properties.</param>
            <param name="instance"> Input instance of object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor.AddProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>Adds the property with the prop description.</summary>
            <param name="prop"> Input the property descriptor.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor.RemoveProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>Removes the Property.</summary>
            <param name="prop"> Input property to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor.GetPerInstancePropertyProviders">
            <summary>Returns the per-instance property providers as a read-only collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor.AddPerInstancePropertyProvider(Autodesk.AutoCAD.ComponentModel.IPropertyProvider)">
            <summary>Adds the per instance property.</summary>
            <param name="pp"> Input item to obtain properties from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor.RemovePerInstancePropertyProvider(Autodesk.AutoCAD.ComponentModel.IPropertyProvider)">
            <summary>Removes the specified PerInstancePropertyProvider object.</summary>
            <param name="pp"> Input per-instance property to remove</param>
        </member>
        <member name="P:Autodesk.AutoCAD.ComponentModel.ITypeDescriptor.HasPerInstancePropertyProviders">
            <summary>Assesses of per-instance property providers exists or not.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ComponentModel.TypeDescriptor">
            <summary>
This class implements Autodesk.AutoCAD.ComponentModel Classes.ITypeDescriptor, which provides methods for adding/removing properties as well as adding and removing per-instance PropertyProviders. There is a single instance for each type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.#ctor(System.Type)">
            <summary>Creates a new TypeDescriptor of type type.</summary>
            <param name="type"> Input type of descriptor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.ModifyPropertyCollection(System.ComponentModel.PropertyDescriptorCollection,System.Object)">
            <summary>Returns the final collection of all property descriptors including per-instance props.</summary>
            <param name="defaultProps"> Input default properties</param>
            <param name="instance"> Input instance of object</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.AddProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>Adds a new property.</summary>
            <param name="prop"> New property to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.RemoveProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>Removes the property.</summary>
            <param name="prop"> Input property to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.GetPerInstancePropertyProviders">
            <summary>Returns a collection of the per instance property providers.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.AddPerInstancePropertyProvider(Autodesk.AutoCAD.ComponentModel.IPropertyProvider)">
            <summary>Adds a new per-instance property provider.</summary>
            <param name="pp"> Input provider to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.RemovePerInstancePropertyProvider(Autodesk.AutoCAD.ComponentModel.IPropertyProvider)">
            <summary>Removes the PerInstancePropertyProvider.</summary>
            <param name="pp"> Input per instance property provider to remove</param>
        </member>
        <member name="P:Autodesk.AutoCAD.ComponentModel.TypeDescriptor.HasPerInstancePropertyProviders">
            <summary>Assesses of per-instance property providers exists or not.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ComponentModel.TypeManager">
            <summary>
Manages a collection of TypeDescriptor objects</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ComponentModel.TypeManager.Instance">
            <summary>Accesses an instance of the TypeManager object.</summary>
        </member>
    </members>
</doc>
