<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AcCoreMgd</name>
    </assembly>
    <members>
        <member name="T:Autodesk.AutoCAD.EditorInput.Editor">
            <summary>
This .NET class wraps the AcEditor ObjectARX class. The single system object of a class derived from this abstract base class allows applications to manage AutoCAD drawing editor notification reactors. Applications can add and remove reactors from the AutoCAD drawing editor reactor chain.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForEntity">
            <summary>This function provides notification for the start of an AutoCAD entity selection operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForEntity">
            <summary>This function provides notification for the end of an AutoCAD entity selection operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForNestedEntity">
            <summary>This function provides notification for the start of an AutoCAD nentsel acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForNestedEntity">
            <summary>This function provides notification for the end of an AutoCAD nentsel acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.EnteringQuiescentState">
            <summary>Occurs when the user enters a quiescent state.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.LeavingQuiescentState">
            <summary>This event provides notification for the end of an AutoCAD quiescent state.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForSelection">
            <summary>This function provides notification for the start of an AutoCAD selection set acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.SelectionAdded">
            <summary>This callback provides notification of a subselection.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.Rollover">
            <summary>This function provides notification for rollovers.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.SelectionRemoved">
            <summary>This callback provides notification of the removal of some entities from the selection set.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptForSelectionEnding">
            <summary>This function provides notification for the end of an AutoCAD selection set acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForSelection">
            <summary>This function provides notification for the end of an AutoCAD selection set acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptForEntityEnding">
            <summary>This function provides notification for the end of an AutoCAD entity selection operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.Dragging">
            <summary>Occurs when a dragging operation is performed in a drawing.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.DraggingEnded">
            <summary>Occurs when the user ends the dragging operation.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.PointToScreen(Autodesk.AutoCAD.Geometry.Point3d,System.Int32)">
            <summary>Returns the 3D point pt on the screen with the viewport number.</summary>
            <param name="pt"> Input point to grab</param>
            <param name="viewportNumber"> Input the point's viewport number</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.WriteMessage(System.String)">
            <summary>Displays a message on the AutoCAD text screen.</summary>
            <param name="message"> Input messsage</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetSelection(Autodesk.AutoCAD.EditorInput.PromptSelectionOptions,Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>This method gets a selection set using the supplied prompt selection options and the supplied filter.</summary>
            <param name="options"> Input selection options</param>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetSelection(Autodesk.AutoCAD.EditorInput.PromptSelectionOptions)">
            <summary>This method gets a selection set using the supplied prompt selection options and no filter.</summary>
            <param name="options"> Input selection options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetSelection(Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>Returns the selection set obtained using the filter.</summary>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetSelection">
            <summary>Returns the selection set obtained.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectAll(Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>Returns the selection set obtained using the filter.</summary>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectAll">
            <summary>Returns the selection set obtained.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectCrossingWindow(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>Returns the selection set obtained using the filter.</summary>
            <param name="pt1"> Input first corner of selection window</param>
            <param name="pt2"> Input opposite corner of selection window</param>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectCrossingWindow(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the selection set obtained.</summary>
            <param name="pt1"> Input first corner of selection window</param>
            <param name="pt2"> Input opposite corner of selection window</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectCrossingPolygon(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>Returns the selection set obtained using the filter.</summary>
            <param name="polygon"> Input collection of points that represent vertices of the polygon.</param>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectCrossingPolygon(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>Returns the selection set obtained.</summary>
            <param name="polygon"> Input collection of points that represent vertices of the polygon.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectFence(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>Returns the selection set obtained using the filter.</summary>
            <param name="fence"> Input collection of points that represent vertices of the fence.</param>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectFence(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>Returns the selection set obtained.</summary>
            <param name="fence"> Input collection of points that represent vertices of the fence.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectWindow(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>Returns the selection set obtained using the filter.</summary>
            <param name="pt1"> Input first corner of selection window</param>
            <param name="pt2"> Input opposite corner of selection window</param>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectWindow(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns the selection set obtained.</summary>
            <param name="pt1"> Input first corner of selection window.</param>
            <param name="pt2"> Input opposite corner of selection window.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectWindowPolygon(Autodesk.AutoCAD.Geometry.Point3dCollection,Autodesk.AutoCAD.EditorInput.SelectionFilter)">
            <summary>Returns the selection set obtained using the filter.</summary>
            <param name="polygon"> Input collection of points that represent vertices of the polygon.</param>
            <param name="filter"> Input selection filter</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectWindowPolygon(Autodesk.AutoCAD.Geometry.Point3dCollection)">
            <summary>Returns the selection set obtained.</summary>
            <param name="polygon"> Input collection of points that represent vertices of the polygon.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectLast">
            <summary>Selects last result from the prompt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SelectPrevious">
            <summary>Selects previous result from the prompt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.InitCommandVersion(System.Int32)">
            <summary>This function sets a variable in the current document establishing the version requested for the next command to be run. The return value is the old version prior to being set. Calling this method will no argument will initialize the value to 0, which indicates that no version has been established.</summary>
            <param name="nVersion"> The new version variable to set</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetCommandVersion">
            <summary>This function is used to query the requested version of the command in progress in the current document. It does this by querying the version set at this depth of the command version stack.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.DoPrompt(Autodesk.AutoCAD.EditorInput.PromptOptions)">
            <summary>Carries out a prompt with the specified options. Returns the result of the prompt operation.</summary>
            <param name="opt"> Input options for the prompt</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetInteger(Autodesk.AutoCAD.EditorInput.PromptIntegerOptions)">
            <summary>Gets user input for an integer.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetInteger(System.String)">
            <summary>Gets user input for an integer.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetDouble(Autodesk.AutoCAD.EditorInput.PromptDoubleOptions)">
            <summary>Gets user input for a real value.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetDouble(System.String)">
            <summary>Returns a PromptDoubleResult object representing the result of the prompt operation.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetDistance(Autodesk.AutoCAD.EditorInput.PromptDistanceOptions)">
            <summary>Gets user input for a linear distance.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetDistance(System.String)">
            <summary>Returns a PromptDoubleResult object representing the result of the prompt operation.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetAngle(Autodesk.AutoCAD.EditorInput.PromptAngleOptions)">
            <summary>Gets user input for an angle, taking into account the current value of the ANGBASE system variable.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetAngle(System.String)">
            <summary>Gets user input for an angle, taking into account the current value of the ANGBASE system variable.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetPoint(Autodesk.AutoCAD.EditorInput.PromptPointOptions)">
            <summary>Gets user input for a point.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetPoint(System.String)">
            <summary>Gets user input for a point.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetCorner(Autodesk.AutoCAD.EditorInput.PromptCornerOptions)">
            <summary>Gets user input for the corner of a rectangle.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetCorner(System.String,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Returns a PromptPointResult object representing the result of the prompt operation.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt.</param>
            <param name="basePoint"> Input the first corner of the rectangle being selected.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetKeywords(Autodesk.AutoCAD.EditorInput.PromptKeywordOptions)">
            <summary>Wraps the acedGetKword() ObjectARX function.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetString(Autodesk.AutoCAD.EditorInput.PromptStringOptions)">
            <summary>Gets user input for a string.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetString(System.String)">
            <summary>Returns the PromptResult object representing the result of the prompt operation.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetEntity(Autodesk.AutoCAD.EditorInput.PromptEntityOptions)">
            <summary>Prompts the user to select an entity by specifying a point.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetEntity(System.String)">
            <summary>Prompts the user to select an entity by specifying a point.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetNestedEntity(Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptions)">
            <summary>Gets the name of an entity selected by the user and the point used to select the entity.</summary>
            <param name="options"> Input optional parameters of the prompt.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetNestedEntity(System.String)">
            <summary>Gets the name of an entity selected by the user and the point used to select the entity.</summary>
            <param name="message"> Input message to be displayed to the user during the prompt</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetFileNameForOpen(Autodesk.AutoCAD.EditorInput.PromptOpenFileOptions)">
            <summary>This method emulates the subtleties of AutoCAD file prompting. It properly prompts on the command line when FILEDIA is zero, or if a script or an AutoLISP routine is running.</summary>
            <param name="options"> Input file opening options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetFileNameForOpen(System.String)">
            <summary>This method emulates the subtleties of AutoCAD file prompting. It properly prompts on the command line when FILEDIA is zero, or if a script or an AutoLISP routine is running.</summary>
            <param name="message"> Input prompt string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetFileNameForSave(Autodesk.AutoCAD.EditorInput.PromptSaveFileOptions)">
            <summary>This method emulates the subtleties of AutoCAD file prompting. It properly prompts on the command line when FILEDIA is zero, or if a script or an AutoLISP routine is running.</summary>
            <param name="options"> Input file saving options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetFileNameForSave(System.String)">
            <summary>This method emulates the subtleties of AutoCAD file prompting. It properly prompts on the command line when FILEDIA is zero, or if a script or an AutoLISP routine is running.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.Drag(Autodesk.AutoCAD.EditorInput.PromptDragOptions)">
            <summary>Prompts the user to modify a selection set by graphically dragging its entities.</summary>
            <param name="options"> Input dragging options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.Drag(Autodesk.AutoCAD.EditorInput.SelectionSet,System.String,Autodesk.AutoCAD.EditorInput.DragCallback)">
            <summary>Prompts the user to modify a selection set by graphically dragging its entities.</summary>
            <param name="selection"> Input the selection set</param>
            <param name="message"> Input the prompt message</param>
            <param name="callback"> Input any drag callbacks</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.Drag(Autodesk.AutoCAD.EditorInput.Jig)">
            <summary>Starts a Jig operation. Returns the outcome of the Jig operation.</summary>
            <param name="jig"> Input the jig to drag</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.UpdateScreen">
            <summary>Refreshes the screen.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.PostCommandPrompt">
            <summary>This function causes AutoCAD to repost the last command prompt message.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.UpdateTiledViewportsInDatabase">
            <summary>Updates the tiled viewports in the database.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.UpdateTiledViewportsFromDatabase">
            <summary>Updates the tiled viewports from the database.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.StartUserInteraction(System.IntPtr)">
            <summary>Returns a new EditorUserInteraction object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.TurnForcedPickOn">
            <summary>This function will cause the AutoCAD input event mechanism to do a pick under the prevailing pick aperture on all digitizer events, regardless of whether a point is being acquired or whether any OSNAP modes are currently active. If a point is being acquired and OSNAP is active, the object snap aperture dimensions (system variable: APERTURE) define the pick box size. Otherwise the normal system variable PICKBOX value will be used. In the PointHistory enum, the following enum values are related to this capability, as indicated by their related comments: ForcedPick,ePickMask, DidNotPick, UsedPickBox, UsedOsnapBox.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.TurnForcedPickOff">
            <summary>This function decrements the forced pick counter, and if the counter hits 0, disables forced picking, which means entity picking occurs under normal AutoCAD conditions, such as when input points are being acquired and an OSNAP mode is active, or normal entity selection operations.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.TurnSubentityWindowSelectionOn">
            <summary>Using this function increments a reference counter which, when non-zero, causes any form of a window selection (such as _W and _WP in acedSSGet()), coupled with a request of nested entity information (such as using the ":n" mode in acedSSGet()), to select the main entity if one or more of the main entity's subentities is fully contained within the window.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.TurnSubentityWindowSelectionOff">
            <summary>Using this function decrements a reference counter which, when zero, turns off subentity window selection.When subentity window selection is enabled, any form of a window selection (such as _W and _WP in acedSSGet()), coupled with a request of nested entity information (such as the ":n" mode in acedSSGet()), selects the main entity if one or more of the main entity's subentities is fully contained within the window.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SwitchToModelSpace">
            <summary>Switches the current view to model space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SwitchToPaperSpace">
            <summary>Switches the current view to paper space.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.GetCurrentView">
            <summary>Gets the current view from ViewTableRecord.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.SetCurrentView(Autodesk.AutoCAD.DatabaseServices.ViewTableRecord)">
            <summary>Sets the current view of ViewTableRecord.</summary>
            <param name="value"> Input new view table record value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.DrawVectors(Autodesk.AutoCAD.DatabaseServices.ResultBuffer,Autodesk.AutoCAD.Geometry.Matrix3d)">
            <summary>Draws a set of vectors that are transformed by the given matrix.</summary>
            <param name="rb"> Input result buffer containing vectors</param>
            <param name="transform"> Input transformation matrix</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.DrawVector(Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Point3d,System.Int32,System.Boolean)">
            <summary>
Draws a vector from a specified beginning and ending points. Its color and highlight values may also be chosen.</summary>
            <param name="from"> Input beginning point</param>
            <param name="to"> Input ending point</param>
            <param name="color"> Input color of vector</param>
            <param name="drawHighlighted"> Input Boolean value indicated of the vector ought to be highlighted</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.Regen">
            <summary>Regenerates the drawing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.Snap(System.String,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Changes the snap mode for the point at input.</summary>
            <param name="snapMode"> Input new snap mode</param>
            <param name="input"> Input point to place snap mode</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.ViewportIdFromNumber(System.Int32)">
            <summary>Returns the object ID of the viewport from its number.</summary>
            <param name="viewportNumber"> Input viewport number</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.TraceBoundary(Autodesk.AutoCAD.Geometry.Point3d,System.Boolean)">
            <summary>
Returns the resulting boundary set in a DBObjectCollection.</summary>
            <param name="seedPoint"> The seed point, in UCS, for the boundary trace.</param>
            <param name="detectIslands"> A boolean indicating whether or not to detect islands.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.Editor.ApplyCurDwgLayerTableChanges">
            <summary>Updates the cached layer data for the current document in the editor.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PointFilter">
            <summary>Occurs when the mouse is moved within the AutoCAD editor window.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PointMonitor">
            <summary>Occurs when the mouse is moved within the AutoCAD editor window.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForPoint">
            <summary>This function provides notification for the start of an AutoCAD point acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForPoint">
            <summary>This function provides notification for the end of an AutoCAD point acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForAngle">
            <summary>This function provides notification for the start of an AutoCAD angle acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForAngle">
            <summary>This function provides notification for the end of an AutoCAD angle acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForDistance">
            <summary>This function provides notification for the start of an AutoCAD distance acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForDistance">
            <summary>This function provides notification for the end of an AutoCAD distance acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForCorner">
            <summary>This function provides notification for the start of an AutoCAD corner acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForCorner">
            <summary>This function provides notification for the end of an AutoCAD corner acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForString">
            <summary>This function provides notification for the start of an AutoCAD string acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForString">
            <summary>This function provides notification for the end of an AutoCAD string acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForKeyword">
            <summary>This function provides notification for the start of an AutoCAD keyword acquisition.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForKeyword">
            <summary>This function provides notification for the end of an AutoCAD key word acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForInteger">
            <summary>This function provides notification for the start of an AutoCAD integer acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptedForInteger">
            <summary>This function provides notification for the end of an AutoCAD integer acquisition operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.Editor.PromptingForDouble">
            <summary>This function provides notification for the start of an AutoCAD floating point acquisition operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.Document">
            <summary>The document that this editor belongs to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.ActiveViewportId">
            <summary>Accesses the active viewport ID.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.CurrentViewportObjectId">
            <summary>Returns the object id of current viewport.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.IsQuiescent">
            <summary>Returns the isQuiescent property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.IsQuiescentForTransparentCommand">
            <summary>Assesses if the editor is ready for transparent commands.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.IsDragging">
            <summary>Assesses if the screen is dragging.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.UseCommandLineInterface">
            <summary>Returns UseCommandLineInterface property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.CurrentUserCoordinateSystem">
            <summary>Returns the current user coordinate system points.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Editor.MouseHasMoved">
            <summary>This property provides a way for input point monitors and filters to check for mouse movement and be able to return as quickly as possible from the callbacks without doing any time-consuming calculations.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.DrawJig">
            <summary>
This class lets the developer create a Jig-based object that can be used to draw graphics and get user input independently of a custom entity. See EntityJig for a Jig object that works with custom entities.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.Jig">
            <summary>
This .NET class wraps the AcEdJig ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionFilter">
            <summary>
This class describes the kind of filtering to be applied to the object during a selection prompt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionFilter.#ctor(Autodesk.AutoCAD.DatabaseServices.TypedValue[])">
            <summary>Constructor.</summary>
            <param name="value"> Input Autodesk.AutoCAD.DatabaseServices.TypedValue[] object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionFilter.GetFilter">
            <summary>Returns an array of TypeValues that contains the filtering instructions.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.JigPromptOptions">
            <summary>
This is the base class for containers of input arguments that may be passed to the Jig sampling prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptOptions.Cursor">
            <summary>Gets or sets the cursor to be associated with the prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptOptions.UserInputControls">
            <summary>Returns the bitwise OR'd value of all user input control settings in effect at the present time for this particular jig.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentCollection">
            <summary>
This .NET class wraps the AcApDocManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.CopyTo(Autodesk.AutoCAD.ApplicationServices.Document[],System.Int32)">
            <summary>Copies the DocumentCollection to a one-dimensional array.</summary>
            <param name="array"> Input the one-dimensional array that is the destination of the elements copied from DocumentCollection. The array must have zero-based indexing.</param>
            <param name="index"> Input the zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.AppContextNewDocument(System.String)">
            <summary>This function allows synchronous access to the NEW drawing operation. It can only be called from the application context.</summary>
            <param name="templateFileName"> Input path/filename or URL of template file to use</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.AppContextOpenDocument(System.String)">
            <summary>This function allows synchronous access to the OPEN drawing operation. It can only be called from the application context.</summary>
            <param name="fileName"> Input path/filenam</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.AppContextRecoverDocument(System.String)">
            <summary>This is AppContextRecoverDocument, a member of class DocumentCollection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.ExecuteInApplicationContext(Autodesk.AutoCAD.ApplicationServices.ExecuteInApplicationContextCallback,System.Object)">
            <summary>Allows a void function to be called from the application context.</summary>
            <param name="callback"> Input Autodesk.AutoCAD.ApplicationServices.ExecuteInApplicationContextCallback object.</param>
            <param name="data"> Input any data that should be used for the function call.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.GetDocument(Autodesk.AutoCAD.DatabaseServices.Database)">
            <summary>Returns the Document.</summary>
            <param name="db"> Input database to obtain from.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.GetPendingDocumentForSwitch">
            <summary>This is GetPendingDocumentForSwitch, a member of class DocumentCollection.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentCreateStarted">
            <summary>Wraps the AcApDocManagerReactor.documentCreateStarted() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentCreated">
            <summary>Wraps the AcApDocManagerReactor.documentCreated() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentToBeDestroyed">
            <summary>Wraps the AcApDocManagerReactor.documentToBeDestroyed() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentDestroyed">
            <summary>Wraps the AcApDocManagerReactor.documentDestroyed() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentCreationCanceled">
            <summary>Wraps the AcApDocManagerReactor.documentCreationCanceled() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentBecameCurrent">
            <summary>Wraps the AcApDocManagerReactor.documentBecameCurrent() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentToBeActivated">
            <summary>Wraps the AcApDocManagerReactor.documentToBeActivated() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentToBeDeactivated">
            <summary>Wraps the AcApDocManagerReactor.documentToBeDeactivated() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentActivationChanged">
            <summary>Wraps the AcApDocManagerReactor.documentActivationChanged() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentActivated">
            <summary>Wraps the AcApDocManagerReactor.documentActivated() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentLockModeWillChange">
            <summary>Wraps the AcApDocManagerReactor.documentLockModeWillChange() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentLockModeChangeVetoed">
            <summary>Wraps the AcApDocManagerReactor.documentLockModeChangeVetoed() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentLockModeChanged">
            <summary>Wraps the AcApDocManagerReactor.documentLockModeChanged() ObjectARX function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.Count">
            <summary>Accesses the number of documents.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.MdiActiveDocument">
            <summary>Accesses the MDI active document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.CurrentDocument">
            <summary>This is CurrentDocument, a member of class DocumentCollection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DocumentActivationEnabled">
            <summary>Accesses the status of document activation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.IsApplicationContext">
            <summary>Assesses if a function is executing in the application context.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentCollection.DefaultFormatForSave">
            <summary>Gets or sets the default DocumentSaveFormat for AutoCAD.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.Document">
            <summary>
This class wraps the AcApDocument ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.Create(System.IntPtr)">
            <summary>Creates a new managed object from an unmanaged pointer.</summary>
            <param name="unmanagedPointer"> Input unmanaged pointer</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.SendStringToExecute(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
Executes a particular string.</summary>
            <param name="command"> Input document to send input to</param>
            <param name="activate"> Input Boolean indicating whether to activate the target document</param>
            <param name="wrapUpInactiveDoc"> Input Boolean indicating whether to queue current active document to complete in the next OnIdle() when switching active documents</param>
            <param name="echoCommand"> Input Boolean indicating whether the sent string is echoed on the command line</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.LockDocument">
            <summary>Locks the document.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.LockDocument(Autodesk.AutoCAD.ApplicationServices.DocumentLockMode,System.String,System.String,System.Boolean)">
            <summary>
Locks the document using a specific mode.</summary>
            <param name="lockMode"> Input one of the locking modes from DocumentLockMode enum</param>
            <param name="globalCommandName"> Input command name. Each time a document is locked, it is considered the beginning of a "command", or action in Acad. This name is passed back by the doc manager reactor as the name of the command doing the locking. It can be NULL</param>
            <param name="localCommandName"> Input name that is displayed on the command line if or when this command is undone. It can be NULL</param>
            <param name="promptIfFails"> If the document cannot be locked, due to a command already in progress in the target document, and if prompt is true, the standard prompt will be issued, and the user will be given an opportunity to complete the command in the target document and the lock will succeed. If the user chooses to cancel the lock request, or prompt is false, then the lock change will fail</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.LockMode(System.Boolean)">
            <summary>
This function provides a way for an application to determine if it could have permission to set a lock on a document. One rule about locking is that an execution context can override any of its own locks. If this application's context has an Exclusive Write lock, it can still apply another lock to the document..</summary>
            <param name="bIncludeMyLocks"> Input Boolean indicating whether to consider this application's locks or just look at other context's locks</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.LockMode">
            <summary>This function provides a way for an application to determine if it could have permission to set a lock on a document. One rule about locking is that an execution context can override any of its own locks. If this application's context has an Exclusive Write lock, it can still apply another lock to the document.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.UpgradeDocOpen">
            <summary>Converts the document status from read only to write, if possible.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.DowngradeDocOpen(System.Boolean)">
            <summary>
Converts the document status from writeable to read only..</summary>
            <param name="bPromptForSave"> Input Boolean to determine if a save prompt is necessary</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.SetLispSymbol(System.String,System.Object)">
            <summary>This is SetLispSymbol, a member of class Document.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Document.GetLispSymbol(System.String)">
            <summary>This is GetLispSymbol, a member of class Document.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.UnknownCommand">
            <summary>Wraps the AcEditorReactor.unknownCommand() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.CommandWillStart">
            <summary>Wraps the AcEditorReactor.commandWillStart() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.CommandEnded">
            <summary>Wraps the AcEditorReactor.commandEnded() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.CommandCancelled">
            <summary>Wraps the AcEditorReactor.commandcanceled() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.CommandFailed">
            <summary>Wraps the AcEditorReactor.commandFailed() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.LispWillStart">
            <summary>Wraps the AcEditorReactor.lispWillStart() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.LispEnded">
            <summary>Wraps the AcEditorReactor::lispEnded() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.LispCancelled">
            <summary>Wraps the AcEditorReactor.lispcanceled() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.BeginDocumentClose">
            <summary>Wraps the AcEditorReactor2.beginDocClose() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.CloseAborted">
            <summary>Wraps the AcEditorReactor2.docCloseAborted() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.CloseWillStart">
            <summary>Wraps the AcEditorReactor2.docCloseWillStart() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.ImpliedSelectionChanged">
            <summary>Wraps the AcEditorReactor2.pickfirstModified() ObjectARX function.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.ViewChanged">
            <summary>This is ViewChanged, a member of class Document.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.LayoutSwitched">
            <summary>This event is fired when the layout is switching.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Document.LayoutSwitching">
            <summary>This event is fired when the layout is switched.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.FormatForSave">
            <summary>The DocumentSaveFormat for the document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.Database">
            <summary>Wraps the AcApDocument.database() ObjectARX function, which returns the database object (Database) being used by this Document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.TransactionManager">
            <summary>Accesses the TransactionManager object for this Document. If an application is opening objects from more than one document at a time, and are using transactions, they must start a separate transaction for each document, using the transaction manager from each document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.UserData">
            <summary>Accesses the user data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.GraphicsManager">
            <summary>Accesses the graphics manager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.IsReadOnly">
            <summary>Accesses if the document is read-only or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.IsActive">
            <summary>Assesses if the document is active or not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.IsNamedDrawing">
            <summary>Returns true if the drawing for this document is a named file on the disk (as opposed to a new drawing that has not yet been saved).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.Editor">
            <summary>Accesses the Editor associated with this document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.Window">
            <summary>Accesses the window.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.CommandInProgress">
            <summary>Accesses the command name string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Document.Name">
            <summary>Accesses the name of the document.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager">
            <summary>
This wraps the ObjectARX AcApLongTransactionManager class</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.CheckOut(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.IdMapping,Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This .NET method wraps the ObjectARX AcApLongTransactionManager::checkOut() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.CheckIn(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.IdMapping,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX AcApLongTransactionManager::checkIn() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.AbortLongTransaction(Autodesk.AutoCAD.DatabaseServices.ObjectId,System.Boolean)">
            <summary>
This .NET method wraps the ObjectARX AcApLongTransactionManager::abortLongTransaction() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.CurrentLongTransactionFor(Autodesk.AutoCAD.ApplicationServices.Document)">
            <summary>This .NET method wraps the ObjectARX AcApLongTransactionManager::currentLongTransactionFor() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.AddClassFilter(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>This .NET method wraps the ObjectARX wraps the AcApLongTransactionManager::addClassFilter() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.IsFiltered(Autodesk.AutoCAD.Runtime.RXClass)">
            <summary>This wraps the ObjectARX AcApLongTransactionManager.isFiltered() method.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.CheckingOut">
            <summary>Event handler for checking out events.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.CheckedOut">
            <summary>Event handler for checked out events.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.CheckingIn">
            <summary>Event handler for checking in events.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.CheckedIn">
            <summary>Event handler for checked in events.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.LongTransactionManager.Aborted">
            <summary>Event handler for aborted events.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection">
            <summary>
This is class Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection.Remove(System.String)">
            <summary>This is Remove, a member of class RecentDocumentCollection.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection.DocumentClosed">
            <summary>This is DocumentClosed, a member of class RecentDocumentCollection.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection.DocumentPinStateChanged">
            <summary>This is DocumentPinStateChanged, a member of class RecentDocumentCollection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection.Dispose">
            <summary>This is Dispose, a member of class RecentDocumentCollection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection.Instance">
            <summary>This is Instance, a member of class RecentDocumentCollection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.RecentDocumentCollection.UsePinnedItems">
            <summary>This is UsePinnedItems, a member of class RecentDocumentCollection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager">
            <summary>
This class manages global, user profile, and dialog sections of the Windows registry for AutoCAD host applications.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.OpenGlobalSection">
            <summary>This method opens the product's root key in the HKEY_CURRENT_USER section of the registry.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.OpenCurrentProfile">
            <summary>This method attempts to open the registry section corresponding the current user profile.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.OpenDialogSection(System.Object)">
            <summary>This method attempts to open the registry section corresponding the input dialog name in the current user profile.</summary>
            <param name="dialog"> Input System.Object object. Input dialog name whose registry entry is to be retrieved.</param>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.CurrentProfileChanging">
            <summary>This event is fired when the current profile is changing.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.CurrentProfileChanged">
            <summary>This event is fired when the current profile has changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.CurrentProfileResetting">
            <summary>This event is fired when the current profile is resetting.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.CurrentProfileReset">
            <summary>This event is fired when the current profile has been reset.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.CurrentProfileSaving">
            <summary>This event is fired when the current profile is saving.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.CurrentProfileSaved">
            <summary>This event is fired when the current profile has saved.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.ProfileResetting">
            <summary>This event is fired when the profile is resetting.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.ProfileReset">
            <summary>This event is fired when the profile has been reset.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.ProfileSaving">
            <summary>This event is fired while the profile is saving.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.UserConfigurationManager.ProfileSaved">
            <summary>This event is fired when the profile has saved.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.Publisher">
            <summary>
This .NET class implements events defined by the AcDMMReactor, AcPublishReactor, and AcPublishUiReactor ObjectARX classes.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.AboutToBeginBackgroundPublishing">
            <summary>Occurs when the plot operation is about to start. Brackets the entire plot operation; useful for initialization and discriminating between various databases.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.AboutToBeginPublishing">
            <summary>Occurs when the plot operation is about to start. Brackets the entire plot operation; useful for initialization and discriminating between various databases.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.BeginPublishingSheet">
            <summary>Occurs at the start of the plot operation.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.BeginAggregation">
            <summary>Occurs after all of the temporary DWF files for the job have been plotted and aggregation into a single multisheet DWF is about to begin.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.AboutToEndPublishing">
            <summary>Occurs when the publish job is about to end.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.AboutToMoveFile">
            <summary>Occurs after a multipage DWF has been aggregated, but before the temporary DWF file has been moved to its final destination.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.EndPublish">
            <summary>Occurs at the end of the publish job.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.CancelledOrFailedPublishing">
            <summary>Occurs if the job is being canceled or aborted due to user input or due to an error.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.InitPublishOptionsDialog">
            <summary>Occurs when the Publish Options dialog is about to be displayed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.BeginSheet">
            <summary>Occurs before any entities are plotted, to let clients know about the sheet that is about to be plotted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.BeginEntity">
            <summary>Occurs before each entity on the sheet is plotted. This allows a client to determine if this entity is one for which it will publish metadata. If so, the client can associate a node with this entity and associate properties with the node. Clients should be parsimonious in assigning nodes to entities.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.EndEntity">
            <summary>Occurs after each entity on the sheet is plotted.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.Publishing.Publisher.EndSheet">
            <summary>Indicates that all entities on the sheet have been plotted, to notify clients that plotting of the sheet is complete. At this time clients can add resources and/or properties that are not associated with a specific entity to the sheet.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.PublishDsd(System.String,Autodesk.AutoCAD.PlottingServices.PlotProgressDialog)">
            <summary>Publishes dsdfile with the status indicated in plotProgressDialog.</summary>
            <param name="dsdFile"> Input file to publish</param>
            <param name="plotProgressDialog"> Input plot progress dialog</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.PublishExecute(Autodesk.AutoCAD.PlottingServices.DsdData,Autodesk.AutoCAD.PlottingServices.PlotConfig)">
            <summary>Publishes dsdData with the status indicated in plotConfig.</summary>
            <param name="dsdData"> Input data to execute</param>
            <param name="plotConfig"> Input plot progress dialog</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.PublishSelectedLayouts(System.Boolean)">
            <summary>
Publishes the selected layouts.</summary>
            <param name="bOverride"> Input true if there are overrides.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.ShowDwfOptionsDialog(Autodesk.AutoCAD.PlottingServices.DsdData,Autodesk.AutoCAD.PlottingServices.PlotConfig,System.String)">
            <summary>Returns the DWF options dialog result.</summary>
            <param name="dsdData"> Input data to execute</param>
            <param name="plotConfig"> Input plot progress dialog</param>
            <param name="optionsDialogTitle"> Input title of options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireAboutToBeginBackgroundPublishing(Autodesk.AutoCAD.Publishing.AboutToBeginBackgroundPublishingEventArgs)">
            <summary>AboutToBeginBackgroundPublishingEventArgs event fired before the background publishing begins.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireAboutToBeginPublishing(Autodesk.AutoCAD.Publishing.AboutToBeginPublishingEventArgs)">
            <summary>AboutToBeginBackgroundPublishingEventArgs event fired before publishing begins.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireBeginPublishingSheet(Autodesk.AutoCAD.Publishing.BeginPublishingSheetEventArgs)">
            <summary>See BeginPublishingSheet event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireBeginAggregation(Autodesk.AutoCAD.Publishing.BeginAggregationEventArgs)">
            <summary>See BeginAggregation event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireAboutToEndPublishing(Autodesk.AutoCAD.Publishing.PublishEventArgs)">
            <summary>See AboutToEndPublishing event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireAboutToMoveFile(Autodesk.AutoCAD.Publishing.PublishEventArgs)">
            <summary>See AboutToMoveFile event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireEndPublish(Autodesk.AutoCAD.Publishing.PublishEventArgs)">
            <summary>See EndPublish event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireCancelledOrFailedPublishing(Autodesk.AutoCAD.Publishing.PublishEventArgs)">
            <summary>See CancelledOrFailedPublishing event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireInitPublishOptionsDialog(Autodesk.AutoCAD.Publishing.PublishUIEventArgs)">
            <summary>See InitPublishOptionsDialog event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireBeginSheet(Autodesk.AutoCAD.Publishing.PublishSheetEventArgs)">
            <summary>See BeginSheet event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireBeginEntity(Autodesk.AutoCAD.Publishing.PublishEntityEventArgs)">
            <summary>See BeginEntity event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireEndEntity(Autodesk.AutoCAD.Publishing.PublishEntityEventArgs)">
            <summary>See EndEntity event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Publisher.FireEndSheet(Autodesk.AutoCAD.Publishing.PublishSheetEventArgs)">
            <summary>See EndSheet event.</summary>
            <param name="e"> Input event argument to launch</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.Publisher.CurrentPublishedSheetSetPath">
            <summary>Read-only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.Manager">
            <summary>
This .NET class wraps the AcGsManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.CreateAutoCADViewport(Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel,Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord)">
            <summary>Similar to CreateAutoCADView() except that the Drawable added to the View corresponds to the specified ViewportTableRecord. This API facilitates the viewing of an entire AutoCAD viewport.</summary>
            <param name="vp"> Input ViewportTableRecord</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.CreateAutoCADView(Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel,Autodesk.AutoCAD.GraphicsInterface.Drawable)">
            <summary>This function creates an View object. The Manager adds the drawable passed in to this View along with the Model associated with the Database. This API allows clients to view any drawable (such as an ViewportTableRecord, an BlockTableRecord, or a selection set drawable).</summary>
            <param name="drawable"> Input Drawable</param>
            <param name="kernel"> Graphics Kernel used to create the resource</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.CreateAutoCADDevice(Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel,System.IntPtr)">
            <summary>Creates an Device object. The window handle passed in to this function is the display surface onto which the graphics system draws. The Manager also configures this Device object with the ACI logical palette.</summary>
            <param name="hwnd"> Input window handle.</param>
            <param name="kernel"> Graphics Kernel used to create the resource</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.SetViewportFromView(System.Int32,Autodesk.AutoCAD.GraphicsSystem.View,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
Sets the view parameters for the indicated viewport. Pass in true for regenRequired if the new view requires a 2D regen for proper synchronization; otherwise, pass in true for rescaleRequired if a simple 2D rescale is required for proper 2D-3D synchronization. If neither is required, pass in false for both.syncRequired is used to update the underlying 2D view parameters with the new parameters, without causing either a rescale or a regen. It is useful in 3D viewports, after a view change, where a regen is no longer required, but the 2D view must be kept in sync.</summary>
            <param name="viewportNumber"> Input viewport number to set</param>
            <param name="view"> Input view to set from</param>
            <param name="regenRequired"> Input true if regen is required for the viewport</param>
            <param name="rescaleRequired"> Input true if rescale is required for the viewport</param>
            <param name="syncRequired"> Input true if synching is required for the viewport</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.SetViewportFromView(System.Int32,Autodesk.AutoCAD.GraphicsSystem.View)">
            <summary>Sets the view parameters for the indicated viewport.</summary>
            <param name="viewportNumber"> Input viewport number to set</param>
            <param name="view"> Input view to set from</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.SetViewFromViewport(Autodesk.AutoCAD.GraphicsSystem.View,System.Int32)">
            <summary>Sets the view parameters for the indicated viewport.</summary>
            <param name="view"> Input view to set</param>
            <param name="viewportNumber"> Input viewport</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.GetCurrentAcGsView(System.Int32)">
            <summary>This is GetCurrentAcGsView, a member of class Manager.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.GetCurrent3dAcGsView(System.Int32)">
            <summary>This is GetCurrent3dAcGsView, a member of class Manager.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.ObtainAcGsView(System.Int32,Autodesk.AutoCAD.GraphicsSystem.KernelDescriptor)">
            <summary>Returns the Graphics System view.</summary>
            <param name="viewportNumber"> Input viewport number</param>
            <param name="createIfNone"> Input true if the graphics system associated with the viewport ought to be created if it does not exist</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.GetGsModel(Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode,System.Int32,System.Int32)">
            <summary>Gets corresponding Model according to mode, subDrawingMode and viewportNumber.</summary>
            <param name="mode"> Input drawing mode</param>
            <param name="subDrawingMode"> Input the sub drawing mode of specified drawing mode</param>
            <param name="viewportNumber"> Input viewport identification number (this is the same type of number returned by the CVPORT system variable)</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.GetOffScreenDevice(Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel)">
            <summary>Gets an offscreen device for the specified kernel. An offscreen device is created if none exists and cached for subsequent use. Currently, only supports the k3DRapidRTRendering kernel.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.GetOffScreenView(Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel,Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo)">
            <summary>Gets an offscreen view for the specified kernel. The view is connectd to the offscreen device. It is created on demand and cached, however its lifetime is ephemeral and not guaranteed past the next call to this function with different AcGsClientViewInfo parameters. Currently only supports the k3DRapidRTRendering kernel.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.AcquireGraphicsKernel(Autodesk.AutoCAD.GraphicsSystem.KernelDescriptor)">
            <summary>The Graphics Kernel is a descriptor of the underlying graphics system. Each kernel has its own set of capabilities, and AutoCAD will pick the appropriate kernel to use based on the requested capabilities. Graphics Kernels are reference counted, so be sure to call releaseGraphicsKernel() when you are done with the kernel.</summary>
            <param name="desc"> A descriptor defining the required capabilities of the kernel.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.Manager.ReleaseGraphicsKernel(Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel)">
            <summary>Removes a reference to the specified graphics kernel.</summary>
            <param name="kernel"> Graphics Kernel to release<</param>
        </member>
        <member name="E:Autodesk.AutoCAD.GraphicsSystem.Manager.ViewWasCreated">
            <summary>This notification informs the reactor that the specified view has just been created.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.GraphicsSystem.Manager.ViewToBeDestroyed">
            <summary>This notification informs the reactor that the specified view is about to be destroyed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.GraphicsSystem.Manager.ViewToBeUpdated">
            <summary>This notification informs the reactor that the View is just about to be updated.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.GraphicsSystem.Manager.ViewWasUpdated">
            <summary>This notification informs the reactor that the View has been updated.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.GraphicsSystem.Manager.GsToBeUnloaded">
            <summary>This notification informs the reactor that the GS is about to be unloaded.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.GraphicsSystem.Manager.ConfigWasModified">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.Manager.DeviceIndependentDisplaySize">
            <summary>This is DeviceIndependentDisplaySize, a member of class Manager.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentDestroyedEventArgs">
            <summary>
This class provides data for the DocumentDestroyed event of the DocumentCollection class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentDestroyedEventArgs.FileName">
            <summary>Accesses the name of the document that was destroyed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentActivationChangedEventArgs">
            <summary>
This class provides data for the DocumentActivationChanged event of the DocumentCollection class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentActivationChangedEventArgs.NewValue">
            <summary>Assesses if the document is activated.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeWillChangeEventArgs">
            <summary>
This class provides data for the DocumentLockModeWillChange event of the DocumentCollection class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeWillChangeEventArgs.Document">
            <summary>Wraps the AcApDocManager::document() ObjectARX function, which returns the document that the input database belongs to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeWillChangeEventArgs.MyNewMode">
            <summary>Accesses the new lock mode being requested.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeWillChangeEventArgs.MyCurrentMode">
            <summary>Accesses the current locks that this fiber has on the document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeWillChangeEventArgs.CurrentMode">
            <summary>Accesses the current lock mode of the document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeWillChangeEventArgs.GlobalCommandName">
            <summary>Accesses the name of the command that is requesting the change.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangeVetoedEventArgs">
            <summary>
This class provides data for the DocumentLockModeChangeVetoed event of the DocumentCollection class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangeVetoedEventArgs.Document">
            <summary>Wraps the AcApDocManager::document() ObjectARX function, which returns the document that the input database belongs to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangeVetoedEventArgs.GlobalCommandName">
            <summary>Accesses the name of the command that was requesting the change.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangedEventArgs">
            <summary>
This class provides data for the DocumentLockModeChanged event of the DocumentCollection class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangedEventArgs.Veto">
            <summary>This function can be called during a DocumentLockModeChanged callback if it is a callback for a lock request. The result will be that the lock request will be vetoed, which normally means that the command will be canceled before it can start. When this function is called, DocumentLockModeChangeVetoed will be sent.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangedEventArgs.Document">
            <summary>Wraps the AcApDocManager::document() ObjectARX function, which returns the document that the input database belongs to.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangedEventArgs.MyPreviousMode">
            <summary>Accesses the previous locks of this fiber.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangedEventArgs.MyCurrentMode">
            <summary>Accesses the current locks that this fiber has on the document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangedEventArgs.CurrentMode">
            <summary>Accesses the current lock mode of the document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentLockModeChangedEventArgs.GlobalCommandName">
            <summary>Accesses the name of the command that is requesting the change.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.CommandEventArgs">
            <summary>
This class provides data for various events of a Document.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.CommandEventArgs.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.CommandEventArgs.GlobalCommandName">
            <summary>Accesses the name of the command that raised this event.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.UnknownCommandEventArgs">
            <summary>
Provides data for the UnknownCommand event of the Document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.UnknownCommandEventArgs.GlobalCommandName">
            <summary>Accesses the name of the command that raised this event.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentBeginCloseEventArgs">
            <summary>
This class provides data for the BeginDocumentClose event of a Document.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.DocumentBeginCloseEventArgs.Veto">
            <summary>Vetoes the close process.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.LispWillStartEventArgs">
            <summary>
Provides data for the LispWillStart event of the Document.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.LispWillStartEventArgs.FirstLine">
            <summary>Accesses the first line of the lisp routine about to execute.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.SystemVariableChangedEventArgs">
            <summary>
Contains parameters related to system variable events.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.SystemVariableChangedEventArgs.Name">
            <summary>Accesses the system variable name being changed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.SystemVariableChangedEventArgs.Changed">
            <summary>Assesses if the system variable has been changed successfully.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.SystemVariableChangingEventArgs">
            <summary>
Contains parameters related to system variable events.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.SystemVariableChangingEventArgs.Name">
            <summary>Accesses the system variable name being changed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.LayoutSwitchedEventArgs">
            <summary>
This is class Autodesk.AutoCAD.ApplicationServices.LayoutSwitchedEventArgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.LayoutSwitchedEventArgs.NewLayout">
            <summary>This is NewLayout, a member of class LayoutSwitchedEventArgs.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.LayoutSwitchingEventArgs">
            <summary>
This is class Autodesk.AutoCAD.ApplicationServices.LayoutSwitchingEventArgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.LayoutSwitchingEventArgs.OldLayout">
            <summary>This is OldLayout, a member of class LayoutSwitchingEventArgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.LayoutSwitchingEventArgs.NewLayout">
            <summary>This is NewLayout, a member of class LayoutSwitchingEventArgs.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptPointOptionsEventArgs">
            <summary>
This class provides data for the PromptingForPoint event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptPointOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptDistanceOptionsEventArgs">
            <summary>
This class provides data for the PromptingForDistance event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDistanceOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptAngleOptionsEventArgs">
            <summary>
This class provides data for the PromptingForAngle event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptPointResultEventArgs">
            <summary>
This class provides data for the PromptedForPoint event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptPointResultEventArgs.Result">
            <summary>Gets the result of the selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptDoubleResultEventArgs">
            <summary>
This class provides data for the PromptedForDouble> event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDoubleResultEventArgs.Result">
            <summary>Gets the result of the selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptStringOptionsEventArgs">
            <summary>
This class provides data for the PromptingForString event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptStringOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptStringResultEventArgs">
            <summary>
This class provides data for the PromptedForString event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptStringResultEventArgs.Result">
            <summary>Gets the result of the selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptIntegerResultEventArgs">
            <summary>
This class provides data for the PromptingForInteger event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptIntegerResultEventArgs.Result">
            <summary>Gets the result of the selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptEntityResultEventArgs">
            <summary>
This class provides data for the PromptedForEntity event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptEntityResultEventArgs.Result">
            <summary>Gets the result of the selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptDoubleOptionsEventArgs">
            <summary>
This class provides data for the PromptingForDouble event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDoubleOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptIntegerOptionsEventArgs">
            <summary>
This class provides data for the PromptingForInteger event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptIntegerOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptEntityOptionsEventArgs">
            <summary>
This class provides data for the PromptingForEntity> event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptEntityOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptKeywordOptionsEventArgs">
            <summary>
This class provides data for the PromptingForKeyword> event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptKeywordOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptionsEventArgs">
            <summary>
This class provides data for the PromptingForNestedEntity> event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptNestedEntityResultEventArgs">
            <summary>
This class provides data for the PromptedForNestedEntity event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNestedEntityResultEventArgs.Result">
            <summary>Gets the result of the selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptSelectionOptionsEventArgs">
            <summary>
This class provides data for the PromptingForSelection event of the Editor class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptSelectionOptionsEventArgs.GetPoints">
            <summary>Gets the array of points associated with this selection operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptionsEventArgs.Options">
            <summary>Gets the input parameters of the prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptionsEventArgs.Filter">
            <summary>Gets the filer that is used with this selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs">
            <summary>
This class provides data for the SelectionAdded event of the Editor class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.Add(Autodesk.AutoCAD.EditorInput.SelectedObject)">
            <summary>To add entities to the sub SelectionSet and final SelectionSet array.</summary>
            <param name="value"> Input value to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.AddSubEntity(Autodesk.AutoCAD.EditorInput.SelectedSubObject)">
            <summary>Adds the sub entity to the selected subobject.</summary>
            <param name="value"> Input subentity to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.Remove(System.Int32)">
            <summary>Removes the object from the index value specified.</summary>
            <param name="index"> Input index of object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.RemoveSubEntity(System.Int32,System.Int32)">
            <summary>Removes the sub entity based on the specified entityIndex and subEntityIndex.</summary>
            <param name="entityIndex"> Input entity index</param>
            <param name="subEntityIndex"> Input subentity index</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.Highlight(System.Int32,Autodesk.AutoCAD.DatabaseServices.FullSubentityPath)">
            <summary>Highlights the selection based on the subSelectionIndex value and the full sub entity path.</summary>
            <param name="subSelectionIndex"> Input subselection index</param>
            <param name="path"> Input path to highlight</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.Flags">
            <summary>Gets the flags that provide further details about the selection in progress.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.Selection">
            <summary>Gets the objects currently selected.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionAddedEventArgs.AddedObjects">
            <summary>The objects added to the selection set.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionRemovedEventArgs">
            <summary>
This class provides data for the SelectionRemoved event of the Editor class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionRemovedEventArgs.Remove(System.Int32)">
            <summary>Removes the object at the specified index from the selection.</summary>
            <param name="index"> Input index of object to remove</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionRemovedEventArgs.RemoveSubentity(System.Int32,System.Int32)">
            <summary>Removes the subentity at subentityIndex, in the entity at the specified index, from this selection.</summary>
            <param name="index"> Input index of object to remove</param>
            <param name="subentityIndex"> Input subentity index</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionRemovedEventArgs.Flags">
            <summary>Gets the flags that provide further details about the selection in progress.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionRemovedEventArgs.Selection">
            <summary>Gets the objects currently selected.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionRemovedEventArgs.RemovedObjects">
            <summary>The objects removed from the selection set.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptForSelectionEndingEventArgs">
            <summary>
This class provides data for the PromptForSelectionEnding event of the Editor class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptForSelectionEndingEventArgs.Add(Autodesk.AutoCAD.EditorInput.SelectedObject)">
            <summary>Adds entities to the subSelection array.</summary>
            <param name="value"> Input object to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptForSelectionEndingEventArgs.AddSubEntity(Autodesk.AutoCAD.EditorInput.SelectedSubObject)">
            <summary>Adds sub entity to the selected subobject.</summary>
            <param name="value"> Input object to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptForSelectionEndingEventArgs.Remove(System.Int32)">
            <summary>Removes the object from the point specified by index.</summary>
            <param name="index"> Input index of item to removes</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptForSelectionEndingEventArgs.RemoveSubEntity(System.Int32,System.Int32)">
            <summary>Removes subentity from the point specified by entityIndex and subEntityIndex.</summary>
            <param name="entityIndex"> Input entity index of item to remove</param>
            <param name="subEntityIndex"> Input subEntity index of item to removes</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptForSelectionEndingEventArgs.Flags">
            <summary>Gets extra information about the selection in progress.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptForSelectionEndingEventArgs.Selection">
            <summary>Gets the SelectionSet that this prompt has obtained.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptForEntityEndingEventArgs">
            <summary>
This class provides data for the PromptForEntityEnding event of the Editor class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptForEntityEndingEventArgs.RemoveSelectedObject">
            <summary>Removes the selected object based on prompt selection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptForEntityEndingEventArgs.ReplaceSelectedObject(Autodesk.AutoCAD.EditorInput.SelectedObject)">
            <summary>Replaces the selected object with newValue.</summary>
            <param name="newValue"> Input new value</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptForEntityEndingEventArgs.Result">
            <summary>The result of the prompt operation.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptSelectionResultEventArgs">
            <summary>
This class provides data for the PromptedForSelection> event of the Editor class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionResultEventArgs.Result">
            <summary>Gets the result of the selection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.RolloverEventArgs">
            <summary></summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.RolloverEventArgs.Picked">
            <summary>Assesses the picked paths.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.RolloverEventArgs.Highlighted">
            <summary>Assesses the highlighted paths.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentLock">
            <summary>
This class represents a locked document. Objects of this class are created and returned to an application when it calls the Document.LockDocument method</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentSaveFormat">
            <summary>
Save formats possible for documents. Wraps the AcApDocument::SaveFormat enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentLockMode">
            <summary>
This .NET enumeration wraps the AcAp::DocLockMode ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Windows.Window">
            <summary>
This class represents an operating system window.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Windows.Window.FromHandle(System.IntPtr)">
            <summary>This is FromHandle, a member of class Window.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Windows.Window.Close">
            <summary>Closes an active window.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Windows.Window.Focus">
            <summary>This method sets focus to the window on which it is called. It returns true if it successfully sets the focus to that window, otherwise it returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Windows.Window.UnmanagedWindow">
            <summary>This is UnmanagedWindow, a member of class Window.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Windows.Window.Handle">
            <summary>Implements IWin32Window.Handle.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Windows.Window.WindowState">
            <summary>Assesses whether a window is restored, minimized, or maximized.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Windows.Window.Visible">
            <summary>Accesses the visible property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Windows.Window.DeviceIndependentLocation">
            <summary>Accesses the device-independent location value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Windows.Window.DeviceIndependentSize">
            <summary>Accesses the device-independent size value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Windows.Window.Text">
            <summary>Accesses the text in the active window.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.Keyword">
            <summary>
This class represents a keyword in a prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Keyword.IsReadOnly">
            <summary>Gets a value indicating whether the Keyword is read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Keyword.LocalName">
            <summary>Gets or sets the global name of the keyword. This is never displayed and can be used by programs to access keywords without knowing the local translation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Keyword.GlobalName">
            <summary>Gets or sets the global name of the keyword. This is never displayed and can be used by programs to access keywords without knowing the local translation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Keyword.DisplayName">
            <summary>Gets or sets the display name of the keyword. This is shown on the command line. Usually the same as localName.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Keyword.Visible">
            <summary>Gets or sets whether the keyword should be shown to the user.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.Keyword.Enabled">
            <summary>Gets or sets whether the keyword is currently enabled. When a a keyword is disabled it isn't accepted as user input.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.KeywordCollection">
            <summary>
This class holds a collection of Keyword objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.GetEnumerator">
            <summary>Returns an IEnumerator for the KeywordCollection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.Add(System.String)">
            <summary>Calls Add(globalName,globalName).</summary>
            <param name="globalName"> Input the global name of the keyword; this is never displayed, but can be used by programs to access keywords when the local translation is not known.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.Add(System.String,System.String)">
            <summary>Calls Add(globalName,localName,localName).</summary>
            <param name="globalName"> Input the global name of the keyword; this is never displayed, but can be used by programs to access keywords when the local translation is not known.</param>
            <param name="localName"> Input the local name of the keyword; the user enters the local name to specify the keyword.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.Add(System.String,System.String,System.String)">
            <summary>Calls Add(globalName, localName,displayName, true, true).</summary>
            <param name="globalName"> Input global name of the keyword; this is never displayed, but can be used by programs to access keywords when the local translation is not known.</param>
            <param name="localName"> Input local name of the keyword; the user enters the local name to specify the keyword.</param>
            <param name="displayName"> Input display name of the keyword; this is shown on the command line and is usually the same as local name.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.Add(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
Adds a keyword to the KeywordCollection class..</summary>
            <param name="globalName"> Input global name of the keyword; this is never displayed, but can be used by programs to access keywords when the local translation is not known.</param>
            <param name="localName"> Input local name of the keyword; the user enters the local name to specify the keyword.</param>
            <param name="displayName"> Input display name of the keyword; this is shown on the command line and is usually the same as local name.</param>
            <param name="visible"> Input indicates whether the keyword should be shows to the user.</param>
            <param name="enabled"> Input indicates whether the keyword is currently enabled; a disabled keyword is disabled is not accepted as user input.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.Clear">
            <summary>Removes all elements from the KeywordCollection class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.CopyTo(Autodesk.AutoCAD.EditorInput.Keyword[],System.Int32)">
            <summary>Copies the KeywordCollection class or a portion of it to a one-dimensional array.</summary>
            <param name="array"> Input the one-dimensional Array that is the destination of the elements copied from KeywordCollection. The array must have zero-based indexing.</param>
            <param name="index"> Input the zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.KeywordCollection.GetDisplayString(System.Boolean)">
            <summary>
Gets a string that represent the keywords in this collection as they should be displayed to the user.</summary>
            <param name="showNoDefault"> Input true if the default values ought not be shown</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.KeywordCollection.Count">
            <summary>Gets the number of elements actually contained in the KeywordCollection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.KeywordCollection.IsReadOnly">
            <summary>Gets a value indicating whether the KeywordCollection is read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.KeywordCollection.Default">
            <summary>The default keyword to be used when the user presses ENTER without any other input.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptResult">
            <summary>
This is the base class for classes that hold the result of a prompt operation.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptResult.Status">
            <summary>Gets the status result of the prompt operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptResult.StringResult">
            <summary>Gets the optional string result of the prompt operation. This value is set when Status is PromptStatus.Keyword or a prompt that returns a string as its primary result.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptStatus">
            <summary>
This .NET class wraps the Acad::PromptStatus ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptPointResult">
            <summary>
This class holds the result of a prompt that returns a point as its primary result.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptPointResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptPointResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptPointResult.Value">
            <summary>Gets the point that the user entered.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptDoubleResult">
            <summary>
This class holds the result of a prompt that returns a double as its primary result.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDoubleResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDoubleResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDoubleResult.Value">
            <summary>Gets the double that the user entered.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptIntegerResult">
            <summary>
This class holds the result of a prompt that returns an integer as its primary result.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptIntegerResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptIntegerResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptIntegerResult.Value">
            <summary>Gets the integer that the user entered.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptEntityResult">
            <summary>
This class holds the result of a prompt that returns an entity as its primary result.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptEntityResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptEntityResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptEntityResult.ObjectId">
            <summary>Gets the entity that the user picked.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptEntityResult.PickedPoint">
            <summary>Gets the point that was used to pick the entity.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptNestedEntityResult">
            <summary>
This class holds the result of a prompt that returns a nested entity as its primary result.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptNestedEntityResult.GetContainers">
            <summary>Gets an array of containers in which this entity is nested.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptNestedEntityResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptNestedEntityResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNestedEntityResult.Transform">
            <summary>Gets the transformation matrix that is applied to the picked object by its containers.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptFileNameResult">
            <summary>
This class contains the result returned from prompts that request a file name, such as the Editor.GetFileNameForSave() and Editor.GetFileNameForOpen() methods.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptFileNameResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptFileNameResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileNameResult.ReadOnly">
            <summary>Returns Boolean indicating whether filename result prompt is read-only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.Converter">
            <summary>
This class converts angular and distance numerical values to string values, and vice versa.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.DistanceToString(System.Double,Autodesk.AutoCAD.Runtime.DistanceUnitFormat,System.Int32)">
            <summary>Converts a distance to a string value using the given units and precision.</summary>
            <param name="value"> Input value to convert</param>
            <param name="units"> Input units to convert in</param>
            <param name="precision"> Input precision</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.DistanceToString(System.Double)">
            <summary>Calls the Converter.DistanceToString(Double value, DistanceUnitFormat units, Int32 precision) method using the current value of the LUPREC system variable, with a precision of -1.</summary>
            <param name="value"> Input value to convert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.StringToDistance(System.String,Autodesk.AutoCAD.Runtime.DistanceUnitFormat)">
            <summary>Converts a string to a distance value.</summary>
            <param name="value"> Input value to convert</param>
            <param name="units"> Input conversion units</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.StringToDistance(System.String)">
            <summary>Calls the Converter.StringToDistance(String value, DistanceUnitFormat units) method using the current DistanceUnitFormat for units.</summary>
            <param name="value"> Input value to convert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.AngleToString(System.Double,Autodesk.AutoCAD.Runtime.AngularUnitFormat,System.Int32)">
            <summary>Converts an angle to a string using the given units and precision.</summary>
            <param name="value"> Input value to convert</param>
            <param name="units"> Input units to convert in</param>
            <param name="precision"> Input precision</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.AngleToString(System.Double)">
            <summary>Calls the Converter.AngleToString(Double value, AngularUnitFormat units, Int32 precision) method using the current angular units format for units and the current value of the AUPREC system variable for precision.</summary>
            <param name="value"> Input value to convert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.StringToAngle(System.String,Autodesk.AutoCAD.Runtime.AngularUnitFormat)">
            <summary>Converts a string to an angle using the current units.</summary>
            <param name="value"> Input value to convert</param>
            <param name="units"> Input units to convert in</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.StringToAngle(System.String)">
            <summary>Calls the Converter.StringToAngle(String value, AngularUnitFormat units) using the current angular units format for units.</summary>
            <param name="value"> Input value to convert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.RawAngleToString(System.Double,Autodesk.AutoCAD.Runtime.AngularUnitFormat,System.Int32)">
            <summary>Converts a raw angle to a string using the given units and precision.</summary>
            <param name="value"> Input value to convert</param>
            <param name="units"> Input units to convert in</param>
            <param name="precision"> Input precision</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.RawAngleToString(System.Double)">
            <summary>Calls the Converter.RawAngleToString(Double value, AngularUnitFormat units, Int32 precision) method using the current angular units format for units.</summary>
            <param name="value"> Input value to convert</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.StringToRawAngle(System.String,Autodesk.AutoCAD.Runtime.AngularUnitFormat)">
            <summary>Converts a string to a raw angle using the current units.</summary>
            <param name="value"> Input value to convert</param>
            <param name="units"> Input units to convert in</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.Converter.StringToRawAngle(System.String)">
            <summary>Calls the Converter.StringToRawAngle(String value, AngularUnitFormat units) using the current angular units format for units.</summary>
            <param name="value"> Input value to convert</param>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.DistanceUnitFormat">
            <summary>
This enum indexes the available formats for expressing distance units.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.AngularUnitFormat">
            <summary>
This enum indexes the available formats for expressing angular units.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptOptions">
            <summary>
This is the base class for types that represent optional parameters for prompts.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptOptions.SetMessageAndKeywords(System.String,System.String)">
            <summary>This method sets the prompt message to the first part of the messageAndKeywords string and sets the display keywords to the latter part of the same string. The display keywords portion of messageAndKeywords must be surrounded by an opening square bracket ("[") at the beginning and a closing square bracket ("]") at the end. The keywords in this list must be delimited by a forward slash character ("/").</summary>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptOptions.IsReadOnly">
            <summary>Gets whether the PromptOptions is read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptOptions.Message">
            <summary>Gets or sets the prompt message to be displayed by the prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptOptions.AppendKeywordsToMessage">
            <summary>Returns the AppendKeywordsToMessage property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptOptions.Keywords">
            <summary>Gets the collection of keywords that the prompt understands and displays.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptEditorOptions">
            <summary>
This is the base class for command prompt options used in various types of data acquisition.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptEntityOptions">
            <summary>
This class represents optional parameters for a prompt for an entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptEntityOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptEntityOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptEntityOptions.SetRejectMessage(System.String)">
            <summary>This method sets message as the prompt that is posted if the type of a picked entity is not allowed for this selection.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptEntityOptions.AddAllowedClass(System.Type,System.Boolean)">
            <summary>
This method adds type to the internal list of classes allowed for the selection. If exactMatch is true, then only objects of the exact class type are allowed. Otherwise, objects of the specified type and of any derived types are allowed..</summary>
            <param name="type"> Input type of class</param>
            <param name="exactMatch"> Input boolean for exact type</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptEntityOptions.RemoveAllowedClass(System.Type)">
            <summary>This method removes the class indicated by type from the internal list of classes allowed for this selection.</summary>
            <param name="type"> Input type of class</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptEntityOptions.AllowNone">
            <summary>Gets or sets whether the prompt accepts ENTER as sole input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptEntityOptions.AllowObjectOnLockedLayer">
            <summary>Gets or sets whether the prompt allows object on locked layer entities.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptCornerOptions">
            <summary>
This class represents optional parameters for a corner prompt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptCornerOptions.#ctor(System.String,System.String,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptCornerOptions.#ctor(System.String,Autodesk.AutoCAD.Geometry.Point3d)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
            <param name="basePoint"> Input base point</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptCornerOptions.AllowNone">
            <summary>Gets or sets whether the prompt accepts ENTER as sole input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptCornerOptions.AllowArbitraryInput">
            <summary>Gets or sets whether the prompts accepts arbitrary input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptCornerOptions.BasePoint">
            <summary>Gets or sets the base point to be used by the prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptCornerOptions.UseDashedLine">
            <summary>Gets or sets whether a dashed "rubber band" line is to be drawn between the base point and the cursor's current location while prompting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptCornerOptions.LimitsChecked">
            <summary>Gets or sets whether limits checks are carried out on the input value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptPointOptions">
            <summary>
This class represents optional parameters for a prompt for point.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptPointOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptPointOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptPointOptions.UseBasePoint">
            <summary>Gets or sets whether the base point is to be used.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptNumericalOptions">
            <summary>
This is the base class for types that represent optional parameters for numerical prompts.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNumericalOptions.AllowNone">
            <summary>Gets or sets whether the prompt accepts ENTER as sole input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNumericalOptions.AllowArbitraryInput">
            <summary>Gets or sets whether the prompts accepts arbitrary input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNumericalOptions.AllowNegative">
            <summary>Gets or sets whether the prompt accepts negative valued input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNumericalOptions.AllowZero">
            <summary>Gets or sets whether the prompt accepts zero valued input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNumericalOptions.UseDefaultValue">
            <summary>Gets or sets whether the prompt should use the default value when the user presses ENTER without any other input. The property allowing client code to set the default value is declared by derived classes.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptIntegerOptions">
            <summary>
This class represents optional parameters for a prompt for an integer.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptIntegerOptions.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
            <param name="lowerLimit"> Input lower limit</param>
            <param name="upperLimit"> Input upper limit</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptIntegerOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptIntegerOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptIntegerOptions.DefaultValue">
            <summary>The default value to be used when the user presses ENTER without any other input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptIntegerOptions.LowerLimit">
            <summary>Returns the lower limit integer value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptIntegerOptions.UpperLimit">
            <summary>Returns the lower limit integer value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptDoubleOptions">
            <summary>
This class represents optional parameters for a prompt for a double.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDoubleOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input prompt message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDoubleOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDoubleOptions.DefaultValue">
            <summary>The default value to be used when the user presses ENTER without any other input.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions">
            <summary>
This class represents optional parameters for a distance prompt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions.BasePoint">
            <summary>Gets or sets the base point to be used by the prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions.UseBasePoint">
            <summary>Gets or sets whether tthe base point is to be used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions.UseDashedLine">
            <summary>Gets or sets whether a dashed "rubber band" line is to be drawn between the base point and the cursor's current location while prompting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions.Only2d">
            <summary>Gets or sets whether the distance returned should be measured as a 2D projection to the UCS.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDistanceOptions.DefaultValue">
            <summary>The default value to be used when the user presses ENTER without any other input.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptions">
            <summary>
This class represents optional parameters for a prompt for a nested entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptions.AllowNone">
            <summary>Gets or sets whether the prompt accepts ENTER as sole input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptions.NonInteractivePickPoint">
            <summary>Gets or sets the value for a non-interactive pick point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptNestedEntityOptions.UseNonInteractivePickPoint">
            <summary>Gets or sets whether the prompt should attempt a non-interactive pick.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptKeywordOptions">
            <summary>
This class represents optional parameters for a prompt for a keyword.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptKeywordOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptKeywordOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptKeywordOptions.AllowNone">
            <summary>Gets or sets whether the prompt accepts ENTER as sole input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptKeywordOptions.AllowArbitraryInput">
            <summary>Gets or sets whether the prompts accepts arbitrary input.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptAngleOptions">
            <summary>
This class represents optional parameters for a prompt for an angle.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.AllowNone">
            <summary>Gets or sets whether the prompt accepts ENTER as sole input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.AllowArbitraryInput">
            <summary>Gets or sets whether the prompts accepts arbitrary input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.AllowZero">
            <summary>Gets or sets whether the prompt accepts zero valued input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.BasePoint">
            <summary>Gets or sets the base point to be used by the prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.UseBasePoint">
            <summary>Gets or sets whether the base point is to be used.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.UseDashedLine">
            <summary>Gets or sets whether a dashed "rubber band" line is to be drawn between the base point and the cursor's current location while prompting.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.DefaultValue">
            <summary>The default value to be used when the user presses ENTER without any other input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.UseDefaultValue">
            <summary>Gets or sets whether the prompt should use the default value when the user presses ENTER without any other input. The property allowing client code to set the default value is declared by derived classes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptAngleOptions.UseAngleBase">
            <summary>Gets or sets whether the base angle value is used.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptStringOptions">
            <summary>
This class represents optional parameters for a prompt for a string.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptStringOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptStringOptions.AllowSpaces">
            <summary>Gets or sets whether the prompt should allow spaces.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptStringOptions.DefaultValue">
            <summary>Returns the DefaultValue property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptStringOptions.UseDefaultValue">
            <summary>Returns the UseDefaultValue property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptFileOptions">
            <summary>
This is a base class for the File dialog options.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.Message">
            <summary>Returns the message prompt string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.DialogCaption">
            <summary>Returns the dialog caption string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.DialogName">
            <summary>Returns the dialog name string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.Filter">
            <summary>Returns the filter string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.FilterIndex">
            <summary>Returns the index point of filter.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.InitialFileName">
            <summary>Returns the initial file name string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.InitialDirectory">
            <summary>Return the initial directory string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.PreferCommandLine">
            <summary>Returns Boolean indicating whether command line is given the first preference.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptFileOptions.AllowUrls">
            <summary>Returns true if urls are allowed in the prompt options.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptOpenFileOptions">
            <summary>
This class contains file dialog configuration options that are passed to the Editor.GetFileNameForOpen()> method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptOpenFileOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptOpenFileOptions.SearchPath">
            <summary>Gets or sets whether the prompt allows search path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptOpenFileOptions.TransferRemoteFiles">
            <summary>Gets or sets whether the prompt allows transfer of remote files.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptSaveFileOptions">
            <summary>
This class contains file dialog configuration options that are passed to the Editor.GetFileNameForSave() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptSaveFileOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSaveFileOptions.DeriveInitialFilenameFromDrawingName">
            <summary>Accesses if the derivation of the initial filename is is from the drawing name.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSaveFileOptions.ForceOverwriteWarningForScriptsAndLisp">
            <summary>Accesses if the overwrite warning prompt ought to be displayed, even when the command is run from LISP or a script. Otherwise, overwrite warning prompts are generally suppressed under these conditions.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSaveFileOptions.DisplaySaveOptionsMenuItem">
            <summary>Assesses if the save options ought to be displayed from a menu item.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SamplerStatus">
            <summary>
This enumeration represents the outcome of a sampling prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptDragOptions">
            <summary>
This class lets applications define custom options to be displayed at the command line before a dragging operation.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDragOptions.#ctor(Autodesk.AutoCAD.EditorInput.SelectionSet,System.String,System.String,Autodesk.AutoCAD.EditorInput.DragCallback)">
            <summary>Constructor.</summary>
            <param name="selection"> Input selection set</param>
            <param name="messageAndKeywords"> Input message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
            <param name="callback"> Input drag callback</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptDragOptions.#ctor(Autodesk.AutoCAD.EditorInput.SelectionSet,System.String,Autodesk.AutoCAD.EditorInput.DragCallback)">
            <summary>Constructor.</summary>
            <param name="selection"> Input selection set</param>
            <param name="message"> Input prompt message</param>
            <param name="callback"> Input drag callback</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDragOptions.AllowNone">
            <summary>Gets or sets whether the prompt accepts ENTER as sole input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDragOptions.AllowArbitraryInput">
            <summary>Gets or sets whether the prompts accepts arbitrary input.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDragOptions.Selection">
            <summary>Returns the selection from the SelectionSet selected by the user.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDragOptions.Callback">
            <summary>Returns the callback property for the prompt option.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptDragOptions.Cursor">
            <summary>Returns the cursor type used while dragging.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionSet">
            <summary>
This class is a collection of objects typically selected by the user.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionSet.CopyTo(Autodesk.AutoCAD.EditorInput.SelectedObject[],System.Int32)">
            <summary>Copies the SelectionSet or a portion of it to a one-dimensional array.</summary>
            <param name="array"> Input the one-dimensional array that is the destination of the elements copied from SelectionSet. The array must have zero-based indexing</param>
            <param name="index"> Input the zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionSet.FromObjectIds(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Creates a new selection set using the object IDs in ids.</summary>
            <param name="ids"> Input array of IDs to copy</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionSet.GetObjectIds">
            <summary>Gets an array of object IDs representing the selected objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionSet.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionSet.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionSet.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionSet.Count">
            <summary>Gets the number of elements actually contained in the SelectionSet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionSet.SyncRoot">
            <summary>Accesses the synchronized root.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionSet.IsSynchronized">
            <summary>Assesses if the selection set is synchronized.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.DragCursor">
            <summary>
This enum lists the cursor types that may be used while dragging.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionTextInputEventArgs">
            <summary>
This class provides data for UnknownInput and KeywordInput events of a PromptSelectionOptions object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionTextInputEventArgs.SetErrorMessage(System.String)">
            <summary>Sets the error message that the selection prompt should display to the user.</summary>
            <param name="errorMessage"> Input the error message text.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionTextInputEventArgs.AddObjects(Autodesk.AutoCAD.DatabaseServices.ObjectId[])">
            <summary>Adds objects to the selection set.</summary>
            <param name="ids"> Input an array of object IDs to be added to the selection set.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionTextInputEventArgs.Input">
            <summary>Gets the input that the user entered in the form of string.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions">
            <summary>
This class provides optional parameters to a selection set prompt.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.SetKeywords(System.String,System.String)">
            <summary>This method sets the display keywords to keywords and the global keywords to globalKeywords. The display keywords in keywords must be surrounded by an opening square bracket ("[") at the beginning and a closing square bracket ("]") at the end. The keywords in this list must be delimited by a forward slash character ("/").</summary>
            <param name="keywords"> Input keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.UnknownInput">
            <summary>Occurs when the user types arbitrary input in response to a selection prompt.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.KeywordInput">
            <summary>Occurs when the user types a keyword in response to a selection prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.MessageForAdding">
            <summary>Sets the :$ mode of acedSSGet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.MessageForRemoval">
            <summary>Sets the :$ mode.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.SinglePickInSpace">
            <summary>Sets the :A mode of acedSSGet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.AllowDuplicates">
            <summary>Sets the :D mode of acedSSGet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.SelectEverythingInAperture">
            <summary>Sets the :E mode of acedSSGet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.Keywords">
            <summary>Sets the :K mode of acedSSGet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.PrepareOptionalDetails">
            <summary>Sets the :N mode of acedSSGet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.SingleOnly">
            <summary>Sets the :S mode of acedSSGet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.AllowSubSelections">
            <summary>Returns true of subselections are allowed in prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.ForceSubSelections">
            <summary>True if subselection is forced to occur when selecting prompt options.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.RejectObjectsOnLockedLayers">
            <summary>Returns the RejectObjectsOnLockedLayers property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.RejectObjectsFromNonCurrentSpace">
            <summary>Returns the RejectObjectsFromNonCurrentSpace property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionOptions.RejectPaperspaceViewport">
            <summary>Returns the RejectPaperspaceViewport property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PromptSelectionResult">
            <summary>
This class represents the result of a prompt for a selection of objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptSelectionResult.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PromptSelectionResult.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionResult.Status">
            <summary>Gets the status result of the prompt operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PromptSelectionResult.Value">
            <summary>Gets the SelectionSet that the user selected.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PickPointDescriptor">
            <summary>
This class describes the shape of a pick point.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.#ctor(Autodesk.AutoCAD.EditorInput.PickPointKind,Autodesk.AutoCAD.Geometry.Point3d,Autodesk.AutoCAD.Geometry.Vector3d)">
            <summary>Constructor.</summary>
            <param name="kind"> Input the type of pick point</param>
            <param name="pointOnLine"> Input the point on the line to pick</param>
            <param name="direction"> Input the direction of the pick</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.IsEqualTo(Autodesk.AutoCAD.EditorInput.PickPointDescriptor)">
            <summary>This method compares the PointOnLine and Direction properties of a to those of this object, using Global tolerance.</summary>
            <param name="a"> Input object to compare</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.IsEqualTo(Autodesk.AutoCAD.EditorInput.PickPointDescriptor,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method compares the PointOnLine and Direction properties of a to those of this object, using the tolerance specified by tolerance.</summary>
            <param name="a"> Input object to compare</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.op_Inequality(Autodesk.AutoCAD.EditorInput.PickPointDescriptor,Autodesk.AutoCAD.EditorInput.PickPointDescriptor)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.op_Equality(Autodesk.AutoCAD.EditorInput.PickPointDescriptor,Autodesk.AutoCAD.EditorInput.PickPointDescriptor)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.Kind">
            <summary>Gets the general "shape" of the pick point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.PointOnLine">
            <summary>Gets a point on the line, ray or line segment that represents the pick point. For a ray or line segment "shapes" this is the first point.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PickPointDescriptor.Direction">
            <summary>Gets a vector that describes the direction of the infinite line or the direction and length for ray and line segment "shapes".</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PickPointKind">
            <summary>
This enumeration describes the possible shapes of a pick point.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionDetails">
            <summary>
This class represents additional details about the selection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionDetails.GetContainers">
            <summary>Returns an array of object IDs representing the containers of this nested entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionDetails.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectionDetails.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectionDetails.Transform">
            <summary>Gets the transformation matrix that is applied to the picked object by its containers.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectedSubObject">
            <summary>
This is the base for classes that describe subobjects selected through various techniques. It defines the basic data that describes a selected subobject: full subentity path, GS marker, and selection method, as well as optional details.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectedSubObject.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr)">
            <summary>Constructor.</summary>
            <param name="path"> Input object path</param>
            <param name="method"> Input selection method</param>
            <param name="gsMarker"> Input GS marker</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectedSubObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectedSubObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedSubObject.FullSubentityPath">
            <summary>Returns the full subentity path of the selected sub object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedSubObject.SelectionMethod">
            <summary>Returns the selection method to select the sub object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedSubObject.OptionalDetails">
            <summary>Returns the optional details of the selected sub object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedSubObject.GraphicsSystemMarker">
            <summary>Returns the GS Marker of the selected sub object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionMethod">
            <summary>
This enumeration denotes various AutoCAD object selection methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PickPointSelectedSubObject">
            <summary>
This class encapsulates a subobject that is selected by the pick point selection method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointSelectedSubObject.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr,Autodesk.AutoCAD.EditorInput.PickPointDescriptor)">
            <summary>Constructor.</summary>
            <param name="path"> Input subentity path</param>
            <param name="method"> Input method of selection</param>
            <param name="gsMarker"> Input GS markers</param>
            <param name="descriptor"> Input pick point descriptor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointSelectedSubObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointSelectedSubObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PickPointSelectedSubObject.PickPoint">
            <summary>Gets the pick point that was used to select the subobject.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.FenceSelectedSubObject">
            <summary>
This class encapsulates a subobject that is selected by the fence selection method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedSubObject.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr,Autodesk.AutoCAD.EditorInput.PickPointDescriptor[])">
            <summary>Constructor.</summary>
            <param name="path"> Input subentitiy path</param>
            <param name="method"> Input selection method</param>
            <param name="gsMarker"> Input GS marker</param>
            <param name="descriptors"> Input pick points</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedSubObject.GetIntersectionPoints">
            <summary>Returns the point descriptor array.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedSubObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedSubObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedSubObject">
            <summary>
This class encapsulates a subobject that is selected by the crossing or window selection method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedSubObject.#ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr)">
            <summary>Constructor.</summary>
            <param name="path"> Input path of object</param>
            <param name="method"> Input method of selection</param>
            <param name="gsMarker"> Input any GS markers</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedSubObject.GetPickPoints">
            <summary>Returns the list of pick points used to select the subobject.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedSubObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedSubObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectedObject">
            <summary>
This is the base class for a selected object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectedObject.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr)">
            <summary>Constructor.</summary>
            <param name="method"> Input selection method</param>
            <param name="gsMarker"> Input GS marker</param>
            <param name="path"> Input object path</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectedObject.GetSubentities">
            <summary>Returns the subentities of the selected object in a SelectedSubObject array.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectedObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.SelectedObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedObject.ObjectId">
            <summary>Gets the object ID of this selected object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedObject.SelectionMethod">
            <summary>Gets a value that describes how the object was selected.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedObject.GraphicsSystemMarker">
            <summary>Gets a value that describes what part of the object was selected.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.SelectedObject.OptionalDetails">
            <summary>Gets an object describing the selection details useful for nested objects.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PickPointSelectedObject">
            <summary>
This class describes an object that was selected by a single pick.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointSelectedObject.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr,Autodesk.AutoCAD.EditorInput.PickPointDescriptor)">
            <summary>Constructor.</summary>
            <param name="id"> Input object ID</param>
            <param name="method"> Input method of selection</param>
            <param name="gsMarker"> Input GS markers</param>
            <param name="descriptor"> Input pick point descriptor</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointSelectedObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PickPointSelectedObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PickPointSelectedObject.PickPoint">
            <summary>Gets the pick point that was used to select the object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.FenceSelectedObject">
            <summary>
This class describes an object that is selected by fence selection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedObject.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr,Autodesk.AutoCAD.EditorInput.PickPointDescriptor[])">
            <summary>Constructor.</summary>
            <param name="id"> Input object to fence</param>
            <param name="method"> Input selection method</param>
            <param name="gsMarker"> Input GS markers</param>
            <param name="descriptors"> Input pick point descriptors</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedObject.GetIntersectionPoints">
            <summary>Gets an array of pick points used to select the object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.FenceSelectedObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedObject">
            <summary>
This class describes an object that was selected by a window or window polygon selection. The selection window may or may not be a crossing window.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedObject.#ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.EditorInput.SelectionMethod,System.IntPtr)">
            <summary>Constructor.</summary>
            <param name="id"> Input ID of crossing object</param>
            <param name="method"> Input method to select object</param>
            <param name="gsMarker"> Input any GS markers</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedObject.GetPickPoints">
            <summary>Gets an array of pick points used to select the object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedObject.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input culture specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CrossingOrWindowSelectedObject.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionFlags">
            <summary>
This .NET class wraps the AcEdSSGet::AcEdSSGetFlags ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection">
            <summary>
This .NET class wraps the AcPlDSDEntries ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.#ctor">
            <summary>Copies sheet entries from the DSD file.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.CopyTo(Autodesk.AutoCAD.PlottingServices.DsdEntry[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Input target array.</param>
            <param name="index"> Input zero-based index from where the copy begins.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.Add(Autodesk.AutoCAD.PlottingServices.DsdEntry)">
            <summary>Adds the object represented by value to this collection. Returns the zero-based index of the newly added collection item.</summary>
            <param name="value"> Input object to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.Insert(System.Int32,Autodesk.AutoCAD.PlottingServices.DsdEntry)">
            <summary>Inserts value at position index in the collection.</summary>
            <param name="index"> Input location to where the value will be inserted.</param>
            <param name="value"> Input object to be inserted.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.RemoveAt(System.Int32)">
            <summary>Removes the object whose index in the collection is index.</summary>
            <param name="index"> Input. Index of entry to remove.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdEntryCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.DsdEntry">
            <summary>
This .NET class wraps the AcPlDSDEntry ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntry.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdEntry.Copy">
            <summary>Description.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdEntry.DwgName">
            <summary>Returns the name of the DWG file that holds the sheet to be published.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdEntry.Layout">
            <summary>Returns the name of the layout in the DWG file returned by a call to dwgName().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdEntry.Title">
            <summary>Returns the title of the DSD entry. The title is a unique section name for a DSD entry in the DSD configuration file. If two sheet entries have the same title, they will overwrite each other.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdEntry.Nps">
            <summary>Returns the named page setup string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdEntry.NpsSourceDwg">
            <summary>Returns the path for the drawing file that contains the named page setup, which is identified by what the NPS() method Returns.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdEntry.OriginalSheetPath">
            <summary>Path of the original sheet to be published.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.Dwf3dOptions">
            <summary>
This .NET class wraps the AcPl3DDwfOptions ObjectARX struct.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.Dwf3dOptions.GroupByXrefHierarchy">
            <summary>Groups the DWF 3d object by Xref hierarchy.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.Dwf3dOptions.PublishWithMaterials">
            <summary>Publishes the DWF 3d object with materials.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.DsdData">
            <summary>
This .NET class wraps the AcPlDSDData ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdData.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdData.GetDsdEntryCollection">
            <summary>Gets the array of sheets configured for publishing, which is stored in the DSD file.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdData.SetDsdEntryCollection(Autodesk.AutoCAD.PlottingServices.DsdEntryCollection)">
            <summary>Sets the array of sheets configured for publishing, which is stored in the DSD file.</summary>
            <param name="entries"> Input array of sheet entries.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdData.SetUnrecognizedData(System.String,System.String)">
            <summary>When a DSD file is read, sections that are not understood are collected as "unrecognized" data. This method allows users of DSDData objects to store an array of customized DSD sections and data.</summary>
            <param name="sectionName"> Input customized section name.</param>
            <param name="sectionData"> Input customized section data.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdData.ReadDsd(System.String)">
            <summary>Reads a DSD file.</summary>
            <param name="fileName"> Input path and file name of DSD file.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdData.WriteDsd(System.String)">
            <summary>Writes information to a DSD file.</summary>
            <param name="fileName"> Input path and file name of DSD file.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.DsdData.Copy">
            <summary>Copies sheet data from the DSD file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.ProjectPath">
            <summary>Returns the output folder name. This field is relevant only for plotting to a file. The field is saved in the DSD file and represents the output folder path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.DestinationName">
            <summary>Gives the output DWF file path. This field is saved in the DSD file. When plotting to an output DWF/Multi-DWF, this field contains the output file path.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.SheetType">
            <summary>Returns the sheet type field, which is stored in the DSD file and indicates whether the publish operation is configured for multi-sheet DWF plotting, for individual (per-sheet) DWF plotting, or for plotting to the original device configured in the sheet. A SheetType enum value is applicable only at the Data level, and not at the individual sheet entry level.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.Password">
            <summary>Returns the password or phrase used to protect the contents of the output DWF file. This field is saved in the DSD file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.UnrecognizedDataSectionNames">
            <summary>Allows users of Data objects to store a collection of customized DSD sections and data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.UnrecognizedDataSections">
            <summary>Allows users of Data objects to store a collection of customized DSD sections and data.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.MajorVersion">
            <summary>Returns the major version number of the DSD file (if one was already read using the readDSD() method).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.MinorVersion">
            <summary>Returns the minor version number of the DSD file (if one was already read using the readDSD() method).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.SheetSetName">
            <summary>Returns the sheet set name, which will be valid only if a sheet set is being published. This field is stored as part of the DSD file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.NoOfCopies">
            <summary>Returns the quantity of each sheet or layout to be plotted. This field is stored as part of the DSD file. The number of copies is relevant only when not publishing to a multi-sheet DWF file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.IsSheetSet">
            <summary>Returns a Boolean indicating whether the DSD data is sheet set information. This field is stored in the DSD file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.IsHomogeneous">
            <summary>Returns a Boolean indicating whether all the sheets in the sheet set are homogenous (in other words, are plotting to similar devices).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.PlotStampOn">
            <summary>Returns a Boolean indicating whether plot stamping is on.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.SelectionSetName">
            <summary>Returns the name of a named selection set. This field is valid only if plotting a sheet set or a selection set from the Sheet Set Manager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.CategoryName">
            <summary>Allows to group a publish job into individual categories. This field is serialized in the DSD file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.LogFilePath">
            <summary>Returns the path to the file to which the publish operation logs errors. This field is serialized in the DSD file.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.DsdData.Dwf3dOptions">
            <summary>Returns the 3D DWF options object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.SheetType">
            <summary>
This .NET enum wraps the AcPlDSDEntry::SheetType ObjectARX enum. It represents the type of sheet (multi sheet or single sheet).</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.MediaBounds">
            <summary>
This class provides properties that describe the boundaries of the media in terms of page size, lower left printable area, and upper right printable area.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.#ctor(Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d,Autodesk.AutoCAD.Geometry.Point2d)">
            <summary>Constructs the media bounds with given corner points.</summary>
            <param name="pageSize"> Input size of page</param>
            <param name="lowerLeftPrintableArea"> Input lower left printable area</param>
            <param name="upperRightPrintableArea"> Input upper right printable area</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.ToString">
            <summary>Returns an equivalent string representation of this object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.ToString(System.IFormatProvider)">
            <summary>Returns an equivalent string representation of this object, in the culture-specific format defined by provider.</summary>
            <param name="provider"> Input for culture-specific format</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.Equals(System.Object)">
            <summary>Returns true if this object is identical to the argument object.</summary>
            <param name="obj"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.IsEqualTo(Autodesk.AutoCAD.PlottingServices.MediaBounds)">
            <summary>This method calls MediaBounds.IsEqualTo(MediaBounds a, Tolerance tolerance) with tolerance set to Global.</summary>
            <param name="a"> Input object to compare against</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.IsEqualTo(Autodesk.AutoCAD.PlottingServices.MediaBounds,Autodesk.AutoCAD.Geometry.Tolerance)">
            <summary>This method tests a for equality to this object by comparing LowerLeftPrintableArea, PageSize, and UpperRightPrintableArea properties. All properties must match within the tolerance range specified by tolerance.</summary>
            <param name="a"> Input object to compare against</param>
            <param name="tolerance"> Input tolerance value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.op_Inequality(Autodesk.AutoCAD.PlottingServices.MediaBounds,Autodesk.AutoCAD.PlottingServices.MediaBounds)">
            <summary>Returns true if a does not equal b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.op_Equality(Autodesk.AutoCAD.PlottingServices.MediaBounds,Autodesk.AutoCAD.PlottingServices.MediaBounds)">
            <summary>Returns true if a equals b.</summary>
            <param name="a"> Left operand</param>
            <param name="b"> Right operand</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.MediaBounds.GetHashCode">
            <summary>Returns the hash code for this object. See the Microsoft .NET API documentation for details.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.MediaBounds.PageSize">
            <summary>Returns the PageSize property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.MediaBounds.LowerLeftPrintableArea">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.MediaBounds.UpperRightPrintableArea">
            <summary>Returns the UpperRightPrintableArea property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotConfig">
            <summary>
This .NET class wraps the AcPlPlotConfig ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfig.SaveToPC3(System.String)">
            <summary>Saves the current plotter configuration to the specified PC3 file name. This method saves the PC3 file, but does not load the file into memory. Any operation performed on the PlotConfig object will operate on the old configuration.</summary>
            <param name="name"> Input PC3 file name.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfig.RefreshMediaNameList">
            <summary>Refreshes the media information for the current device or PC3 file.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfig.GetMediaBounds(System.String)">
            <summary>Returns the media bounds (page size and printable bounds) corresponding to a canonical media name.</summary>
            <param name="canonicalMediaName"> Input name of the driver for the device or PC3 file.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfig.GetLocalMediaName(System.String)">
            <summary>Returns the localized media name for the canonical media name that is passed in.</summary>
            <param name="canonicalMediaName"> Input canonical name of the media size whose localized name is being requested.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.DriverName">
            <summary>Returns DriverName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.LocationName">
            <summary>Returns the localized media name for the canonical media name that is passed in.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.Comment">
            <summary>Returns a list of media sizes that are supported for the current device or the PC3 files.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.PortName">
            <summary>Returns the PortName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.ServerName">
            <summary>Returns the ServerName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.TagLine">
            <summary>Returns the TagLine property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.DeviceName">
            <summary>Returns the device name or PC3 file name. This function always returns the file name portion for a PC3 file. To get the full path name for a PC3 file, use FullPath. This function returns the entire UNC path name for system printers.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.FullPath">
            <summary>Returns the current device or PC3 file name. This function always returns the full path name for PC3 files. It returns the entire UNC path name for system printers.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.CanonicalMediaNames">
            <summary>Returns a list of media sizes that are supported for the current device or the PC3 files.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.IsPlotToFile">
            <summary>Returns true if the device is currently configured to plot to a file. Otherwise, Returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.DefaultFileExtension">
            <summary>Returns a character string containing the default file extensions for plot files created by this device (for example, ".DWF"). The leading "." is always included in the returned string.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfig.PlotToFileCapability">
            <summary>Returns the device's inherent capabilities for plotting to a file. See the PlotToFileCapability enum for possible return values.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotToFileCapability">
            <summary>
This .NET enum wraps the PlotToFileCapability ObjectARX enum. It describes the ability of an PlotConfig object to plot to a file.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotProgress">
            <summary>
This .NET class wraps the AcPlPlotProgress ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotProgress.Heartbeat">
            <summary>Called periodically by the plotting framework during PlotEngine.BeginGenerateGraphics() and PlotEngine.EndGenerateGraphics() to allow the plot progress dialog implementation to be responsive to user input messages while regenerating the drawing for the plot. For example, progress dialogs running the same thread as the main AutoCAD window may want to have a message pump in their implementation of this method to pump user interface messages sent to their dialog implementation during the regeneration process.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.IsPlotCancelled">
            <summary>Clients of the plot progress dialog (like the plot engine) call this function to decide whether to continue or stop the plot job.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.PlotCancelStatus">
            <summary>Clients of the plot progress dialog use this function to identify the cancel status of a plot job in a multi-sheet scenario.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.LowerPlotProgressRange">
            <summary>Sets the lower limit of the plot progress range in a multi-sheet scenario. Clients of the plot progress dialog usually specify the range within which the plot progress updates using this method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.UpperPlotProgressRange">
            <summary>Sets the upper limit of the plot progress range in a multi-sheet scenario. Clients of the plot progress dialog usually specify the range within which the plot progress updates using this method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.PlotProgressPos">
            <summary>Returns the current plot progress position, which typically falls within the plot progress range. Clients of the plot progress dialog use this function to get the update on the plot job progress in a multi-sheet scenario.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.IsSheetCancelled">
            <summary>Clients of the plot progress dialog (like the plot engine) call this function to decide whether to continue or stop plotting the current sheet.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.SheetCancelStatus">
            <summary>Clients of the plot progress dialog use this function to identify the cancel status of the sheet plot operation.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.LowerSheetProgressRange">
            <summary>Accesses the lower limit of the sheet progress range for a sheet to be plotted. Clients of the plot progress dialog usually specify the range within which sheet progress updates happen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.UpperSheetProgressRange">
            <summary>Sets the upper limit of the sheet progress range for a sheet to be plotted. Clients of the plot progress dialog usually specify the range within which sheet progress updates happen.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.SheetProgressPos">
            <summary>Returns the current sheet progress position, which typically falls within the sheet progress range. Clients of the plot progress dialog use this function to get the update on the sheet progress.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.IsVisible">
            <summary>Returns true if the plot progress dialog is visible; otherwise, returns false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgress.StatusMsgString">
            <summary>The plotting pipeline uses this method to return the status string of the sheet currently being plotted. The string retrieved by this process is usually the stage status of the current sheet.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotCancelStatus">
            <summary>
This .NET class wraps the PlotCancelStatus ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.SheetCancelStatus">
            <summary>
This .NET enum wraps the PlotProgress::SheetCancelStatus ObjectARX enum. It defines the sheet cancel states in a single-sheet plotting scenario.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog">
            <summary>
This .NET class wraps the AcPlPlotProgressDialog ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog.#ctor(System.Boolean,System.Int32,System.Boolean)">
            <summary>
Constructs a plot progress dialog with the AutoCAD frame window as the parent.</summary>
            <param name="isPreview"> Input true if the dialog is a preview</param>
            <param name="sheetCount"> Input the sheet count</param>
            <param name="showCancelSheetButton"> Input true to show the cancel sheet button</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog.OnBeginPlot">
            <summary>Indicates whether the begin plot notification was successful.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog.OnEndPlot">
            <summary>Indicates whether the end plot notification was successful.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog.OnBeginSheet">
            <summary>Indicates whether the begin sheet notification was successful.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog.OnEndSheet">
            <summary>Indicates whether the end sheet notification was successful.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog.Destroy">
            <summary>Destroys the dialog. Callers should free the memory associated with the dialog by calling this method instead of using the C++ delete operator.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotProgressDialog.IsSingleSheetPlot">
            <summary>Returns true if the plot progress dialog was created to handle single-sheet plots and previews.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotMessageIndex">
            <summary>
This enumeration wraps the AcPlPlotProgressDialog::PlotMSGIndex ObjectARX enum. It defines the UI aspects of the plot progress dialog.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotLogger">
            <summary>
This .NET class wraps the AcPlPlotLogger ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.StartJob">
            <summary>Indicates to the PlotLogger that the plot job has started. It is the responsibility of the plot application to call this method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.EndJob">
            <summary>Indicates to the PlotLogger that the entire job has been completed. It is the responsibility of the plot application to call this method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.StartSheet">
            <summary>Indicates to the PlotLogger that an individual sheet within a job has started. It is the responsibility of the plot application to call this method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.EndSheet">
            <summary>Indicates to the PlotLogger that an individual sheet within a job has been completed. It is the responsibility of the plot application to call this method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.LogTerminalError(System.String)">
            <summary>This method typically is called by the PlotLoggingErrorHandler. While a terminal error is assumed to end the plot job, EndSheet() and EndJob() should still be called, as appropriate.</summary>
            <param name="message"> Input formatted error string to be recorded in the log.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.LogAbortRetryIgnoreError(System.String)">
            <summary>This method typically is called by the PlotLoggingErrorHandler. While an abort error is assumed to end the plot job, EndSheet() and EndJob() should still be called, as appropriate.</summary>
            <param name="message"> Input formatted error string to be recorded in the log.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.LogSevereError(System.String)">
            <summary>This method typically is called by the PlotLoggingErrorHandler. While a severe error is assumed to end the plot job, EndSheet() and EndJob() should still be called, as appropriate.</summary>
            <param name="message"> Input formatted error string to be recorded in the log.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.LogError(System.String)">
            <summary>This method may be called directly by the application or by some part of the plot engine through error handlers.</summary>
            <param name="message"> Input formatted error string to be recorded in the log.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.LogWarning(System.String)">
            <summary>This method may be called directly by the application or by some part of the plot engine through error handlers.</summary>
            <param name="message"> Input formatted error string to be recorded in the log.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.LogMessage(System.String)">
            <summary>This method may be called directly by the application or by some part of the plot engine through error handlers.</summary>
            <param name="message"> Input formatted error string to be recorded in the log.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotLogger.LogInformation(System.String)">
            <summary>This method typically is called directly by the application.</summary>
            <param name="message"> Input formatted error string to be recorded in the log.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotLogger.ErrorHasHappenedInSheet">
            <summary>Indicates that an error occurred between the call to StartSheet() and the call to EndSheet().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotLogger.WarningHasHappenedInSheet">
            <summary>Indicates that a warning occurred between the call to startSheet() and the call to endSheet().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotLogger.ErrorHasHappenedInJob">
            <summary>Indicates that an error occurred between the call to StartJob() and the call to EndJob().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotLogger.WarningHasHappenedInJob">
            <summary>Indicates that a warning occurred between the call to StartJob() and the call to EndJob().</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.EPlotAttribute">
            <summary>
This class is a container for EPlot attributes.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotAttribute.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotAttribute.Ns">
            <summary>Returns the Ns property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotAttribute.NsUrl">
            <summary>Returns the NsUrl property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotAttribute.Name">
            <summary>Returns the Name property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotAttribute.Value">
            <summary>Returns the Value property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection">
            <summary>
This class contains a collection of Publishing.EPlotAttribute objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies the entire collection to another zero-based array.</summary>
            <param name="array"> Input target array.</param>
            <param name="index"> Input the zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection.Add(Autodesk.AutoCAD.Publishing.EPlotAttribute)">
            <summary>Adds this value to the attribute collection.</summary>
            <param name="value"> Input object to be added.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection.Clear">
            <summary>Deletes the attribute collection objects.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection.IsSynchronized">
            <summary>Returns true if the EPlotAttributes are synchronized, esle false.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection.SyncRoot">
            <summary>Returns SyncRoot property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotAttributeCollection.Count">
            <summary>Number of EPlotAttributes in the collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.EPlotProperty">
            <summary>
This .NET class corresponds to the AcDMMEPlotProperty ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotProperty.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotProperty.AddEplotAttribute(Autodesk.AutoCAD.Publishing.EPlotAttribute)">
            <summary>Adds a new XMLAttribute object to the internal vector of XML Attributes.</summary>
            <param name="att"> Input XML attribute object to be added to the XML attributes vector.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotProperty.AddEPlotAttribute(System.String,System.String,System.String,System.String)">
            <summary>Creates and adds a new XMLAttribute object to the internal vector of XML Attributes.</summary>
            <param name="ns"> Input namespace name.</param>
            <param name="nsUrl"> Input the attribute's namespace location.</param>
            <param name="attName"> Input attribute name.</param>
            <param name="attValue"> Input attribute value.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotProperty.Type">
            <summary>Returns the Type property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotProperty.Units">
            <summary>Returns the Units property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotProperty.Category">
            <summary>Returns the Category property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotProperty.Name">
            <summary>Returns the Name property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotProperty.Value">
            <summary>Returns the Value property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotProperty.Attributes">
            <summary>Accesses the Attributes property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection">
            <summary>
This class contains a collection of EPlotPropertyobjects. An EPlotPropertyCollection object is returned by the EPlotPropertyBag.Properties property.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Input target array.</param>
            <param name="index"> Input zero-based index from which the copying begins.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection.Add(Autodesk.AutoCAD.Publishing.EPlotProperty)">
            <summary>Adds an EPlotProperty object to this collection.</summary>
            <param name="value"> Input object to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection.Clear">
            <summary>Removes all objects from the collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection.IsSynchronized">
            <summary>Assesses if the object is synchronized.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection.SyncRoot">
            <summary>Accesses the synchronized root.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.EPlotPropertyBag">
            <summary>
This .NET class corresponds to the AcDMMEPlotProperties ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotPropertyBag.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyBag.Id">
            <summary>Returns the Id property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyBag.NamespaceUrl">
            <summary>Returns the NameSpaceUrl property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyBag.NamespaceLocation">
            <summary>Returns the NameSpaceLocation property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyBag.References">
            <summary>Returns the References property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotPropertyBag.Properties">
            <summary>Accesses the Properties property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.EPlotResource">
            <summary>
This .NET class corresponds to the AcDMMResourceInfo ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.EPlotResource.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotResource.Role">
            <summary>Returns the Role property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotResource.Mime">
            <summary>Returns the Mime property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.EPlotResource.Path">
            <summary>Returns the Path property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.DwfNode">
            <summary>
This class is similar to the AcDMMNode ObjectARX class. It contains information associated with a node in a DWF structure.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.DwfNode.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.DwfNode.NodeId">
            <summary>Returns the NodeId property.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.DwfNode.NodeName">
            <summary>Returns the NodeName property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNodeCollection">
            <summary>
This class contains a collection of Dwf3dNavigationTreeNode objects.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNodeCollection.Add(Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode)">
            <summary>Adds a node to this collection.</summary>
            <param name="node"> Input node to be added to this collection</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNodeCollection.Remove(Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode)">
            <summary>Removes the object represented by value from this collection.</summary>
            <param name="node"> Input node to be removed from this collection.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNodeCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode">
            <summary>
This .NET class wraps the Ac3dDwfNavTreeNode ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode.GetKeys">
            <summary>Returns the graphic identifiers included in this tree node.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode.SetKeys(System.Int32[])">
            <summary>Sets the graphic identifiers included in this tree node.</summary>
            <param name="keys"> Input array of keys</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode.DisplayName">
            <summary>Returns the name of the tree node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode.IsGroup">
            <summary>Returns true if the tree node is a group. "Group" refers to groups in the DWF Viewer navigation panel, rather than AutoCAD groups.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode.Children">
            <summary>Returns an array of all the children in the tree node.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.Dwf3dNavigationTreeNode.IsBlock">
            <summary>Returns true if the node is grouped by block. "Block" refers to blocks in the DWF Viewer navigation panel, rather than AutoCAD blocks.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.AboutToBeginBackgroundPublishingEventArgs">
            <summary>
This class provides data for the AboutToBeginBackgroundPublishing event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.AboutToBeginBackgroundPublishingEventArgs.ReadPrivateSection(System.String)">
            <summary>Reads the private section.</summary>
            <param name="sectionName"> Input name to read</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.AboutToBeginBackgroundPublishingEventArgs.DsdData">
            <summary>Returns the DsdData property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.AboutToBeginBackgroundPublishingEventArgs.JobWillPublishInBackground">
            <summary>Returns the JobWillPublishInBackground property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.AboutToBeginPublishingEventArgs">
            <summary>
This class provides data for the AboutToBeginPublishing event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.AboutToBeginPublishingEventArgs.ReadPrivateSection(System.String)">
            <summary>Reads the private section.</summary>
            <param name="sectionName"> Input name to read</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.AboutToBeginPublishingEventArgs.DsdData">
            <summary>Assesses the DsdData property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.AboutToBeginPublishingEventArgs.JobWillPublishInBackground">
            <summary>Returns the JobWillPublishInBackground property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.AboutToBeginPublishingEventArgs.PlotLogger">
            <summary>Assesses the PlotLogger property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.BeginPublishingSheetEventArgs">
            <summary>
This class provides data for the BeginPublishingSheet event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.BeginPublishingSheetEventArgs.DsdEntry">
            <summary>Returns the DsdEntry property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.BeginPublishingSheetEventArgs.UniqueId">
            <summary>Returns the UniqueId property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.BeginPublishingSheetEventArgs.PlotLogger">
            <summary>Returns the PlotLogger property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.BeginAggregationEventArgs">
            <summary>
This class provides data for the BeginAggregation event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.BeginAggregationEventArgs.AddGlobalPropertyRange(Autodesk.AutoCAD.Publishing.EPlotProperty[])">
            <summary>Adds a global property range.</summary>
            <param name="properties"> Input property to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.BeginAggregationEventArgs.AddGlobalResourceRange(Autodesk.AutoCAD.Publishing.EPlotResource[])">
            <summary>Adds a global resource range.</summary>
            <param name="resources"> Input resource to add</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.BeginAggregationEventArgs.PlotLogger">
            <summary>Returns the PlotLogger property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.BeginAggregationEventArgs.DwfFileName">
            <summary>Returns the DwfFileName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.BeginAggregationEventArgs.DwfPassword">
            <summary>Returns the DwfPassword property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.PublishEventArgs">
            <summary>
This class provides data for the Publish event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEventArgs.DwfFileName">
            <summary>Returns the DwfFileName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEventArgs.TemporaryDwfFileName">
            <summary>Returns the TemporaryDwfFileName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEventArgs.DwfPassword">
            <summary>Returns the DwfPassword property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEventArgs.IsMultiSheetDwf">
            <summary>Returns the IsMultiSheetDwf property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.PublishUIEventArgs">
            <summary>
This class provides data for the PublishUI event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishUIEventArgs.ReadPrivateSection(System.String)">
            <summary>Reads the private section.</summary>
            <param name="sectionName"> Input section name to read from</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishUIEventArgs.IUnknown">
            <summary>Returns the IUnknown property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishUIEventArgs.DsdData">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishUIEventArgs.JobWillPublishInBackground">
            <summary>Returns the JobWillPublishInBackground property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs">
            <summary>
This class provides data for the PublishSheet event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.AddPagePropertyRange(Autodesk.AutoCAD.Publishing.EPlotProperty[])">
            <summary>Adds a page property range.</summary>
            <param name="properties"> Input page properties range</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.AddPageResourceRange(Autodesk.AutoCAD.Publishing.EPlotResource[])">
            <summary>Adds a page resource range.</summary>
            <param name="resources"> Input page resource range</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotLogger">
            <summary>Accesses the PlotLogger property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.Database">
            <summary>Accesses the Database property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.IsPlotJobCancelled">
            <summary>Returns the IsPlotJobcanceled property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.UniqueLayoutId">
            <summary>Returns the UniqueLayoutId property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotLayoutId">
            <summary>Accesses the PlotLayoutId property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.IsModelLayout">
            <summary>Returns the IsModelLayout property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotType">
            <summary>Returns the PlotType property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotRotation">
            <summary>Returns the PlotRotation property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotPaperUnit">
            <summary>Returns the PlotPaperUnit property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PaperScale">
            <summary>Returns the PaperScale property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.DrawingScale">
            <summary>Returns the DrawingScale property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.OriginX">
            <summary>Returns the OriginX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.OriginY">
            <summary>Returns the OriginY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotWindowMinX">
            <summary>Returns the PlotWindowMinX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotWindowMinY">
            <summary>Returns the PlotWindowMinY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotWindowMaxX">
            <summary>Returns the PlotWindowMaxX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotWindowMaxY">
            <summary>Returns the PlotWindowMaxY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.ViewPlotted">
            <summary>Returns the ViewPlotted property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.IsScaleSpecified">
            <summary>Returns the IsScaleSpecified property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.AreLinesHidden">
            <summary>Returns the AreLinesHidden property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.ArePlottingLineWeights">
            <summary>Returns the ArePlottingLineWeights property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.AreScalingLineWeights">
            <summary>Returns the AreScalingLineWeights property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.DisplayMinX">
            <summary>Returns the DisplayMinX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.DisplayMinY">
            <summary>Returns the DisplayMinY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.DisplayMaxX">
            <summary>Returns the DisplayMaxX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.DisplayMaxY">
            <summary>Returns the DisplayMaxY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutMarginMinX">
            <summary>Returns the LayoutMarginMinX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutMarginMinY">
            <summary>Returns the LayoutMarginMinY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutMarginMaxX">
            <summary>Returns the LayoutMarginMaxX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutMarginMaxY">
            <summary>Returns the LayoutMarginMaxY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PrintableBoundsX">
            <summary>Returns the PrintableBoundsX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PrintableBoundsY">
            <summary>Returns the PrintableBoundsY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.MaxBoundsX">
            <summary>Returns the MaxBoundsX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.MaxBoundsY">
            <summary>Returns the MaxBoundsY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.StepsPerInch">
            <summary>Returns the StepsPerInch property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.Configuration">
            <summary>Returns the Configuration property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotToFilePath">
            <summary>Returns the PlotToFilePath property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotToFileName">
            <summary>Returns the PlotToFileName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.CanonicalMediaName">
            <summary>Returns the CanonicalMediaName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotBoundsMinX">
            <summary>Returns the PlotBoundsMinX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotBoundsMinY">
            <summary>Returns the PlotBoundsMinY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotBoundsMaxX">
            <summary>Returns the PlotBoundsMaxX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PlotBoundsMaxY">
            <summary>Returns the PlotBoundsMaxY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutBoundsMinX">
            <summary>Returns the LayoutBoundsMinX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutBoundsMinY">
            <summary>Returns the LayoutBoundsMinY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutBoundsMaxX">
            <summary>Returns the LayoutBoundsMaxX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.LayoutBoundsMaxY">
            <summary>Returns the LayoutBoundsMaxY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.EffectivePlotOffsetX">
            <summary>Returns the EffectivePlotOffsetX property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.EffectivePlotOffsetY">
            <summary>Returns the EffectivePlotOffsetY property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.EffectivePlotOffsetXDevice">
            <summary>Returns the EffectivePlotOffsetXDevice property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.EffectivePlotOffsetYDevice">
            <summary>Returns the EffectivePlotOffsetYDevice property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.PublishingTo3DDwf">
            <summary>Returns the PublishingTo3DDwf property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishSheetEventArgs.Dwf3dNavigationTreeNode">
            <summary>Accesses the DwfFileName property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs">
            <summary>
This class provides data for the PublishEntity event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.Flush">
            <summary>Forces the graphic pipeline to be flushed, to ensure synchronization. When control returns, all geometry has been pushed down to the.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.Cancel">
            <summary>Cancels the entire plot operation.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.GetCurrentEntityNode(Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Determines if this entity has already been assigned a node.</summary>
            <param name="objIds"> Input collection holder</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.GetNextAvailableNode">
            <summary>Returns the next unused integer node number.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.GetEntityNode(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Looks up any entity ID in the map of ID-to-node to determine whether the node has already been assigned to a particular entity.</summary>
            <param name="entityId"> Input object to look up.</param>
            <param name="objIds"> Input array of object IDs for each block that encloses this entity; may be an empty array if this entity is not part of a block.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.SetCurrentNode(System.Int32,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection)">
            <summary>Determines which node is assigned to the current entity. This calls AddNodeToMap() or MapEntityToNode() internally.</summary>
            <param name="nodeId"> Input node ID to assign.</param>
            <param name="objIds"> Input array of object IDs for each block that encloses this entity; an empty array if this entity is not part of a block.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.SetNodeName(System.Int32,System.String)">
            <summary>Allows a client to change the node name but not the node number.</summary>
            <param name="nodeId"> Input node ID on which to operate, which should exist in the map and should be greater than 0</param>
            <param name="nodeName"> Input node name to assign to the specified node.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.AddPropertyBag(Autodesk.AutoCAD.Publishing.EPlotPropertyBag)">
            <summary>Adds a property bag.</summary>
            <param name="properties"> Input property bag to add</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.AddPropertiesIds(Autodesk.AutoCAD.Publishing.EPlotPropertyBag,Autodesk.AutoCAD.Publishing.DwfNode)">
            <summary>Assigns EPlot properties ID to a node.</summary>
            <param name="properties"> Input property to add</param>
            <param name="node"> Input the node with which properties should be associated.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.AddNodeToMap(Autodesk.AutoCAD.DatabaseServices.ObjectId,Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection,System.Int32)">
            <summary>Assigns a node ID to any entity ID.</summary>
            <param name="entityId"> Input object of the entity whose node ID is to be assigned.</param>
            <param name="objIds"> Input array of object IDs for each block that encloses this entity; an empty array if this entity is not part of a block.</param>
            <param name="nodeId"> Input the integer node ID to be assigned to the specified entity; should be greater than 0.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.Add3DDwfProperty(System.String,System.String,System.String)">
            <summary>Call this method to add 3D DWF properties to entities when Reactor.OnBeginEntity notification is received. You can call this n times to add n number of properties.</summary>
            <param name="category"> Input name of the category to which you want to add the property.</param>
            <param name="name"> Input property name.</param>
            <param name="value"> Input property value.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.GetGraphicIDs">
            <summary>Returns an array of graphic node IDs associated with this entity.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.getEntityBlockRefPath">
            <summary>Returns the block ref path for the current entity.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.PlotLogger">
            <summary>Accesses the PlotLogger property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.IsCancelled">
            <summary>Returns the Iscanceled property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.UniqueEntityId">
            <summary>Returns the UniqueEntityId property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.Entity">
            <summary>Accesses the Entity property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.PublishEntityEventArgs.EffectiveBlockLayerId">
            <summary>Accesses the EffectiveBlockLayerId property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Publishing.OptionsDialogResult">
            <summary>
This class represents the return value of the Publisher.ShowDwfOptionsDialog method.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.OptionsDialogResult.Status">
            <summary>Returns the Status property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.OptionsDialogResult.DsdData">
            <summary>Accesses the DsdData property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Publishing.OptionsDialogResult.PlotConfig">
            <summary>Accesses the PlotConfig property value. Conditions.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.SynchronizationContext">
            <summary>
This is class Autodesk.AutoCAD.Runtime.SynchronizationContext.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SynchronizationContext.CreateCopy">
            <summary>This is CreateCopy, a member of class SynchronizationContext.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SynchronizationContext.OperationCompleted">
            <summary>This is OperationCompleted, a member of class SynchronizationContext.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SynchronizationContext.OperationStarted">
            <summary>This is OperationStarted, a member of class SynchronizationContext.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
            <summary>
This is Wait, a member of class SynchronizationContext.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.WhoHasInfo">
            <summary>
This value class containing information returned from Application.GetWhoHasInfo().</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.WhoHasInfo.IsFileLocked">
            <summary>Assesses if the file is currently locked for editing by this or another AutoCAD session.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.WhoHasInfo.UserName">
            <summary>Accesses the user name (login name) of the user editing the drawing if the file is opened for editing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.WhoHasInfo.ComputerName">
            <summary>Accesses the computer name of the system being used to edit the drawing if the file is opened for editing.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.WhoHasInfo.OpenTime">
            <summary>Accesses a string detailing the date and time the drawing file was opened if the file is opened for editing.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.Core.Application">
            <summary>
This is class Autodesk.AutoCAD.ApplicationServices.Core.Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.Quit">
            <summary>Quits the application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.SetSystemVariable(System.String,System.Object)">
            <summary>Sets the system variable.</summary>
            <param name="name"> Input the name of the variable to set</param>
            <param name="value"> Input the new value</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.GetSystemVariable(System.String)">
            <summary>Returns the system variable.</summary>
            <param name="name"> Input the name of the system variable to get.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.TryGetSystemVariable(System.String)">
            <summary>This is TryGetSystemVariable, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.EvaluateDiesel(System.String)">
            <summary>This is EvaluateDiesel, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowAlertDialog(System.String)">
            <summary>Shows the alert dialog with the specified message.</summary>
            <param name="message"> Input string object.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModalWindow(System.Windows.Window)">
            <summary>This is ShowModalWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModalWindow(System.Windows.Window,System.Windows.Window)">
            <summary>This is ShowModalWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModalWindow(System.IntPtr,System.Windows.Window)">
            <summary>This is ShowModalWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModalWindow(System.Windows.Window,System.Windows.Window,System.Boolean)">
            <summary>
This is ShowModalWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModalWindow(System.IntPtr,System.Windows.Window,System.Boolean)">
            <summary>
This is ShowModalWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModelessWindow(System.Windows.Window)">
            <summary>This is ShowModelessWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModelessWindow(System.Windows.Window,System.Windows.Window)">
            <summary>This is ShowModelessWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModelessWindow(System.IntPtr,System.Windows.Window)">
            <summary>This is ShowModelessWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModelessWindow(System.Windows.Window,System.Windows.Window,System.Boolean)">
            <summary>
This is ShowModelessWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.ShowModelessWindow(System.IntPtr,System.Windows.Window,System.Boolean)">
            <summary>
This is ShowModelessWindow, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.LoadJSScript(System.Uri)">
            <summary>Use this function to load and execute JavaScript without a palette.</summary>
            <param name="urlJSFile"> URI of the JavaScript file to be loaded and executed</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.UpdateScreen">
            <summary>Refreshes the screen.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.IsFileLocked(System.String)">
            <summary>This is IsFileLocked, a member of class Application.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.GetWhoHasInfo(System.String)">
            <summary>Obtains information on who has a file open for editing by AutoCAD.</summary>
            <param name="pathname"> Input a fully qualified path and file name to a drawing file</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.Core.Application.Invoke(Autodesk.AutoCAD.DatabaseServices.ResultBuffer)">
            <summary>This .NET method wraps the ObjectARX function acedInvoke(). It invokes an external function defined in another ARX application.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Core.Application.BeginQuit">
            <summary>Wraps the AcEditorReactor::beginQuit() ObjectARX function, which is called when AutoCAD starts to shutdown.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Core.Application.QuitAborted">
            <summary>Wraps the AcEditorReactor.quitAborted() ObjectARX function. This notification occurs if a shutdown of AutoCAD is aborted, either by an individual veto() in beginQuit(), or by any other condition that would abort a shutdown such as canceling a prompted save of a document.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Core.Application.QuitWillStart">
            <summary>Wraps the AcEditorReactor.quitWillStart() ObjectARX function. This notification occurs just after the beginQuit() notification if it has not been vetoed and just before shutdown processing begins.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Core.Application.SystemVariableChanging">
            <summary>Wraps the AcEditorReactor.sysVarWillChange() ObjectARX function. This callback indicates that an attempt is being made to change the varName system variable. This callback provides applications with the ability to find out what the original value of the system variable was before the value changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Core.Application.SystemVariableChanged">
            <summary>Wraps the AcEditorReactor.sysVarChanged() ObjectARX function. This callback indicates that an attempt was made to change the varName system variable. It does not indicate that the actual value was changed.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Core.Application.Idle">
            <summary>This event is fired when the application goes idle.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.ApplicationServices.Core.Application.PreTranslateMessage">
            <summary>Occurs before a message is translated.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.DocumentManager">
            <summary>Accesses the DocumentManager object.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.MainWindow">
            <summary>Accesses the main window.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.IsQuiescent">
            <summary>Assesses if there is a command, LISP script, or ARX command active.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.HasPickFirst">
            <summary>This is HasPickFirst, a member of class Application.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.IsInPlaceServer">
            <summary>Accesses the IsInPlaceServer property. TRUE indicates AutoCAD is running as an in-place server.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.IsInBackgroundMode">
            <summary>Accesses the IsInBackgroundMode property. TRUE indicates AutoCAD is running as a background plot.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.Version">
            <summary>Accesses the version of the currently running instance.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.UserConfigurationManager">
            <summary>Accesses the user configuration manager.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.Publisher">
            <summary>Accesses the publisher.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.Core.Application.LongTransactionManager">
            <summary>Accesses the LongTransactionManager object.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.CursorType">
            <summary>
This .NET class wraps the AcEdJig::CursorType ObjectARX enum. It gives the type of cursor that are available.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.UserInputControls">
            <summary>
This .NET class wraps the AcEdJig::UserInputControls ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.JigPromptStringOptions">
            <summary>
This class provides a container for command line options that can be passed to the JigPrompts.AcquireString()> method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptStringOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptStringOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptStringOptions.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptStringOptions.DefaultValue">
            <summary>Returns the default value to be used for string option prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.JigPromptGeometryOptions">
            <summary>
This is a base class for containers of input arguments for Jig sampling prompts that acquire geometric input.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptGeometryOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input prompt message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptGeometryOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptGeometryOptions.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptGeometryOptions.BasePoint">
            <summary>Returns the base point to be used by the prompt.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptGeometryOptions.UseBasePoint">
            <summary>Returns a Boolean indicating whether the base point is to be used or not.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.JigPromptAngleOptions">
            <summary>
This class provides a container for command line options that can be passed to the JigPrompts.AcquireAngle() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptAngleOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input prompt message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptAngleOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptAngleOptions.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptAngleOptions.DefaultValue">
            <summary>Returns the default jig prompt angle options value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.JigPromptDistanceOptions">
            <summary>
This class provides a container for command line options that can be passed to the JigPrompts.AcquireDistance() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptDistanceOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input prompt message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptDistanceOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptDistanceOptions.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptDistanceOptions.DefaultValue">
            <summary>Returns the default jig prompt distance options value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.JigPromptPointOptions">
            <summary>
This class provides a container for command line options that can be passed to the JigPrompts.AcquirePoint() method.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptPointOptions.#ctor(System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="messageAndKeywords"> Input prompt message and keywords</param>
            <param name="globalKeywords"> Input global keywords</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptPointOptions.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="message"> Input prompt string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPromptPointOptions.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.JigPromptPointOptions.DefaultValue">
            <summary>Returns the default value to be used for point option prompt.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.JigPrompts">
            <summary>
This class provides a collection of sampling functions for Jig data acquisition.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireString(System.String,System.String)">
            <summary>Returns a string based on the keyword entered by the user from DragStatus enumerated type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireString(System.String)">
            <summary>Returns the string based on the options selected from the prompt.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireString(Autodesk.AutoCAD.EditorInput.JigPromptStringOptions)">
            <summary>Returns the prompt results based on the options selected by the user.</summary>
            <param name="options"> Input prompt string options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireString">
            <summary>Prompts the user to enter a string.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireAngle(System.String,System.String)">
            <summary>Returns an angle with the associated strings.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireAngle(System.String)">
            <summary>Returns a system message based on the option selected by the user.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireAngle(Autodesk.AutoCAD.EditorInput.JigPromptAngleOptions)">
            <summary>Sets the angle based on the options selected by the user.</summary>
            <param name="options"> Input prompt angle options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireAngle">
            <summary>Returns the Jig angle.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireDistance(System.String,System.String)">
            <summary>Returns a string based on the keyword entered by the user from DragStatus enumerated type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireDistance(System.String)">
            <summary>Returns the string based on the prompt option selected by the user.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireDistance(Autodesk.AutoCAD.EditorInput.JigPromptDistanceOptions)">
            <summary>Obtains a distance based on the current cursor position and the prompt option selected by the user.</summary>
            <param name="options"> Input prompt distance options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquireDistance">
            <summary>Obtains a distance based on the current cursor position. Sets distance to the distance between the specified basepoint and the current cursor position.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquirePoint(System.String,System.String)">
            <summary>Returns a string based on the keyword entered by the user from AcEdJig.DragStatus> enumerated type.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquirePoint(System.String)">
            <summary>Returns a message based on the options selected from the prompt.</summary>
            <param name="message"> Input prompt message</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquirePoint(Autodesk.AutoCAD.EditorInput.JigPromptPointOptions)">
            <summary>Obtains the point based on the options selected.</summary>
            <param name="options"> Input prompt point options</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.JigPrompts.AcquirePoint">
            <summary>Obtains a point based on the current cursor position.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.EntityJig">
            <summary>
This .NET class wraps the AcEdJig ObjectARX class. It may be implemented to provide on-screen editing capabilities for an application's custom entities. The EntityJig object lets the user manipulate the graphical representation of a custom entity, and then applies the user's input to an actual instance of the entity. See DrawJig for a Jig object that works independently of custom entities.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PointFilterEventArgs">
            <summary>
This class provides data for the PointFilter event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointFilterEventArgs.Context">
            <summary>Gets an object that provides input data for this event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointFilterEventArgs.Result">
            <summary>Gets an object whose properties and methods can be used to set the result of this event.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointFilterEventArgs.CallNext">
            <summary>Gets or sets a value that determines whether the next point filter is called to do further filtering.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PointMonitorEventArgs">
            <summary>
This class provides data for the PointMonitor event.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.PointMonitorEventArgs.AppendToolTipText(System.String)">
            <summary>Appends tool tip text value to this event.</summary>
            <param name="value"> Input item to be appended.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointMonitorEventArgs.Context">
            <summary>Gets an object that provides input data for this event.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.EditorUserInteraction">
            <summary>
This class allows users to interact with AutoCAD from within an application-defined modal dialog box. The application that defines the modal dialog box gets an instance of this class by calling the Editor.StartUserInteraction() method, typically from the dialog box handler. While using this object, the dialog box can invoke the AutoCAD editor to allow the user to make selections. After the user finishes selecting, the window focus automatically returns to the dialog box.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.EditorUserInteraction.End">
            <summary>Calls Dispose() to end this user interaction.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.EditorVisualStyle">
            <summary>
Description to come.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.EditorVisualStyle.setCvpVS2d">
            <summary>Description to come.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.EditorVisualStyle.IsVS2dType">
            <summary>Returns true if visual style is a 2D type.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.EditorVisualStyle.IsVS3dType">
            <summary>Returns true if visual style is a 3D type.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.CursorBadgeUtilities">
            <summary>
This is class Autodesk.AutoCAD.EditorInput.CursorBadgeUtilities, which provides utility functions to manipulate cursor badges.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CursorBadgeUtilities.AddSupplementalCursorImage(Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32,System.Int32)">
            <summary>Adds a supplemental cursor image. Only one cursor badge image can be shown at a time. If multiple features supply badges the last badge with the highest priorityOrder will be the badge shown.</summary>
            <param name="cursorImage"> Input image</param>
            <param name="priority"> Stacking order badge should appear in. Higher numbers win.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CursorBadgeUtilities.RemoveSupplementalCursorImage(Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32)">
            <summary>Removes a previously added supplemental cursor badge.</summary>
            <param name="cursorImage"> Input image</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CursorBadgeUtilities.HasSupplementalCursorImage">
            <summary>Checks if the current supplemental cursor badge is set.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CursorBadgeUtilities.SetSupplementalCursorOffset(System.Int32,System.Int32)">
            <summary>Sets x, y to be the cursor offset to the top right corner of the pickbox.</summary>
            <param name="y"> Input Y offset</param>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.CursorBadgeUtilities.GetSupplementalCursorOffset(System.Int32&,System.Int32&)">
            <summary>Gets the cursor offset x, y, which is to the top right corner of the pickbox.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.SelectionMode">
            <summary>
This .NET class wraps the AcEdSSGetModes ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PointFilterResult">
            <summary>
This class provides output data for the PointFilter event. It wraps the output parameters of the AcEdInputPointFilter.processInputPoint() ObjectARX function.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointFilterResult.Retry">
            <summary>Returns a Boolean indicating whether to force the user to try again.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointFilterResult.NewPoint">
            <summary>Returns the new point if changedPoint is true.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointFilterResult.DisplayObjectSnapGlyph">
            <summary>If true, AutoCAD will display the osnap glyph, even in the case the computed point has been changed by the application.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.PointFilterResult.ToolTipText">
            <summary>Returns the tool tip string.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.InputPointContext">
            <summary>
This class provides input parameters for the PointFilter and PointMonitor events. It wraps the input parameters of the AcEdInputPointFilter.processInputPoint() and AcEdInputPointMonitor.monitorInputPoint() ObjectARX functions.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.InputPointContext.GetCustomObjectSnapModes">
            <summary>Returns the custom OSNAP modes in effect, if pointComputed is true, and history has the Osnaped bit set.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.InputPointContext.GetCustomObjectSnapOverrides">
            <summary>Returns the custom osnap overrides currently active (even if they didn't participate in the calculation of the computedPoint).</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.InputPointContext.GetPickedEntities">
            <summary>Returns the picked entity array.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.InputPointContext.GetKeyPointEntities">
            <summary>Returns the entities that were responsible for the calculation of the osnappedPoint. It contains usually one entity, except for the intersection-kind of osnap points (for these cases, keyPointEntities will contain two entities); plus one entry for each entry in the alignmentPaths array.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.EditorInput.InputPointContext.GetAlignmentPaths">
            <summary>Input array that contains geometry of type Line3d (ortho and polar snap lines), LineSeg3d (extension lines), or EllipArc3d (extension arcs).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.Document">
            <summary>Returns the document object that this callback emanates from; this makes it easier to plant one instance on all input point managers, and determine which one is making the callback.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.DrawContext">
            <summary>Returns view transform, pixel sizes, and other context information; returns whatever visible graphics you want to display.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.PointComputed">
            <summary>Returns true if the all the required points are valid, or false if they are not.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.History">
            <summary>Returns the integer with bit fields as defined by the PointHistory enum.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.LastPoint">
            <summary>Returns the last point if history has the LastPoint bit set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.RawPoint">
            <summary>Returns the point as tracked by the cursor position before subsequent filtering, or as entered via alternate means, which is subject to far less filtering. Valid only if pointComputed is true.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.GrippedPoint">
            <summary>Returns the gripped point if history has the Gripped bit set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.CartesianSnappedPoint">
            <summary>Returns the old-style snap if history has the CartSnapped bit set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.ObjectSnappedPoint">
            <summary>Returns the current OSNAP point, if pointComputed is true, and history has the Osnapped bit set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.ObjectSnapMask">
            <summary>Returns the current OSNAP modes in effect, if pointComputed is true, and history has the Osnapped bit set.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.ObjectSnapOverrides">
            <summary>Returns the osnap overrides currently active (even if they didn't participate in the calculation of the computedPoint).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.ComputedPoint">
            <summary>Returns the point as it ends up for AutoCAD if pointComputed is true. It is always set, whether any built in filters are performed or not. AutoSnap computations could alter it from osnappedPoint.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.EditorInput.InputPointContext.ToolTipText">
            <summary>Returns the final tool tip string, as determined by AutoCAD; can be altered by returning a new string.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.PointHistoryBits">
            <summary>
This .NET enum wraps the Acad::PointHistory ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.EditorInput.ObjectSnapMasks">
            <summary>
This .NET enum wraps the AcDb::OsnapMask ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.CommandFlags">
            <summary>
Members of this enumeration represent values that can be passed as the commandFlags argument of the AcEdCommandStack.addCommand() ObjectARX function.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.CommandMethodAttribute">
            <summary>
This class marks an instance or static function as a command. Command methods may be defined only in a class that is marked with the CommandClass attribute.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.#ctor(System.String)">
            <summary>Constructs an object with a global name.</summary>
            <param name="globalName"> Input global command name</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.#ctor(System.String,Autodesk.AutoCAD.Runtime.CommandFlags)">
            <summary>Constructs an object with a global name and command flags.</summary>
            <param name="globalName"> Input command global name</param>
            <param name="flags"> Input command flags</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.#ctor(System.String,System.String,Autodesk.AutoCAD.Runtime.CommandFlags)">
            <summary>Constructs an object with a global name, command flags, and a group name.</summary>
            <param name="groupName"> Input command group name</param>
            <param name="globalName"> Input command global name</param>
            <param name="flags"> Input command flags</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.#ctor(System.String,System.String,System.String,Autodesk.AutoCAD.Runtime.CommandFlags)">
            <summary>Constructs an object with a global name, command flags, group name, and localized ID name.</summary>
            <param name="groupName"> Input command group name</param>
            <param name="globalName"> Input command global name</param>
            <param name="localizedNameId"> Input command localized name Id</param>
            <param name="flags"> Input command flags</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.#ctor(System.String,System.String,System.String,Autodesk.AutoCAD.Runtime.CommandFlags,System.Type)">
            <summary>Constructs an object with a global name, command flags, group name, localized ID name, and context menu flags.</summary>
            <param name="groupName"> Input command group name</param>
            <param name="globalName"> Input command global name</param>
            <param name="localizedNameId"> Input command locaized name Id</param>
            <param name="flags"> Input command flags</param>
            <param name="contextMenuExtensionType"> Input context menu flags</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.#ctor(System.String,System.String,System.String,Autodesk.AutoCAD.Runtime.CommandFlags,System.String)">
            <summary>Constructs an object with a global name, command flags, group name, localized ID name, and help topic.</summary>
            <param name="groupName"> Input command group name</param>
            <param name="globalName"> Input command global name</param>
            <param name="localizedNameId"> Input command localized name Id</param>
            <param name="flags"> Input command flags</param>
            <param name="helpTopic"> Input help topic string</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.#ctor(System.String,System.String,System.String,Autodesk.AutoCAD.Runtime.CommandFlags,System.Type,System.String,System.String)">
            <summary>Constructs an object with a global name, command flags, group name, localized ID name, help topic, help file name, and context menu flags.</summary>
            <param name="groupName"> Input command group name</param>
            <param name="globalName"> Input command global name</param>
            <param name="localizedNameId"> Input command localized name Id</param>
            <param name="flags"> Input command flags</param>
            <param name="contextMenuExtensionType"> Input context menu flags</param>
            <param name="helpFileName"> Input help file name</param>
            <param name="helpTopic"> Input help topic string</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.GlobalName">
            <summary>Returns the GlobalName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.LocalizedNameId">
            <summary>Returns the LocalizedNameId property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.GroupName">
            <summary>Returns the GroupName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.Flags">
            <summary>Returns the Flags property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.ContextMenuExtensionType">
            <summary>Returns the ContextMenuExtensionType property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.HelpFileName">
            <summary>Returns the HelpFileName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandMethodAttribute.HelpTopic">
            <summary>Returns the HelpTopic property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.CommandClassAttribute">
            <summary>
This custom attribute class is used to mark a type as the application's command class. A CommandClass attribute may be declared for any type that defines AutoCAD command handlers. If an application uses the CommandClass attribute, it must declare an instance of this attribute for every type that contains an AutoCAD command handler method. AutoCAD queries the application's assembly for one or more CommandClass attributes. If instances of this attribute are found, AutoCAD searches only their associated types for command methods. Otherwise, it searches all exported types.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.CommandClassAttribute.Type">
            <summary>Returns the Type property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.LispFunctionAttribute">
            <summary>
This class extends the Attribute and ICommandLine interfaces. It defines the attributes for a Lisp callable function.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>Constructs an object of the given name, localized ID, and help topic.</summary>
            <param name="globalName"> Input global name of the Lisp function.</param>
            <param name="localizedNameId"> Input the localized name of the Lisp function.</param>
            <param name="helpTopic"> Input help topic string for this function.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Constructor.</summary>
            <param name="globalName"> Input global name of the Lisp function.</param>
            <param name="localizedNameId"> Input the localized name of the Lisp function.</param>
            <param name="helpFileName"> Input specifies the full path and file name of your Help file.</param>
            <param name="helpTopic"> Input help topic string for this function.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.#ctor(System.String,System.String)">
            <summary>Constructs an object of the given name and localized ID.</summary>
            <param name="globalName"> Input global name of the Lisp function.</param>
            <param name="localizedNameId"> Input the localized name of the Lisp function.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.#ctor(System.String)">
            <summary>Constructs an object of the given name.</summary>
            <param name="globalName"> Input global name of the Lisp function.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.GlobalName">
            <summary>Returns the GlobalName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.LocalizedNameId">
            <summary>Returns the LocalizedNameId property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.HelpFileName">
            <summary>Returns the HelpFileName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.LispFunctionAttribute.HelpTopic">
            <summary>Returns the HelpTopic property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.FileExistsConditionAttribute">
            <summary>
This class defines a custom attribute that marks an assembly if the file exists.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.FileExistsConditionAttribute.#ctor(System.String)">
            <summary>Constructs an object associated with the given file.</summary>
            <param name="fileName"> Input file name.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.FileExistsConditionAttribute.Evaluate">
            <summary>Implement this function to evaluate file exist condition.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.JavaScriptClassAttribute">
            <summary>
This is class Autodesk.AutoCAD.Runtime.JavaScriptClassAttribute.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.JavaScriptClassAttribute.Type">
            <summary>This is Type, a member of class JavaScriptClassAttribute.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.IJavaScriptCallable">
            <summary>
This is class Autodesk.AutoCAD.Runtime.IJavaScriptCallable.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.IJavaScriptCallable.EntryPoint">
            <summary>This is EntryPoint, a member of class IJavaScriptCallable.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.JavaScriptCallbackAttribute">
            <summary>
This is class Autodesk.AutoCAD.Runtime.JavaScriptCallbackAttribute.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.JavaScriptCallbackAttribute.#ctor(System.String)">
            <summary>This is JavaScriptCallbackAttribute, a member of class JavaScriptCallbackAttribute.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.JavaScriptCallbackAttribute.EntryPoint">
            <summary>This is EntryPoint, a member of class JavaScriptCallbackAttribute.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.PerDocumentClassAttribute">
            <summary>
This custom attribute class is used to mark a type so that an instance of that type will be instantiated for each document open/opened in AutoCAD.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.PerDocumentClassAttribute.Type">
            <summary>This is Type, a member of class PerDocumentClassAttribute.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.ConfigurationSectionNameAttribute">
            <summary>
This class defines an attribute that is used to define and retrieve a configuration section name.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.ConfigurationSectionNameAttribute.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="name"> Input a System.String object which represents the name of the Configuration Section.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.ConfigurationSectionNameAttribute.Name">
            <summary>Accesses the name property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection">
            <summary>
This interface can be implemented to create, store, and manage application configuration data in whatever format the application requires.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.CreateSubsection(System.String)">
            <summary>Creates a configuration subsection named name.</summary>
            <param name="name"> Input new subsection name.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.OpenSubsection(System.String)">
            <summary>This method should be implemented to open the configuration subsection named name.</summary>
            <param name="name"> Input the subsection name to open.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.ContainsSubsection(System.String)">
            <summary>This method should be implemented to verify whether the configuration section contains a subsection named name.</summary>
            <param name="name"> Input subsection to search for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.DeleteSubsection(System.String)">
            <summary>This method should be implemented to delete the configuration subsection named name.</summary>
            <param name="name"> Input the name of the subsection to delete.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.ReadProperty(System.String,System.Object)">
            <summary>This method should be implemented to return the value of a property named name. It should return defaultValue if name does not exist.</summary>
            <param name="name"> Input the name to read</param>
            <param name="defaultValue"> Input default value to return</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.WriteProperty(System.String,System.Object)">
            <summary>This method should be implemented to assign the value value to the property named name.</summary>
            <param name="name"> Input the name to read</param>
            <param name="value"> Input default value to return</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.Contains(System.String)">
            <summary>Returns a value indicating whether the collection contains an object that matches name.</summary>
            <param name="name"> Input name to search for.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.Delete(System.String)">
            <summary>This method should be implemented to delete the value named name in the configuration section.</summary>
            <param name="name"> Input name of item to delete.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.Close">
            <summary>This method should be implemented to close the configuration section.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.IConfigurationSection.IsReadOnly">
            <summary>Assesses whether the object is read-only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentCollectionEventArgs">
            <summary>
This class provides data for various events of the DocumentCollection class.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentCollectionEventArgs.Document">
            <summary>Wraps the AcApDocManager.document() function.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentClosedEventArgs">
            <summary>
This is class Autodesk.AutoCAD.ApplicationServices.DocumentClosedEventArgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentClosedEventArgs.RecentDocument">
            <summary>This is RecentDocument, a member of class DocumentClosedEventArgs.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DocumentPinStateChangedEventArgs">
            <summary>
This is class Autodesk.AutoCAD.ApplicationServices.DocumentPinStateChangedEventArgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.DocumentPinStateChangedEventArgs.RecentDocument">
            <summary>This is RecentDocument, a member of class DocumentPinStateChangedEventArgs.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.ViewEventArgs">
            <summary>
This is a container for the Autodesk.AutoCAD.GraphicsSystem.View object.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.ViewEventArgs.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ViewEventArgs.View">
            <summary>Returns the GraphicsSystem.View object contained in this class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.ViewUpdateEventArgs">
            <summary>
Event args class to support Manager.ViewToBeUpdated and Manager.ViewWasUpdated events.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.GraphicsSystem.ViewUpdateEventArgs.#ctor">
            <summary>This is ViewUpdateEventArgs, a member of class ViewUpdateEventArgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ViewUpdateEventArgs.View">
            <summary>This is View, a member of class ViewUpdateEventArgs.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.GraphicsSystem.ViewUpdateEventArgs.viewUpdateFlags">
            <summary>Flags containing additional information about the view update event. Read only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.ViewUpdateFlags">
            <summary>
This enum defines view update flags, providing context to the view update reactor methods.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.GraphicsSystem.LinePattern">
            <summary>
This .NET enum wraps the AcGs.LinePattern ObjectARX enum. It represents line patterns whose displays are not affected by zoom level.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.DatabaseExtension">
            <summary>
This is an extension class for Database.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.ApplicationServices.XrefFileLock">
            <summary>
This .NET class is a wrapper for the ObjectARX AcEdXrefFileLock class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.LockFile(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>The Xref file referenced by the selected BTR Id is exclusively write locked. Multiple readers are still allowed but are not guaranteed to be up to date. If the Xref file has an XLOADCTL system variable setting of 1 (demand loaded), then the current state is changed to XLOADCTL set to 0 (fully loaded) or 2 (copy). This allows the Xref file to be filelocked by this lock object. When it is released via the ReleaseFile() method, the XLOADCTL value for this block reference will remain (either 0 or 2).</summary>
            <param name="selectedBlockId"> Block Table Record object ID to operate on</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.ReleaseFile">
            <summary>Releases, saves, and reloads the xref file with the new (edited) changes. All other block references that reference the same xref file will also be updated.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.ConsistencyCheck(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>By providing a selected Xref block table record (BTR) ID, this method determines if its Xref file is still in sync with what was used at load drawing time. It also determines if any other block table records referencing the same Xref file are also in sync. This is done by checking its Xref file's time/date stamp and file size at load time against the actual ones during this method's execution. If it is out of sync, then all the block table record IDs that reference the Xref file are returned.</summary>
            <param name="selectedBlockId"> Selected BTR object ID to operate on</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.ConsistencyCheck">
            <summary>By providing a selected Xref block table record (BTR) ID, this method determines if its Xref file is still in sync with what was used at load drawing time. It also determines if any other block table records referencing the same Xref file are also in sync. This is done by checking its Xref file's time/date stamp and file size at load time against the actual ones during this method's execution.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.ReloadFile">
            <summary>Reloads the corresponding Xref file(s) from the list of Xref BTR Ids (out of sync) to the current drawing. This allows resynching an out of date Xref block by reloading its Xref file into the current drawing.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.ReloadFile(System.Int32)">
            <summary>Reloads the corresponding Xref file(s) from the list of Xref BTR Ids (out of sync) to the current drawing. This allows resynching an out of date Xref block by reloading its Xref file into the current drawing.</summary>
            <param name="xldCtlType"> XLOADCTL mode to reload with</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.ConsistencyCheckLocal(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method is basically the same as the ConsistencyCheck() method, with one exception. Only the selected Xref block reference will be checked for out of sync condition. No other Xref block references that reference the same Xref file will be scanned and checked. This provides a quick check for consistency of a specific Xref block reference.</summary>
            <param name="selectedBlockId"> Selected BTR object ID to operate on</param>
        </member>
        <member name="M:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.GetXloadCtlType(Autodesk.AutoCAD.DatabaseServices.ObjectId)">
            <summary>This method returns the XLOADCTL system variable value of the currently locked object. The xloadctlType() method is real time (determines the Xref object Id's mode when method is executed) and does not affect the locked object's mode value.</summary>
            <param name="selectedBlockId"> Selected BTR object ID to operate on</param>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.XloadCtlType">
            <summary>Accesses the XLOADCTL system variable type/mode of the Xref file referenced by the current BTR Id (XLOADCTL type at the time the Xref file was loaded for the BTR).</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.ApplicationServices.XrefFileLock.OutOfSyncBlockIds">
            <summary>Accesses the internal out of sync BTR Ids that the object may be maintaining. One possible use is to 'highlight' these block references as ones that will reflect changes that are about to be made.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.HostAppServices">
            <summary>
This .NET class wraps the AcPlHostAppServices ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.HostAppServices.UpdatePlotJobStatus(Autodesk.AutoCAD.PlottingServices.AppPlotStatus,System.String)">
            <summary>Application implements this function to communicate plotting events, conditions, and results to the host application. The host application accordingly updates different user interface elements to give visual feedback to the user about the state of the plot job.</summary>
            <param name="status"> Input Autodesk.AutoCAD.PlottingServices..AppPlotStatus object reflecting the state of the plot.</param>
            <param name="message"> Input for a plot message or DWF file name.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.HostAppServices.PlotLogger">
            <summary>Applications implement this to return a PlotLogger object. Typically, the PlotLogger instance is also implemented by the host application and instantiated by host application code.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.AppPlotStatus">
            <summary>
This enumeration wraps the AcPlHostAppServices::PlotStatus ObjectARX enum. It signifies the plot state, condition, or results of the plot job.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotConfigManager">
            <summary>
This .NET class wraps the AcPlPlotConfigManager ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfigManager.SetCurrentConfig(System.String)">
            <summary>Attempts to load the specified device or device configuration file and make it the current device. If successful, a non-null PlotConfig is returned to the caller, which the caller is responsible for deleting. A null value is returned if the load fails. There can be only one current device loaded by the PlotConfigManager.</summary>
            <param name="deviceName"> Input name of the device for which plotter configuration is requested.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigManager.Devices">
            <summary>Returns a list of plot devices installed on the system.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigManager.NamedPlotStyles">
            <summary>Read-only.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigManager.ColorDependentPlotStyles">
            <summary>Accesses the ColorDependentPlotStyles property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigManager.CurrentConfig">
            <summary>Returns the currently loaded plotting device through PlotConfig , or null if no device is currently loaded. Clients are repsonsible for deleting the PlotConfig object when it is no longer needed.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotConfigInfoCollection">
            <summary>
This .NET class wraps the AcArray<AcPlPlotConfigInfo, AcArrayObjectCopyReallocator<PlotConfigInfo> > ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfigInfoCollection.CopyTo(Autodesk.AutoCAD.PlottingServices.PlotConfigInfo[],System.Int32)">
            <summary>Copies objects in array to this collection.</summary>
            <param name="array"> Input target array.</param>
            <param name="index"> Input zero-based index from which the array is copied.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfigInfoCollection.GetEnumerator">
            <summary>Returns an enumerator object for this collection.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigInfoCollection.Count">
            <summary>Returns the number of objects in this collection.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.StdConfiguration">
            <summary>
This enumeration wraps the AcPlPlotConfigManager::StdConfigs ObjectARX enum. It is used to identify special device types installed with AutoCAD.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.RefreshCode">
            <summary>
This .NET enum wraps the AcPlPlotConfigManager.RefreshCode ObjectARX enum. This enumeration defines the flags that can be specified to refresh the lists maintained by the PlotConfigMgr class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotConfigInfo">
            <summary>
This .NET class wraps the AcPlPlotConfigInfo ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfigInfo.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotConfigInfo.Clone">
            <summary>Clones PlotConfigInfo data and returns it.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigInfo.FullPath">
            <summary>Returns the current device or PC3 file name. This function always returns the full path name for PC3 files. It returns the entire UNC path name for system printers.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigInfo.DeviceName">
            <summary>Returns the device name or PC3 file name. This function always returns the file name portion of the name for a PC3 file. To get the full path name for a PC3 file, use FullPath. This function Returns the entire UNC path name for system printers.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotConfigInfo.DeviceType">
            <summary>Read / Write.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.DeviceType">
            <summary>
This enumeration wraps the GS::DeviceType ObjectARX enumeration.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotEngine">
            <summary>
This .NET class wraps the AcPlPlotEngine ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.BeginPlot(Autodesk.AutoCAD.PlottingServices.PlotProgress,System.Object)">
            <summary>Call this function when not already plotting. Close by calling EndPlot().</summary>
            <param name="plotProgress"> Input plot progress</param>
            <param name="parameters"> Reserved for future use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.EndPlot(System.Object)">
            <summary>Closes a call to BeginPlot().</summary>
            <param name="parameters"> Input caller-allocated PREVIEWENDPLOT structure.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.EndDocument(System.Object)">
            <summary>Closes a call to BeginDocument().</summary>
            <param name="parameters"> Reserved for future use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.BeginPage(Autodesk.AutoCAD.PlottingServices.PlotPageInfo,Autodesk.AutoCAD.PlottingServices.PlotInfo,System.Boolean,System.Object)">
            <summary>
Call this function when plotting a document but not already in a page. Close by calling endPage()..</summary>
            <param name="pageInfo"> Input page information, modified in this call to reflect the pre-scan of the page.</param>
            <param name="plotInfo"> Input reference to the validated PlotInfo for this page.</param>
            <param name="lastPage"> Input indicating whether this is the last page in the document.</param>
            <param name="parameters"> Reserved for future use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.EndPage(System.Object)">
            <summary>Closes a call to BeginPage().</summary>
            <param name="parameters"> Reserved for future use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.BeginGenerateGraphics(System.Object)">
            <summary>Call this function when plotting a page but not already generating graphics. Close by calling endGenerateGraphics().</summary>
            <param name="parameters"> Reserved for future use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.EndGenerateGraphics(System.Object)">
            <summary>Closes a call to BeginGenerateGraphics().</summary>
            <param name="parameters"> Reserved for future use.</param>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotEngine.Destroy">
            <summary>Destroys the plot engine and unlocks the plotting pipeline.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotEngine.IsBackgroundPackaging">
            <summary>Determines whether the engine is packaging for a background plot.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotInfo">
            <summary>
This .NET class wraps the AcPlPlotInfo ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotInfo.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotInfo.IsCompatibleDocument(Autodesk.AutoCAD.PlottingServices.PlotInfo)">
            <summary>Returns true if the other plot info object is document compatible with this plot info object. Otherwise, returns false.</summary>
            <param name="info"> Input object to be compared to this object for document compatibility.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfo.Layout">
            <summary>Returns the ObjectId of the layout represented by the plot info object. The ID may be null if no layout has been specified.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfo.OverrideSettings">
            <summary>Returns the current plot settings override stored in the object; may be null if no overrides have been provided.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfo.DeviceOverride">
            <summary>Provides an PlotConfig object to use in place of other settings. If a device override is provided, it takes precedence over the device specified in the plot settings override and the layout. If the passed parameter is null, any existing device overrides are removed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfo.ValidatedSettings">
            <summary>Read / Write.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfo.ValidatedConfig">
            <summary>Accesses the PlotConfig that will be used if the info object is plotted. Null indicates that the object has not been validated. This data is created by an PlotInfoValidator object when applying the object's plot and device overrides to the layout.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfo.IsValidated">
            <summary>Returns true if the device has been validated. Otherwise, returns false.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotPageInfo">
            <summary>
This .NET class wraps the AcPlPlotPageInfo ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotPageInfo.#ctor">
            <summary>Constructor.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PreviewEndPlotInfo">
            <summary>
This .NET class wraps the ACPL_PREVIEWENDPLOT ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PreviewEndPlotInfo.#ctor">
            <summary>Description.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PreviewEndPlotInfo.Status">
            <summary>Returns the Status property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PreviewEndPlotStatus">
            <summary>
This enumeration wraps the PreviewStatus ObjectARX enum. It gives the status values for ACPL_PREVIEWENDPLOT.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.MergeStatus">
            <summary>
This .NET class wraps the AcPlPlotInfo::MergeStatus ObjectARX enum.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotFactory">
            <summary>
This .NET class wraps the AcPlPlotFactory ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotFactory.CreatePublishEngine">
            <summary>Creates and returns an engine for plotting to a device (or to a file). The plotting pipeline is locked until the engine has been destroyed.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotFactory.ProcessPlotState">
            <summary>Read-only.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.ProcessPlotState">
            <summary>
This .NET class wraps the AcPlPlotFactory::ProcessPlotState ObjectARX class. It assigns values that describe the current plot process.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PreviewEngineFlags">
            <summary>
This .NET class wraps the AcPlPlotFactory::PreviewEngineFlags ObjectARX class. It describes the plot preview functionality.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator">
            <summary>
This .NET class wraps the AcPlPlotInfoValidator ObjectARX class.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.Validate(Autodesk.AutoCAD.PlottingServices.PlotInfo)">
            <summary>The validator performs validation of the layout, plot settings overrides, and plot device overrides on an PlotInfo object. If the validation is successful, the PlotInfo object is marked validated and the validator stores the validated PlotSettings and validated PlotConfig on the AcPlPlotInfo object.</summary>
            <param name="info"> Input object to validate.</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.MediaMatchingPolicy">
            <summary>Returns the new media matching policy used by the validator for validating media sizes.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.MediaGroupWeight">
            <summary>Returns the current media group weight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.SheetMediaGroupWeight">
            <summary>Returns the current sheet media group weight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.MediaBoundsWeight">
            <summary>Returns the current media bounds weight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.PrintableBoundsWeight">
            <summary>Returns the current printable bounds weight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.DimensionalWeight">
            <summary>Returns the current dimensional weight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.SheetDimensionalWeight">
            <summary>Returns the current sheet dimensional weight.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.PlotInfoValidator.MediaMatchingThreshold">
            <summary>Returns the current media matching threshold, which is the maximum total of error values allowed when matching media sizes.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.MatchingPolicy">
            <summary>
This .NET class wraps the MatchingPolicy ObjectARX class.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.CustomSizeResults">
            <summary>
This enumeration wraps the AcPlPlotInfoValidator::eCustomSizeResult ObjectARX enum. It defines the return flags from the PlotInfoValidator.isCustomSizePossible() method.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.BeginPlotEventArgs">
            <summary>
This class encapsulates the plot-specific information required by the BeginPlot event. This information includes:</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginPlotEventArgs.PlotProgress">
            <summary>Returns the PlotProgress property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginPlotEventArgs.PlotType">
            <summary>Returns the PlotType property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.BeginDocumentEventArgs">
            <summary>
This class encapsulates the plot-specific information required by the BeginDocument event. This information includes:</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginDocumentEventArgs.PlotInfo">
            <summary>Returns the PlotInfo property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginDocumentEventArgs.DocumentName">
            <summary>Returns the DocumentName property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginDocumentEventArgs.PlotToFile">
            <summary>Returns the PlotToFile property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginDocumentEventArgs.FileName">
            <summary>Returns the FileName property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.BeginPageEventArgs">
            <summary>
This class encapsulates the plot-specific information required by the BeginPage event. This information includes:</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginPageEventArgs.PlotInfo">
            <summary>Returns the PlotInfo property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginPageEventArgs.PlotPageInfo">
            <summary>Returns the PlotPageInfo property value.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.BeginPageEventArgs.LastPage">
            <summary>Returns the LastPage property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.EndPageEventArgs">
            <summary>
This class encapsulates the plot-specific information required by the EndPage event. This information includes a SheetCancelStatus flag.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.EndPageEventArgs.#ctor(Autodesk.AutoCAD.PlottingServices.SheetCancelStatus)">
            <summary>Constructs a new object with the given status.</summary>
            <param name="status"> Input status of document</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.EndPageEventArgs.Status">
            <summary>Accesses the Status property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.EndDocumentEventArgs">
            <summary>
This class encapsulates the plot-specific information required by the EndDocument event. This information includes a PlotCancelStatus flag.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.EndDocumentEventArgs.#ctor(Autodesk.AutoCAD.PlottingServices.PlotCancelStatus)">
            <summary>Constructs a new object with the given status.</summary>
            <param name="status"> Input status of document</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.EndDocumentEventArgs.Status">
            <summary>Accesses the Status property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.EndPlotEventArgs">
            <summary>
This class encapsulates the plot-specific information required by the EndPlot event. This information includes a PlotCancelStatus flag.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.PlottingServices.EndPlotEventArgs.#ctor(Autodesk.AutoCAD.PlottingServices.PlotCancelStatus)">
            <summary>Constructs a new object with the given status.</summary>
            <param name="status"> Input status of document</param>
        </member>
        <member name="P:Autodesk.AutoCAD.PlottingServices.EndPlotEventArgs.Status">
            <summary>Accesses the Status property value.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.PlottingServices.PlotReactorManager">
            <summary>
This .NET class wraps the AcPlPlotReactorMgr ObjectARX class.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.BeginPlot">
            <summary>Called by the plotting framework when PlotEngine.BeginPlot() has been called by an application. The parameters passed to this method are the same as those passed to the engine.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.BeginDocument">
            <summary>Called by the plotting framework when PlotEngine.BeginDocument() has been called by an application. The parameters passed to this method are the same as those passed to the engine.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.BeginPage">
            <summary>Called by the plotting framework when PlotEngine.BeginPage() has been called by an application. The parameters passed to this method are the same as those passed to the engine.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.EndPlot">
            <summary>Called by the plotting framework when PlotEngine.endPlot() has been called by an application. The status parameter indicates the final status of the plot.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.EndDocument">
            <summary>Called by the plotting framework when PlotEngine.EndDocument() has been called by an application. The status parameter indicates the final status of the document.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.EndPage">
            <summary>Called by the plotting framework when PlotEngine.EndPage() has been called by an application. The status parameter indicates the final status of the page.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.PlotCancelled">
            <summary>Called by the framework when the user has canceled the plot.</summary>
        </member>
        <member name="E:Autodesk.AutoCAD.PlottingServices.PlotReactorManager.PageCancelled">
            <summary>Called by the framework when the user has canceled the current page.</summary>
        </member>
        <member name="T:Autodesk.AutoCAD.Runtime.SystemVariableEnumerator">
            <summary>
This class provides a way to iterator over all of the public system variables and get their names, data type, range (if applicable), read-only status, and how they are stored.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SystemVariableEnumerator.#ctor">
            <summary>Constructor. Initializes the enumerator to be before the first sysvar, so MoveNext() must be called once to get the enumerator to the first sysvar.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SystemVariableEnumerator.MoveNext">
            <summary>This method moves the iterator to the next sysvar and returns true if there are more sysvars after the one just moved to.</summary>
        </member>
        <member name="M:Autodesk.AutoCAD.Runtime.SystemVariableEnumerator.Reset">
            <summary>This method resets the enumerator to the first sysvar.</summary>
        </member>
        <member name="P:Autodesk.AutoCAD.Runtime.SystemVariableEnumerator.Current">
            <summary>Returns a Variable object containing the data of the current sysvar in the enumerator. The Variable object is read-only with only the following get properties implemented:.</summary>
        </member>
    </members>
</doc>
